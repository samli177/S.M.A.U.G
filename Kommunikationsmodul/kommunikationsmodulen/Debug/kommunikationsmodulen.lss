
kommunikationsmodulen.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000021c8  00800100  000013ce  00001462  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000013ce  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000641  008022c8  008022c8  0000362a  2**0
                  ALLOC
  3 .stab         00001674  00000000  00000000  0000362c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000598  00000000  00000000  00004ca0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00005238  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000002a0  00000000  00000000  00005267  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002417  00000000  00000000  00005507  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000097e  00000000  00000000  0000791e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001956  00000000  00000000  0000829c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000007bc  00000000  00000000  00009bf4  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000089f  00000000  00000000  0000a3b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001891  00000000  00000000  0000ac4f  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000298  00000000  00000000  0000c4e0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	61 c0       	rjmp	.+194    	; 0xc8 <__bad_interrupt>
       6:	00 00       	nop
       8:	5f c0       	rjmp	.+190    	; 0xc8 <__bad_interrupt>
       a:	00 00       	nop
       c:	5d c0       	rjmp	.+186    	; 0xc8 <__bad_interrupt>
       e:	00 00       	nop
      10:	5b c0       	rjmp	.+182    	; 0xc8 <__bad_interrupt>
      12:	00 00       	nop
      14:	59 c0       	rjmp	.+178    	; 0xc8 <__bad_interrupt>
      16:	00 00       	nop
      18:	57 c0       	rjmp	.+174    	; 0xc8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	55 c0       	rjmp	.+170    	; 0xc8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	53 c0       	rjmp	.+166    	; 0xc8 <__bad_interrupt>
      22:	00 00       	nop
      24:	51 c0       	rjmp	.+162    	; 0xc8 <__bad_interrupt>
      26:	00 00       	nop
      28:	4f c0       	rjmp	.+158    	; 0xc8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4d c0       	rjmp	.+154    	; 0xc8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4b c0       	rjmp	.+150    	; 0xc8 <__bad_interrupt>
      32:	00 00       	nop
      34:	07 c1       	rjmp	.+526    	; 0x244 <__vector_13>
      36:	00 00       	nop
      38:	47 c0       	rjmp	.+142    	; 0xc8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	45 c0       	rjmp	.+138    	; 0xc8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	43 c0       	rjmp	.+134    	; 0xc8 <__bad_interrupt>
      42:	00 00       	nop
      44:	41 c0       	rjmp	.+130    	; 0xc8 <__bad_interrupt>
      46:	00 00       	nop
      48:	3f c0       	rjmp	.+126    	; 0xc8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3d c0       	rjmp	.+122    	; 0xc8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	0c 94 3e 08 	jmp	0x107c	; 0x107c <__vector_20>
      54:	39 c0       	rjmp	.+114    	; 0xc8 <__bad_interrupt>
      56:	00 00       	nop
      58:	37 c0       	rjmp	.+110    	; 0xc8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	35 c0       	rjmp	.+106    	; 0xc8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	33 c0       	rjmp	.+102    	; 0xc8 <__bad_interrupt>
      62:	00 00       	nop
      64:	31 c0       	rjmp	.+98     	; 0xc8 <__bad_interrupt>
      66:	00 00       	nop
      68:	cb c3       	rjmp	.+1942   	; 0x800 <__vector_26>
      6a:	00 00       	nop
      6c:	2d c0       	rjmp	.+90     	; 0xc8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2b c0       	rjmp	.+86     	; 0xc8 <__bad_interrupt>
      72:	00 00       	nop
      74:	29 c0       	rjmp	.+82     	; 0xc8 <__bad_interrupt>
      76:	00 00       	nop
      78:	27 c0       	rjmp	.+78     	; 0xc8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	25 c0       	rjmp	.+74     	; 0xc8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	ef c0       	rjmp	.+478    	; 0x260 <__vector_32>
      82:	00 00       	nop
      84:	21 c0       	rjmp	.+66     	; 0xc8 <__bad_interrupt>
      86:	00 00       	nop
      88:	1f c0       	rjmp	.+62     	; 0xc8 <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e4       	ldi	r29, 0x40	; 64
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	12 e2       	ldi	r17, 0x22	; 34
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	ee ec       	ldi	r30, 0xCE	; 206
      a0:	f3 e1       	ldi	r31, 0x13	; 19
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a8 3c       	cpi	r26, 0xC8	; 200
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	29 e2       	ldi	r18, 0x29	; 41
      b4:	a8 ec       	ldi	r26, 0xC8	; 200
      b6:	b2 e2       	ldi	r27, 0x22	; 34
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a9 30       	cpi	r26, 0x09	; 9
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	a2 d0       	rcall	.+324    	; 0x208 <main>
      c4:	0c 94 e5 09 	jmp	0x13ca	; 0x13ca <_exit>

000000c8 <__bad_interrupt>:
      c8:	9b cf       	rjmp	.-202    	; 0x0 <__vectors>

000000ca <set_counter_1>:
	TCNT3 = 0;
}

void set_counter_1(uint16_t delay)
{
	delay = 18.000 * delay;
      ca:	bc 01       	movw	r22, r24
      cc:	80 e0       	ldi	r24, 0x00	; 0
      ce:	90 e0       	ldi	r25, 0x00	; 0
      d0:	0e 94 f4 08 	call	0x11e8	; 0x11e8 <__floatunsisf>
      d4:	20 e0       	ldi	r18, 0x00	; 0
      d6:	30 e0       	ldi	r19, 0x00	; 0
      d8:	40 e9       	ldi	r20, 0x90	; 144
      da:	51 e4       	ldi	r21, 0x41	; 65
      dc:	0e 94 5a 09 	call	0x12b4	; 0x12b4 <__mulsf3>
      e0:	0e 94 c8 08 	call	0x1190	; 0x1190 <__fixunssfsi>
	OCR1A = delay;
      e4:	70 93 89 00 	sts	0x0089, r23
      e8:	60 93 88 00 	sts	0x0088, r22
      ec:	08 95       	ret

000000ee <set_counter_2>:
}

void set_counter_2(uint16_t delay)
{
	delay = 18.000 * delay;
      ee:	bc 01       	movw	r22, r24
      f0:	80 e0       	ldi	r24, 0x00	; 0
      f2:	90 e0       	ldi	r25, 0x00	; 0
      f4:	0e 94 f4 08 	call	0x11e8	; 0x11e8 <__floatunsisf>
      f8:	20 e0       	ldi	r18, 0x00	; 0
      fa:	30 e0       	ldi	r19, 0x00	; 0
      fc:	40 e9       	ldi	r20, 0x90	; 144
      fe:	51 e4       	ldi	r21, 0x41	; 65
     100:	0e 94 5a 09 	call	0x12b4	; 0x12b4 <__mulsf3>
     104:	0e 94 c8 08 	call	0x1190	; 0x1190 <__fixunssfsi>
	OCR3A = delay;
     108:	70 93 99 00 	sts	0x0099, r23
     10c:	60 93 98 00 	sts	0x0098, r22
     110:	08 95       	ret

00000112 <init_counters>:

//---------------------------------------COUNTERS/TIMERS-----------
void init_counters()
{
	// WGMn3:0 = 4 (OCRnA) or 12 (OCRn), where top value is read from.
	TCCR1B |= 0b00000101; // clock 1, prescaler 1024
     112:	e1 e8       	ldi	r30, 0x81	; 129
     114:	f0 e0       	ldi	r31, 0x00	; 0
     116:	80 81       	ld	r24, Z
     118:	85 60       	ori	r24, 0x05	; 5
     11a:	80 83       	st	Z, r24
	TCCR3B |= 0b00000101; // clock 2, prescaler 1024
     11c:	e1 e9       	ldi	r30, 0x91	; 145
     11e:	f0 e0       	ldi	r31, 0x00	; 0
     120:	80 81       	ld	r24, Z
     122:	85 60       	ori	r24, 0x05	; 5
     124:	80 83       	st	Z, r24
	
	// standardvalue for interrupt is 1000ms
	set_counter_1(1000);
     126:	88 ee       	ldi	r24, 0xE8	; 232
     128:	93 e0       	ldi	r25, 0x03	; 3
     12a:	cf df       	rcall	.-98     	; 0xca <set_counter_1>
	set_counter_2(1000);
     12c:	88 ee       	ldi	r24, 0xE8	; 232
     12e:	93 e0       	ldi	r25, 0x03	; 3
     130:	de df       	rcall	.-68     	; 0xee <set_counter_2>
	
	TIMSK1 |= 0b00000010; // Enable interrupts when OCF1A, in TIFR1, is set.
     132:	ef e6       	ldi	r30, 0x6F	; 111
     134:	f0 e0       	ldi	r31, 0x00	; 0
     136:	80 81       	ld	r24, Z
     138:	82 60       	ori	r24, 0x02	; 2
     13a:	80 83       	st	Z, r24
	TIMSK3 |= 0b00000010; // Enable interrupts when OCF2A, in TIFR2, is set.
     13c:	e1 e7       	ldi	r30, 0x71	; 113
     13e:	f0 e0       	ldi	r31, 0x00	; 0
     140:	80 81       	ld	r24, Z
     142:	82 60       	ori	r24, 0x02	; 2
     144:	80 83       	st	Z, r24
	// OCF1A (or ICFn) Flag, in TIFR1, can be used to generate interrupts.
	TCNT1 = 0;
     146:	10 92 85 00 	sts	0x0085, r1
     14a:	10 92 84 00 	sts	0x0084, r1
	TCNT3 = 0;
     14e:	10 92 95 00 	sts	0x0095, r1
     152:	10 92 94 00 	sts	0x0094, r1
     156:	08 95       	ret

00000158 <FifoDataLength>:

#include <avr/io.h>
#include "fifo.h"

uint8_t FifoDataLength (struct fifo *fifo)
{
     158:	fc 01       	movw	r30, r24
	return (fifo->write - fifo->read) & (fifo->size -1);
     15a:	90 81       	ld	r25, Z
     15c:	91 50       	subi	r25, 0x01	; 1
     15e:	84 81       	ldd	r24, Z+4	; 0x04
     160:	22 81       	ldd	r18, Z+2	; 0x02
     162:	82 1b       	sub	r24, r18
};
     164:	89 23       	and	r24, r25
     166:	08 95       	ret

00000168 <FifoWrite>:

uint8_t FifoWrite (struct fifo *fifo, unsigned char data)
{
     168:	1f 93       	push	r17
     16a:	cf 93       	push	r28
     16c:	df 93       	push	r29
     16e:	ec 01       	movw	r28, r24
     170:	16 2f       	mov	r17, r22
	// fifo full : error
	if (FifoDataLength(fifo) == (fifo->size - 1))
     172:	f2 df       	rcall	.-28     	; 0x158 <FifoDataLength>
     174:	28 81       	ld	r18, Y
     176:	39 81       	ldd	r19, Y+1	; 0x01
     178:	21 50       	subi	r18, 0x01	; 1
     17a:	31 09       	sbc	r19, r1
     17c:	90 e0       	ldi	r25, 0x00	; 0
     17e:	82 17       	cp	r24, r18
     180:	93 07       	cpc	r25, r19
     182:	69 f0       	breq	.+26     	; 0x19e <FifoWrite+0x36>
	{
		return 1;
	}
	// write data & increment write pointer
	fifo->buffer[fifo->write] = data;
     184:	8c 81       	ldd	r24, Y+4	; 0x04
     186:	9d 81       	ldd	r25, Y+5	; 0x05
     188:	fe 01       	movw	r30, r28
     18a:	e8 0f       	add	r30, r24
     18c:	f9 1f       	adc	r31, r25
     18e:	16 83       	std	Z+6, r17	; 0x06
	fifo->write = (fifo->write + 1) & (fifo->size - 1);
     190:	01 96       	adiw	r24, 0x01	; 1
     192:	28 23       	and	r18, r24
     194:	39 23       	and	r19, r25
     196:	3d 83       	std	Y+5, r19	; 0x05
     198:	2c 83       	std	Y+4, r18	; 0x04
	return 0;
     19a:	80 e0       	ldi	r24, 0x00	; 0
     19c:	01 c0       	rjmp	.+2      	; 0x1a0 <FifoWrite+0x38>
uint8_t FifoWrite (struct fifo *fifo, unsigned char data)
{
	// fifo full : error
	if (FifoDataLength(fifo) == (fifo->size - 1))
	{
		return 1;
     19e:	81 e0       	ldi	r24, 0x01	; 1
	}
	// write data & increment write pointer
	fifo->buffer[fifo->write] = data;
	fifo->write = (fifo->write + 1) & (fifo->size - 1);
	return 0;
};
     1a0:	df 91       	pop	r29
     1a2:	cf 91       	pop	r28
     1a4:	1f 91       	pop	r17
     1a6:	08 95       	ret

000001a8 <FifoRead>:


uint8_t FifoRead (struct fifo *fifo, unsigned char *data)
{
     1a8:	0f 93       	push	r16
     1aa:	1f 93       	push	r17
     1ac:	cf 93       	push	r28
     1ae:	df 93       	push	r29
     1b0:	ec 01       	movw	r28, r24
     1b2:	8b 01       	movw	r16, r22
	// fifo empty : error
	if (FifoDataLength(fifo) == 0)
     1b4:	d1 df       	rcall	.-94     	; 0x158 <FifoDataLength>
     1b6:	88 23       	and	r24, r24
     1b8:	a1 f0       	breq	.+40     	; 0x1e2 <FifoRead+0x3a>
	{
		return 1;
	}
	// read data & increment read pointer
	*data = fifo->buffer[fifo->read];
     1ba:	ea 81       	ldd	r30, Y+2	; 0x02
     1bc:	fb 81       	ldd	r31, Y+3	; 0x03
     1be:	ec 0f       	add	r30, r28
     1c0:	fd 1f       	adc	r31, r29
     1c2:	86 81       	ldd	r24, Z+6	; 0x06
     1c4:	f8 01       	movw	r30, r16
     1c6:	80 83       	st	Z, r24
	fifo->read = (fifo->read + 1) & (fifo->size - 1);
     1c8:	28 81       	ld	r18, Y
     1ca:	39 81       	ldd	r19, Y+1	; 0x01
     1cc:	21 50       	subi	r18, 0x01	; 1
     1ce:	31 09       	sbc	r19, r1
     1d0:	8a 81       	ldd	r24, Y+2	; 0x02
     1d2:	9b 81       	ldd	r25, Y+3	; 0x03
     1d4:	01 96       	adiw	r24, 0x01	; 1
     1d6:	82 23       	and	r24, r18
     1d8:	93 23       	and	r25, r19
     1da:	9b 83       	std	Y+3, r25	; 0x03
     1dc:	8a 83       	std	Y+2, r24	; 0x02
	return 0;
     1de:	80 e0       	ldi	r24, 0x00	; 0
     1e0:	01 c0       	rjmp	.+2      	; 0x1e4 <FifoRead+0x3c>
uint8_t FifoRead (struct fifo *fifo, unsigned char *data)
{
	// fifo empty : error
	if (FifoDataLength(fifo) == 0)
	{
		return 1;
     1e2:	81 e0       	ldi	r24, 0x01	; 1
	}
	// read data & increment read pointer
	*data = fifo->buffer[fifo->read];
	fifo->read = (fifo->read + 1) & (fifo->size - 1);
	return 0;
     1e4:	df 91       	pop	r29
     1e6:	cf 91       	pop	r28
     1e8:	1f 91       	pop	r17
     1ea:	0f 91       	pop	r16
     1ec:	08 95       	ret

000001ee <init>:
// --  END MAIN --


void init()
{
	DDRA |= (1<<PORTA0|1<<PORTA1); //set status diodes to outputs
     1ee:	81 b1       	in	r24, 0x01	; 1
     1f0:	83 60       	ori	r24, 0x03	; 3
     1f2:	81 b9       	out	0x01, r24	; 1
	DDRC |= (1<<PORTC6|1<<PORTC7); //set status diodes to outputs
     1f4:	87 b1       	in	r24, 0x07	; 7
     1f6:	80 6c       	ori	r24, 0xC0	; 192
     1f8:	87 b9       	out	0x07, r24	; 7
	USART_init();
     1fa:	be d4       	rcall	.+2428   	; 0xb78 <USART_init>
	TWI_init(C_ADDRESS);
     1fc:	80 e8       	ldi	r24, 0x80	; 128
     1fe:	d9 d0       	rcall	.+434    	; 0x3b2 <TWI_init>
	init_counters();
     200:	88 df       	rcall	.-240    	; 0x112 <init_counters>
	set_counter_2(2000);
     202:	80 ed       	ldi	r24, 0xD0	; 208
     204:	97 e0       	ldi	r25, 0x07	; 7
     206:	73 cf       	rjmp	.-282    	; 0xee <set_counter_2>

00000208 <main>:

// -- MAIN --

int main(void)
{
	init();
     208:	f2 df       	rcall	.-28     	; 0x1ee <init>
	sei();
     20a:	78 94       	sei
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     20c:	2f ef       	ldi	r18, 0xFF	; 255
     20e:	8f e1       	ldi	r24, 0x1F	; 31
     210:	9c e1       	ldi	r25, 0x1C	; 28
     212:	21 50       	subi	r18, 0x01	; 1
     214:	80 40       	sbci	r24, 0x00	; 0
     216:	90 40       	sbci	r25, 0x00	; 0
     218:	e1 f7       	brne	.-8      	; 0x212 <main+0xa>
     21a:	00 c0       	rjmp	.+0      	; 0x21c <main+0x14>
     21c:	00 00       	nop
	_delay_ms(500);
	while(1)
	{
		//PORTA ^= (1<<PORTA0);
		
		USART_DecodeRxFIFO();
     21e:	07 d7       	rcall	.+3598   	; 0x102e <USART_DecodeRxFIFO>
		if(TWI_sensor_flag())
     220:	3b d2       	rcall	.+1142   	; 0x698 <TWI_sensor_flag>
     222:	81 11       	cpse	r24, r1
		{
			USART_SendSensors();
     224:	aa d5       	rcall	.+2900   	; 0xd7a <USART_SendSensors>
		}
		decode_message_TwiFIFO();
     226:	42 d2       	rcall	.+1156   	; 0x6ac <decode_message_TwiFIFO>
		// TODO: put this on timer
		//if(TWI_send_status(ST_ADRESS))
			//PORTA ^= (1<<PORTA1);
		TWI_send_string(S_ADDRESS, "Hejsan lulzi!");
     228:	60 e1       	ldi	r22, 0x10	; 16
     22a:	71 e2       	ldi	r23, 0x21	; 33
     22c:	80 e4       	ldi	r24, 0x40	; 64
     22e:	a8 d1       	rcall	.+848    	; 0x580 <TWI_send_string>
     230:	2f ef       	ldi	r18, 0xFF	; 255
     232:	8f e7       	ldi	r24, 0x7F	; 127
     234:	90 e7       	ldi	r25, 0x70	; 112
     236:	21 50       	subi	r18, 0x01	; 1
     238:	80 40       	sbci	r24, 0x00	; 0
     23a:	90 40       	sbci	r25, 0x00	; 0
     23c:	e1 f7       	brne	.-8      	; 0x236 <main+0x2e>
     23e:	00 c0       	rjmp	.+0      	; 0x240 <main+0x38>
     240:	00 00       	nop
     242:	ed cf       	rjmp	.-38     	; 0x21e <main+0x16>

00000244 <__vector_13>:
}

//Interrupt vectors

ISR(TIMER1_COMPA_vect)
{
     244:	1f 92       	push	r1
     246:	0f 92       	push	r0
     248:	0f b6       	in	r0, 0x3f	; 63
     24a:	0f 92       	push	r0
     24c:	11 24       	eor	r1, r1
	TCNT1 = 0;
     24e:	10 92 85 00 	sts	0x0085, r1
     252:	10 92 84 00 	sts	0x0084, r1
}
     256:	0f 90       	pop	r0
     258:	0f be       	out	0x3f, r0	; 63
     25a:	0f 90       	pop	r0
     25c:	1f 90       	pop	r1
     25e:	18 95       	reti

00000260 <__vector_32>:

ISR(TIMER3_COMPA_vect)
{
     260:	1f 92       	push	r1
     262:	0f 92       	push	r0
     264:	0f b6       	in	r0, 0x3f	; 63
     266:	0f 92       	push	r0
     268:	11 24       	eor	r1, r1
	TCNT3 = 0;
     26a:	10 92 95 00 	sts	0x0095, r1
     26e:	10 92 94 00 	sts	0x0094, r1
     272:	0f 90       	pop	r0
     274:	0f be       	out	0x3f, r0	; 63
     276:	0f 90       	pop	r0
     278:	1f 90       	pop	r1
     27a:	18 95       	reti

0000027c <set_twi_reciever_enable>:
     27c:	85 e4       	ldi	r24, 0x45	; 69
     27e:	80 93 bc 00 	sts	0x00BC, r24
     282:	08 95       	ret

00000284 <clear_int>:
     284:	81 ec       	ldi	r24, 0xC1	; 193
     286:	80 93 bc 00 	sts	0x00BC, r24
     28a:	08 95       	ret

0000028c <start_bus>:
     28c:	84 ea       	ldi	r24, 0xA4	; 164
     28e:	80 93 bc 00 	sts	0x00BC, r24
     292:	08 95       	ret

00000294 <stop_bus>:
     294:	85 ed       	ldi	r24, 0xD5	; 213
     296:	80 93 bc 00 	sts	0x00BC, r24
     29a:	08 95       	ret

0000029c <Error>:
     29c:	80 91 b9 00 	lds	r24, 0x00B9
     2a0:	88 7f       	andi	r24, 0xF8	; 248
     2a2:	88 33       	cpi	r24, 0x38	; 56
     2a4:	09 f0       	breq	.+2      	; 0x2a8 <Error+0xc>
     2a6:	f6 cf       	rjmp	.-20     	; 0x294 <stop_bus>
     2a8:	ed cf       	rjmp	.-38     	; 0x284 <clear_int>

000002aa <get_data>:
     2aa:	80 91 bb 00 	lds	r24, 0x00BB
     2ae:	08 95       	ret

000002b0 <wait_for_bus>:
     2b0:	ec eb       	ldi	r30, 0xBC	; 188
     2b2:	f0 e0       	ldi	r31, 0x00	; 0
     2b4:	80 81       	ld	r24, Z
     2b6:	88 23       	and	r24, r24
     2b8:	ec f7       	brge	.-6      	; 0x2b4 <wait_for_bus+0x4>
     2ba:	08 95       	ret

000002bc <send_data_and_wait>:
     2bc:	80 93 bb 00 	sts	0x00BB, r24
     2c0:	84 e8       	ldi	r24, 0x84	; 132
     2c2:	80 93 bc 00 	sts	0x00BC, r24
     2c6:	f4 cf       	rjmp	.-24     	; 0x2b0 <wait_for_bus>

000002c8 <stop_twi>:
     2c8:	10 92 e5 23 	sts	0x23E5, r1
     2cc:	10 92 e4 23 	sts	0x23E4, r1
     2d0:	10 92 ef 23 	sts	0x23EF, r1
     2d4:	10 92 ee 23 	sts	0x23EE, r1
     2d8:	10 92 da 23 	sts	0x23DA, r1
     2dc:	10 92 d9 23 	sts	0x23D9, r1
     2e0:	10 92 df 23 	sts	0x23DF, r1
     2e4:	10 92 de 23 	sts	0x23DE, r1
     2e8:	10 92 e2 23 	sts	0x23E2, r1
     2ec:	10 92 e1 23 	sts	0x23E1, r1
     2f0:	08 95       	ret

000002f2 <reset_TWI>:
     2f2:	ec eb       	ldi	r30, 0xBC	; 188
     2f4:	f0 e0       	ldi	r31, 0x00	; 0
     2f6:	80 81       	ld	r24, Z
     2f8:	80 6c       	ori	r24, 0xC0	; 192
     2fa:	80 83       	st	Z, r24
     2fc:	08 95       	ret

000002fe <get_sensor_from_bus>:
     2fe:	cf 93       	push	r28
     300:	df 93       	push	r29
     302:	c0 91 ee 23 	lds	r28, 0x23EE
     306:	d0 91 ef 23 	lds	r29, 0x23EF
     30a:	c8 30       	cpi	r28, 0x08	; 8
     30c:	d1 05       	cpc	r29, r1
     30e:	91 f4       	brne	.+36     	; 0x334 <get_sensor_from_bus+0x36>
     310:	e0 ef       	ldi	r30, 0xF0	; 240
     312:	f3 e2       	ldi	r31, 0x23	; 35
     314:	a8 ef       	ldi	r26, 0xF8	; 248
     316:	b3 e2       	ldi	r27, 0x23	; 35
     318:	88 ef       	ldi	r24, 0xF8	; 248
     31a:	93 e2       	ldi	r25, 0x23	; 35
     31c:	21 91       	ld	r18, Z+
     31e:	2d 93       	st	X+, r18
     320:	e8 17       	cp	r30, r24
     322:	f9 07       	cpc	r31, r25
     324:	d9 f7       	brne	.-10     	; 0x31c <get_sensor_from_bus+0x1e>
     326:	c1 df       	rcall	.-126    	; 0x2aa <get_data>
     328:	80 93 e8 23 	sts	0x23E8, r24
     32c:	81 e0       	ldi	r24, 0x01	; 1
     32e:	80 93 cd 22 	sts	0x22CD, r24
     332:	0d c0       	rjmp	.+26     	; 0x34e <get_sensor_from_bus+0x50>
     334:	ba df       	rcall	.-140    	; 0x2aa <get_data>
     336:	c0 51       	subi	r28, 0x10	; 16
     338:	dc 4d       	sbci	r29, 0xDC	; 220
     33a:	88 83       	st	Y, r24
     33c:	80 91 ee 23 	lds	r24, 0x23EE
     340:	90 91 ef 23 	lds	r25, 0x23EF
     344:	01 96       	adiw	r24, 0x01	; 1
     346:	90 93 ef 23 	sts	0x23EF, r25
     34a:	80 93 ee 23 	sts	0x23EE, r24
     34e:	df 91       	pop	r29
     350:	cf 91       	pop	r28
     352:	08 95       	ret

00000354 <get_control_settings_from_bus>:
     354:	cf 93       	push	r28
     356:	df 93       	push	r29
     358:	c0 91 de 23 	lds	r28, 0x23DE
     35c:	d0 91 df 23 	lds	r29, 0x23DF
     360:	a4 df       	rcall	.-184    	; 0x2aa <get_data>
     362:	c5 52       	subi	r28, 0x25	; 37
     364:	dc 4d       	sbci	r29, 0xDC	; 220
     366:	88 83       	st	Y, r24
     368:	10 92 df 23 	sts	0x23DF, r1
     36c:	10 92 de 23 	sts	0x23DE, r1
     370:	df 91       	pop	r29
     372:	cf 91       	pop	r28
     374:	08 95       	ret

00000376 <get_autonom_settings_from_bus>:
     376:	99 df       	rcall	.-206    	; 0x2aa <get_data>
     378:	80 93 d9 22 	sts	0x22D9, r24
     37c:	08 95       	ret

0000037e <get_char_from_bus>:
     37e:	cf 93       	push	r28
     380:	df 93       	push	r29
     382:	c0 91 d9 23 	lds	r28, 0x23D9
     386:	d0 91 da 23 	lds	r29, 0x23DA
     38a:	8f df       	rcall	.-226    	; 0x2aa <get_data>
     38c:	c6 52       	subi	r28, 0x26	; 38
     38e:	dd 4d       	sbci	r29, 0xDD	; 221
     390:	88 83       	st	Y, r24
     392:	80 91 d9 23 	lds	r24, 0x23D9
     396:	90 91 da 23 	lds	r25, 0x23DA
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	90 93 da 23 	sts	0x23DA, r25
     3a0:	80 93 d9 23 	sts	0x23D9, r24
     3a4:	90 93 ea 23 	sts	0x23EA, r25
     3a8:	80 93 e9 23 	sts	0x23E9, r24
     3ac:	df 91       	pop	r29
     3ae:	cf 91       	pop	r28
     3b0:	08 95       	ret

000003b2 <TWI_init>:
     3b2:	80 93 e0 23 	sts	0x23E0, r24
     3b6:	80 34       	cpi	r24, 0x40	; 64
     3b8:	79 f0       	breq	.+30     	; 0x3d8 <TWI_init+0x26>
     3ba:	80 38       	cpi	r24, 0x80	; 128
     3bc:	19 f0       	breq	.+6      	; 0x3c4 <TWI_init+0x12>
     3be:	80 32       	cpi	r24, 0x20	; 32
     3c0:	d1 f4       	brne	.+52     	; 0x3f6 <TWI_init+0x44>
     3c2:	12 c0       	rjmp	.+36     	; 0x3e8 <TWI_init+0x36>
     3c4:	83 e0       	ldi	r24, 0x03	; 3
     3c6:	88 b9       	out	0x08, r24	; 8
     3c8:	59 df       	rcall	.-334    	; 0x27c <set_twi_reciever_enable>
     3ca:	8f e3       	ldi	r24, 0x3F	; 63
     3cc:	80 93 b8 00 	sts	0x00B8, r24
     3d0:	81 e8       	ldi	r24, 0x81	; 129
     3d2:	80 93 ba 00 	sts	0x00BA, r24
     3d6:	08 95       	ret
     3d8:	8f e3       	ldi	r24, 0x3F	; 63
     3da:	80 93 b8 00 	sts	0x00B8, r24
     3de:	4e df       	rcall	.-356    	; 0x27c <set_twi_reciever_enable>
     3e0:	80 e4       	ldi	r24, 0x40	; 64
     3e2:	80 93 ba 00 	sts	0x00BA, r24
     3e6:	08 95       	ret
     3e8:	8f e3       	ldi	r24, 0x3F	; 63
     3ea:	80 93 b8 00 	sts	0x00B8, r24
     3ee:	46 df       	rcall	.-372    	; 0x27c <set_twi_reciever_enable>
     3f0:	81 e2       	ldi	r24, 0x21	; 33
     3f2:	80 93 ba 00 	sts	0x00BA, r24
     3f6:	08 95       	ret

000003f8 <TWI_send_control_settings>:
     3f8:	0f 93       	push	r16
     3fa:	1f 93       	push	r17
     3fc:	cf 93       	push	r28
     3fe:	df 93       	push	r29
     400:	c8 2f       	mov	r28, r24
     402:	d6 2f       	mov	r29, r22
     404:	14 2f       	mov	r17, r20
     406:	02 2f       	mov	r16, r18
     408:	41 df       	rcall	.-382    	; 0x28c <start_bus>
     40a:	52 df       	rcall	.-348    	; 0x2b0 <wait_for_bus>
     40c:	90 91 b9 00 	lds	r25, 0x00B9
     410:	98 7f       	andi	r25, 0xF8	; 248
     412:	98 30       	cpi	r25, 0x08	; 8
     414:	19 f0       	breq	.+6      	; 0x41c <TWI_send_control_settings+0x24>
     416:	42 df       	rcall	.-380    	; 0x29c <Error>
     418:	80 e0       	ldi	r24, 0x00	; 0
     41a:	34 c0       	rjmp	.+104    	; 0x484 <TWI_send_control_settings+0x8c>
     41c:	8c 2f       	mov	r24, r28
     41e:	4e df       	rcall	.-356    	; 0x2bc <send_data_and_wait>
     420:	80 91 b9 00 	lds	r24, 0x00B9
     424:	88 7f       	andi	r24, 0xF8	; 248
     426:	88 31       	cpi	r24, 0x18	; 24
     428:	19 f0       	breq	.+6      	; 0x430 <TWI_send_control_settings+0x38>
     42a:	38 df       	rcall	.-400    	; 0x29c <Error>
     42c:	80 e0       	ldi	r24, 0x00	; 0
     42e:	2a c0       	rjmp	.+84     	; 0x484 <TWI_send_control_settings+0x8c>
     430:	81 e0       	ldi	r24, 0x01	; 1
     432:	44 df       	rcall	.-376    	; 0x2bc <send_data_and_wait>
     434:	80 91 b9 00 	lds	r24, 0x00B9
     438:	88 7f       	andi	r24, 0xF8	; 248
     43a:	88 32       	cpi	r24, 0x28	; 40
     43c:	19 f0       	breq	.+6      	; 0x444 <TWI_send_control_settings+0x4c>
     43e:	2e df       	rcall	.-420    	; 0x29c <Error>
     440:	80 e0       	ldi	r24, 0x00	; 0
     442:	20 c0       	rjmp	.+64     	; 0x484 <TWI_send_control_settings+0x8c>
     444:	8d 2f       	mov	r24, r29
     446:	3a df       	rcall	.-396    	; 0x2bc <send_data_and_wait>
     448:	80 91 b9 00 	lds	r24, 0x00B9
     44c:	88 7f       	andi	r24, 0xF8	; 248
     44e:	88 32       	cpi	r24, 0x28	; 40
     450:	19 f0       	breq	.+6      	; 0x458 <TWI_send_control_settings+0x60>
     452:	24 df       	rcall	.-440    	; 0x29c <Error>
     454:	80 e0       	ldi	r24, 0x00	; 0
     456:	16 c0       	rjmp	.+44     	; 0x484 <TWI_send_control_settings+0x8c>
     458:	81 2f       	mov	r24, r17
     45a:	30 df       	rcall	.-416    	; 0x2bc <send_data_and_wait>
     45c:	80 91 b9 00 	lds	r24, 0x00B9
     460:	88 7f       	andi	r24, 0xF8	; 248
     462:	88 32       	cpi	r24, 0x28	; 40
     464:	19 f0       	breq	.+6      	; 0x46c <TWI_send_control_settings+0x74>
     466:	1a df       	rcall	.-460    	; 0x29c <Error>
     468:	80 e0       	ldi	r24, 0x00	; 0
     46a:	0c c0       	rjmp	.+24     	; 0x484 <TWI_send_control_settings+0x8c>
     46c:	80 2f       	mov	r24, r16
     46e:	26 df       	rcall	.-436    	; 0x2bc <send_data_and_wait>
     470:	80 91 b9 00 	lds	r24, 0x00B9
     474:	88 7f       	andi	r24, 0xF8	; 248
     476:	88 32       	cpi	r24, 0x28	; 40
     478:	19 f0       	breq	.+6      	; 0x480 <TWI_send_control_settings+0x88>
     47a:	10 df       	rcall	.-480    	; 0x29c <Error>
     47c:	80 e0       	ldi	r24, 0x00	; 0
     47e:	02 c0       	rjmp	.+4      	; 0x484 <TWI_send_control_settings+0x8c>
     480:	09 df       	rcall	.-494    	; 0x294 <stop_bus>
     482:	81 e0       	ldi	r24, 0x01	; 1
     484:	df 91       	pop	r29
     486:	cf 91       	pop	r28
     488:	1f 91       	pop	r17
     48a:	0f 91       	pop	r16
     48c:	08 95       	ret

0000048e <TWI_send_autonom_settings>:
     48e:	cf 93       	push	r28
     490:	df 93       	push	r29
     492:	c8 2f       	mov	r28, r24
     494:	d6 2f       	mov	r29, r22
     496:	fa de       	rcall	.-524    	; 0x28c <start_bus>
     498:	0b df       	rcall	.-490    	; 0x2b0 <wait_for_bus>
     49a:	90 91 b9 00 	lds	r25, 0x00B9
     49e:	98 7f       	andi	r25, 0xF8	; 248
     4a0:	98 30       	cpi	r25, 0x08	; 8
     4a2:	19 f0       	breq	.+6      	; 0x4aa <TWI_send_autonom_settings+0x1c>
     4a4:	fb de       	rcall	.-522    	; 0x29c <Error>
     4a6:	80 e0       	ldi	r24, 0x00	; 0
     4a8:	20 c0       	rjmp	.+64     	; 0x4ea <TWI_send_autonom_settings+0x5c>
     4aa:	8c 2f       	mov	r24, r28
     4ac:	07 df       	rcall	.-498    	; 0x2bc <send_data_and_wait>
     4ae:	80 91 b9 00 	lds	r24, 0x00B9
     4b2:	88 7f       	andi	r24, 0xF8	; 248
     4b4:	88 31       	cpi	r24, 0x18	; 24
     4b6:	19 f0       	breq	.+6      	; 0x4be <TWI_send_autonom_settings+0x30>
     4b8:	f1 de       	rcall	.-542    	; 0x29c <Error>
     4ba:	80 e0       	ldi	r24, 0x00	; 0
     4bc:	16 c0       	rjmp	.+44     	; 0x4ea <TWI_send_autonom_settings+0x5c>
     4be:	85 e0       	ldi	r24, 0x05	; 5
     4c0:	fd de       	rcall	.-518    	; 0x2bc <send_data_and_wait>
     4c2:	80 91 b9 00 	lds	r24, 0x00B9
     4c6:	88 7f       	andi	r24, 0xF8	; 248
     4c8:	88 32       	cpi	r24, 0x28	; 40
     4ca:	19 f0       	breq	.+6      	; 0x4d2 <TWI_send_autonom_settings+0x44>
     4cc:	e7 de       	rcall	.-562    	; 0x29c <Error>
     4ce:	80 e0       	ldi	r24, 0x00	; 0
     4d0:	0c c0       	rjmp	.+24     	; 0x4ea <TWI_send_autonom_settings+0x5c>
     4d2:	8d 2f       	mov	r24, r29
     4d4:	f3 de       	rcall	.-538    	; 0x2bc <send_data_and_wait>
     4d6:	80 91 b9 00 	lds	r24, 0x00B9
     4da:	88 7f       	andi	r24, 0xF8	; 248
     4dc:	88 32       	cpi	r24, 0x28	; 40
     4de:	19 f0       	breq	.+6      	; 0x4e6 <TWI_send_autonom_settings+0x58>
     4e0:	dd de       	rcall	.-582    	; 0x29c <Error>
     4e2:	80 e0       	ldi	r24, 0x00	; 0
     4e4:	02 c0       	rjmp	.+4      	; 0x4ea <TWI_send_autonom_settings+0x5c>
     4e6:	d6 de       	rcall	.-596    	; 0x294 <stop_bus>
     4e8:	81 e0       	ldi	r24, 0x01	; 1
     4ea:	df 91       	pop	r29
     4ec:	cf 91       	pop	r28
     4ee:	08 95       	ret

000004f0 <TWI_send_command>:
     4f0:	1f 93       	push	r17
     4f2:	cf 93       	push	r28
     4f4:	df 93       	push	r29
     4f6:	c8 2f       	mov	r28, r24
     4f8:	d6 2f       	mov	r29, r22
     4fa:	14 2f       	mov	r17, r20
     4fc:	c7 de       	rcall	.-626    	; 0x28c <start_bus>
     4fe:	d8 de       	rcall	.-592    	; 0x2b0 <wait_for_bus>
     500:	90 91 b9 00 	lds	r25, 0x00B9
     504:	98 7f       	andi	r25, 0xF8	; 248
     506:	98 30       	cpi	r25, 0x08	; 8
     508:	19 f0       	breq	.+6      	; 0x510 <TWI_send_command+0x20>
     50a:	c8 de       	rcall	.-624    	; 0x29c <Error>
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	34 c0       	rjmp	.+104    	; 0x578 <TWI_send_command+0x88>
     510:	80 e2       	ldi	r24, 0x20	; 32
     512:	d4 de       	rcall	.-600    	; 0x2bc <send_data_and_wait>
     514:	80 91 b9 00 	lds	r24, 0x00B9
     518:	88 7f       	andi	r24, 0xF8	; 248
     51a:	88 31       	cpi	r24, 0x18	; 24
     51c:	19 f0       	breq	.+6      	; 0x524 <TWI_send_command+0x34>
     51e:	be de       	rcall	.-644    	; 0x29c <Error>
     520:	80 e0       	ldi	r24, 0x00	; 0
     522:	2a c0       	rjmp	.+84     	; 0x578 <TWI_send_command+0x88>
     524:	80 e0       	ldi	r24, 0x00	; 0
     526:	ca de       	rcall	.-620    	; 0x2bc <send_data_and_wait>
     528:	80 91 b9 00 	lds	r24, 0x00B9
     52c:	88 7f       	andi	r24, 0xF8	; 248
     52e:	88 32       	cpi	r24, 0x28	; 40
     530:	19 f0       	breq	.+6      	; 0x538 <TWI_send_command+0x48>
     532:	b4 de       	rcall	.-664    	; 0x29c <Error>
     534:	80 e0       	ldi	r24, 0x00	; 0
     536:	20 c0       	rjmp	.+64     	; 0x578 <TWI_send_command+0x88>
     538:	8c 2f       	mov	r24, r28
     53a:	c0 de       	rcall	.-640    	; 0x2bc <send_data_and_wait>
     53c:	80 91 b9 00 	lds	r24, 0x00B9
     540:	88 7f       	andi	r24, 0xF8	; 248
     542:	88 32       	cpi	r24, 0x28	; 40
     544:	19 f0       	breq	.+6      	; 0x54c <TWI_send_command+0x5c>
     546:	aa de       	rcall	.-684    	; 0x29c <Error>
     548:	80 e0       	ldi	r24, 0x00	; 0
     54a:	16 c0       	rjmp	.+44     	; 0x578 <TWI_send_command+0x88>
     54c:	8d 2f       	mov	r24, r29
     54e:	b6 de       	rcall	.-660    	; 0x2bc <send_data_and_wait>
     550:	80 91 b9 00 	lds	r24, 0x00B9
     554:	88 7f       	andi	r24, 0xF8	; 248
     556:	88 32       	cpi	r24, 0x28	; 40
     558:	19 f0       	breq	.+6      	; 0x560 <TWI_send_command+0x70>
     55a:	a0 de       	rcall	.-704    	; 0x29c <Error>
     55c:	80 e0       	ldi	r24, 0x00	; 0
     55e:	0c c0       	rjmp	.+24     	; 0x578 <TWI_send_command+0x88>
     560:	81 2f       	mov	r24, r17
     562:	ac de       	rcall	.-680    	; 0x2bc <send_data_and_wait>
     564:	80 91 b9 00 	lds	r24, 0x00B9
     568:	88 7f       	andi	r24, 0xF8	; 248
     56a:	88 32       	cpi	r24, 0x28	; 40
     56c:	19 f0       	breq	.+6      	; 0x574 <TWI_send_command+0x84>
     56e:	96 de       	rcall	.-724    	; 0x29c <Error>
     570:	80 e0       	ldi	r24, 0x00	; 0
     572:	02 c0       	rjmp	.+4      	; 0x578 <TWI_send_command+0x88>
     574:	8f de       	rcall	.-738    	; 0x294 <stop_bus>
     576:	81 e0       	ldi	r24, 0x01	; 1
     578:	df 91       	pop	r29
     57a:	cf 91       	pop	r28
     57c:	1f 91       	pop	r17
     57e:	08 95       	ret

00000580 <TWI_send_string>:
     580:	ef 92       	push	r14
     582:	ff 92       	push	r15
     584:	0f 93       	push	r16
     586:	1f 93       	push	r17
     588:	cf 93       	push	r28
     58a:	df 93       	push	r29
     58c:	c8 2f       	mov	r28, r24
     58e:	e6 2e       	mov	r14, r22
     590:	f7 2e       	mov	r15, r23
     592:	7c de       	rcall	.-776    	; 0x28c <start_bus>
     594:	8d de       	rcall	.-742    	; 0x2b0 <wait_for_bus>
     596:	90 91 b9 00 	lds	r25, 0x00B9
     59a:	98 7f       	andi	r25, 0xF8	; 248
     59c:	98 30       	cpi	r25, 0x08	; 8
     59e:	19 f0       	breq	.+6      	; 0x5a6 <TWI_send_string+0x26>
     5a0:	7d de       	rcall	.-774    	; 0x29c <Error>
     5a2:	80 e0       	ldi	r24, 0x00	; 0
     5a4:	2c c0       	rjmp	.+88     	; 0x5fe <TWI_send_string+0x7e>
     5a6:	8c 2f       	mov	r24, r28
     5a8:	89 de       	rcall	.-750    	; 0x2bc <send_data_and_wait>
     5aa:	80 91 b9 00 	lds	r24, 0x00B9
     5ae:	88 7f       	andi	r24, 0xF8	; 248
     5b0:	88 31       	cpi	r24, 0x18	; 24
     5b2:	19 f0       	breq	.+6      	; 0x5ba <TWI_send_string+0x3a>
     5b4:	73 de       	rcall	.-794    	; 0x29c <Error>
     5b6:	80 e0       	ldi	r24, 0x00	; 0
     5b8:	22 c0       	rjmp	.+68     	; 0x5fe <TWI_send_string+0x7e>
     5ba:	89 e1       	ldi	r24, 0x19	; 25
     5bc:	7f de       	rcall	.-770    	; 0x2bc <send_data_and_wait>
     5be:	80 91 b9 00 	lds	r24, 0x00B9
     5c2:	88 7f       	andi	r24, 0xF8	; 248
     5c4:	88 32       	cpi	r24, 0x28	; 40
     5c6:	29 f4       	brne	.+10     	; 0x5d2 <TWI_send_string+0x52>
     5c8:	0e 2d       	mov	r16, r14
     5ca:	1f 2d       	mov	r17, r15
     5cc:	c0 e0       	ldi	r28, 0x00	; 0
     5ce:	d0 e0       	ldi	r29, 0x00	; 0
     5d0:	08 c0       	rjmp	.+16     	; 0x5e2 <TWI_send_string+0x62>
     5d2:	64 de       	rcall	.-824    	; 0x29c <Error>
     5d4:	80 e0       	ldi	r24, 0x00	; 0
     5d6:	13 c0       	rjmp	.+38     	; 0x5fe <TWI_send_string+0x7e>
     5d8:	f8 01       	movw	r30, r16
     5da:	81 91       	ld	r24, Z+
     5dc:	8f 01       	movw	r16, r30
     5de:	6e de       	rcall	.-804    	; 0x2bc <send_data_and_wait>
     5e0:	21 96       	adiw	r28, 0x01	; 1
     5e2:	ee 2d       	mov	r30, r14
     5e4:	ff 2d       	mov	r31, r15
     5e6:	df 01       	movw	r26, r30
     5e8:	0d 90       	ld	r0, X+
     5ea:	00 20       	and	r0, r0
     5ec:	e9 f7       	brne	.-6      	; 0x5e8 <TWI_send_string+0x68>
     5ee:	11 97       	sbiw	r26, 0x01	; 1
     5f0:	ae 1b       	sub	r26, r30
     5f2:	bf 0b       	sbc	r27, r31
     5f4:	ca 17       	cp	r28, r26
     5f6:	db 07       	cpc	r29, r27
     5f8:	78 f3       	brcs	.-34     	; 0x5d8 <TWI_send_string+0x58>
     5fa:	4c de       	rcall	.-872    	; 0x294 <stop_bus>
     5fc:	81 e0       	ldi	r24, 0x01	; 1
     5fe:	df 91       	pop	r29
     600:	cf 91       	pop	r28
     602:	1f 91       	pop	r17
     604:	0f 91       	pop	r16
     606:	ff 90       	pop	r15
     608:	ef 90       	pop	r14
     60a:	08 95       	ret

0000060c <TWI_send_string_fixed_length>:
     60c:	ef 92       	push	r14
     60e:	ff 92       	push	r15
     610:	0f 93       	push	r16
     612:	1f 93       	push	r17
     614:	cf 93       	push	r28
     616:	df 93       	push	r29
     618:	c8 2f       	mov	r28, r24
     61a:	e6 2e       	mov	r14, r22
     61c:	f7 2e       	mov	r15, r23
     61e:	8a 01       	movw	r16, r20
     620:	35 de       	rcall	.-918    	; 0x28c <start_bus>
     622:	46 de       	rcall	.-884    	; 0x2b0 <wait_for_bus>
     624:	90 91 b9 00 	lds	r25, 0x00B9
     628:	98 7f       	andi	r25, 0xF8	; 248
     62a:	98 30       	cpi	r25, 0x08	; 8
     62c:	19 f0       	breq	.+6      	; 0x634 <TWI_send_string_fixed_length+0x28>
     62e:	36 de       	rcall	.-916    	; 0x29c <Error>
     630:	80 e0       	ldi	r24, 0x00	; 0
     632:	23 c0       	rjmp	.+70     	; 0x67a <TWI_send_string_fixed_length+0x6e>
     634:	8c 2f       	mov	r24, r28
     636:	42 de       	rcall	.-892    	; 0x2bc <send_data_and_wait>
     638:	80 91 b9 00 	lds	r24, 0x00B9
     63c:	88 7f       	andi	r24, 0xF8	; 248
     63e:	88 31       	cpi	r24, 0x18	; 24
     640:	19 f0       	breq	.+6      	; 0x648 <TWI_send_string_fixed_length+0x3c>
     642:	2c de       	rcall	.-936    	; 0x29c <Error>
     644:	80 e0       	ldi	r24, 0x00	; 0
     646:	19 c0       	rjmp	.+50     	; 0x67a <TWI_send_string_fixed_length+0x6e>
     648:	89 e1       	ldi	r24, 0x19	; 25
     64a:	38 de       	rcall	.-912    	; 0x2bc <send_data_and_wait>
     64c:	80 91 b9 00 	lds	r24, 0x00B9
     650:	88 7f       	andi	r24, 0xF8	; 248
     652:	88 32       	cpi	r24, 0x28	; 40
     654:	21 f4       	brne	.+8      	; 0x65e <TWI_send_string_fixed_length+0x52>
     656:	10 16       	cp	r1, r16
     658:	11 06       	cpc	r1, r17
     65a:	24 f0       	brlt	.+8      	; 0x664 <TWI_send_string_fixed_length+0x58>
     65c:	0c c0       	rjmp	.+24     	; 0x676 <TWI_send_string_fixed_length+0x6a>
     65e:	1e de       	rcall	.-964    	; 0x29c <Error>
     660:	80 e0       	ldi	r24, 0x00	; 0
     662:	0b c0       	rjmp	.+22     	; 0x67a <TWI_send_string_fixed_length+0x6e>
     664:	ce 2d       	mov	r28, r14
     666:	df 2d       	mov	r29, r15
     668:	0c 0f       	add	r16, r28
     66a:	1d 1f       	adc	r17, r29
     66c:	89 91       	ld	r24, Y+
     66e:	26 de       	rcall	.-948    	; 0x2bc <send_data_and_wait>
     670:	c0 17       	cp	r28, r16
     672:	d1 07       	cpc	r29, r17
     674:	d9 f7       	brne	.-10     	; 0x66c <TWI_send_string_fixed_length+0x60>
     676:	0e de       	rcall	.-996    	; 0x294 <stop_bus>
     678:	81 e0       	ldi	r24, 0x01	; 1
     67a:	df 91       	pop	r29
     67c:	cf 91       	pop	r28
     67e:	1f 91       	pop	r17
     680:	0f 91       	pop	r16
     682:	ff 90       	pop	r15
     684:	ef 90       	pop	r14
     686:	08 95       	ret

00000688 <TWI_get_sensor>:
     688:	88 50       	subi	r24, 0x08	; 8
     68a:	9c 4d       	sbci	r25, 0xDC	; 220
     68c:	fc 01       	movw	r30, r24
     68e:	80 81       	ld	r24, Z
     690:	08 95       	ret

00000692 <TWI_get_servo>:
     692:	80 91 e8 23 	lds	r24, 0x23E8
     696:	08 95       	ret

00000698 <TWI_sensor_flag>:
     698:	80 91 cd 22 	lds	r24, 0x22CD
     69c:	88 23       	and	r24, r24
     69e:	21 f0       	breq	.+8      	; 0x6a8 <TWI_sensor_flag+0x10>
     6a0:	10 92 cd 22 	sts	0x22CD, r1
     6a4:	81 e0       	ldi	r24, 0x01	; 1
     6a6:	08 95       	ret
     6a8:	80 e0       	ldi	r24, 0x00	; 0
     6aa:	08 95       	ret

000006ac <decode_message_TwiFIFO>:
     6ac:	8f 92       	push	r8
     6ae:	9f 92       	push	r9
     6b0:	af 92       	push	r10
     6b2:	bf 92       	push	r11
     6b4:	cf 92       	push	r12
     6b6:	df 92       	push	r13
     6b8:	ef 92       	push	r14
     6ba:	ff 92       	push	r15
     6bc:	0f 93       	push	r16
     6be:	1f 93       	push	r17
     6c0:	cf 93       	push	r28
     6c2:	df 93       	push	r29
     6c4:	cd b7       	in	r28, 0x3d	; 61
     6c6:	de b7       	in	r29, 0x3e	; 62
     6c8:	ad b6       	in	r10, 0x3d	; 61
     6ca:	be b6       	in	r11, 0x3e	; 62
     6cc:	60 e0       	ldi	r22, 0x00	; 0
     6ce:	70 e0       	ldi	r23, 0x00	; 0
     6d0:	80 91 00 01 	lds	r24, 0x0100
     6d4:	90 91 01 01 	lds	r25, 0x0101
     6d8:	67 dd       	rcall	.-1330   	; 0x1a8 <FifoRead>
     6da:	81 11       	cpse	r24, r1
     6dc:	3b c0       	rjmp	.+118    	; 0x754 <decode_message_TwiFIFO+0xa8>
     6de:	c0 90 00 00 	lds	r12, 0x0000
     6e2:	d1 2c       	mov	r13, r1
     6e4:	96 01       	movw	r18, r12
     6e6:	21 50       	subi	r18, 0x01	; 1
     6e8:	31 09       	sbc	r19, r1
     6ea:	81 e0       	ldi	r24, 0x01	; 1
     6ec:	90 e0       	ldi	r25, 0x00	; 0
     6ee:	c1 14       	cp	r12, r1
     6f0:	d1 04       	cpc	r13, r1
     6f2:	11 f0       	breq	.+4      	; 0x6f8 <decode_message_TwiFIFO+0x4c>
     6f4:	80 e0       	ldi	r24, 0x00	; 0
     6f6:	90 e0       	ldi	r25, 0x00	; 0
     6f8:	82 0f       	add	r24, r18
     6fa:	93 1f       	adc	r25, r19
     6fc:	2d b7       	in	r18, 0x3d	; 61
     6fe:	3e b7       	in	r19, 0x3e	; 62
     700:	28 1b       	sub	r18, r24
     702:	39 0b       	sbc	r19, r25
     704:	0f b6       	in	r0, 0x3f	; 63
     706:	f8 94       	cli
     708:	3e bf       	out	0x3e, r19	; 62
     70a:	0f be       	out	0x3f, r0	; 63
     70c:	2d bf       	out	0x3d, r18	; 61
     70e:	2f 5f       	subi	r18, 0xFF	; 255
     710:	3f 4f       	sbci	r19, 0xFF	; 255
     712:	82 2e       	mov	r8, r18
     714:	93 2e       	mov	r9, r19
     716:	1c 14       	cp	r1, r12
     718:	1d 04       	cpc	r1, r13
     71a:	bc f4       	brge	.+46     	; 0x74a <decode_message_TwiFIFO+0x9e>
     71c:	e2 2e       	mov	r14, r18
     71e:	f3 2e       	mov	r15, r19
     720:	00 e0       	ldi	r16, 0x00	; 0
     722:	10 e0       	ldi	r17, 0x00	; 0
     724:	60 e0       	ldi	r22, 0x00	; 0
     726:	70 e0       	ldi	r23, 0x00	; 0
     728:	80 91 00 01 	lds	r24, 0x0100
     72c:	90 91 01 01 	lds	r25, 0x0101
     730:	3b dd       	rcall	.-1418   	; 0x1a8 <FifoRead>
     732:	81 11       	cpse	r24, r1
     734:	11 c0       	rjmp	.+34     	; 0x758 <decode_message_TwiFIFO+0xac>
     736:	20 91 00 00 	lds	r18, 0x0000
     73a:	f7 01       	movw	r30, r14
     73c:	21 93       	st	Z+, r18
     73e:	7f 01       	movw	r14, r30
     740:	0f 5f       	subi	r16, 0xFF	; 255
     742:	1f 4f       	sbci	r17, 0xFF	; 255
     744:	0c 15       	cp	r16, r12
     746:	1d 05       	cpc	r17, r13
     748:	6c f3       	brlt	.-38     	; 0x724 <decode_message_TwiFIFO+0x78>
     74a:	88 2d       	mov	r24, r8
     74c:	99 2d       	mov	r25, r9
     74e:	e6 d2       	rcall	.+1484   	; 0xd1c <USART_SendMessage>
     750:	80 e0       	ldi	r24, 0x00	; 0
     752:	03 c0       	rjmp	.+6      	; 0x75a <decode_message_TwiFIFO+0xae>
     754:	81 e0       	ldi	r24, 0x01	; 1
     756:	01 c0       	rjmp	.+2      	; 0x75a <decode_message_TwiFIFO+0xae>
     758:	81 e0       	ldi	r24, 0x01	; 1
     75a:	0f b6       	in	r0, 0x3f	; 63
     75c:	f8 94       	cli
     75e:	be be       	out	0x3e, r11	; 62
     760:	0f be       	out	0x3f, r0	; 63
     762:	ad be       	out	0x3d, r10	; 61
     764:	df 91       	pop	r29
     766:	cf 91       	pop	r28
     768:	1f 91       	pop	r17
     76a:	0f 91       	pop	r16
     76c:	ff 90       	pop	r15
     76e:	ef 90       	pop	r14
     770:	df 90       	pop	r13
     772:	cf 90       	pop	r12
     774:	bf 90       	pop	r11
     776:	af 90       	pop	r10
     778:	9f 90       	pop	r9
     77a:	8f 90       	pop	r8
     77c:	08 95       	ret

0000077e <write_to_TwiFIFO>:
     77e:	ef 92       	push	r14
     780:	ff 92       	push	r15
     782:	0f 93       	push	r16
     784:	1f 93       	push	r17
     786:	cf 93       	push	r28
     788:	df 93       	push	r29
     78a:	e8 2e       	mov	r14, r24
     78c:	f9 2e       	mov	r15, r25
     78e:	e8 2f       	mov	r30, r24
     790:	f9 2f       	mov	r31, r25
     792:	df 01       	movw	r26, r30
     794:	0d 90       	ld	r0, X+
     796:	00 20       	and	r0, r0
     798:	e9 f7       	brne	.-6      	; 0x794 <write_to_TwiFIFO+0x16>
     79a:	11 97       	sbiw	r26, 0x01	; 1
     79c:	bd 01       	movw	r22, r26
     79e:	6e 1b       	sub	r22, r30
     7a0:	7f 0b       	sbc	r23, r31
     7a2:	80 91 00 01 	lds	r24, 0x0100
     7a6:	90 91 01 01 	lds	r25, 0x0101
     7aa:	de dc       	rcall	.-1604   	; 0x168 <FifoWrite>
     7ac:	81 11       	cpse	r24, r1
     7ae:	1e c0       	rjmp	.+60     	; 0x7ec <write_to_TwiFIFO+0x6e>
     7b0:	0e 2d       	mov	r16, r14
     7b2:	1f 2d       	mov	r17, r15
     7b4:	c0 e0       	ldi	r28, 0x00	; 0
     7b6:	d0 e0       	ldi	r29, 0x00	; 0
     7b8:	0b c0       	rjmp	.+22     	; 0x7d0 <write_to_TwiFIFO+0x52>
     7ba:	f8 01       	movw	r30, r16
     7bc:	61 91       	ld	r22, Z+
     7be:	8f 01       	movw	r16, r30
     7c0:	80 91 00 01 	lds	r24, 0x0100
     7c4:	90 91 01 01 	lds	r25, 0x0101
     7c8:	cf dc       	rcall	.-1634   	; 0x168 <FifoWrite>
     7ca:	81 11       	cpse	r24, r1
     7cc:	11 c0       	rjmp	.+34     	; 0x7f0 <write_to_TwiFIFO+0x72>
     7ce:	21 96       	adiw	r28, 0x01	; 1
     7d0:	ee 2d       	mov	r30, r14
     7d2:	ff 2d       	mov	r31, r15
     7d4:	df 01       	movw	r26, r30
     7d6:	0d 90       	ld	r0, X+
     7d8:	00 20       	and	r0, r0
     7da:	e9 f7       	brne	.-6      	; 0x7d6 <write_to_TwiFIFO+0x58>
     7dc:	11 97       	sbiw	r26, 0x01	; 1
     7de:	ae 1b       	sub	r26, r30
     7e0:	bf 0b       	sbc	r27, r31
     7e2:	ca 17       	cp	r28, r26
     7e4:	db 07       	cpc	r29, r27
     7e6:	48 f3       	brcs	.-46     	; 0x7ba <write_to_TwiFIFO+0x3c>
     7e8:	80 e0       	ldi	r24, 0x00	; 0
     7ea:	03 c0       	rjmp	.+6      	; 0x7f2 <write_to_TwiFIFO+0x74>
     7ec:	81 e0       	ldi	r24, 0x01	; 1
     7ee:	01 c0       	rjmp	.+2      	; 0x7f2 <write_to_TwiFIFO+0x74>
     7f0:	81 e0       	ldi	r24, 0x01	; 1
     7f2:	df 91       	pop	r29
     7f4:	cf 91       	pop	r28
     7f6:	1f 91       	pop	r17
     7f8:	0f 91       	pop	r16
     7fa:	ff 90       	pop	r15
     7fc:	ef 90       	pop	r14
     7fe:	08 95       	ret

00000800 <__vector_26>:
     800:	1f 92       	push	r1
     802:	0f 92       	push	r0
     804:	0f b6       	in	r0, 0x3f	; 63
     806:	0f 92       	push	r0
     808:	11 24       	eor	r1, r1
     80a:	0b b6       	in	r0, 0x3b	; 59
     80c:	0f 92       	push	r0
     80e:	2f 93       	push	r18
     810:	3f 93       	push	r19
     812:	4f 93       	push	r20
     814:	5f 93       	push	r21
     816:	6f 93       	push	r22
     818:	7f 93       	push	r23
     81a:	8f 93       	push	r24
     81c:	9f 93       	push	r25
     81e:	af 93       	push	r26
     820:	bf 93       	push	r27
     822:	cf 93       	push	r28
     824:	df 93       	push	r29
     826:	ef 93       	push	r30
     828:	ff 93       	push	r31
     82a:	80 91 e0 23 	lds	r24, 0x23E0
     82e:	80 34       	cpi	r24, 0x40	; 64
     830:	09 f4       	brne	.+2      	; 0x834 <__vector_26+0x34>
     832:	90 c0       	rjmp	.+288    	; 0x954 <__vector_26+0x154>
     834:	80 38       	cpi	r24, 0x80	; 128
     836:	21 f0       	breq	.+8      	; 0x840 <__vector_26+0x40>
     838:	80 32       	cpi	r24, 0x20	; 32
     83a:	09 f0       	breq	.+2      	; 0x83e <__vector_26+0x3e>
     83c:	88 c1       	rjmp	.+784    	; 0xb4e <__vector_26+0x34e>
     83e:	d2 c0       	rjmp	.+420    	; 0x9e4 <__vector_26+0x1e4>
     840:	80 91 b9 00 	lds	r24, 0x00B9
     844:	88 7f       	andi	r24, 0xF8	; 248
     846:	80 36       	cpi	r24, 0x60	; 96
     848:	29 f0       	breq	.+10     	; 0x854 <__vector_26+0x54>
     84a:	80 91 b9 00 	lds	r24, 0x00B9
     84e:	88 7f       	andi	r24, 0xF8	; 248
     850:	88 36       	cpi	r24, 0x68	; 104
     852:	21 f4       	brne	.+8      	; 0x85c <__vector_26+0x5c>
     854:	81 e0       	ldi	r24, 0x01	; 1
     856:	80 93 e3 23 	sts	0x23E3, r24
     85a:	7a c0       	rjmp	.+244    	; 0x950 <__vector_26+0x150>
     85c:	80 91 b9 00 	lds	r24, 0x00B9
     860:	88 7f       	andi	r24, 0xF8	; 248
     862:	80 37       	cpi	r24, 0x70	; 112
     864:	29 f0       	breq	.+10     	; 0x870 <__vector_26+0x70>
     866:	80 91 b9 00 	lds	r24, 0x00B9
     86a:	88 7f       	andi	r24, 0xF8	; 248
     86c:	88 37       	cpi	r24, 0x78	; 120
     86e:	39 f4       	brne	.+14     	; 0x87e <__vector_26+0x7e>
     870:	8f ef       	ldi	r24, 0xFF	; 255
     872:	90 e0       	ldi	r25, 0x00	; 0
     874:	90 93 ed 23 	sts	0x23ED, r25
     878:	80 93 ec 23 	sts	0x23EC, r24
     87c:	69 c0       	rjmp	.+210    	; 0x950 <__vector_26+0x150>
     87e:	80 91 b9 00 	lds	r24, 0x00B9
     882:	88 7f       	andi	r24, 0xF8	; 248
     884:	80 38       	cpi	r24, 0x80	; 128
     886:	b9 f5       	brne	.+110    	; 0x8f6 <__vector_26+0xf6>
     888:	80 91 e3 23 	lds	r24, 0x23E3
     88c:	88 23       	and	r24, r24
     88e:	41 f0       	breq	.+16     	; 0x8a0 <__vector_26+0xa0>
     890:	0c dd       	rcall	.-1512   	; 0x2aa <get_data>
     892:	80 93 ec 23 	sts	0x23EC, r24
     896:	10 92 ed 23 	sts	0x23ED, r1
     89a:	10 92 e3 23 	sts	0x23E3, r1
     89e:	58 c0       	rjmp	.+176    	; 0x950 <__vector_26+0x150>
     8a0:	80 91 ec 23 	lds	r24, 0x23EC
     8a4:	90 91 ed 23 	lds	r25, 0x23ED
     8a8:	85 30       	cpi	r24, 0x05	; 5
     8aa:	91 05       	cpc	r25, r1
     8ac:	71 f0       	breq	.+28     	; 0x8ca <__vector_26+0xca>
     8ae:	24 f4       	brge	.+8      	; 0x8b8 <__vector_26+0xb8>
     8b0:	01 97       	sbiw	r24, 0x01	; 1
     8b2:	09 f0       	breq	.+2      	; 0x8b6 <__vector_26+0xb6>
     8b4:	4d c0       	rjmp	.+154    	; 0x950 <__vector_26+0x150>
     8b6:	07 c0       	rjmp	.+14     	; 0x8c6 <__vector_26+0xc6>
     8b8:	86 30       	cpi	r24, 0x06	; 6
     8ba:	91 05       	cpc	r25, r1
     8bc:	51 f0       	breq	.+20     	; 0x8d2 <__vector_26+0xd2>
     8be:	49 97       	sbiw	r24, 0x19	; 25
     8c0:	09 f0       	breq	.+2      	; 0x8c4 <__vector_26+0xc4>
     8c2:	46 c0       	rjmp	.+140    	; 0x950 <__vector_26+0x150>
     8c4:	04 c0       	rjmp	.+8      	; 0x8ce <__vector_26+0xce>
     8c6:	46 dd       	rcall	.-1396   	; 0x354 <get_control_settings_from_bus>
     8c8:	43 c0       	rjmp	.+134    	; 0x950 <__vector_26+0x150>
     8ca:	55 dd       	rcall	.-1366   	; 0x376 <get_autonom_settings_from_bus>
     8cc:	41 c0       	rjmp	.+130    	; 0x950 <__vector_26+0x150>
     8ce:	57 dd       	rcall	.-1362   	; 0x37e <get_char_from_bus>
     8d0:	3f c0       	rjmp	.+126    	; 0x950 <__vector_26+0x150>
     8d2:	c0 91 e1 23 	lds	r28, 0x23E1
     8d6:	d0 91 e2 23 	lds	r29, 0x23E2
     8da:	e7 dc       	rcall	.-1586   	; 0x2aa <get_data>
     8dc:	ce 52       	subi	r28, 0x2E	; 46
     8de:	dd 4d       	sbci	r29, 0xDD	; 221
     8e0:	88 83       	st	Y, r24
     8e2:	80 91 e1 23 	lds	r24, 0x23E1
     8e6:	90 91 e2 23 	lds	r25, 0x23E2
     8ea:	01 96       	adiw	r24, 0x01	; 1
     8ec:	90 93 e2 23 	sts	0x23E2, r25
     8f0:	80 93 e1 23 	sts	0x23E1, r24
     8f4:	2d c0       	rjmp	.+90     	; 0x950 <__vector_26+0x150>
     8f6:	80 91 b9 00 	lds	r24, 0x00B9
     8fa:	88 7f       	andi	r24, 0xF8	; 248
     8fc:	80 39       	cpi	r24, 0x90	; 144
     8fe:	11 f4       	brne	.+4      	; 0x904 <__vector_26+0x104>
     900:	fe dc       	rcall	.-1540   	; 0x2fe <get_sensor_from_bus>
     902:	26 c0       	rjmp	.+76     	; 0x950 <__vector_26+0x150>
     904:	80 91 b9 00 	lds	r24, 0x00B9
     908:	88 7f       	andi	r24, 0xF8	; 248
     90a:	80 3a       	cpi	r24, 0xA0	; 160
     90c:	09 f5       	brne	.+66     	; 0x950 <__vector_26+0x150>
     90e:	dc dc       	rcall	.-1608   	; 0x2c8 <stop_twi>
     910:	80 91 ec 23 	lds	r24, 0x23EC
     914:	90 91 ed 23 	lds	r25, 0x23ED
     918:	85 30       	cpi	r24, 0x05	; 5
     91a:	91 05       	cpc	r25, r1
     91c:	71 f0       	breq	.+28     	; 0x93a <__vector_26+0x13a>
     91e:	1c f4       	brge	.+6      	; 0x926 <__vector_26+0x126>
     920:	01 97       	sbiw	r24, 0x01	; 1
     922:	b1 f4       	brne	.+44     	; 0x950 <__vector_26+0x150>
     924:	06 c0       	rjmp	.+12     	; 0x932 <__vector_26+0x132>
     926:	86 30       	cpi	r24, 0x06	; 6
     928:	91 05       	cpc	r25, r1
     92a:	79 f0       	breq	.+30     	; 0x94a <__vector_26+0x14a>
     92c:	49 97       	sbiw	r24, 0x19	; 25
     92e:	81 f4       	brne	.+32     	; 0x950 <__vector_26+0x150>
     930:	08 c0       	rjmp	.+16     	; 0x942 <__vector_26+0x142>
     932:	81 e0       	ldi	r24, 0x01	; 1
     934:	80 93 cb 22 	sts	0x22CB, r24
     938:	0b c0       	rjmp	.+22     	; 0x950 <__vector_26+0x150>
     93a:	81 e0       	ldi	r24, 0x01	; 1
     93c:	80 93 ca 22 	sts	0x22CA, r24
     940:	07 c0       	rjmp	.+14     	; 0x950 <__vector_26+0x150>
     942:	8a ed       	ldi	r24, 0xDA	; 218
     944:	92 e2       	ldi	r25, 0x22	; 34
     946:	1b df       	rcall	.-458    	; 0x77e <write_to_TwiFIFO>
     948:	03 c0       	rjmp	.+6      	; 0x950 <__vector_26+0x150>
     94a:	82 ed       	ldi	r24, 0xD2	; 210
     94c:	92 e2       	ldi	r25, 0x22	; 34
     94e:	07 d2       	rcall	.+1038   	; 0xd5e <USART_SendValue>
     950:	d0 dc       	rcall	.-1632   	; 0x2f2 <reset_TWI>
     952:	fd c0       	rjmp	.+506    	; 0xb4e <__vector_26+0x34e>
     954:	80 91 b9 00 	lds	r24, 0x00B9
     958:	88 7f       	andi	r24, 0xF8	; 248
     95a:	80 36       	cpi	r24, 0x60	; 96
     95c:	29 f0       	breq	.+10     	; 0x968 <__vector_26+0x168>
     95e:	80 91 b9 00 	lds	r24, 0x00B9
     962:	88 7f       	andi	r24, 0xF8	; 248
     964:	88 36       	cpi	r24, 0x68	; 104
     966:	21 f4       	brne	.+8      	; 0x970 <__vector_26+0x170>
     968:	81 e0       	ldi	r24, 0x01	; 1
     96a:	80 93 e3 23 	sts	0x23E3, r24
     96e:	38 c0       	rjmp	.+112    	; 0x9e0 <__vector_26+0x1e0>
     970:	80 91 b9 00 	lds	r24, 0x00B9
     974:	88 7f       	andi	r24, 0xF8	; 248
     976:	80 38       	cpi	r24, 0x80	; 128
     978:	e1 f4       	brne	.+56     	; 0x9b2 <__vector_26+0x1b2>
     97a:	80 91 e3 23 	lds	r24, 0x23E3
     97e:	88 23       	and	r24, r24
     980:	41 f0       	breq	.+16     	; 0x992 <__vector_26+0x192>
     982:	93 dc       	rcall	.-1754   	; 0x2aa <get_data>
     984:	80 93 ec 23 	sts	0x23EC, r24
     988:	10 92 ed 23 	sts	0x23ED, r1
     98c:	10 92 e3 23 	sts	0x23E3, r1
     990:	27 c0       	rjmp	.+78     	; 0x9e0 <__vector_26+0x1e0>
     992:	80 91 ec 23 	lds	r24, 0x23EC
     996:	90 91 ed 23 	lds	r25, 0x23ED
     99a:	82 30       	cpi	r24, 0x02	; 2
     99c:	91 05       	cpc	r25, r1
     99e:	19 f0       	breq	.+6      	; 0x9a6 <__vector_26+0x1a6>
     9a0:	49 97       	sbiw	r24, 0x19	; 25
     9a2:	f1 f4       	brne	.+60     	; 0x9e0 <__vector_26+0x1e0>
     9a4:	04 c0       	rjmp	.+8      	; 0x9ae <__vector_26+0x1ae>
     9a6:	81 dc       	rcall	.-1790   	; 0x2aa <get_data>
     9a8:	80 93 eb 23 	sts	0x23EB, r24
     9ac:	19 c0       	rjmp	.+50     	; 0x9e0 <__vector_26+0x1e0>
     9ae:	e7 dc       	rcall	.-1586   	; 0x37e <get_char_from_bus>
     9b0:	17 c0       	rjmp	.+46     	; 0x9e0 <__vector_26+0x1e0>
     9b2:	80 91 b9 00 	lds	r24, 0x00B9
     9b6:	88 7f       	andi	r24, 0xF8	; 248
     9b8:	80 3a       	cpi	r24, 0xA0	; 160
     9ba:	91 f4       	brne	.+36     	; 0x9e0 <__vector_26+0x1e0>
     9bc:	85 dc       	rcall	.-1782   	; 0x2c8 <stop_twi>
     9be:	80 91 ec 23 	lds	r24, 0x23EC
     9c2:	90 91 ed 23 	lds	r25, 0x23ED
     9c6:	82 30       	cpi	r24, 0x02	; 2
     9c8:	91 05       	cpc	r25, r1
     9ca:	19 f0       	breq	.+6      	; 0x9d2 <__vector_26+0x1d2>
     9cc:	49 97       	sbiw	r24, 0x19	; 25
     9ce:	41 f4       	brne	.+16     	; 0x9e0 <__vector_26+0x1e0>
     9d0:	04 c0       	rjmp	.+8      	; 0x9da <__vector_26+0x1da>
     9d2:	81 e0       	ldi	r24, 0x01	; 1
     9d4:	80 93 c8 22 	sts	0x22C8, r24
     9d8:	03 c0       	rjmp	.+6      	; 0x9e0 <__vector_26+0x1e0>
     9da:	8a ed       	ldi	r24, 0xDA	; 218
     9dc:	92 e2       	ldi	r25, 0x22	; 34
     9de:	cf de       	rcall	.-610    	; 0x77e <write_to_TwiFIFO>
     9e0:	88 dc       	rcall	.-1776   	; 0x2f2 <reset_TWI>
     9e2:	b5 c0       	rjmp	.+362    	; 0xb4e <__vector_26+0x34e>
     9e4:	80 91 b9 00 	lds	r24, 0x00B9
     9e8:	88 7f       	andi	r24, 0xF8	; 248
     9ea:	80 36       	cpi	r24, 0x60	; 96
     9ec:	29 f0       	breq	.+10     	; 0x9f8 <__vector_26+0x1f8>
     9ee:	80 91 b9 00 	lds	r24, 0x00B9
     9f2:	88 7f       	andi	r24, 0xF8	; 248
     9f4:	88 36       	cpi	r24, 0x68	; 104
     9f6:	21 f4       	brne	.+8      	; 0xa00 <__vector_26+0x200>
     9f8:	81 e0       	ldi	r24, 0x01	; 1
     9fa:	80 93 e3 23 	sts	0x23E3, r24
     9fe:	a6 c0       	rjmp	.+332    	; 0xb4c <__vector_26+0x34c>
     a00:	80 91 b9 00 	lds	r24, 0x00B9
     a04:	88 7f       	andi	r24, 0xF8	; 248
     a06:	80 37       	cpi	r24, 0x70	; 112
     a08:	29 f0       	breq	.+10     	; 0xa14 <__vector_26+0x214>
     a0a:	80 91 b9 00 	lds	r24, 0x00B9
     a0e:	88 7f       	andi	r24, 0xF8	; 248
     a10:	88 37       	cpi	r24, 0x78	; 120
     a12:	39 f4       	brne	.+14     	; 0xa22 <__vector_26+0x222>
     a14:	8f ef       	ldi	r24, 0xFF	; 255
     a16:	90 e0       	ldi	r25, 0x00	; 0
     a18:	90 93 ed 23 	sts	0x23ED, r25
     a1c:	80 93 ec 23 	sts	0x23EC, r24
     a20:	95 c0       	rjmp	.+298    	; 0xb4c <__vector_26+0x34c>
     a22:	80 91 b9 00 	lds	r24, 0x00B9
     a26:	88 7f       	andi	r24, 0xF8	; 248
     a28:	80 38       	cpi	r24, 0x80	; 128
     a2a:	09 f0       	breq	.+2      	; 0xa2e <__vector_26+0x22e>
     a2c:	62 c0       	rjmp	.+196    	; 0xaf2 <__vector_26+0x2f2>
     a2e:	80 91 e3 23 	lds	r24, 0x23E3
     a32:	88 23       	and	r24, r24
     a34:	41 f0       	breq	.+16     	; 0xa46 <__vector_26+0x246>
     a36:	39 dc       	rcall	.-1934   	; 0x2aa <get_data>
     a38:	80 93 ec 23 	sts	0x23EC, r24
     a3c:	10 92 ed 23 	sts	0x23ED, r1
     a40:	10 92 e3 23 	sts	0x23E3, r1
     a44:	83 c0       	rjmp	.+262    	; 0xb4c <__vector_26+0x34c>
     a46:	80 91 ec 23 	lds	r24, 0x23EC
     a4a:	90 91 ed 23 	lds	r25, 0x23ED
     a4e:	81 30       	cpi	r24, 0x01	; 1
     a50:	91 05       	cpc	r25, r1
     a52:	09 f4       	brne	.+2      	; 0xa56 <__vector_26+0x256>
     a54:	4a c0       	rjmp	.+148    	; 0xaea <__vector_26+0x2ea>
     a56:	1c f4       	brge	.+6      	; 0xa5e <__vector_26+0x25e>
     a58:	89 2b       	or	r24, r25
     a5a:	41 f0       	breq	.+16     	; 0xa6c <__vector_26+0x26c>
     a5c:	77 c0       	rjmp	.+238    	; 0xb4c <__vector_26+0x34c>
     a5e:	84 30       	cpi	r24, 0x04	; 4
     a60:	91 05       	cpc	r25, r1
     a62:	b1 f0       	breq	.+44     	; 0xa90 <__vector_26+0x290>
     a64:	05 97       	sbiw	r24, 0x05	; 5
     a66:	09 f0       	breq	.+2      	; 0xa6a <__vector_26+0x26a>
     a68:	71 c0       	rjmp	.+226    	; 0xb4c <__vector_26+0x34c>
     a6a:	41 c0       	rjmp	.+130    	; 0xaee <__vector_26+0x2ee>
     a6c:	c0 91 e4 23 	lds	r28, 0x23E4
     a70:	d0 91 e5 23 	lds	r29, 0x23E5
     a74:	1a dc       	rcall	.-1996   	; 0x2aa <get_data>
     a76:	ca 52       	subi	r28, 0x2A	; 42
     a78:	dd 4d       	sbci	r29, 0xDD	; 221
     a7a:	88 83       	st	Y, r24
     a7c:	80 91 e4 23 	lds	r24, 0x23E4
     a80:	90 91 e5 23 	lds	r25, 0x23E5
     a84:	01 96       	adiw	r24, 0x01	; 1
     a86:	90 93 e5 23 	sts	0x23E5, r25
     a8a:	80 93 e4 23 	sts	0x23E4, r24
     a8e:	5e c0       	rjmp	.+188    	; 0xb4c <__vector_26+0x34c>
     a90:	0c dc       	rcall	.-2024   	; 0x2aa <get_data>
     a92:	81 11       	cpse	r24, r1
     a94:	0a c0       	rjmp	.+20     	; 0xaaa <__vector_26+0x2aa>
     a96:	80 91 e6 23 	lds	r24, 0x23E6
     a9a:	90 91 e7 23 	lds	r25, 0x23E7
     a9e:	01 97       	sbiw	r24, 0x01	; 1
     aa0:	90 93 e7 23 	sts	0x23E7, r25
     aa4:	80 93 e6 23 	sts	0x23E6, r24
     aa8:	09 c0       	rjmp	.+18     	; 0xabc <__vector_26+0x2bc>
     aaa:	80 91 e6 23 	lds	r24, 0x23E6
     aae:	90 91 e7 23 	lds	r25, 0x23E7
     ab2:	01 96       	adiw	r24, 0x01	; 1
     ab4:	90 93 e7 23 	sts	0x23E7, r25
     ab8:	80 93 e6 23 	sts	0x23E6, r24
     abc:	80 91 e6 23 	lds	r24, 0x23E6
     ac0:	90 91 e7 23 	lds	r25, 0x23E7
     ac4:	18 16       	cp	r1, r24
     ac6:	19 06       	cpc	r1, r25
     ac8:	3c f0       	brlt	.+14     	; 0xad8 <__vector_26+0x2d8>
     aca:	81 e0       	ldi	r24, 0x01	; 1
     acc:	90 e0       	ldi	r25, 0x00	; 0
     ace:	90 93 e7 23 	sts	0x23E7, r25
     ad2:	80 93 e6 23 	sts	0x23E6, r24
     ad6:	3a c0       	rjmp	.+116    	; 0xb4c <__vector_26+0x34c>
     ad8:	08 97       	sbiw	r24, 0x08	; 8
     ada:	c4 f1       	brlt	.+112    	; 0xb4c <__vector_26+0x34c>
     adc:	87 e0       	ldi	r24, 0x07	; 7
     ade:	90 e0       	ldi	r25, 0x00	; 0
     ae0:	90 93 e7 23 	sts	0x23E7, r25
     ae4:	80 93 e6 23 	sts	0x23E6, r24
     ae8:	31 c0       	rjmp	.+98     	; 0xb4c <__vector_26+0x34c>
     aea:	34 dc       	rcall	.-1944   	; 0x354 <get_control_settings_from_bus>
     aec:	2f c0       	rjmp	.+94     	; 0xb4c <__vector_26+0x34c>
     aee:	43 dc       	rcall	.-1914   	; 0x376 <get_autonom_settings_from_bus>
     af0:	2d c0       	rjmp	.+90     	; 0xb4c <__vector_26+0x34c>
     af2:	80 91 b9 00 	lds	r24, 0x00B9
     af6:	88 7f       	andi	r24, 0xF8	; 248
     af8:	80 39       	cpi	r24, 0x90	; 144
     afa:	11 f4       	brne	.+4      	; 0xb00 <__vector_26+0x300>
     afc:	00 dc       	rcall	.-2048   	; 0x2fe <get_sensor_from_bus>
     afe:	26 c0       	rjmp	.+76     	; 0xb4c <__vector_26+0x34c>
     b00:	80 91 b9 00 	lds	r24, 0x00B9
     b04:	88 7f       	andi	r24, 0xF8	; 248
     b06:	80 3a       	cpi	r24, 0xA0	; 160
     b08:	09 f5       	brne	.+66     	; 0xb4c <__vector_26+0x34c>
     b0a:	de db       	rcall	.-2116   	; 0x2c8 <stop_twi>
     b0c:	80 91 ec 23 	lds	r24, 0x23EC
     b10:	90 91 ed 23 	lds	r25, 0x23ED
     b14:	81 30       	cpi	r24, 0x01	; 1
     b16:	91 05       	cpc	r25, r1
     b18:	91 f0       	breq	.+36     	; 0xb3e <__vector_26+0x33e>
     b1a:	1c f4       	brge	.+6      	; 0xb22 <__vector_26+0x322>
     b1c:	89 2b       	or	r24, r25
     b1e:	39 f0       	breq	.+14     	; 0xb2e <__vector_26+0x32e>
     b20:	15 c0       	rjmp	.+42     	; 0xb4c <__vector_26+0x34c>
     b22:	84 30       	cpi	r24, 0x04	; 4
     b24:	91 05       	cpc	r25, r1
     b26:	39 f0       	breq	.+14     	; 0xb36 <__vector_26+0x336>
     b28:	05 97       	sbiw	r24, 0x05	; 5
     b2a:	81 f4       	brne	.+32     	; 0xb4c <__vector_26+0x34c>
     b2c:	0c c0       	rjmp	.+24     	; 0xb46 <__vector_26+0x346>
     b2e:	81 e0       	ldi	r24, 0x01	; 1
     b30:	80 93 cc 22 	sts	0x22CC, r24
     b34:	0b c0       	rjmp	.+22     	; 0xb4c <__vector_26+0x34c>
     b36:	81 e0       	ldi	r24, 0x01	; 1
     b38:	80 93 c9 22 	sts	0x22C9, r24
     b3c:	07 c0       	rjmp	.+14     	; 0xb4c <__vector_26+0x34c>
     b3e:	81 e0       	ldi	r24, 0x01	; 1
     b40:	80 93 cb 22 	sts	0x22CB, r24
     b44:	03 c0       	rjmp	.+6      	; 0xb4c <__vector_26+0x34c>
     b46:	81 e0       	ldi	r24, 0x01	; 1
     b48:	80 93 ca 22 	sts	0x22CA, r24
     b4c:	d2 db       	rcall	.-2140   	; 0x2f2 <reset_TWI>
     b4e:	ff 91       	pop	r31
     b50:	ef 91       	pop	r30
     b52:	df 91       	pop	r29
     b54:	cf 91       	pop	r28
     b56:	bf 91       	pop	r27
     b58:	af 91       	pop	r26
     b5a:	9f 91       	pop	r25
     b5c:	8f 91       	pop	r24
     b5e:	7f 91       	pop	r23
     b60:	6f 91       	pop	r22
     b62:	5f 91       	pop	r21
     b64:	4f 91       	pop	r20
     b66:	3f 91       	pop	r19
     b68:	2f 91       	pop	r18
     b6a:	0f 90       	pop	r0
     b6c:	0b be       	out	0x3b, r0	; 59
     b6e:	0f 90       	pop	r0
     b70:	0f be       	out	0x3f, r0	; 63
     b72:	0f 90       	pop	r0
     b74:	1f 90       	pop	r1
     b76:	18 95       	reti

00000b78 <USART_init>:
{
	for(int i = 0; i < gRxBuffer[1]; i++)
	{
		gTxPayload[i] = gRxBuffer[i+2];
	}
	USART_SendPacket(gRxBuffer[0], gRxBuffer[1]);
     b78:	10 92 c5 00 	sts	0x00C5, r1
     b7c:	89 e0       	ldi	r24, 0x09	; 9
     b7e:	80 93 c4 00 	sts	0x00C4, r24
     b82:	88 e9       	ldi	r24, 0x98	; 152
     b84:	80 93 c1 00 	sts	0x00C1, r24
     b88:	86 e0       	ldi	r24, 0x06	; 6
     b8a:	80 93 c2 00 	sts	0x00C2, r24
     b8e:	08 95       	ret

00000b90 <USART_CheckTxReady>:
     b90:	80 91 c0 00 	lds	r24, 0x00C0
     b94:	80 72       	andi	r24, 0x20	; 32
     b96:	08 95       	ret

00000b98 <USART_WriteByte>:
     b98:	cf 93       	push	r28
     b9a:	c8 2f       	mov	r28, r24
     b9c:	f9 df       	rcall	.-14     	; 0xb90 <USART_CheckTxReady>
     b9e:	88 23       	and	r24, r24
     ba0:	e9 f3       	breq	.-6      	; 0xb9c <USART_WriteByte+0x4>
     ba2:	c0 93 c6 00 	sts	0x00C6, r28
     ba6:	cf 91       	pop	r28
     ba8:	08 95       	ret

00000baa <USART_crc16>:
     baa:	cf 92       	push	r12
     bac:	df 92       	push	r13
     bae:	ef 92       	push	r14
     bb0:	ff 92       	push	r15
     bb2:	0f 93       	push	r16
     bb4:	1f 93       	push	r17
     bb6:	cf 93       	push	r28
     bb8:	df 93       	push	r29
     bba:	66 23       	and	r22, r22
     bbc:	09 f4       	brne	.+2      	; 0xbc0 <USART_crc16+0x16>
     bbe:	3e c0       	rjmp	.+124    	; 0xc3c <USART_crc16+0x92>
     bc0:	06 2f       	mov	r16, r22
     bc2:	10 e0       	ldi	r17, 0x00	; 0
     bc4:	4f ef       	ldi	r20, 0xFF	; 255
     bc6:	5f ef       	ldi	r21, 0xFF	; 255
     bc8:	ee ef       	ldi	r30, 0xFE	; 254
     bca:	ff ef       	ldi	r31, 0xFF	; 255
     bcc:	c6 2e       	mov	r12, r22
     bce:	d1 2c       	mov	r13, r1
     bd0:	e8 2e       	mov	r14, r24
     bd2:	f1 2c       	mov	r15, r1
     bd4:	c8 e0       	ldi	r28, 0x08	; 8
     bd6:	d0 e0       	ldi	r29, 0x00	; 0
     bd8:	ee 3f       	cpi	r30, 0xFE	; 254
     bda:	6f ef       	ldi	r22, 0xFF	; 255
     bdc:	f6 07       	cpc	r31, r22
     bde:	19 f4       	brne	.+6      	; 0xbe6 <USART_crc16+0x3c>
     be0:	8e 2d       	mov	r24, r14
     be2:	9f 2d       	mov	r25, r15
     be4:	30 c0       	rjmp	.+96     	; 0xc46 <USART_crc16+0x9c>
     be6:	ef 3f       	cpi	r30, 0xFF	; 255
     be8:	8f ef       	ldi	r24, 0xFF	; 255
     bea:	f8 07       	cpc	r31, r24
     bec:	19 f4       	brne	.+6      	; 0xbf4 <USART_crc16+0x4a>
     bee:	8c 2d       	mov	r24, r12
     bf0:	9d 2d       	mov	r25, r13
     bf2:	29 c0       	rjmp	.+82     	; 0xc46 <USART_crc16+0x9c>
     bf4:	df 01       	movw	r26, r30
     bf6:	ab 5f       	subi	r26, 0xFB	; 251
     bf8:	b9 4d       	sbci	r27, 0xD9	; 217
     bfa:	8c 91       	ld	r24, X
     bfc:	90 e0       	ldi	r25, 0x00	; 0
     bfe:	23 c0       	rjmp	.+70     	; 0xc46 <USART_crc16+0x9c>
     c00:	ba 01       	movw	r22, r20
     c02:	68 27       	eor	r22, r24
     c04:	79 27       	eor	r23, r25
     c06:	60 ff       	sbrs	r22, 0
     c08:	07 c0       	rjmp	.+14     	; 0xc18 <USART_crc16+0x6e>
     c0a:	56 95       	lsr	r21
     c0c:	47 95       	ror	r20
     c0e:	68 e0       	ldi	r22, 0x08	; 8
     c10:	46 27       	eor	r20, r22
     c12:	64 e8       	ldi	r22, 0x84	; 132
     c14:	56 27       	eor	r21, r22
     c16:	02 c0       	rjmp	.+4      	; 0xc1c <USART_crc16+0x72>
     c18:	56 95       	lsr	r21
     c1a:	47 95       	ror	r20
     c1c:	96 95       	lsr	r25
     c1e:	87 95       	ror	r24
     c20:	21 50       	subi	r18, 0x01	; 1
     c22:	31 09       	sbc	r19, r1
     c24:	69 f7       	brne	.-38     	; 0xc00 <USART_crc16+0x56>
     c26:	31 96       	adiw	r30, 0x01	; 1
     c28:	e0 17       	cp	r30, r16
     c2a:	f1 07       	cpc	r31, r17
     c2c:	a9 f6       	brne	.-86     	; 0xbd8 <USART_crc16+0x2e>
     c2e:	9a 01       	movw	r18, r20
     c30:	20 95       	com	r18
     c32:	30 95       	com	r19
     c34:	32 27       	eor	r19, r18
     c36:	23 27       	eor	r18, r19
     c38:	32 27       	eor	r19, r18
     c3a:	02 c0       	rjmp	.+4      	; 0xc40 <USART_crc16+0x96>
     c3c:	20 e0       	ldi	r18, 0x00	; 0
     c3e:	30 e0       	ldi	r19, 0x00	; 0
     c40:	82 2f       	mov	r24, r18
     c42:	93 2f       	mov	r25, r19
     c44:	02 c0       	rjmp	.+4      	; 0xc4a <USART_crc16+0xa0>
     c46:	9e 01       	movw	r18, r28
     c48:	db cf       	rjmp	.-74     	; 0xc00 <USART_crc16+0x56>
     c4a:	df 91       	pop	r29
     c4c:	cf 91       	pop	r28
     c4e:	1f 91       	pop	r17
     c50:	0f 91       	pop	r16
     c52:	ff 90       	pop	r15
     c54:	ef 90       	pop	r14
     c56:	df 90       	pop	r13
     c58:	cf 90       	pop	r12
     c5a:	08 95       	ret

00000c5c <USART_SendPacket>:
     c5c:	0f 93       	push	r16
     c5e:	1f 93       	push	r17
     c60:	cf 93       	push	r28
     c62:	df 93       	push	r29
     c64:	9e e7       	ldi	r25, 0x7E	; 126
     c66:	90 93 04 27 	sts	0x2704, r25
     c6a:	80 93 05 27 	sts	0x2705, r24
     c6e:	60 93 06 27 	sts	0x2706, r22
     c72:	26 2f       	mov	r18, r22
     c74:	30 e0       	ldi	r19, 0x00	; 0
     c76:	12 16       	cp	r1, r18
     c78:	13 06       	cpc	r1, r19
     c7a:	4c f5       	brge	.+82     	; 0xcce <USART_SendPacket+0x72>
     c7c:	e5 e0       	ldi	r30, 0x05	; 5
     c7e:	f6 e2       	ldi	r31, 0x26	; 38
     c80:	03 e0       	ldi	r16, 0x03	; 3
     c82:	10 e0       	ldi	r17, 0x00	; 0
     c84:	c0 e0       	ldi	r28, 0x00	; 0
     c86:	d0 e0       	ldi	r29, 0x00	; 0
     c88:	7d e7       	ldi	r23, 0x7D	; 125
     c8a:	50 e2       	ldi	r21, 0x20	; 32
     c8c:	90 81       	ld	r25, Z
     c8e:	49 2f       	mov	r20, r25
     c90:	4d 57       	subi	r20, 0x7D	; 125
     c92:	42 30       	cpi	r20, 0x02	; 2
     c94:	80 f4       	brcc	.+32     	; 0xcb6 <USART_SendPacket+0x5a>
     c96:	d8 01       	movw	r26, r16
     c98:	ac 5f       	subi	r26, 0xFC	; 252
     c9a:	b8 4d       	sbci	r27, 0xD8	; 216
     c9c:	ac 0f       	add	r26, r28
     c9e:	bd 1f       	adc	r27, r29
     ca0:	7c 93       	st	X, r23
     ca2:	0f 5f       	subi	r16, 0xFF	; 255
     ca4:	1f 4f       	sbci	r17, 0xFF	; 255
     ca6:	d8 01       	movw	r26, r16
     ca8:	ac 5f       	subi	r26, 0xFC	; 252
     caa:	b8 4d       	sbci	r27, 0xD8	; 216
     cac:	ac 0f       	add	r26, r28
     cae:	bd 1f       	adc	r27, r29
     cb0:	95 27       	eor	r25, r21
     cb2:	9c 93       	st	X, r25
     cb4:	06 c0       	rjmp	.+12     	; 0xcc2 <USART_SendPacket+0x66>
     cb6:	d8 01       	movw	r26, r16
     cb8:	ac 5f       	subi	r26, 0xFC	; 252
     cba:	b8 4d       	sbci	r27, 0xD8	; 216
     cbc:	ac 0f       	add	r26, r28
     cbe:	bd 1f       	adc	r27, r29
     cc0:	9c 93       	st	X, r25
     cc2:	21 96       	adiw	r28, 0x01	; 1
     cc4:	31 96       	adiw	r30, 0x01	; 1
     cc6:	c2 17       	cp	r28, r18
     cc8:	d3 07       	cpc	r29, r19
     cca:	01 f7       	brne	.-64     	; 0xc8c <USART_SendPacket+0x30>
     ccc:	04 c0       	rjmp	.+8      	; 0xcd6 <USART_SendPacket+0x7a>
     cce:	03 e0       	ldi	r16, 0x03	; 3
     cd0:	10 e0       	ldi	r17, 0x00	; 0
     cd2:	c0 e0       	ldi	r28, 0x00	; 0
     cd4:	d0 e0       	ldi	r29, 0x00	; 0
     cd6:	69 df       	rcall	.-302    	; 0xbaa <USART_crc16>
     cd8:	f8 01       	movw	r30, r16
     cda:	ec 5f       	subi	r30, 0xFC	; 252
     cdc:	f8 4d       	sbci	r31, 0xD8	; 216
     cde:	ec 0f       	add	r30, r28
     ce0:	fd 1f       	adc	r31, r29
     ce2:	90 83       	st	Z, r25
     ce4:	81 83       	std	Z+1, r24	; 0x01
     ce6:	22 96       	adiw	r28, 0x02	; 2
     ce8:	0c 0f       	add	r16, r28
     cea:	1d 1f       	adc	r17, r29
     cec:	f8 01       	movw	r30, r16
     cee:	ec 5f       	subi	r30, 0xFC	; 252
     cf0:	f8 4d       	sbci	r31, 0xD8	; 216
     cf2:	8e e7       	ldi	r24, 0x7E	; 126
     cf4:	80 83       	st	Z, r24
     cf6:	c8 01       	movw	r24, r16
     cf8:	01 96       	adiw	r24, 0x01	; 1
     cfa:	18 16       	cp	r1, r24
     cfc:	19 06       	cpc	r1, r25
     cfe:	4c f4       	brge	.+18     	; 0xd12 <USART_SendPacket+0xb6>
     d00:	c4 e0       	ldi	r28, 0x04	; 4
     d02:	d7 e2       	ldi	r29, 0x27	; 39
     d04:	0b 5f       	subi	r16, 0xFB	; 251
     d06:	18 4d       	sbci	r17, 0xD8	; 216
     d08:	89 91       	ld	r24, Y+
     d0a:	46 df       	rcall	.-372    	; 0xb98 <USART_WriteByte>
     d0c:	c0 17       	cp	r28, r16
     d0e:	d1 07       	cpc	r29, r17
     d10:	d9 f7       	brne	.-10     	; 0xd08 <USART_SendPacket+0xac>
     d12:	df 91       	pop	r29
     d14:	cf 91       	pop	r28
     d16:	1f 91       	pop	r17
     d18:	0f 91       	pop	r16
     d1a:	08 95       	ret

00000d1c <USART_SendMessage>:
     d1c:	cf 93       	push	r28
     d1e:	df 93       	push	r29
     d20:	c8 2f       	mov	r28, r24
     d22:	d9 2f       	mov	r29, r25
     d24:	45 e0       	ldi	r20, 0x05	; 5
     d26:	56 e2       	ldi	r21, 0x26	; 38
     d28:	20 e0       	ldi	r18, 0x00	; 0
     d2a:	30 e0       	ldi	r19, 0x00	; 0
     d2c:	06 c0       	rjmp	.+12     	; 0xd3a <USART_SendMessage+0x1e>
     d2e:	69 91       	ld	r22, Y+
     d30:	fa 01       	movw	r30, r20
     d32:	61 93       	st	Z+, r22
     d34:	af 01       	movw	r20, r30
     d36:	2f 5f       	subi	r18, 0xFF	; 255
     d38:	3f 4f       	sbci	r19, 0xFF	; 255
     d3a:	e8 2f       	mov	r30, r24
     d3c:	f9 2f       	mov	r31, r25
     d3e:	df 01       	movw	r26, r30
     d40:	0d 90       	ld	r0, X+
     d42:	00 20       	and	r0, r0
     d44:	e9 f7       	brne	.-6      	; 0xd40 <USART_SendMessage+0x24>
     d46:	11 97       	sbiw	r26, 0x01	; 1
     d48:	bd 01       	movw	r22, r26
     d4a:	6e 1b       	sub	r22, r30
     d4c:	7f 0b       	sbc	r23, r31
     d4e:	26 17       	cp	r18, r22
     d50:	37 07       	cpc	r19, r23
     d52:	68 f3       	brcs	.-38     	; 0xd2e <USART_SendMessage+0x12>
     d54:	8d e4       	ldi	r24, 0x4D	; 77
     d56:	82 df       	rcall	.-252    	; 0xc5c <USART_SendPacket>
     d58:	df 91       	pop	r29
     d5a:	cf 91       	pop	r28
     d5c:	08 95       	ret

00000d5e <USART_SendValue>:
     d5e:	a8 2f       	mov	r26, r24
     d60:	b9 2f       	mov	r27, r25
     d62:	e5 e0       	ldi	r30, 0x05	; 5
     d64:	f6 e2       	ldi	r31, 0x26	; 38
     d66:	89 e0       	ldi	r24, 0x09	; 9
     d68:	96 e2       	ldi	r25, 0x26	; 38
     d6a:	2d 91       	ld	r18, X+
     d6c:	21 93       	st	Z+, r18
     d6e:	e8 17       	cp	r30, r24
     d70:	f9 07       	cpc	r31, r25
     d72:	d9 f7       	brne	.-10     	; 0xd6a <USART_SendValue+0xc>
     d74:	64 e0       	ldi	r22, 0x04	; 4
     d76:	86 e5       	ldi	r24, 0x56	; 86
     d78:	71 cf       	rjmp	.-286    	; 0xc5c <USART_SendPacket>

00000d7a <USART_SendSensors>:
     d7a:	0f 93       	push	r16
     d7c:	1f 93       	push	r17
     d7e:	cf 93       	push	r28
     d80:	df 93       	push	r29
     d82:	05 e0       	ldi	r16, 0x05	; 5
     d84:	16 e2       	ldi	r17, 0x26	; 38
     d86:	c0 e0       	ldi	r28, 0x00	; 0
     d88:	d0 e0       	ldi	r29, 0x00	; 0
     d8a:	ce 01       	movw	r24, r28
     d8c:	7d dc       	rcall	.-1798   	; 0x688 <TWI_get_sensor>
     d8e:	f8 01       	movw	r30, r16
     d90:	81 93       	st	Z+, r24
     d92:	8f 01       	movw	r16, r30
     d94:	21 96       	adiw	r28, 0x01	; 1
     d96:	c8 30       	cpi	r28, 0x08	; 8
     d98:	d1 05       	cpc	r29, r1
     d9a:	b9 f7       	brne	.-18     	; 0xd8a <USART_SendSensors+0x10>
     d9c:	7a dc       	rcall	.-1804   	; 0x692 <TWI_get_servo>
     d9e:	80 93 0d 26 	sts	0x260D, r24
     da2:	69 e0       	ldi	r22, 0x09	; 9
     da4:	83 e5       	ldi	r24, 0x53	; 83
     da6:	5a df       	rcall	.-332    	; 0xc5c <USART_SendPacket>
     da8:	df 91       	pop	r29
     daa:	cf 91       	pop	r28
     dac:	1f 91       	pop	r17
     dae:	0f 91       	pop	r16
     db0:	08 95       	ret

00000db2 <USART_DecodeMessageRxFIFO>:
     db2:	8f 92       	push	r8
     db4:	9f 92       	push	r9
     db6:	af 92       	push	r10
     db8:	bf 92       	push	r11
     dba:	cf 92       	push	r12
     dbc:	df 92       	push	r13
     dbe:	ef 92       	push	r14
     dc0:	ff 92       	push	r15
     dc2:	0f 93       	push	r16
     dc4:	1f 93       	push	r17
     dc6:	cf 93       	push	r28
     dc8:	df 93       	push	r29
     dca:	cd b7       	in	r28, 0x3d	; 61
     dcc:	de b7       	in	r29, 0x3e	; 62
     dce:	ad b6       	in	r10, 0x3d	; 61
     dd0:	be b6       	in	r11, 0x3e	; 62
     dd2:	60 e0       	ldi	r22, 0x00	; 0
     dd4:	70 e0       	ldi	r23, 0x00	; 0
     dd6:	80 91 08 11 	lds	r24, 0x1108
     dda:	90 91 09 11 	lds	r25, 0x1109
     dde:	e4 d9       	rcall	.-3128   	; 0x1a8 <FifoRead>
     de0:	88 23       	and	r24, r24
     de2:	29 f0       	breq	.+10     	; 0xdee <USART_DecodeMessageRxFIFO+0x3c>
     de4:	8e e1       	ldi	r24, 0x1E	; 30
     de6:	91 e2       	ldi	r25, 0x21	; 33
     de8:	99 df       	rcall	.-206    	; 0xd1c <USART_SendMessage>
     dea:	81 e0       	ldi	r24, 0x01	; 1
     dec:	42 c0       	rjmp	.+132    	; 0xe72 <USART_DecodeMessageRxFIFO+0xc0>
     dee:	c0 90 00 00 	lds	r12, 0x0000
     df2:	d1 2c       	mov	r13, r1
     df4:	96 01       	movw	r18, r12
     df6:	21 50       	subi	r18, 0x01	; 1
     df8:	31 09       	sbc	r19, r1
     dfa:	81 e0       	ldi	r24, 0x01	; 1
     dfc:	90 e0       	ldi	r25, 0x00	; 0
     dfe:	c1 14       	cp	r12, r1
     e00:	d1 04       	cpc	r13, r1
     e02:	11 f0       	breq	.+4      	; 0xe08 <USART_DecodeMessageRxFIFO+0x56>
     e04:	80 e0       	ldi	r24, 0x00	; 0
     e06:	90 e0       	ldi	r25, 0x00	; 0
     e08:	82 0f       	add	r24, r18
     e0a:	93 1f       	adc	r25, r19
     e0c:	2d b7       	in	r18, 0x3d	; 61
     e0e:	3e b7       	in	r19, 0x3e	; 62
     e10:	28 1b       	sub	r18, r24
     e12:	39 0b       	sbc	r19, r25
     e14:	0f b6       	in	r0, 0x3f	; 63
     e16:	f8 94       	cli
     e18:	3e bf       	out	0x3e, r19	; 62
     e1a:	0f be       	out	0x3f, r0	; 63
     e1c:	2d bf       	out	0x3d, r18	; 61
     e1e:	8d b7       	in	r24, 0x3d	; 61
     e20:	9e b7       	in	r25, 0x3e	; 62
     e22:	01 96       	adiw	r24, 0x01	; 1
     e24:	88 2e       	mov	r8, r24
     e26:	99 2e       	mov	r9, r25
     e28:	1c 14       	cp	r1, r12
     e2a:	1d 04       	cpc	r1, r13
     e2c:	e4 f4       	brge	.+56     	; 0xe66 <USART_DecodeMessageRxFIFO+0xb4>
     e2e:	e8 2e       	mov	r14, r24
     e30:	f9 2e       	mov	r15, r25
     e32:	00 e0       	ldi	r16, 0x00	; 0
     e34:	10 e0       	ldi	r17, 0x00	; 0
     e36:	60 e0       	ldi	r22, 0x00	; 0
     e38:	70 e0       	ldi	r23, 0x00	; 0
     e3a:	80 91 08 11 	lds	r24, 0x1108
     e3e:	90 91 09 11 	lds	r25, 0x1109
     e42:	b2 d9       	rcall	.-3228   	; 0x1a8 <FifoRead>
     e44:	88 23       	and	r24, r24
     e46:	29 f0       	breq	.+10     	; 0xe52 <USART_DecodeMessageRxFIFO+0xa0>
     e48:	80 e4       	ldi	r24, 0x40	; 64
     e4a:	91 e2       	ldi	r25, 0x21	; 33
     e4c:	67 df       	rcall	.-306    	; 0xd1c <USART_SendMessage>
     e4e:	81 e0       	ldi	r24, 0x01	; 1
     e50:	10 c0       	rjmp	.+32     	; 0xe72 <USART_DecodeMessageRxFIFO+0xc0>
     e52:	80 91 00 00 	lds	r24, 0x0000
     e56:	f7 01       	movw	r30, r14
     e58:	81 93       	st	Z+, r24
     e5a:	7f 01       	movw	r14, r30
     e5c:	0f 5f       	subi	r16, 0xFF	; 255
     e5e:	1f 4f       	sbci	r17, 0xFF	; 255
     e60:	0c 15       	cp	r16, r12
     e62:	1d 05       	cpc	r17, r13
     e64:	44 f3       	brlt	.-48     	; 0xe36 <USART_DecodeMessageRxFIFO+0x84>
     e66:	a6 01       	movw	r20, r12
     e68:	68 2d       	mov	r22, r8
     e6a:	79 2d       	mov	r23, r9
     e6c:	80 e4       	ldi	r24, 0x40	; 64
     e6e:	ce db       	rcall	.-2148   	; 0x60c <TWI_send_string_fixed_length>
     e70:	80 e0       	ldi	r24, 0x00	; 0
     e72:	0f b6       	in	r0, 0x3f	; 63
     e74:	f8 94       	cli
     e76:	be be       	out	0x3e, r11	; 62
     e78:	0f be       	out	0x3f, r0	; 63
     e7a:	ad be       	out	0x3d, r10	; 61
     e7c:	df 91       	pop	r29
     e7e:	cf 91       	pop	r28
     e80:	1f 91       	pop	r17
     e82:	0f 91       	pop	r16
     e84:	ff 90       	pop	r15
     e86:	ef 90       	pop	r14
     e88:	df 90       	pop	r13
     e8a:	cf 90       	pop	r12
     e8c:	bf 90       	pop	r11
     e8e:	af 90       	pop	r10
     e90:	9f 90       	pop	r9
     e92:	8f 90       	pop	r8
     e94:	08 95       	ret

00000e96 <USART_DecodeCommandRxFIFO>:
     e96:	cf 93       	push	r28
     e98:	df 93       	push	r29
     e9a:	60 e0       	ldi	r22, 0x00	; 0
     e9c:	70 e0       	ldi	r23, 0x00	; 0
     e9e:	80 91 08 11 	lds	r24, 0x1108
     ea2:	90 91 09 11 	lds	r25, 0x1109
     ea6:	80 d9       	rcall	.-3328   	; 0x1a8 <FifoRead>
     ea8:	88 23       	and	r24, r24
     eaa:	29 f0       	breq	.+10     	; 0xeb6 <USART_DecodeCommandRxFIFO+0x20>
     eac:	83 e6       	ldi	r24, 0x63	; 99
     eae:	91 e2       	ldi	r25, 0x21	; 33
     eb0:	35 df       	rcall	.-406    	; 0xd1c <USART_SendMessage>
     eb2:	81 e0       	ldi	r24, 0x01	; 1
     eb4:	3d c0       	rjmp	.+122    	; 0xf30 <USART_DecodeCommandRxFIFO+0x9a>
     eb6:	80 91 00 00 	lds	r24, 0x0000
     eba:	83 30       	cpi	r24, 0x03	; 3
     ebc:	a9 f5       	brne	.+106    	; 0xf28 <USART_DecodeCommandRxFIFO+0x92>
     ebe:	60 e0       	ldi	r22, 0x00	; 0
     ec0:	70 e0       	ldi	r23, 0x00	; 0
     ec2:	80 91 08 11 	lds	r24, 0x1108
     ec6:	90 91 09 11 	lds	r25, 0x1109
     eca:	6e d9       	rcall	.-3364   	; 0x1a8 <FifoRead>
     ecc:	88 23       	and	r24, r24
     ece:	29 f0       	breq	.+10     	; 0xeda <USART_DecodeCommandRxFIFO+0x44>
     ed0:	85 e8       	ldi	r24, 0x85	; 133
     ed2:	91 e2       	ldi	r25, 0x21	; 33
     ed4:	23 df       	rcall	.-442    	; 0xd1c <USART_SendMessage>
     ed6:	81 e0       	ldi	r24, 0x01	; 1
     ed8:	2b c0       	rjmp	.+86     	; 0xf30 <USART_DecodeCommandRxFIFO+0x9a>
     eda:	c0 91 00 00 	lds	r28, 0x0000
     ede:	60 e0       	ldi	r22, 0x00	; 0
     ee0:	70 e0       	ldi	r23, 0x00	; 0
     ee2:	80 91 08 11 	lds	r24, 0x1108
     ee6:	90 91 09 11 	lds	r25, 0x1109
     eea:	5e d9       	rcall	.-3396   	; 0x1a8 <FifoRead>
     eec:	88 23       	and	r24, r24
     eee:	29 f0       	breq	.+10     	; 0xefa <USART_DecodeCommandRxFIFO+0x64>
     ef0:	8d ea       	ldi	r24, 0xAD	; 173
     ef2:	91 e2       	ldi	r25, 0x21	; 33
     ef4:	13 df       	rcall	.-474    	; 0xd1c <USART_SendMessage>
     ef6:	81 e0       	ldi	r24, 0x01	; 1
     ef8:	1b c0       	rjmp	.+54     	; 0xf30 <USART_DecodeCommandRxFIFO+0x9a>
     efa:	d0 91 00 00 	lds	r29, 0x0000
     efe:	60 e0       	ldi	r22, 0x00	; 0
     f00:	70 e0       	ldi	r23, 0x00	; 0
     f02:	80 91 08 11 	lds	r24, 0x1108
     f06:	90 91 09 11 	lds	r25, 0x1109
     f0a:	4e d9       	rcall	.-3428   	; 0x1a8 <FifoRead>
     f0c:	88 23       	and	r24, r24
     f0e:	29 f0       	breq	.+10     	; 0xf1a <USART_DecodeCommandRxFIFO+0x84>
     f10:	84 ed       	ldi	r24, 0xD4	; 212
     f12:	91 e2       	ldi	r25, 0x21	; 33
     f14:	03 df       	rcall	.-506    	; 0xd1c <USART_SendMessage>
     f16:	81 e0       	ldi	r24, 0x01	; 1
     f18:	0b c0       	rjmp	.+22     	; 0xf30 <USART_DecodeCommandRxFIFO+0x9a>
     f1a:	40 91 00 00 	lds	r20, 0x0000
     f1e:	6d 2f       	mov	r22, r29
     f20:	8c 2f       	mov	r24, r28
     f22:	e6 da       	rcall	.-2612   	; 0x4f0 <TWI_send_command>
     f24:	80 e0       	ldi	r24, 0x00	; 0
     f26:	04 c0       	rjmp	.+8      	; 0xf30 <USART_DecodeCommandRxFIFO+0x9a>
     f28:	88 ef       	ldi	r24, 0xF8	; 248
     f2a:	91 e2       	ldi	r25, 0x21	; 33
     f2c:	f7 de       	rcall	.-530    	; 0xd1c <USART_SendMessage>
     f2e:	81 e0       	ldi	r24, 0x01	; 1
     f30:	df 91       	pop	r29
     f32:	cf 91       	pop	r28
     f34:	08 95       	ret

00000f36 <USART_DecodeParametersRxFIFO>:
     f36:	cf 93       	push	r28
     f38:	df 93       	push	r29
     f3a:	60 e0       	ldi	r22, 0x00	; 0
     f3c:	70 e0       	ldi	r23, 0x00	; 0
     f3e:	80 91 08 11 	lds	r24, 0x1108
     f42:	90 91 09 11 	lds	r25, 0x1109
     f46:	30 d9       	rcall	.-3488   	; 0x1a8 <FifoRead>
     f48:	88 23       	and	r24, r24
     f4a:	29 f0       	breq	.+10     	; 0xf56 <USART_DecodeParametersRxFIFO+0x20>
     f4c:	8f e1       	ldi	r24, 0x1F	; 31
     f4e:	92 e2       	ldi	r25, 0x22	; 34
     f50:	e5 de       	rcall	.-566    	; 0xd1c <USART_SendMessage>
     f52:	81 e0       	ldi	r24, 0x01	; 1
     f54:	3e c0       	rjmp	.+124    	; 0xfd2 <USART_DecodeParametersRxFIFO+0x9c>
     f56:	80 91 00 00 	lds	r24, 0x0000
     f5a:	83 30       	cpi	r24, 0x03	; 3
     f5c:	b1 f5       	brne	.+108    	; 0xfca <USART_DecodeParametersRxFIFO+0x94>
     f5e:	60 e0       	ldi	r22, 0x00	; 0
     f60:	70 e0       	ldi	r23, 0x00	; 0
     f62:	80 91 08 11 	lds	r24, 0x1108
     f66:	90 91 09 11 	lds	r25, 0x1109
     f6a:	1e d9       	rcall	.-3524   	; 0x1a8 <FifoRead>
     f6c:	88 23       	and	r24, r24
     f6e:	29 f0       	breq	.+10     	; 0xf7a <USART_DecodeParametersRxFIFO+0x44>
     f70:	84 e4       	ldi	r24, 0x44	; 68
     f72:	92 e2       	ldi	r25, 0x22	; 34
     f74:	d3 de       	rcall	.-602    	; 0xd1c <USART_SendMessage>
     f76:	81 e0       	ldi	r24, 0x01	; 1
     f78:	2c c0       	rjmp	.+88     	; 0xfd2 <USART_DecodeParametersRxFIFO+0x9c>
     f7a:	c0 91 00 00 	lds	r28, 0x0000
     f7e:	60 e0       	ldi	r22, 0x00	; 0
     f80:	70 e0       	ldi	r23, 0x00	; 0
     f82:	80 91 08 11 	lds	r24, 0x1108
     f86:	90 91 09 11 	lds	r25, 0x1109
     f8a:	0e d9       	rcall	.-3556   	; 0x1a8 <FifoRead>
     f8c:	88 23       	and	r24, r24
     f8e:	29 f0       	breq	.+10     	; 0xf9a <USART_DecodeParametersRxFIFO+0x64>
     f90:	84 e4       	ldi	r24, 0x44	; 68
     f92:	92 e2       	ldi	r25, 0x22	; 34
     f94:	c3 de       	rcall	.-634    	; 0xd1c <USART_SendMessage>
     f96:	81 e0       	ldi	r24, 0x01	; 1
     f98:	1c c0       	rjmp	.+56     	; 0xfd2 <USART_DecodeParametersRxFIFO+0x9c>
     f9a:	d0 91 00 00 	lds	r29, 0x0000
     f9e:	60 e0       	ldi	r22, 0x00	; 0
     fa0:	70 e0       	ldi	r23, 0x00	; 0
     fa2:	80 91 08 11 	lds	r24, 0x1108
     fa6:	90 91 09 11 	lds	r25, 0x1109
     faa:	fe d8       	rcall	.-3588   	; 0x1a8 <FifoRead>
     fac:	88 23       	and	r24, r24
     fae:	29 f0       	breq	.+10     	; 0xfba <USART_DecodeParametersRxFIFO+0x84>
     fb0:	84 e4       	ldi	r24, 0x44	; 68
     fb2:	92 e2       	ldi	r25, 0x22	; 34
     fb4:	b3 de       	rcall	.-666    	; 0xd1c <USART_SendMessage>
     fb6:	81 e0       	ldi	r24, 0x01	; 1
     fb8:	0c c0       	rjmp	.+24     	; 0xfd2 <USART_DecodeParametersRxFIFO+0x9c>
     fba:	20 91 00 00 	lds	r18, 0x0000
     fbe:	4d 2f       	mov	r20, r29
     fc0:	6c 2f       	mov	r22, r28
     fc2:	80 e2       	ldi	r24, 0x20	; 32
     fc4:	19 da       	rcall	.-3022   	; 0x3f8 <TWI_send_control_settings>
     fc6:	80 e0       	ldi	r24, 0x00	; 0
     fc8:	04 c0       	rjmp	.+8      	; 0xfd2 <USART_DecodeParametersRxFIFO+0x9c>
     fca:	88 ef       	ldi	r24, 0xF8	; 248
     fcc:	91 e2       	ldi	r25, 0x21	; 33
     fce:	a6 de       	rcall	.-692    	; 0xd1c <USART_SendMessage>
     fd0:	81 e0       	ldi	r24, 0x01	; 1
     fd2:	df 91       	pop	r29
     fd4:	cf 91       	pop	r28
     fd6:	08 95       	ret

00000fd8 <USART_DecodeAutonomRxFIFO>:
     fd8:	60 e0       	ldi	r22, 0x00	; 0
     fda:	70 e0       	ldi	r23, 0x00	; 0
     fdc:	80 91 08 11 	lds	r24, 0x1108
     fe0:	90 91 09 11 	lds	r25, 0x1109
     fe4:	e1 d8       	rcall	.-3646   	; 0x1a8 <FifoRead>
     fe6:	88 23       	and	r24, r24
     fe8:	29 f0       	breq	.+10     	; 0xff4 <USART_DecodeAutonomRxFIFO+0x1c>
     fea:	8d e5       	ldi	r24, 0x5D	; 93
     fec:	92 e2       	ldi	r25, 0x22	; 34
     fee:	96 de       	rcall	.-724    	; 0xd1c <USART_SendMessage>
     ff0:	81 e0       	ldi	r24, 0x01	; 1
     ff2:	08 95       	ret
     ff4:	80 91 00 00 	lds	r24, 0x0000
     ff8:	81 30       	cpi	r24, 0x01	; 1
     ffa:	a1 f4       	brne	.+40     	; 0x1024 <USART_DecodeAutonomRxFIFO+0x4c>
     ffc:	60 e0       	ldi	r22, 0x00	; 0
     ffe:	70 e0       	ldi	r23, 0x00	; 0
    1000:	80 91 08 11 	lds	r24, 0x1108
    1004:	90 91 09 11 	lds	r25, 0x1109
    1008:	cf d8       	rcall	.-3682   	; 0x1a8 <FifoRead>
    100a:	88 23       	and	r24, r24
    100c:	29 f0       	breq	.+10     	; 0x1018 <USART_DecodeAutonomRxFIFO+0x40>
    100e:	8f e7       	ldi	r24, 0x7F	; 127
    1010:	92 e2       	ldi	r25, 0x22	; 34
    1012:	84 de       	rcall	.-760    	; 0xd1c <USART_SendMessage>
    1014:	81 e0       	ldi	r24, 0x01	; 1
    1016:	08 95       	ret
    1018:	60 91 00 00 	lds	r22, 0x0000
    101c:	80 e2       	ldi	r24, 0x20	; 32
    101e:	37 da       	rcall	.-2962   	; 0x48e <TWI_send_autonom_settings>
    1020:	80 e0       	ldi	r24, 0x00	; 0
    1022:	08 95       	ret
    1024:	85 e9       	ldi	r24, 0x95	; 149
    1026:	92 e2       	ldi	r25, 0x22	; 34
    1028:	79 de       	rcall	.-782    	; 0xd1c <USART_SendMessage>
    102a:	81 e0       	ldi	r24, 0x01	; 1
    102c:	08 95       	ret

0000102e <USART_DecodeRxFIFO>:
    102e:	1c c0       	rjmp	.+56     	; 0x1068 <USART_DecodeRxFIFO+0x3a>
    1030:	80 91 00 00 	lds	r24, 0x0000
    1034:	83 34       	cpi	r24, 0x43	; 67
    1036:	69 f0       	breq	.+26     	; 0x1052 <USART_DecodeRxFIFO+0x24>
    1038:	18 f4       	brcc	.+6      	; 0x1040 <USART_DecodeRxFIFO+0x12>
    103a:	81 34       	cpi	r24, 0x41	; 65
    103c:	a9 f4       	brne	.+42     	; 0x1068 <USART_DecodeRxFIFO+0x3a>
    103e:	11 c0       	rjmp	.+34     	; 0x1062 <USART_DecodeRxFIFO+0x34>
    1040:	8d 34       	cpi	r24, 0x4D	; 77
    1042:	19 f0       	breq	.+6      	; 0x104a <USART_DecodeRxFIFO+0x1c>
    1044:	80 35       	cpi	r24, 0x50	; 80
    1046:	81 f4       	brne	.+32     	; 0x1068 <USART_DecodeRxFIFO+0x3a>
    1048:	08 c0       	rjmp	.+16     	; 0x105a <USART_DecodeRxFIFO+0x2c>
    104a:	b3 de       	rcall	.-666    	; 0xdb2 <USART_DecodeMessageRxFIFO>
    104c:	88 23       	and	r24, r24
    104e:	61 f0       	breq	.+24     	; 0x1068 <USART_DecodeRxFIFO+0x3a>
    1050:	08 95       	ret
    1052:	21 df       	rcall	.-446    	; 0xe96 <USART_DecodeCommandRxFIFO>
    1054:	88 23       	and	r24, r24
    1056:	41 f0       	breq	.+16     	; 0x1068 <USART_DecodeRxFIFO+0x3a>
    1058:	08 95       	ret
    105a:	6d df       	rcall	.-294    	; 0xf36 <USART_DecodeParametersRxFIFO>
    105c:	88 23       	and	r24, r24
    105e:	21 f0       	breq	.+8      	; 0x1068 <USART_DecodeRxFIFO+0x3a>
    1060:	08 95       	ret
    1062:	ba df       	rcall	.-140    	; 0xfd8 <USART_DecodeAutonomRxFIFO>
    1064:	81 11       	cpse	r24, r1
    1066:	09 c0       	rjmp	.+18     	; 0x107a <USART_DecodeRxFIFO+0x4c>
    1068:	60 e0       	ldi	r22, 0x00	; 0
    106a:	70 e0       	ldi	r23, 0x00	; 0
    106c:	80 91 08 11 	lds	r24, 0x1108
    1070:	90 91 09 11 	lds	r25, 0x1109
    1074:	99 d8       	rcall	.-3790   	; 0x1a8 <FifoRead>
    1076:	88 23       	and	r24, r24
    1078:	d9 f2       	breq	.-74     	; 0x1030 <USART_DecodeRxFIFO+0x2>
    107a:	08 95       	ret

0000107c <__vector_20>:
}


ISR (USART0_RX_vect)
{
    107c:	1f 92       	push	r1
    107e:	0f 92       	push	r0
    1080:	0f b6       	in	r0, 0x3f	; 63
    1082:	0f 92       	push	r0
    1084:	11 24       	eor	r1, r1
    1086:	0b b6       	in	r0, 0x3b	; 59
    1088:	0f 92       	push	r0
    108a:	ef 92       	push	r14
    108c:	ff 92       	push	r15
    108e:	0f 93       	push	r16
    1090:	1f 93       	push	r17
    1092:	2f 93       	push	r18
    1094:	3f 93       	push	r19
    1096:	4f 93       	push	r20
    1098:	5f 93       	push	r21
    109a:	6f 93       	push	r22
    109c:	7f 93       	push	r23
    109e:	8f 93       	push	r24
    10a0:	9f 93       	push	r25
    10a2:	af 93       	push	r26
    10a4:	bf 93       	push	r27
    10a6:	cf 93       	push	r28
    10a8:	df 93       	push	r29
    10aa:	ef 93       	push	r30
    10ac:	ff 93       	push	r31
	uint8_t data;
	data = UDR0; // read data from buffer TODO: add check for overflow
    10ae:	20 91 c6 00 	lds	r18, 0x00C6
	
	
	
	if(data == 0x7e)
    10b2:	2e 37       	cpi	r18, 0x7E	; 126
    10b4:	09 f0       	breq	.+2      	; 0x10b8 <__vector_20+0x3c>
    10b6:	3d c0       	rjmp	.+122    	; 0x1132 <__vector_20+0xb6>
	{
		if(gRxBufferIndex >= 4 || gRxBufferIndex == gRxBuffer[1] + 4) //TODO: add crc check
    10b8:	80 91 d0 22 	lds	r24, 0x22D0
    10bc:	90 91 d1 22 	lds	r25, 0x22D1
    10c0:	84 30       	cpi	r24, 0x04	; 4
    10c2:	91 05       	cpc	r25, r1
    10c4:	40 f4       	brcc	.+16     	; 0x10d6 <__vector_20+0x5a>
    10c6:	20 91 01 24 	lds	r18, 0x2401
    10ca:	30 e0       	ldi	r19, 0x00	; 0
    10cc:	2c 5f       	subi	r18, 0xFC	; 252
    10ce:	3f 4f       	sbci	r19, 0xFF	; 255
    10d0:	82 17       	cp	r24, r18
    10d2:	93 07       	cpc	r25, r19
    10d4:	49 f5       	brne	.+82     	; 0x1128 <__vector_20+0xac>
		{
			if(gInvertNextFlag)
    10d6:	80 91 ce 22 	lds	r24, 0x22CE
    10da:	90 91 cf 22 	lds	r25, 0x22CF
    10de:	89 2b       	or	r24, r25
    10e0:	21 f0       	breq	.+8      	; 0x10ea <__vector_20+0x6e>
			{
				data = (1<<5)^data;
				gInvertNextFlag = 0;
    10e2:	10 92 cf 22 	sts	0x22CF, r1
    10e6:	10 92 ce 22 	sts	0x22CE, r1
    10ea:	00 e0       	ldi	r16, 0x00	; 0
    10ec:	14 e2       	ldi	r17, 0x24	; 36
			}
			
			//USART_Bounce();
			
			// Add packet (no crc) to fifo-buffer to cue it for decoding
			for(int i = 0; i < gRxBuffer[1] + 2; ++i)
    10ee:	c0 e0       	ldi	r28, 0x00	; 0
    10f0:	d0 e0       	ldi	r29, 0x00	; 0
    10f2:	0f 2e       	mov	r0, r31
    10f4:	f1 e0       	ldi	r31, 0x01	; 1
    10f6:	ef 2e       	mov	r14, r31
    10f8:	f4 e2       	ldi	r31, 0x24	; 36
    10fa:	ff 2e       	mov	r15, r31
    10fc:	f0 2d       	mov	r31, r0
			{
				if(FifoWrite(gRxFIFO, gRxBuffer[i]))
    10fe:	f8 01       	movw	r30, r16
    1100:	61 91       	ld	r22, Z+
    1102:	8f 01       	movw	r16, r30
    1104:	80 91 08 11 	lds	r24, 0x1108
    1108:	90 91 09 11 	lds	r25, 0x1109
    110c:	2d d8       	rcall	.-4006   	; 0x168 <FifoWrite>
    110e:	88 23       	and	r24, r24
    1110:	19 f0       	breq	.+6      	; 0x1118 <__vector_20+0x9c>
				{
					USART_SendMessage("U_FIFO-full");
    1112:	8c eb       	ldi	r24, 0xBC	; 188
    1114:	92 e2       	ldi	r25, 0x22	; 34
    1116:	02 de       	rcall	.-1020   	; 0xd1c <USART_SendMessage>
			}
			
			//USART_Bounce();
			
			// Add packet (no crc) to fifo-buffer to cue it for decoding
			for(int i = 0; i < gRxBuffer[1] + 2; ++i)
    1118:	21 96       	adiw	r28, 0x01	; 1
    111a:	f7 01       	movw	r30, r14
    111c:	80 81       	ld	r24, Z
    111e:	90 e0       	ldi	r25, 0x00	; 0
    1120:	02 96       	adiw	r24, 0x02	; 2
    1122:	c8 17       	cp	r28, r24
    1124:	d9 07       	cpc	r29, r25
    1126:	5c f3       	brlt	.-42     	; 0x10fe <__vector_20+0x82>
					USART_SendMessage("U_FIFO-full");
				}
			}
		}
		
		gRxBufferIndex = 0; // always reset buffer index when frame delimiter (0x7e) is read
    1128:	10 92 d1 22 	sts	0x22D1, r1
    112c:	10 92 d0 22 	sts	0x22D0, r1
    1130:	16 c0       	rjmp	.+44     	; 0x115e <__vector_20+0xe2>
		
	}else if(data == 0x7d)
    1132:	2d 37       	cpi	r18, 0x7D	; 125
    1134:	39 f4       	brne	.+14     	; 0x1144 <__vector_20+0xc8>
	{
		gInvertNextFlag = 1;
    1136:	81 e0       	ldi	r24, 0x01	; 1
    1138:	90 e0       	ldi	r25, 0x00	; 0
    113a:	90 93 cf 22 	sts	0x22CF, r25
    113e:	80 93 ce 22 	sts	0x22CE, r24
    1142:	0d c0       	rjmp	.+26     	; 0x115e <__vector_20+0xe2>
	}else
	{
		gRxBuffer[gRxBufferIndex] = data;
    1144:	80 91 d0 22 	lds	r24, 0x22D0
    1148:	90 91 d1 22 	lds	r25, 0x22D1
    114c:	fc 01       	movw	r30, r24
    114e:	e0 50       	subi	r30, 0x00	; 0
    1150:	fc 4d       	sbci	r31, 0xDC	; 220
    1152:	20 83       	st	Z, r18
		++gRxBufferIndex;
    1154:	01 96       	adiw	r24, 0x01	; 1
    1156:	90 93 d1 22 	sts	0x22D1, r25
    115a:	80 93 d0 22 	sts	0x22D0, r24
	}
	
	
}
    115e:	ff 91       	pop	r31
    1160:	ef 91       	pop	r30
    1162:	df 91       	pop	r29
    1164:	cf 91       	pop	r28
    1166:	bf 91       	pop	r27
    1168:	af 91       	pop	r26
    116a:	9f 91       	pop	r25
    116c:	8f 91       	pop	r24
    116e:	7f 91       	pop	r23
    1170:	6f 91       	pop	r22
    1172:	5f 91       	pop	r21
    1174:	4f 91       	pop	r20
    1176:	3f 91       	pop	r19
    1178:	2f 91       	pop	r18
    117a:	1f 91       	pop	r17
    117c:	0f 91       	pop	r16
    117e:	ff 90       	pop	r15
    1180:	ef 90       	pop	r14
    1182:	0f 90       	pop	r0
    1184:	0b be       	out	0x3b, r0	; 59
    1186:	0f 90       	pop	r0
    1188:	0f be       	out	0x3f, r0	; 63
    118a:	0f 90       	pop	r0
    118c:	1f 90       	pop	r1
    118e:	18 95       	reti

00001190 <__fixunssfsi>:
    1190:	70 d0       	rcall	.+224    	; 0x1272 <__fp_splitA>
    1192:	88 f0       	brcs	.+34     	; 0x11b6 <__fixunssfsi+0x26>
    1194:	9f 57       	subi	r25, 0x7F	; 127
    1196:	90 f0       	brcs	.+36     	; 0x11bc <__fixunssfsi+0x2c>
    1198:	b9 2f       	mov	r27, r25
    119a:	99 27       	eor	r25, r25
    119c:	b7 51       	subi	r27, 0x17	; 23
    119e:	a0 f0       	brcs	.+40     	; 0x11c8 <__fixunssfsi+0x38>
    11a0:	d1 f0       	breq	.+52     	; 0x11d6 <__fixunssfsi+0x46>
    11a2:	66 0f       	add	r22, r22
    11a4:	77 1f       	adc	r23, r23
    11a6:	88 1f       	adc	r24, r24
    11a8:	99 1f       	adc	r25, r25
    11aa:	1a f0       	brmi	.+6      	; 0x11b2 <__fixunssfsi+0x22>
    11ac:	ba 95       	dec	r27
    11ae:	c9 f7       	brne	.-14     	; 0x11a2 <__fixunssfsi+0x12>
    11b0:	12 c0       	rjmp	.+36     	; 0x11d6 <__fixunssfsi+0x46>
    11b2:	b1 30       	cpi	r27, 0x01	; 1
    11b4:	81 f0       	breq	.+32     	; 0x11d6 <__fixunssfsi+0x46>
    11b6:	77 d0       	rcall	.+238    	; 0x12a6 <__fp_zero>
    11b8:	b1 e0       	ldi	r27, 0x01	; 1
    11ba:	08 95       	ret
    11bc:	74 c0       	rjmp	.+232    	; 0x12a6 <__fp_zero>
    11be:	67 2f       	mov	r22, r23
    11c0:	78 2f       	mov	r23, r24
    11c2:	88 27       	eor	r24, r24
    11c4:	b8 5f       	subi	r27, 0xF8	; 248
    11c6:	39 f0       	breq	.+14     	; 0x11d6 <__fixunssfsi+0x46>
    11c8:	b9 3f       	cpi	r27, 0xF9	; 249
    11ca:	cc f3       	brlt	.-14     	; 0x11be <__fixunssfsi+0x2e>
    11cc:	86 95       	lsr	r24
    11ce:	77 95       	ror	r23
    11d0:	67 95       	ror	r22
    11d2:	b3 95       	inc	r27
    11d4:	d9 f7       	brne	.-10     	; 0x11cc <__fixunssfsi+0x3c>
    11d6:	3e f4       	brtc	.+14     	; 0x11e6 <__fixunssfsi+0x56>
    11d8:	90 95       	com	r25
    11da:	80 95       	com	r24
    11dc:	70 95       	com	r23
    11de:	61 95       	neg	r22
    11e0:	7f 4f       	sbci	r23, 0xFF	; 255
    11e2:	8f 4f       	sbci	r24, 0xFF	; 255
    11e4:	9f 4f       	sbci	r25, 0xFF	; 255
    11e6:	08 95       	ret

000011e8 <__floatunsisf>:
    11e8:	e8 94       	clt
    11ea:	09 c0       	rjmp	.+18     	; 0x11fe <__floatsisf+0x12>

000011ec <__floatsisf>:
    11ec:	97 fb       	bst	r25, 7
    11ee:	3e f4       	brtc	.+14     	; 0x11fe <__floatsisf+0x12>
    11f0:	90 95       	com	r25
    11f2:	80 95       	com	r24
    11f4:	70 95       	com	r23
    11f6:	61 95       	neg	r22
    11f8:	7f 4f       	sbci	r23, 0xFF	; 255
    11fa:	8f 4f       	sbci	r24, 0xFF	; 255
    11fc:	9f 4f       	sbci	r25, 0xFF	; 255
    11fe:	99 23       	and	r25, r25
    1200:	a9 f0       	breq	.+42     	; 0x122c <__floatsisf+0x40>
    1202:	f9 2f       	mov	r31, r25
    1204:	96 e9       	ldi	r25, 0x96	; 150
    1206:	bb 27       	eor	r27, r27
    1208:	93 95       	inc	r25
    120a:	f6 95       	lsr	r31
    120c:	87 95       	ror	r24
    120e:	77 95       	ror	r23
    1210:	67 95       	ror	r22
    1212:	b7 95       	ror	r27
    1214:	f1 11       	cpse	r31, r1
    1216:	f8 cf       	rjmp	.-16     	; 0x1208 <__floatsisf+0x1c>
    1218:	fa f4       	brpl	.+62     	; 0x1258 <__floatsisf+0x6c>
    121a:	bb 0f       	add	r27, r27
    121c:	11 f4       	brne	.+4      	; 0x1222 <__floatsisf+0x36>
    121e:	60 ff       	sbrs	r22, 0
    1220:	1b c0       	rjmp	.+54     	; 0x1258 <__floatsisf+0x6c>
    1222:	6f 5f       	subi	r22, 0xFF	; 255
    1224:	7f 4f       	sbci	r23, 0xFF	; 255
    1226:	8f 4f       	sbci	r24, 0xFF	; 255
    1228:	9f 4f       	sbci	r25, 0xFF	; 255
    122a:	16 c0       	rjmp	.+44     	; 0x1258 <__floatsisf+0x6c>
    122c:	88 23       	and	r24, r24
    122e:	11 f0       	breq	.+4      	; 0x1234 <__floatsisf+0x48>
    1230:	96 e9       	ldi	r25, 0x96	; 150
    1232:	11 c0       	rjmp	.+34     	; 0x1256 <__floatsisf+0x6a>
    1234:	77 23       	and	r23, r23
    1236:	21 f0       	breq	.+8      	; 0x1240 <__floatsisf+0x54>
    1238:	9e e8       	ldi	r25, 0x8E	; 142
    123a:	87 2f       	mov	r24, r23
    123c:	76 2f       	mov	r23, r22
    123e:	05 c0       	rjmp	.+10     	; 0x124a <__floatsisf+0x5e>
    1240:	66 23       	and	r22, r22
    1242:	71 f0       	breq	.+28     	; 0x1260 <__floatsisf+0x74>
    1244:	96 e8       	ldi	r25, 0x86	; 134
    1246:	86 2f       	mov	r24, r22
    1248:	70 e0       	ldi	r23, 0x00	; 0
    124a:	60 e0       	ldi	r22, 0x00	; 0
    124c:	2a f0       	brmi	.+10     	; 0x1258 <__floatsisf+0x6c>
    124e:	9a 95       	dec	r25
    1250:	66 0f       	add	r22, r22
    1252:	77 1f       	adc	r23, r23
    1254:	88 1f       	adc	r24, r24
    1256:	da f7       	brpl	.-10     	; 0x124e <__floatsisf+0x62>
    1258:	88 0f       	add	r24, r24
    125a:	96 95       	lsr	r25
    125c:	87 95       	ror	r24
    125e:	97 f9       	bld	r25, 7
    1260:	08 95       	ret

00001262 <__fp_split3>:
    1262:	57 fd       	sbrc	r21, 7
    1264:	90 58       	subi	r25, 0x80	; 128
    1266:	44 0f       	add	r20, r20
    1268:	55 1f       	adc	r21, r21
    126a:	59 f0       	breq	.+22     	; 0x1282 <__fp_splitA+0x10>
    126c:	5f 3f       	cpi	r21, 0xFF	; 255
    126e:	71 f0       	breq	.+28     	; 0x128c <__fp_splitA+0x1a>
    1270:	47 95       	ror	r20

00001272 <__fp_splitA>:
    1272:	88 0f       	add	r24, r24
    1274:	97 fb       	bst	r25, 7
    1276:	99 1f       	adc	r25, r25
    1278:	61 f0       	breq	.+24     	; 0x1292 <__fp_splitA+0x20>
    127a:	9f 3f       	cpi	r25, 0xFF	; 255
    127c:	79 f0       	breq	.+30     	; 0x129c <__fp_splitA+0x2a>
    127e:	87 95       	ror	r24
    1280:	08 95       	ret
    1282:	12 16       	cp	r1, r18
    1284:	13 06       	cpc	r1, r19
    1286:	14 06       	cpc	r1, r20
    1288:	55 1f       	adc	r21, r21
    128a:	f2 cf       	rjmp	.-28     	; 0x1270 <__fp_split3+0xe>
    128c:	46 95       	lsr	r20
    128e:	f1 df       	rcall	.-30     	; 0x1272 <__fp_splitA>
    1290:	08 c0       	rjmp	.+16     	; 0x12a2 <__fp_splitA+0x30>
    1292:	16 16       	cp	r1, r22
    1294:	17 06       	cpc	r1, r23
    1296:	18 06       	cpc	r1, r24
    1298:	99 1f       	adc	r25, r25
    129a:	f1 cf       	rjmp	.-30     	; 0x127e <__fp_splitA+0xc>
    129c:	86 95       	lsr	r24
    129e:	71 05       	cpc	r23, r1
    12a0:	61 05       	cpc	r22, r1
    12a2:	08 94       	sec
    12a4:	08 95       	ret

000012a6 <__fp_zero>:
    12a6:	e8 94       	clt

000012a8 <__fp_szero>:
    12a8:	bb 27       	eor	r27, r27
    12aa:	66 27       	eor	r22, r22
    12ac:	77 27       	eor	r23, r23
    12ae:	cb 01       	movw	r24, r22
    12b0:	97 f9       	bld	r25, 7
    12b2:	08 95       	ret

000012b4 <__mulsf3>:
    12b4:	0b d0       	rcall	.+22     	; 0x12cc <__mulsf3x>
    12b6:	78 c0       	rjmp	.+240    	; 0x13a8 <__fp_round>
    12b8:	69 d0       	rcall	.+210    	; 0x138c <__fp_pscA>
    12ba:	28 f0       	brcs	.+10     	; 0x12c6 <__mulsf3+0x12>
    12bc:	6e d0       	rcall	.+220    	; 0x139a <__fp_pscB>
    12be:	18 f0       	brcs	.+6      	; 0x12c6 <__mulsf3+0x12>
    12c0:	95 23       	and	r25, r21
    12c2:	09 f0       	breq	.+2      	; 0x12c6 <__mulsf3+0x12>
    12c4:	5a c0       	rjmp	.+180    	; 0x137a <__fp_inf>
    12c6:	5f c0       	rjmp	.+190    	; 0x1386 <__fp_nan>
    12c8:	11 24       	eor	r1, r1
    12ca:	ee cf       	rjmp	.-36     	; 0x12a8 <__fp_szero>

000012cc <__mulsf3x>:
    12cc:	ca df       	rcall	.-108    	; 0x1262 <__fp_split3>
    12ce:	a0 f3       	brcs	.-24     	; 0x12b8 <__mulsf3+0x4>

000012d0 <__mulsf3_pse>:
    12d0:	95 9f       	mul	r25, r21
    12d2:	d1 f3       	breq	.-12     	; 0x12c8 <__mulsf3+0x14>
    12d4:	95 0f       	add	r25, r21
    12d6:	50 e0       	ldi	r21, 0x00	; 0
    12d8:	55 1f       	adc	r21, r21
    12da:	62 9f       	mul	r22, r18
    12dc:	f0 01       	movw	r30, r0
    12de:	72 9f       	mul	r23, r18
    12e0:	bb 27       	eor	r27, r27
    12e2:	f0 0d       	add	r31, r0
    12e4:	b1 1d       	adc	r27, r1
    12e6:	63 9f       	mul	r22, r19
    12e8:	aa 27       	eor	r26, r26
    12ea:	f0 0d       	add	r31, r0
    12ec:	b1 1d       	adc	r27, r1
    12ee:	aa 1f       	adc	r26, r26
    12f0:	64 9f       	mul	r22, r20
    12f2:	66 27       	eor	r22, r22
    12f4:	b0 0d       	add	r27, r0
    12f6:	a1 1d       	adc	r26, r1
    12f8:	66 1f       	adc	r22, r22
    12fa:	82 9f       	mul	r24, r18
    12fc:	22 27       	eor	r18, r18
    12fe:	b0 0d       	add	r27, r0
    1300:	a1 1d       	adc	r26, r1
    1302:	62 1f       	adc	r22, r18
    1304:	73 9f       	mul	r23, r19
    1306:	b0 0d       	add	r27, r0
    1308:	a1 1d       	adc	r26, r1
    130a:	62 1f       	adc	r22, r18
    130c:	83 9f       	mul	r24, r19
    130e:	a0 0d       	add	r26, r0
    1310:	61 1d       	adc	r22, r1
    1312:	22 1f       	adc	r18, r18
    1314:	74 9f       	mul	r23, r20
    1316:	33 27       	eor	r19, r19
    1318:	a0 0d       	add	r26, r0
    131a:	61 1d       	adc	r22, r1
    131c:	23 1f       	adc	r18, r19
    131e:	84 9f       	mul	r24, r20
    1320:	60 0d       	add	r22, r0
    1322:	21 1d       	adc	r18, r1
    1324:	82 2f       	mov	r24, r18
    1326:	76 2f       	mov	r23, r22
    1328:	6a 2f       	mov	r22, r26
    132a:	11 24       	eor	r1, r1
    132c:	9f 57       	subi	r25, 0x7F	; 127
    132e:	50 40       	sbci	r21, 0x00	; 0
    1330:	8a f0       	brmi	.+34     	; 0x1354 <__mulsf3_pse+0x84>
    1332:	e1 f0       	breq	.+56     	; 0x136c <__mulsf3_pse+0x9c>
    1334:	88 23       	and	r24, r24
    1336:	4a f0       	brmi	.+18     	; 0x134a <__mulsf3_pse+0x7a>
    1338:	ee 0f       	add	r30, r30
    133a:	ff 1f       	adc	r31, r31
    133c:	bb 1f       	adc	r27, r27
    133e:	66 1f       	adc	r22, r22
    1340:	77 1f       	adc	r23, r23
    1342:	88 1f       	adc	r24, r24
    1344:	91 50       	subi	r25, 0x01	; 1
    1346:	50 40       	sbci	r21, 0x00	; 0
    1348:	a9 f7       	brne	.-22     	; 0x1334 <__mulsf3_pse+0x64>
    134a:	9e 3f       	cpi	r25, 0xFE	; 254
    134c:	51 05       	cpc	r21, r1
    134e:	70 f0       	brcs	.+28     	; 0x136c <__mulsf3_pse+0x9c>
    1350:	14 c0       	rjmp	.+40     	; 0x137a <__fp_inf>
    1352:	aa cf       	rjmp	.-172    	; 0x12a8 <__fp_szero>
    1354:	5f 3f       	cpi	r21, 0xFF	; 255
    1356:	ec f3       	brlt	.-6      	; 0x1352 <__mulsf3_pse+0x82>
    1358:	98 3e       	cpi	r25, 0xE8	; 232
    135a:	dc f3       	brlt	.-10     	; 0x1352 <__mulsf3_pse+0x82>
    135c:	86 95       	lsr	r24
    135e:	77 95       	ror	r23
    1360:	67 95       	ror	r22
    1362:	b7 95       	ror	r27
    1364:	f7 95       	ror	r31
    1366:	e7 95       	ror	r30
    1368:	9f 5f       	subi	r25, 0xFF	; 255
    136a:	c1 f7       	brne	.-16     	; 0x135c <__mulsf3_pse+0x8c>
    136c:	fe 2b       	or	r31, r30
    136e:	88 0f       	add	r24, r24
    1370:	91 1d       	adc	r25, r1
    1372:	96 95       	lsr	r25
    1374:	87 95       	ror	r24
    1376:	97 f9       	bld	r25, 7
    1378:	08 95       	ret

0000137a <__fp_inf>:
    137a:	97 f9       	bld	r25, 7
    137c:	9f 67       	ori	r25, 0x7F	; 127
    137e:	80 e8       	ldi	r24, 0x80	; 128
    1380:	70 e0       	ldi	r23, 0x00	; 0
    1382:	60 e0       	ldi	r22, 0x00	; 0
    1384:	08 95       	ret

00001386 <__fp_nan>:
    1386:	9f ef       	ldi	r25, 0xFF	; 255
    1388:	80 ec       	ldi	r24, 0xC0	; 192
    138a:	08 95       	ret

0000138c <__fp_pscA>:
    138c:	00 24       	eor	r0, r0
    138e:	0a 94       	dec	r0
    1390:	16 16       	cp	r1, r22
    1392:	17 06       	cpc	r1, r23
    1394:	18 06       	cpc	r1, r24
    1396:	09 06       	cpc	r0, r25
    1398:	08 95       	ret

0000139a <__fp_pscB>:
    139a:	00 24       	eor	r0, r0
    139c:	0a 94       	dec	r0
    139e:	12 16       	cp	r1, r18
    13a0:	13 06       	cpc	r1, r19
    13a2:	14 06       	cpc	r1, r20
    13a4:	05 06       	cpc	r0, r21
    13a6:	08 95       	ret

000013a8 <__fp_round>:
    13a8:	09 2e       	mov	r0, r25
    13aa:	03 94       	inc	r0
    13ac:	00 0c       	add	r0, r0
    13ae:	11 f4       	brne	.+4      	; 0x13b4 <__fp_round+0xc>
    13b0:	88 23       	and	r24, r24
    13b2:	52 f0       	brmi	.+20     	; 0x13c8 <__fp_round+0x20>
    13b4:	bb 0f       	add	r27, r27
    13b6:	40 f4       	brcc	.+16     	; 0x13c8 <__fp_round+0x20>
    13b8:	bf 2b       	or	r27, r31
    13ba:	11 f4       	brne	.+4      	; 0x13c0 <__fp_round+0x18>
    13bc:	60 ff       	sbrs	r22, 0
    13be:	04 c0       	rjmp	.+8      	; 0x13c8 <__fp_round+0x20>
    13c0:	6f 5f       	subi	r22, 0xFF	; 255
    13c2:	7f 4f       	sbci	r23, 0xFF	; 255
    13c4:	8f 4f       	sbci	r24, 0xFF	; 255
    13c6:	9f 4f       	sbci	r25, 0xFF	; 255
    13c8:	08 95       	ret

000013ca <_exit>:
    13ca:	f8 94       	cli

000013cc <__stop_program>:
    13cc:	ff cf       	rjmp	.-2      	; 0x13cc <__stop_program>
