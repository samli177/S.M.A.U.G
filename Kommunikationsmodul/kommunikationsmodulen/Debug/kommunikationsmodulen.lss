
kommunikationsmodulen.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000021ba  00800100  000013da  0000146e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000013da  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000641  008022ba  008022ba  00003628  2**0
                  ALLOC
  3 .stab         00001674  00000000  00000000  00003628  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000598  00000000  00000000  00004c9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00005234  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000002a8  00000000  00000000  00005263  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000243e  00000000  00000000  0000550b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000095e  00000000  00000000  00007949  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000019ca  00000000  00000000  000082a7  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000007c0  00000000  00000000  00009c74  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000008b9  00000000  00000000  0000a434  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001906  00000000  00000000  0000aced  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000002a0  00000000  00000000  0000c5f3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	61 c0       	rjmp	.+194    	; 0xc8 <__bad_interrupt>
       6:	00 00       	nop
       8:	5f c0       	rjmp	.+190    	; 0xc8 <__bad_interrupt>
       a:	00 00       	nop
       c:	5d c0       	rjmp	.+186    	; 0xc8 <__bad_interrupt>
       e:	00 00       	nop
      10:	5b c0       	rjmp	.+182    	; 0xc8 <__bad_interrupt>
      12:	00 00       	nop
      14:	59 c0       	rjmp	.+178    	; 0xc8 <__bad_interrupt>
      16:	00 00       	nop
      18:	57 c0       	rjmp	.+174    	; 0xc8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	55 c0       	rjmp	.+170    	; 0xc8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	53 c0       	rjmp	.+166    	; 0xc8 <__bad_interrupt>
      22:	00 00       	nop
      24:	51 c0       	rjmp	.+162    	; 0xc8 <__bad_interrupt>
      26:	00 00       	nop
      28:	4f c0       	rjmp	.+158    	; 0xc8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4d c0       	rjmp	.+154    	; 0xc8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4b c0       	rjmp	.+150    	; 0xc8 <__bad_interrupt>
      32:	00 00       	nop
      34:	fa c0       	rjmp	.+500    	; 0x22a <__vector_13>
      36:	00 00       	nop
      38:	47 c0       	rjmp	.+142    	; 0xc8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	45 c0       	rjmp	.+138    	; 0xc8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	43 c0       	rjmp	.+134    	; 0xc8 <__bad_interrupt>
      42:	00 00       	nop
      44:	41 c0       	rjmp	.+130    	; 0xc8 <__bad_interrupt>
      46:	00 00       	nop
      48:	3f c0       	rjmp	.+126    	; 0xc8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3d c0       	rjmp	.+122    	; 0xc8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	0c 94 44 08 	jmp	0x1088	; 0x1088 <__vector_20>
      54:	39 c0       	rjmp	.+114    	; 0xc8 <__bad_interrupt>
      56:	00 00       	nop
      58:	37 c0       	rjmp	.+110    	; 0xc8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	35 c0       	rjmp	.+106    	; 0xc8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	33 c0       	rjmp	.+102    	; 0xc8 <__bad_interrupt>
      62:	00 00       	nop
      64:	31 c0       	rjmp	.+98     	; 0xc8 <__bad_interrupt>
      66:	00 00       	nop
      68:	9d c3       	rjmp	.+1850   	; 0x7a4 <__vector_26>
      6a:	00 00       	nop
      6c:	2d c0       	rjmp	.+90     	; 0xc8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2b c0       	rjmp	.+86     	; 0xc8 <__bad_interrupt>
      72:	00 00       	nop
      74:	29 c0       	rjmp	.+82     	; 0xc8 <__bad_interrupt>
      76:	00 00       	nop
      78:	27 c0       	rjmp	.+78     	; 0xc8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	25 c0       	rjmp	.+74     	; 0xc8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	e2 c0       	rjmp	.+452    	; 0x246 <__vector_32>
      82:	00 00       	nop
      84:	21 c0       	rjmp	.+66     	; 0xc8 <__bad_interrupt>
      86:	00 00       	nop
      88:	1f c0       	rjmp	.+62     	; 0xc8 <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e4       	ldi	r29, 0x40	; 64
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	12 e2       	ldi	r17, 0x22	; 34
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	ea ed       	ldi	r30, 0xDA	; 218
      a0:	f3 e1       	ldi	r31, 0x13	; 19
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	aa 3b       	cpi	r26, 0xBA	; 186
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	28 e2       	ldi	r18, 0x28	; 40
      b4:	aa eb       	ldi	r26, 0xBA	; 186
      b6:	b2 e2       	ldi	r27, 0x22	; 34
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	ab 3f       	cpi	r26, 0xFB	; 251
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	a2 d0       	rcall	.+324    	; 0x208 <main>
      c4:	0c 94 eb 09 	jmp	0x13d6	; 0x13d6 <_exit>

000000c8 <__bad_interrupt>:
      c8:	9b cf       	rjmp	.-202    	; 0x0 <__vectors>

000000ca <set_counter_1>:
	TCNT3 = 0;
}

void set_counter_1(uint16_t delay)
{
	delay = 18.000 * delay;
      ca:	bc 01       	movw	r22, r24
      cc:	80 e0       	ldi	r24, 0x00	; 0
      ce:	90 e0       	ldi	r25, 0x00	; 0
      d0:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <__floatunsisf>
      d4:	20 e0       	ldi	r18, 0x00	; 0
      d6:	30 e0       	ldi	r19, 0x00	; 0
      d8:	40 e9       	ldi	r20, 0x90	; 144
      da:	51 e4       	ldi	r21, 0x41	; 65
      dc:	0e 94 60 09 	call	0x12c0	; 0x12c0 <__mulsf3>
      e0:	0e 94 ce 08 	call	0x119c	; 0x119c <__fixunssfsi>
	OCR1A = delay;
      e4:	70 93 89 00 	sts	0x0089, r23
      e8:	60 93 88 00 	sts	0x0088, r22
      ec:	08 95       	ret

000000ee <set_counter_2>:
}

void set_counter_2(uint16_t delay)
{
	delay = 18.000 * delay;
      ee:	bc 01       	movw	r22, r24
      f0:	80 e0       	ldi	r24, 0x00	; 0
      f2:	90 e0       	ldi	r25, 0x00	; 0
      f4:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <__floatunsisf>
      f8:	20 e0       	ldi	r18, 0x00	; 0
      fa:	30 e0       	ldi	r19, 0x00	; 0
      fc:	40 e9       	ldi	r20, 0x90	; 144
      fe:	51 e4       	ldi	r21, 0x41	; 65
     100:	0e 94 60 09 	call	0x12c0	; 0x12c0 <__mulsf3>
     104:	0e 94 ce 08 	call	0x119c	; 0x119c <__fixunssfsi>
	OCR3A = delay;
     108:	70 93 99 00 	sts	0x0099, r23
     10c:	60 93 98 00 	sts	0x0098, r22
     110:	08 95       	ret

00000112 <init_counters>:

//---------------------------------------COUNTERS/TIMERS-----------
void init_counters()
{
	// WGMn3:0 = 4 (OCRnA) or 12 (OCRn), where top value is read from.
	TCCR1B |= 0b00000101; // clock 1, prescaler 1024
     112:	e1 e8       	ldi	r30, 0x81	; 129
     114:	f0 e0       	ldi	r31, 0x00	; 0
     116:	80 81       	ld	r24, Z
     118:	85 60       	ori	r24, 0x05	; 5
     11a:	80 83       	st	Z, r24
	TCCR3B |= 0b00000101; // clock 2, prescaler 1024
     11c:	e1 e9       	ldi	r30, 0x91	; 145
     11e:	f0 e0       	ldi	r31, 0x00	; 0
     120:	80 81       	ld	r24, Z
     122:	85 60       	ori	r24, 0x05	; 5
     124:	80 83       	st	Z, r24
	
	// standardvalue for interrupt is 1000ms
	set_counter_1(1000);
     126:	88 ee       	ldi	r24, 0xE8	; 232
     128:	93 e0       	ldi	r25, 0x03	; 3
     12a:	cf df       	rcall	.-98     	; 0xca <set_counter_1>
	set_counter_2(1000);
     12c:	88 ee       	ldi	r24, 0xE8	; 232
     12e:	93 e0       	ldi	r25, 0x03	; 3
     130:	de df       	rcall	.-68     	; 0xee <set_counter_2>
	
	TIMSK1 |= 0b00000010; // Enable interrupts when OCF1A, in TIFR1, is set.
     132:	ef e6       	ldi	r30, 0x6F	; 111
     134:	f0 e0       	ldi	r31, 0x00	; 0
     136:	80 81       	ld	r24, Z
     138:	82 60       	ori	r24, 0x02	; 2
     13a:	80 83       	st	Z, r24
	TIMSK3 |= 0b00000010; // Enable interrupts when OCF2A, in TIFR2, is set.
     13c:	e1 e7       	ldi	r30, 0x71	; 113
     13e:	f0 e0       	ldi	r31, 0x00	; 0
     140:	80 81       	ld	r24, Z
     142:	82 60       	ori	r24, 0x02	; 2
     144:	80 83       	st	Z, r24
	// OCF1A (or ICFn) Flag, in TIFR1, can be used to generate interrupts.
	TCNT1 = 0;
     146:	10 92 85 00 	sts	0x0085, r1
     14a:	10 92 84 00 	sts	0x0084, r1
	TCNT3 = 0;
     14e:	10 92 95 00 	sts	0x0095, r1
     152:	10 92 94 00 	sts	0x0094, r1
     156:	08 95       	ret

00000158 <FifoDataLength>:

#include <avr/io.h>
#include "fifo.h"

uint8_t FifoDataLength (struct fifo *fifo)
{
     158:	fc 01       	movw	r30, r24
	return (fifo->write - fifo->read) & (fifo->size -1);
     15a:	90 81       	ld	r25, Z
     15c:	91 50       	subi	r25, 0x01	; 1
     15e:	84 81       	ldd	r24, Z+4	; 0x04
     160:	22 81       	ldd	r18, Z+2	; 0x02
     162:	82 1b       	sub	r24, r18
};
     164:	89 23       	and	r24, r25
     166:	08 95       	ret

00000168 <FifoWrite>:

uint8_t FifoWrite (struct fifo *fifo, unsigned char data)
{
     168:	1f 93       	push	r17
     16a:	cf 93       	push	r28
     16c:	df 93       	push	r29
     16e:	ec 01       	movw	r28, r24
     170:	16 2f       	mov	r17, r22
	// fifo full : error
	if (FifoDataLength(fifo) == (fifo->size - 1))
     172:	f2 df       	rcall	.-28     	; 0x158 <FifoDataLength>
     174:	28 81       	ld	r18, Y
     176:	39 81       	ldd	r19, Y+1	; 0x01
     178:	21 50       	subi	r18, 0x01	; 1
     17a:	31 09       	sbc	r19, r1
     17c:	90 e0       	ldi	r25, 0x00	; 0
     17e:	82 17       	cp	r24, r18
     180:	93 07       	cpc	r25, r19
     182:	69 f0       	breq	.+26     	; 0x19e <FifoWrite+0x36>
	{
		return 1;
	}
	// write data & increment write pointer
	fifo->buffer[fifo->write] = data;
     184:	8c 81       	ldd	r24, Y+4	; 0x04
     186:	9d 81       	ldd	r25, Y+5	; 0x05
     188:	fe 01       	movw	r30, r28
     18a:	e8 0f       	add	r30, r24
     18c:	f9 1f       	adc	r31, r25
     18e:	16 83       	std	Z+6, r17	; 0x06
	fifo->write = (fifo->write + 1) & (fifo->size - 1);
     190:	01 96       	adiw	r24, 0x01	; 1
     192:	28 23       	and	r18, r24
     194:	39 23       	and	r19, r25
     196:	3d 83       	std	Y+5, r19	; 0x05
     198:	2c 83       	std	Y+4, r18	; 0x04
	return 0;
     19a:	80 e0       	ldi	r24, 0x00	; 0
     19c:	01 c0       	rjmp	.+2      	; 0x1a0 <FifoWrite+0x38>
uint8_t FifoWrite (struct fifo *fifo, unsigned char data)
{
	// fifo full : error
	if (FifoDataLength(fifo) == (fifo->size - 1))
	{
		return 1;
     19e:	81 e0       	ldi	r24, 0x01	; 1
	}
	// write data & increment write pointer
	fifo->buffer[fifo->write] = data;
	fifo->write = (fifo->write + 1) & (fifo->size - 1);
	return 0;
};
     1a0:	df 91       	pop	r29
     1a2:	cf 91       	pop	r28
     1a4:	1f 91       	pop	r17
     1a6:	08 95       	ret

000001a8 <FifoRead>:


uint8_t FifoRead (struct fifo *fifo, unsigned char *data)
{
     1a8:	0f 93       	push	r16
     1aa:	1f 93       	push	r17
     1ac:	cf 93       	push	r28
     1ae:	df 93       	push	r29
     1b0:	ec 01       	movw	r28, r24
     1b2:	8b 01       	movw	r16, r22
	// fifo empty : error
	if (FifoDataLength(fifo) == 0)
     1b4:	d1 df       	rcall	.-94     	; 0x158 <FifoDataLength>
     1b6:	88 23       	and	r24, r24
     1b8:	a1 f0       	breq	.+40     	; 0x1e2 <FifoRead+0x3a>
	{
		return 1;
	}
	// read data & increment read pointer
	*data = fifo->buffer[fifo->read];
     1ba:	ea 81       	ldd	r30, Y+2	; 0x02
     1bc:	fb 81       	ldd	r31, Y+3	; 0x03
     1be:	ec 0f       	add	r30, r28
     1c0:	fd 1f       	adc	r31, r29
     1c2:	86 81       	ldd	r24, Z+6	; 0x06
     1c4:	f8 01       	movw	r30, r16
     1c6:	80 83       	st	Z, r24
	fifo->read = (fifo->read + 1) & (fifo->size - 1);
     1c8:	28 81       	ld	r18, Y
     1ca:	39 81       	ldd	r19, Y+1	; 0x01
     1cc:	21 50       	subi	r18, 0x01	; 1
     1ce:	31 09       	sbc	r19, r1
     1d0:	8a 81       	ldd	r24, Y+2	; 0x02
     1d2:	9b 81       	ldd	r25, Y+3	; 0x03
     1d4:	01 96       	adiw	r24, 0x01	; 1
     1d6:	82 23       	and	r24, r18
     1d8:	93 23       	and	r25, r19
     1da:	9b 83       	std	Y+3, r25	; 0x03
     1dc:	8a 83       	std	Y+2, r24	; 0x02
	return 0;
     1de:	80 e0       	ldi	r24, 0x00	; 0
     1e0:	01 c0       	rjmp	.+2      	; 0x1e4 <FifoRead+0x3c>
uint8_t FifoRead (struct fifo *fifo, unsigned char *data)
{
	// fifo empty : error
	if (FifoDataLength(fifo) == 0)
	{
		return 1;
     1e2:	81 e0       	ldi	r24, 0x01	; 1
	}
	// read data & increment read pointer
	*data = fifo->buffer[fifo->read];
	fifo->read = (fifo->read + 1) & (fifo->size - 1);
	return 0;
     1e4:	df 91       	pop	r29
     1e6:	cf 91       	pop	r28
     1e8:	1f 91       	pop	r17
     1ea:	0f 91       	pop	r16
     1ec:	08 95       	ret

000001ee <init>:
// --  END MAIN --


void init()
{
	DDRA |= (1<<PORTA0|1<<PORTA1); //set status diodes to outputs
     1ee:	81 b1       	in	r24, 0x01	; 1
     1f0:	83 60       	ori	r24, 0x03	; 3
     1f2:	81 b9       	out	0x01, r24	; 1
	DDRC |= (1<<PORTC6|1<<PORTC7); //set status diodes to outputs
     1f4:	87 b1       	in	r24, 0x07	; 7
     1f6:	80 6c       	ori	r24, 0xC0	; 192
     1f8:	87 b9       	out	0x07, r24	; 7
	USART_init();
     1fa:	90 d4       	rcall	.+2336   	; 0xb1c <USART_init>
	TWI_init(C_ADDRESS);
     1fc:	80 e8       	ldi	r24, 0x80	; 128
     1fe:	cc d0       	rcall	.+408    	; 0x398 <TWI_init>
	init_counters();
     200:	88 df       	rcall	.-240    	; 0x112 <init_counters>
	set_counter_2(2000);
     202:	80 ed       	ldi	r24, 0xD0	; 208
     204:	97 e0       	ldi	r25, 0x07	; 7
     206:	73 cf       	rjmp	.-282    	; 0xee <set_counter_2>

00000208 <main>:

// -- MAIN --

int main(void)
{
	init();
     208:	f2 df       	rcall	.-28     	; 0x1ee <init>
	sei();
     20a:	78 94       	sei
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     20c:	2f ef       	ldi	r18, 0xFF	; 255
     20e:	8f e1       	ldi	r24, 0x1F	; 31
     210:	9c e1       	ldi	r25, 0x1C	; 28
     212:	21 50       	subi	r18, 0x01	; 1
     214:	80 40       	sbci	r24, 0x00	; 0
     216:	90 40       	sbci	r25, 0x00	; 0
     218:	e1 f7       	brne	.-8      	; 0x212 <main+0xa>
     21a:	00 c0       	rjmp	.+0      	; 0x21c <main+0x14>
     21c:	00 00       	nop
	_delay_ms(500);
	while(1)
	{
		//PORTA ^= (1<<PORTA0);
		
		USART_DecodeRxFIFO();
     21e:	07 d7       	rcall	.+3598   	; 0x102e <USART_DecodeRxFIFO>
		if(TWI_sensor_flag())
     220:	16 d2       	rcall	.+1068   	; 0x64e <TWI_sensor_flag>
     222:	81 11       	cpse	r24, r1
		{
			USART_SendSensors();
     224:	7c d5       	rcall	.+2808   	; 0xd1e <USART_SendSensors>
		}
		decode_message_TwiFIFO();
     226:	1d d2       	rcall	.+1082   	; 0x662 <decode_message_TwiFIFO>
		
		// TODO: put this on timer
		//if(TWI_send_status(ST_ADRESS))
			//PORTA ^= (1<<PORTA1);
		//TWI_send_string(S_ADDRESS, "Hejsan lulzi!");
	}
     228:	fa cf       	rjmp	.-12     	; 0x21e <main+0x16>

0000022a <__vector_13>:
}

//Interrupt vectors

ISR(TIMER1_COMPA_vect)
{
     22a:	1f 92       	push	r1
     22c:	0f 92       	push	r0
     22e:	0f b6       	in	r0, 0x3f	; 63
     230:	0f 92       	push	r0
     232:	11 24       	eor	r1, r1
	TCNT1 = 0;
     234:	10 92 85 00 	sts	0x0085, r1
     238:	10 92 84 00 	sts	0x0084, r1
}
     23c:	0f 90       	pop	r0
     23e:	0f be       	out	0x3f, r0	; 63
     240:	0f 90       	pop	r0
     242:	1f 90       	pop	r1
     244:	18 95       	reti

00000246 <__vector_32>:

ISR(TIMER3_COMPA_vect)
{
     246:	1f 92       	push	r1
     248:	0f 92       	push	r0
     24a:	0f b6       	in	r0, 0x3f	; 63
     24c:	0f 92       	push	r0
     24e:	11 24       	eor	r1, r1
	TCNT3 = 0;
     250:	10 92 95 00 	sts	0x0095, r1
     254:	10 92 94 00 	sts	0x0094, r1
     258:	0f 90       	pop	r0
     25a:	0f be       	out	0x3f, r0	; 63
     25c:	0f 90       	pop	r0
     25e:	1f 90       	pop	r1
     260:	18 95       	reti

00000262 <set_twi_reciever_enable>:
     262:	85 e4       	ldi	r24, 0x45	; 69
     264:	80 93 bc 00 	sts	0x00BC, r24
     268:	08 95       	ret

0000026a <clear_int>:
     26a:	81 ec       	ldi	r24, 0xC1	; 193
     26c:	80 93 bc 00 	sts	0x00BC, r24
     270:	08 95       	ret

00000272 <start_bus>:
     272:	84 ea       	ldi	r24, 0xA4	; 164
     274:	80 93 bc 00 	sts	0x00BC, r24
     278:	08 95       	ret

0000027a <stop_bus>:
     27a:	85 ed       	ldi	r24, 0xD5	; 213
     27c:	80 93 bc 00 	sts	0x00BC, r24
     280:	08 95       	ret

00000282 <Error>:
     282:	80 91 b9 00 	lds	r24, 0x00B9
     286:	88 7f       	andi	r24, 0xF8	; 248
     288:	88 33       	cpi	r24, 0x38	; 56
     28a:	09 f0       	breq	.+2      	; 0x28e <Error+0xc>
     28c:	f6 cf       	rjmp	.-20     	; 0x27a <stop_bus>
     28e:	ed cf       	rjmp	.-38     	; 0x26a <clear_int>

00000290 <get_data>:
     290:	80 91 bb 00 	lds	r24, 0x00BB
     294:	08 95       	ret

00000296 <wait_for_bus>:
     296:	ec eb       	ldi	r30, 0xBC	; 188
     298:	f0 e0       	ldi	r31, 0x00	; 0
     29a:	80 81       	ld	r24, Z
     29c:	88 23       	and	r24, r24
     29e:	ec f7       	brge	.-6      	; 0x29a <wait_for_bus+0x4>
     2a0:	08 95       	ret

000002a2 <send_data_and_wait>:
     2a2:	80 93 bb 00 	sts	0x00BB, r24
     2a6:	84 e8       	ldi	r24, 0x84	; 132
     2a8:	80 93 bc 00 	sts	0x00BC, r24
     2ac:	f4 cf       	rjmp	.-24     	; 0x296 <wait_for_bus>

000002ae <stop_twi>:
     2ae:	10 92 d7 23 	sts	0x23D7, r1
     2b2:	10 92 d6 23 	sts	0x23D6, r1
     2b6:	10 92 e1 23 	sts	0x23E1, r1
     2ba:	10 92 e0 23 	sts	0x23E0, r1
     2be:	10 92 cc 23 	sts	0x23CC, r1
     2c2:	10 92 cb 23 	sts	0x23CB, r1
     2c6:	10 92 d1 23 	sts	0x23D1, r1
     2ca:	10 92 d0 23 	sts	0x23D0, r1
     2ce:	10 92 d4 23 	sts	0x23D4, r1
     2d2:	10 92 d3 23 	sts	0x23D3, r1
     2d6:	08 95       	ret

000002d8 <reset_TWI>:
     2d8:	ec eb       	ldi	r30, 0xBC	; 188
     2da:	f0 e0       	ldi	r31, 0x00	; 0
     2dc:	80 81       	ld	r24, Z
     2de:	80 6c       	ori	r24, 0xC0	; 192
     2e0:	80 83       	st	Z, r24
     2e2:	08 95       	ret

000002e4 <get_sensor_from_bus>:
     2e4:	cf 93       	push	r28
     2e6:	df 93       	push	r29
     2e8:	c0 91 e0 23 	lds	r28, 0x23E0
     2ec:	d0 91 e1 23 	lds	r29, 0x23E1
     2f0:	c8 30       	cpi	r28, 0x08	; 8
     2f2:	d1 05       	cpc	r29, r1
     2f4:	91 f4       	brne	.+36     	; 0x31a <get_sensor_from_bus+0x36>
     2f6:	e2 ee       	ldi	r30, 0xE2	; 226
     2f8:	f3 e2       	ldi	r31, 0x23	; 35
     2fa:	aa ee       	ldi	r26, 0xEA	; 234
     2fc:	b3 e2       	ldi	r27, 0x23	; 35
     2fe:	8a ee       	ldi	r24, 0xEA	; 234
     300:	93 e2       	ldi	r25, 0x23	; 35
     302:	21 91       	ld	r18, Z+
     304:	2d 93       	st	X+, r18
     306:	e8 17       	cp	r30, r24
     308:	f9 07       	cpc	r31, r25
     30a:	d9 f7       	brne	.-10     	; 0x302 <get_sensor_from_bus+0x1e>
     30c:	c1 df       	rcall	.-126    	; 0x290 <get_data>
     30e:	80 93 da 23 	sts	0x23DA, r24
     312:	81 e0       	ldi	r24, 0x01	; 1
     314:	80 93 bf 22 	sts	0x22BF, r24
     318:	0d c0       	rjmp	.+26     	; 0x334 <get_sensor_from_bus+0x50>
     31a:	ba df       	rcall	.-140    	; 0x290 <get_data>
     31c:	ce 51       	subi	r28, 0x1E	; 30
     31e:	dc 4d       	sbci	r29, 0xDC	; 220
     320:	88 83       	st	Y, r24
     322:	80 91 e0 23 	lds	r24, 0x23E0
     326:	90 91 e1 23 	lds	r25, 0x23E1
     32a:	01 96       	adiw	r24, 0x01	; 1
     32c:	90 93 e1 23 	sts	0x23E1, r25
     330:	80 93 e0 23 	sts	0x23E0, r24
     334:	df 91       	pop	r29
     336:	cf 91       	pop	r28
     338:	08 95       	ret

0000033a <get_control_settings_from_bus>:
     33a:	cf 93       	push	r28
     33c:	df 93       	push	r29
     33e:	c0 91 d0 23 	lds	r28, 0x23D0
     342:	d0 91 d1 23 	lds	r29, 0x23D1
     346:	a4 df       	rcall	.-184    	; 0x290 <get_data>
     348:	c3 53       	subi	r28, 0x33	; 51
     34a:	dc 4d       	sbci	r29, 0xDC	; 220
     34c:	88 83       	st	Y, r24
     34e:	10 92 d1 23 	sts	0x23D1, r1
     352:	10 92 d0 23 	sts	0x23D0, r1
     356:	df 91       	pop	r29
     358:	cf 91       	pop	r28
     35a:	08 95       	ret

0000035c <get_autonom_settings_from_bus>:
     35c:	99 df       	rcall	.-206    	; 0x290 <get_data>
     35e:	80 93 cb 22 	sts	0x22CB, r24
     362:	08 95       	ret

00000364 <get_char_from_bus>:
     364:	cf 93       	push	r28
     366:	df 93       	push	r29
     368:	c0 91 cb 23 	lds	r28, 0x23CB
     36c:	d0 91 cc 23 	lds	r29, 0x23CC
     370:	8f df       	rcall	.-226    	; 0x290 <get_data>
     372:	c4 53       	subi	r28, 0x34	; 52
     374:	dd 4d       	sbci	r29, 0xDD	; 221
     376:	88 83       	st	Y, r24
     378:	80 91 cb 23 	lds	r24, 0x23CB
     37c:	90 91 cc 23 	lds	r25, 0x23CC
     380:	01 96       	adiw	r24, 0x01	; 1
     382:	90 93 cc 23 	sts	0x23CC, r25
     386:	80 93 cb 23 	sts	0x23CB, r24
     38a:	90 93 dc 23 	sts	0x23DC, r25
     38e:	80 93 db 23 	sts	0x23DB, r24
     392:	df 91       	pop	r29
     394:	cf 91       	pop	r28
     396:	08 95       	ret

00000398 <TWI_init>:
     398:	80 93 d2 23 	sts	0x23D2, r24
     39c:	80 34       	cpi	r24, 0x40	; 64
     39e:	79 f0       	breq	.+30     	; 0x3be <TWI_init+0x26>
     3a0:	80 38       	cpi	r24, 0x80	; 128
     3a2:	19 f0       	breq	.+6      	; 0x3aa <TWI_init+0x12>
     3a4:	80 32       	cpi	r24, 0x20	; 32
     3a6:	d1 f4       	brne	.+52     	; 0x3dc <TWI_init+0x44>
     3a8:	12 c0       	rjmp	.+36     	; 0x3ce <TWI_init+0x36>
     3aa:	83 e0       	ldi	r24, 0x03	; 3
     3ac:	88 b9       	out	0x08, r24	; 8
     3ae:	59 df       	rcall	.-334    	; 0x262 <set_twi_reciever_enable>
     3b0:	8f e3       	ldi	r24, 0x3F	; 63
     3b2:	80 93 b8 00 	sts	0x00B8, r24
     3b6:	81 e8       	ldi	r24, 0x81	; 129
     3b8:	80 93 ba 00 	sts	0x00BA, r24
     3bc:	08 95       	ret
     3be:	8f e3       	ldi	r24, 0x3F	; 63
     3c0:	80 93 b8 00 	sts	0x00B8, r24
     3c4:	4e df       	rcall	.-356    	; 0x262 <set_twi_reciever_enable>
     3c6:	80 e4       	ldi	r24, 0x40	; 64
     3c8:	80 93 ba 00 	sts	0x00BA, r24
     3cc:	08 95       	ret
     3ce:	8f e3       	ldi	r24, 0x3F	; 63
     3d0:	80 93 b8 00 	sts	0x00B8, r24
     3d4:	46 df       	rcall	.-372    	; 0x262 <set_twi_reciever_enable>
     3d6:	81 e2       	ldi	r24, 0x21	; 33
     3d8:	80 93 ba 00 	sts	0x00BA, r24
     3dc:	08 95       	ret

000003de <TWI_send_control_settings>:
     3de:	0f 93       	push	r16
     3e0:	1f 93       	push	r17
     3e2:	cf 93       	push	r28
     3e4:	df 93       	push	r29
     3e6:	c8 2f       	mov	r28, r24
     3e8:	d6 2f       	mov	r29, r22
     3ea:	14 2f       	mov	r17, r20
     3ec:	02 2f       	mov	r16, r18
     3ee:	41 df       	rcall	.-382    	; 0x272 <start_bus>
     3f0:	52 df       	rcall	.-348    	; 0x296 <wait_for_bus>
     3f2:	90 91 b9 00 	lds	r25, 0x00B9
     3f6:	98 7f       	andi	r25, 0xF8	; 248
     3f8:	98 30       	cpi	r25, 0x08	; 8
     3fa:	19 f0       	breq	.+6      	; 0x402 <TWI_send_control_settings+0x24>
     3fc:	42 df       	rcall	.-380    	; 0x282 <Error>
     3fe:	80 e0       	ldi	r24, 0x00	; 0
     400:	34 c0       	rjmp	.+104    	; 0x46a <TWI_send_control_settings+0x8c>
     402:	8c 2f       	mov	r24, r28
     404:	4e df       	rcall	.-356    	; 0x2a2 <send_data_and_wait>
     406:	80 91 b9 00 	lds	r24, 0x00B9
     40a:	88 7f       	andi	r24, 0xF8	; 248
     40c:	88 31       	cpi	r24, 0x18	; 24
     40e:	19 f0       	breq	.+6      	; 0x416 <TWI_send_control_settings+0x38>
     410:	38 df       	rcall	.-400    	; 0x282 <Error>
     412:	80 e0       	ldi	r24, 0x00	; 0
     414:	2a c0       	rjmp	.+84     	; 0x46a <TWI_send_control_settings+0x8c>
     416:	81 e0       	ldi	r24, 0x01	; 1
     418:	44 df       	rcall	.-376    	; 0x2a2 <send_data_and_wait>
     41a:	80 91 b9 00 	lds	r24, 0x00B9
     41e:	88 7f       	andi	r24, 0xF8	; 248
     420:	88 32       	cpi	r24, 0x28	; 40
     422:	19 f0       	breq	.+6      	; 0x42a <TWI_send_control_settings+0x4c>
     424:	2e df       	rcall	.-420    	; 0x282 <Error>
     426:	80 e0       	ldi	r24, 0x00	; 0
     428:	20 c0       	rjmp	.+64     	; 0x46a <TWI_send_control_settings+0x8c>
     42a:	8d 2f       	mov	r24, r29
     42c:	3a df       	rcall	.-396    	; 0x2a2 <send_data_and_wait>
     42e:	80 91 b9 00 	lds	r24, 0x00B9
     432:	88 7f       	andi	r24, 0xF8	; 248
     434:	88 32       	cpi	r24, 0x28	; 40
     436:	19 f0       	breq	.+6      	; 0x43e <TWI_send_control_settings+0x60>
     438:	24 df       	rcall	.-440    	; 0x282 <Error>
     43a:	80 e0       	ldi	r24, 0x00	; 0
     43c:	16 c0       	rjmp	.+44     	; 0x46a <TWI_send_control_settings+0x8c>
     43e:	81 2f       	mov	r24, r17
     440:	30 df       	rcall	.-416    	; 0x2a2 <send_data_and_wait>
     442:	80 91 b9 00 	lds	r24, 0x00B9
     446:	88 7f       	andi	r24, 0xF8	; 248
     448:	88 32       	cpi	r24, 0x28	; 40
     44a:	19 f0       	breq	.+6      	; 0x452 <TWI_send_control_settings+0x74>
     44c:	1a df       	rcall	.-460    	; 0x282 <Error>
     44e:	80 e0       	ldi	r24, 0x00	; 0
     450:	0c c0       	rjmp	.+24     	; 0x46a <TWI_send_control_settings+0x8c>
     452:	80 2f       	mov	r24, r16
     454:	26 df       	rcall	.-436    	; 0x2a2 <send_data_and_wait>
     456:	80 91 b9 00 	lds	r24, 0x00B9
     45a:	88 7f       	andi	r24, 0xF8	; 248
     45c:	88 32       	cpi	r24, 0x28	; 40
     45e:	19 f0       	breq	.+6      	; 0x466 <TWI_send_control_settings+0x88>
     460:	10 df       	rcall	.-480    	; 0x282 <Error>
     462:	80 e0       	ldi	r24, 0x00	; 0
     464:	02 c0       	rjmp	.+4      	; 0x46a <TWI_send_control_settings+0x8c>
     466:	09 df       	rcall	.-494    	; 0x27a <stop_bus>
     468:	81 e0       	ldi	r24, 0x01	; 1
     46a:	df 91       	pop	r29
     46c:	cf 91       	pop	r28
     46e:	1f 91       	pop	r17
     470:	0f 91       	pop	r16
     472:	08 95       	ret

00000474 <TWI_send_autonom_settings>:
     474:	cf 93       	push	r28
     476:	df 93       	push	r29
     478:	c8 2f       	mov	r28, r24
     47a:	d6 2f       	mov	r29, r22
     47c:	fa de       	rcall	.-524    	; 0x272 <start_bus>
     47e:	0b df       	rcall	.-490    	; 0x296 <wait_for_bus>
     480:	90 91 b9 00 	lds	r25, 0x00B9
     484:	98 7f       	andi	r25, 0xF8	; 248
     486:	98 30       	cpi	r25, 0x08	; 8
     488:	19 f0       	breq	.+6      	; 0x490 <TWI_send_autonom_settings+0x1c>
     48a:	fb de       	rcall	.-522    	; 0x282 <Error>
     48c:	80 e0       	ldi	r24, 0x00	; 0
     48e:	20 c0       	rjmp	.+64     	; 0x4d0 <TWI_send_autonom_settings+0x5c>
     490:	8c 2f       	mov	r24, r28
     492:	07 df       	rcall	.-498    	; 0x2a2 <send_data_and_wait>
     494:	80 91 b9 00 	lds	r24, 0x00B9
     498:	88 7f       	andi	r24, 0xF8	; 248
     49a:	88 31       	cpi	r24, 0x18	; 24
     49c:	19 f0       	breq	.+6      	; 0x4a4 <TWI_send_autonom_settings+0x30>
     49e:	f1 de       	rcall	.-542    	; 0x282 <Error>
     4a0:	80 e0       	ldi	r24, 0x00	; 0
     4a2:	16 c0       	rjmp	.+44     	; 0x4d0 <TWI_send_autonom_settings+0x5c>
     4a4:	85 e0       	ldi	r24, 0x05	; 5
     4a6:	fd de       	rcall	.-518    	; 0x2a2 <send_data_and_wait>
     4a8:	80 91 b9 00 	lds	r24, 0x00B9
     4ac:	88 7f       	andi	r24, 0xF8	; 248
     4ae:	88 32       	cpi	r24, 0x28	; 40
     4b0:	19 f0       	breq	.+6      	; 0x4b8 <TWI_send_autonom_settings+0x44>
     4b2:	e7 de       	rcall	.-562    	; 0x282 <Error>
     4b4:	80 e0       	ldi	r24, 0x00	; 0
     4b6:	0c c0       	rjmp	.+24     	; 0x4d0 <TWI_send_autonom_settings+0x5c>
     4b8:	8d 2f       	mov	r24, r29
     4ba:	f3 de       	rcall	.-538    	; 0x2a2 <send_data_and_wait>
     4bc:	80 91 b9 00 	lds	r24, 0x00B9
     4c0:	88 7f       	andi	r24, 0xF8	; 248
     4c2:	88 32       	cpi	r24, 0x28	; 40
     4c4:	19 f0       	breq	.+6      	; 0x4cc <TWI_send_autonom_settings+0x58>
     4c6:	dd de       	rcall	.-582    	; 0x282 <Error>
     4c8:	80 e0       	ldi	r24, 0x00	; 0
     4ca:	02 c0       	rjmp	.+4      	; 0x4d0 <TWI_send_autonom_settings+0x5c>
     4cc:	d6 de       	rcall	.-596    	; 0x27a <stop_bus>
     4ce:	81 e0       	ldi	r24, 0x01	; 1
     4d0:	df 91       	pop	r29
     4d2:	cf 91       	pop	r28
     4d4:	08 95       	ret

000004d6 <TWI_send_command>:
     4d6:	1f 93       	push	r17
     4d8:	cf 93       	push	r28
     4da:	df 93       	push	r29
     4dc:	c8 2f       	mov	r28, r24
     4de:	d6 2f       	mov	r29, r22
     4e0:	14 2f       	mov	r17, r20
     4e2:	c7 de       	rcall	.-626    	; 0x272 <start_bus>
     4e4:	d8 de       	rcall	.-592    	; 0x296 <wait_for_bus>
     4e6:	90 91 b9 00 	lds	r25, 0x00B9
     4ea:	98 7f       	andi	r25, 0xF8	; 248
     4ec:	98 30       	cpi	r25, 0x08	; 8
     4ee:	19 f0       	breq	.+6      	; 0x4f6 <TWI_send_command+0x20>
     4f0:	c8 de       	rcall	.-624    	; 0x282 <Error>
     4f2:	80 e0       	ldi	r24, 0x00	; 0
     4f4:	34 c0       	rjmp	.+104    	; 0x55e <TWI_send_command+0x88>
     4f6:	80 e2       	ldi	r24, 0x20	; 32
     4f8:	d4 de       	rcall	.-600    	; 0x2a2 <send_data_and_wait>
     4fa:	80 91 b9 00 	lds	r24, 0x00B9
     4fe:	88 7f       	andi	r24, 0xF8	; 248
     500:	88 31       	cpi	r24, 0x18	; 24
     502:	19 f0       	breq	.+6      	; 0x50a <TWI_send_command+0x34>
     504:	be de       	rcall	.-644    	; 0x282 <Error>
     506:	80 e0       	ldi	r24, 0x00	; 0
     508:	2a c0       	rjmp	.+84     	; 0x55e <TWI_send_command+0x88>
     50a:	80 e0       	ldi	r24, 0x00	; 0
     50c:	ca de       	rcall	.-620    	; 0x2a2 <send_data_and_wait>
     50e:	80 91 b9 00 	lds	r24, 0x00B9
     512:	88 7f       	andi	r24, 0xF8	; 248
     514:	88 32       	cpi	r24, 0x28	; 40
     516:	19 f0       	breq	.+6      	; 0x51e <TWI_send_command+0x48>
     518:	b4 de       	rcall	.-664    	; 0x282 <Error>
     51a:	80 e0       	ldi	r24, 0x00	; 0
     51c:	20 c0       	rjmp	.+64     	; 0x55e <TWI_send_command+0x88>
     51e:	8c 2f       	mov	r24, r28
     520:	c0 de       	rcall	.-640    	; 0x2a2 <send_data_and_wait>
     522:	80 91 b9 00 	lds	r24, 0x00B9
     526:	88 7f       	andi	r24, 0xF8	; 248
     528:	88 32       	cpi	r24, 0x28	; 40
     52a:	19 f0       	breq	.+6      	; 0x532 <TWI_send_command+0x5c>
     52c:	aa de       	rcall	.-684    	; 0x282 <Error>
     52e:	80 e0       	ldi	r24, 0x00	; 0
     530:	16 c0       	rjmp	.+44     	; 0x55e <TWI_send_command+0x88>
     532:	8d 2f       	mov	r24, r29
     534:	b6 de       	rcall	.-660    	; 0x2a2 <send_data_and_wait>
     536:	80 91 b9 00 	lds	r24, 0x00B9
     53a:	88 7f       	andi	r24, 0xF8	; 248
     53c:	88 32       	cpi	r24, 0x28	; 40
     53e:	19 f0       	breq	.+6      	; 0x546 <TWI_send_command+0x70>
     540:	a0 de       	rcall	.-704    	; 0x282 <Error>
     542:	80 e0       	ldi	r24, 0x00	; 0
     544:	0c c0       	rjmp	.+24     	; 0x55e <TWI_send_command+0x88>
     546:	81 2f       	mov	r24, r17
     548:	ac de       	rcall	.-680    	; 0x2a2 <send_data_and_wait>
     54a:	80 91 b9 00 	lds	r24, 0x00B9
     54e:	88 7f       	andi	r24, 0xF8	; 248
     550:	88 32       	cpi	r24, 0x28	; 40
     552:	19 f0       	breq	.+6      	; 0x55a <TWI_send_command+0x84>
     554:	96 de       	rcall	.-724    	; 0x282 <Error>
     556:	80 e0       	ldi	r24, 0x00	; 0
     558:	02 c0       	rjmp	.+4      	; 0x55e <TWI_send_command+0x88>
     55a:	8f de       	rcall	.-738    	; 0x27a <stop_bus>
     55c:	81 e0       	ldi	r24, 0x01	; 1
     55e:	df 91       	pop	r29
     560:	cf 91       	pop	r28
     562:	1f 91       	pop	r17
     564:	08 95       	ret

00000566 <TWI_send_elevation>:
     566:	cf 93       	push	r28
     568:	c8 2f       	mov	r28, r24
     56a:	83 de       	rcall	.-762    	; 0x272 <start_bus>
     56c:	94 de       	rcall	.-728    	; 0x296 <wait_for_bus>
     56e:	90 91 b9 00 	lds	r25, 0x00B9
     572:	98 7f       	andi	r25, 0xF8	; 248
     574:	98 30       	cpi	r25, 0x08	; 8
     576:	19 f0       	breq	.+6      	; 0x57e <TWI_send_elevation+0x18>
     578:	84 de       	rcall	.-760    	; 0x282 <Error>
     57a:	80 e0       	ldi	r24, 0x00	; 0
     57c:	20 c0       	rjmp	.+64     	; 0x5be <TWI_send_elevation+0x58>
     57e:	80 e2       	ldi	r24, 0x20	; 32
     580:	90 de       	rcall	.-736    	; 0x2a2 <send_data_and_wait>
     582:	80 91 b9 00 	lds	r24, 0x00B9
     586:	88 7f       	andi	r24, 0xF8	; 248
     588:	88 31       	cpi	r24, 0x18	; 24
     58a:	19 f0       	breq	.+6      	; 0x592 <TWI_send_elevation+0x2c>
     58c:	7a de       	rcall	.-780    	; 0x282 <Error>
     58e:	80 e0       	ldi	r24, 0x00	; 0
     590:	16 c0       	rjmp	.+44     	; 0x5be <TWI_send_elevation+0x58>
     592:	84 e0       	ldi	r24, 0x04	; 4
     594:	86 de       	rcall	.-756    	; 0x2a2 <send_data_and_wait>
     596:	80 91 b9 00 	lds	r24, 0x00B9
     59a:	88 7f       	andi	r24, 0xF8	; 248
     59c:	88 32       	cpi	r24, 0x28	; 40
     59e:	19 f0       	breq	.+6      	; 0x5a6 <TWI_send_elevation+0x40>
     5a0:	70 de       	rcall	.-800    	; 0x282 <Error>
     5a2:	80 e0       	ldi	r24, 0x00	; 0
     5a4:	0c c0       	rjmp	.+24     	; 0x5be <TWI_send_elevation+0x58>
     5a6:	8c 2f       	mov	r24, r28
     5a8:	7c de       	rcall	.-776    	; 0x2a2 <send_data_and_wait>
     5aa:	80 91 b9 00 	lds	r24, 0x00B9
     5ae:	88 7f       	andi	r24, 0xF8	; 248
     5b0:	88 32       	cpi	r24, 0x28	; 40
     5b2:	19 f0       	breq	.+6      	; 0x5ba <TWI_send_elevation+0x54>
     5b4:	66 de       	rcall	.-820    	; 0x282 <Error>
     5b6:	80 e0       	ldi	r24, 0x00	; 0
     5b8:	02 c0       	rjmp	.+4      	; 0x5be <TWI_send_elevation+0x58>
     5ba:	5f de       	rcall	.-834    	; 0x27a <stop_bus>
     5bc:	81 e0       	ldi	r24, 0x01	; 1
     5be:	cf 91       	pop	r28
     5c0:	08 95       	ret

000005c2 <TWI_send_string_fixed_length>:
     5c2:	ef 92       	push	r14
     5c4:	ff 92       	push	r15
     5c6:	0f 93       	push	r16
     5c8:	1f 93       	push	r17
     5ca:	cf 93       	push	r28
     5cc:	df 93       	push	r29
     5ce:	c8 2f       	mov	r28, r24
     5d0:	e6 2e       	mov	r14, r22
     5d2:	f7 2e       	mov	r15, r23
     5d4:	8a 01       	movw	r16, r20
     5d6:	4d de       	rcall	.-870    	; 0x272 <start_bus>
     5d8:	5e de       	rcall	.-836    	; 0x296 <wait_for_bus>
     5da:	90 91 b9 00 	lds	r25, 0x00B9
     5de:	98 7f       	andi	r25, 0xF8	; 248
     5e0:	98 30       	cpi	r25, 0x08	; 8
     5e2:	19 f0       	breq	.+6      	; 0x5ea <TWI_send_string_fixed_length+0x28>
     5e4:	4e de       	rcall	.-868    	; 0x282 <Error>
     5e6:	80 e0       	ldi	r24, 0x00	; 0
     5e8:	23 c0       	rjmp	.+70     	; 0x630 <TWI_send_string_fixed_length+0x6e>
     5ea:	8c 2f       	mov	r24, r28
     5ec:	5a de       	rcall	.-844    	; 0x2a2 <send_data_and_wait>
     5ee:	80 91 b9 00 	lds	r24, 0x00B9
     5f2:	88 7f       	andi	r24, 0xF8	; 248
     5f4:	88 31       	cpi	r24, 0x18	; 24
     5f6:	19 f0       	breq	.+6      	; 0x5fe <TWI_send_string_fixed_length+0x3c>
     5f8:	44 de       	rcall	.-888    	; 0x282 <Error>
     5fa:	80 e0       	ldi	r24, 0x00	; 0
     5fc:	19 c0       	rjmp	.+50     	; 0x630 <TWI_send_string_fixed_length+0x6e>
     5fe:	89 e1       	ldi	r24, 0x19	; 25
     600:	50 de       	rcall	.-864    	; 0x2a2 <send_data_and_wait>
     602:	80 91 b9 00 	lds	r24, 0x00B9
     606:	88 7f       	andi	r24, 0xF8	; 248
     608:	88 32       	cpi	r24, 0x28	; 40
     60a:	21 f4       	brne	.+8      	; 0x614 <TWI_send_string_fixed_length+0x52>
     60c:	10 16       	cp	r1, r16
     60e:	11 06       	cpc	r1, r17
     610:	24 f0       	brlt	.+8      	; 0x61a <TWI_send_string_fixed_length+0x58>
     612:	0c c0       	rjmp	.+24     	; 0x62c <TWI_send_string_fixed_length+0x6a>
     614:	36 de       	rcall	.-916    	; 0x282 <Error>
     616:	80 e0       	ldi	r24, 0x00	; 0
     618:	0b c0       	rjmp	.+22     	; 0x630 <TWI_send_string_fixed_length+0x6e>
     61a:	ce 2d       	mov	r28, r14
     61c:	df 2d       	mov	r29, r15
     61e:	0c 0f       	add	r16, r28
     620:	1d 1f       	adc	r17, r29
     622:	89 91       	ld	r24, Y+
     624:	3e de       	rcall	.-900    	; 0x2a2 <send_data_and_wait>
     626:	c0 17       	cp	r28, r16
     628:	d1 07       	cpc	r29, r17
     62a:	d9 f7       	brne	.-10     	; 0x622 <TWI_send_string_fixed_length+0x60>
     62c:	26 de       	rcall	.-948    	; 0x27a <stop_bus>
     62e:	81 e0       	ldi	r24, 0x01	; 1
     630:	df 91       	pop	r29
     632:	cf 91       	pop	r28
     634:	1f 91       	pop	r17
     636:	0f 91       	pop	r16
     638:	ff 90       	pop	r15
     63a:	ef 90       	pop	r14
     63c:	08 95       	ret

0000063e <TWI_get_sensor>:
     63e:	86 51       	subi	r24, 0x16	; 22
     640:	9c 4d       	sbci	r25, 0xDC	; 220
     642:	fc 01       	movw	r30, r24
     644:	80 81       	ld	r24, Z
     646:	08 95       	ret

00000648 <TWI_get_servo>:
     648:	80 91 da 23 	lds	r24, 0x23DA
     64c:	08 95       	ret

0000064e <TWI_sensor_flag>:
     64e:	80 91 bf 22 	lds	r24, 0x22BF
     652:	88 23       	and	r24, r24
     654:	21 f0       	breq	.+8      	; 0x65e <TWI_sensor_flag+0x10>
     656:	10 92 bf 22 	sts	0x22BF, r1
     65a:	81 e0       	ldi	r24, 0x01	; 1
     65c:	08 95       	ret
     65e:	80 e0       	ldi	r24, 0x00	; 0
     660:	08 95       	ret

00000662 <decode_message_TwiFIFO>:
     662:	8f 92       	push	r8
     664:	9f 92       	push	r9
     666:	af 92       	push	r10
     668:	bf 92       	push	r11
     66a:	cf 92       	push	r12
     66c:	df 92       	push	r13
     66e:	ef 92       	push	r14
     670:	ff 92       	push	r15
     672:	0f 93       	push	r16
     674:	1f 93       	push	r17
     676:	cf 93       	push	r28
     678:	df 93       	push	r29
     67a:	cd b7       	in	r28, 0x3d	; 61
     67c:	de b7       	in	r29, 0x3e	; 62
     67e:	ad b6       	in	r10, 0x3d	; 61
     680:	be b6       	in	r11, 0x3e	; 62
     682:	60 e0       	ldi	r22, 0x00	; 0
     684:	70 e0       	ldi	r23, 0x00	; 0
     686:	80 91 00 01 	lds	r24, 0x0100
     68a:	90 91 01 01 	lds	r25, 0x0101
     68e:	8c dd       	rcall	.-1256   	; 0x1a8 <FifoRead>
     690:	81 11       	cpse	r24, r1
     692:	3b c0       	rjmp	.+118    	; 0x70a <decode_message_TwiFIFO+0xa8>
     694:	c0 90 00 00 	lds	r12, 0x0000
     698:	d1 2c       	mov	r13, r1
     69a:	96 01       	movw	r18, r12
     69c:	21 50       	subi	r18, 0x01	; 1
     69e:	31 09       	sbc	r19, r1
     6a0:	81 e0       	ldi	r24, 0x01	; 1
     6a2:	90 e0       	ldi	r25, 0x00	; 0
     6a4:	c1 14       	cp	r12, r1
     6a6:	d1 04       	cpc	r13, r1
     6a8:	11 f0       	breq	.+4      	; 0x6ae <decode_message_TwiFIFO+0x4c>
     6aa:	80 e0       	ldi	r24, 0x00	; 0
     6ac:	90 e0       	ldi	r25, 0x00	; 0
     6ae:	82 0f       	add	r24, r18
     6b0:	93 1f       	adc	r25, r19
     6b2:	2d b7       	in	r18, 0x3d	; 61
     6b4:	3e b7       	in	r19, 0x3e	; 62
     6b6:	28 1b       	sub	r18, r24
     6b8:	39 0b       	sbc	r19, r25
     6ba:	0f b6       	in	r0, 0x3f	; 63
     6bc:	f8 94       	cli
     6be:	3e bf       	out	0x3e, r19	; 62
     6c0:	0f be       	out	0x3f, r0	; 63
     6c2:	2d bf       	out	0x3d, r18	; 61
     6c4:	2f 5f       	subi	r18, 0xFF	; 255
     6c6:	3f 4f       	sbci	r19, 0xFF	; 255
     6c8:	82 2e       	mov	r8, r18
     6ca:	93 2e       	mov	r9, r19
     6cc:	1c 14       	cp	r1, r12
     6ce:	1d 04       	cpc	r1, r13
     6d0:	bc f4       	brge	.+46     	; 0x700 <decode_message_TwiFIFO+0x9e>
     6d2:	e2 2e       	mov	r14, r18
     6d4:	f3 2e       	mov	r15, r19
     6d6:	00 e0       	ldi	r16, 0x00	; 0
     6d8:	10 e0       	ldi	r17, 0x00	; 0
     6da:	60 e0       	ldi	r22, 0x00	; 0
     6dc:	70 e0       	ldi	r23, 0x00	; 0
     6de:	80 91 00 01 	lds	r24, 0x0100
     6e2:	90 91 01 01 	lds	r25, 0x0101
     6e6:	60 dd       	rcall	.-1344   	; 0x1a8 <FifoRead>
     6e8:	81 11       	cpse	r24, r1
     6ea:	11 c0       	rjmp	.+34     	; 0x70e <decode_message_TwiFIFO+0xac>
     6ec:	20 91 00 00 	lds	r18, 0x0000
     6f0:	f7 01       	movw	r30, r14
     6f2:	21 93       	st	Z+, r18
     6f4:	7f 01       	movw	r14, r30
     6f6:	0f 5f       	subi	r16, 0xFF	; 255
     6f8:	1f 4f       	sbci	r17, 0xFF	; 255
     6fa:	0c 15       	cp	r16, r12
     6fc:	1d 05       	cpc	r17, r13
     6fe:	6c f3       	brlt	.-38     	; 0x6da <decode_message_TwiFIFO+0x78>
     700:	88 2d       	mov	r24, r8
     702:	99 2d       	mov	r25, r9
     704:	dd d2       	rcall	.+1466   	; 0xcc0 <USART_SendMessage>
     706:	80 e0       	ldi	r24, 0x00	; 0
     708:	03 c0       	rjmp	.+6      	; 0x710 <decode_message_TwiFIFO+0xae>
     70a:	81 e0       	ldi	r24, 0x01	; 1
     70c:	01 c0       	rjmp	.+2      	; 0x710 <decode_message_TwiFIFO+0xae>
     70e:	81 e0       	ldi	r24, 0x01	; 1
     710:	0f b6       	in	r0, 0x3f	; 63
     712:	f8 94       	cli
     714:	be be       	out	0x3e, r11	; 62
     716:	0f be       	out	0x3f, r0	; 63
     718:	ad be       	out	0x3d, r10	; 61
     71a:	df 91       	pop	r29
     71c:	cf 91       	pop	r28
     71e:	1f 91       	pop	r17
     720:	0f 91       	pop	r16
     722:	ff 90       	pop	r15
     724:	ef 90       	pop	r14
     726:	df 90       	pop	r13
     728:	cf 90       	pop	r12
     72a:	bf 90       	pop	r11
     72c:	af 90       	pop	r10
     72e:	9f 90       	pop	r9
     730:	8f 90       	pop	r8
     732:	08 95       	ret

00000734 <write_to_TwiFIFO>:
     734:	0f 93       	push	r16
     736:	1f 93       	push	r17
     738:	cf 93       	push	r28
     73a:	df 93       	push	r29
     73c:	d8 2f       	mov	r29, r24
     73e:	c9 2f       	mov	r28, r25
     740:	60 91 db 23 	lds	r22, 0x23DB
     744:	80 91 00 01 	lds	r24, 0x0100
     748:	90 91 01 01 	lds	r25, 0x0101
     74c:	0d dd       	rcall	.-1510   	; 0x168 <FifoWrite>
     74e:	81 11       	cpse	r24, r1
     750:	1f c0       	rjmp	.+62     	; 0x790 <write_to_TwiFIFO+0x5c>
     752:	20 91 db 23 	lds	r18, 0x23DB
     756:	30 91 dc 23 	lds	r19, 0x23DC
     75a:	12 16       	cp	r1, r18
     75c:	13 06       	cpc	r1, r19
     75e:	d4 f4       	brge	.+52     	; 0x794 <write_to_TwiFIFO+0x60>
     760:	0d 2f       	mov	r16, r29
     762:	1c 2f       	mov	r17, r28
     764:	c0 e0       	ldi	r28, 0x00	; 0
     766:	d0 e0       	ldi	r29, 0x00	; 0
     768:	f8 01       	movw	r30, r16
     76a:	61 91       	ld	r22, Z+
     76c:	8f 01       	movw	r16, r30
     76e:	80 91 00 01 	lds	r24, 0x0100
     772:	90 91 01 01 	lds	r25, 0x0101
     776:	f8 dc       	rcall	.-1552   	; 0x168 <FifoWrite>
     778:	81 11       	cpse	r24, r1
     77a:	0e c0       	rjmp	.+28     	; 0x798 <write_to_TwiFIFO+0x64>
     77c:	21 96       	adiw	r28, 0x01	; 1
     77e:	80 91 db 23 	lds	r24, 0x23DB
     782:	90 91 dc 23 	lds	r25, 0x23DC
     786:	c8 17       	cp	r28, r24
     788:	d9 07       	cpc	r29, r25
     78a:	74 f3       	brlt	.-36     	; 0x768 <write_to_TwiFIFO+0x34>
     78c:	80 e0       	ldi	r24, 0x00	; 0
     78e:	05 c0       	rjmp	.+10     	; 0x79a <write_to_TwiFIFO+0x66>
     790:	81 e0       	ldi	r24, 0x01	; 1
     792:	03 c0       	rjmp	.+6      	; 0x79a <write_to_TwiFIFO+0x66>
     794:	80 e0       	ldi	r24, 0x00	; 0
     796:	01 c0       	rjmp	.+2      	; 0x79a <write_to_TwiFIFO+0x66>
     798:	81 e0       	ldi	r24, 0x01	; 1
     79a:	df 91       	pop	r29
     79c:	cf 91       	pop	r28
     79e:	1f 91       	pop	r17
     7a0:	0f 91       	pop	r16
     7a2:	08 95       	ret

000007a4 <__vector_26>:
     7a4:	1f 92       	push	r1
     7a6:	0f 92       	push	r0
     7a8:	0f b6       	in	r0, 0x3f	; 63
     7aa:	0f 92       	push	r0
     7ac:	11 24       	eor	r1, r1
     7ae:	0b b6       	in	r0, 0x3b	; 59
     7b0:	0f 92       	push	r0
     7b2:	2f 93       	push	r18
     7b4:	3f 93       	push	r19
     7b6:	4f 93       	push	r20
     7b8:	5f 93       	push	r21
     7ba:	6f 93       	push	r22
     7bc:	7f 93       	push	r23
     7be:	8f 93       	push	r24
     7c0:	9f 93       	push	r25
     7c2:	af 93       	push	r26
     7c4:	bf 93       	push	r27
     7c6:	cf 93       	push	r28
     7c8:	df 93       	push	r29
     7ca:	ef 93       	push	r30
     7cc:	ff 93       	push	r31
     7ce:	80 91 d2 23 	lds	r24, 0x23D2
     7d2:	80 34       	cpi	r24, 0x40	; 64
     7d4:	09 f4       	brne	.+2      	; 0x7d8 <__vector_26+0x34>
     7d6:	90 c0       	rjmp	.+288    	; 0x8f8 <__vector_26+0x154>
     7d8:	80 38       	cpi	r24, 0x80	; 128
     7da:	21 f0       	breq	.+8      	; 0x7e4 <__vector_26+0x40>
     7dc:	80 32       	cpi	r24, 0x20	; 32
     7de:	09 f0       	breq	.+2      	; 0x7e2 <__vector_26+0x3e>
     7e0:	88 c1       	rjmp	.+784    	; 0xaf2 <__vector_26+0x34e>
     7e2:	d2 c0       	rjmp	.+420    	; 0x988 <__vector_26+0x1e4>
     7e4:	80 91 b9 00 	lds	r24, 0x00B9
     7e8:	88 7f       	andi	r24, 0xF8	; 248
     7ea:	80 36       	cpi	r24, 0x60	; 96
     7ec:	29 f0       	breq	.+10     	; 0x7f8 <__vector_26+0x54>
     7ee:	80 91 b9 00 	lds	r24, 0x00B9
     7f2:	88 7f       	andi	r24, 0xF8	; 248
     7f4:	88 36       	cpi	r24, 0x68	; 104
     7f6:	21 f4       	brne	.+8      	; 0x800 <__vector_26+0x5c>
     7f8:	81 e0       	ldi	r24, 0x01	; 1
     7fa:	80 93 d5 23 	sts	0x23D5, r24
     7fe:	7a c0       	rjmp	.+244    	; 0x8f4 <__vector_26+0x150>
     800:	80 91 b9 00 	lds	r24, 0x00B9
     804:	88 7f       	andi	r24, 0xF8	; 248
     806:	80 37       	cpi	r24, 0x70	; 112
     808:	29 f0       	breq	.+10     	; 0x814 <__vector_26+0x70>
     80a:	80 91 b9 00 	lds	r24, 0x00B9
     80e:	88 7f       	andi	r24, 0xF8	; 248
     810:	88 37       	cpi	r24, 0x78	; 120
     812:	39 f4       	brne	.+14     	; 0x822 <__vector_26+0x7e>
     814:	8f ef       	ldi	r24, 0xFF	; 255
     816:	90 e0       	ldi	r25, 0x00	; 0
     818:	90 93 df 23 	sts	0x23DF, r25
     81c:	80 93 de 23 	sts	0x23DE, r24
     820:	69 c0       	rjmp	.+210    	; 0x8f4 <__vector_26+0x150>
     822:	80 91 b9 00 	lds	r24, 0x00B9
     826:	88 7f       	andi	r24, 0xF8	; 248
     828:	80 38       	cpi	r24, 0x80	; 128
     82a:	b9 f5       	brne	.+110    	; 0x89a <__vector_26+0xf6>
     82c:	80 91 d5 23 	lds	r24, 0x23D5
     830:	88 23       	and	r24, r24
     832:	41 f0       	breq	.+16     	; 0x844 <__vector_26+0xa0>
     834:	2d dd       	rcall	.-1446   	; 0x290 <get_data>
     836:	80 93 de 23 	sts	0x23DE, r24
     83a:	10 92 df 23 	sts	0x23DF, r1
     83e:	10 92 d5 23 	sts	0x23D5, r1
     842:	58 c0       	rjmp	.+176    	; 0x8f4 <__vector_26+0x150>
     844:	80 91 de 23 	lds	r24, 0x23DE
     848:	90 91 df 23 	lds	r25, 0x23DF
     84c:	85 30       	cpi	r24, 0x05	; 5
     84e:	91 05       	cpc	r25, r1
     850:	71 f0       	breq	.+28     	; 0x86e <__vector_26+0xca>
     852:	24 f4       	brge	.+8      	; 0x85c <__vector_26+0xb8>
     854:	01 97       	sbiw	r24, 0x01	; 1
     856:	09 f0       	breq	.+2      	; 0x85a <__vector_26+0xb6>
     858:	4d c0       	rjmp	.+154    	; 0x8f4 <__vector_26+0x150>
     85a:	07 c0       	rjmp	.+14     	; 0x86a <__vector_26+0xc6>
     85c:	86 30       	cpi	r24, 0x06	; 6
     85e:	91 05       	cpc	r25, r1
     860:	51 f0       	breq	.+20     	; 0x876 <__vector_26+0xd2>
     862:	49 97       	sbiw	r24, 0x19	; 25
     864:	09 f0       	breq	.+2      	; 0x868 <__vector_26+0xc4>
     866:	46 c0       	rjmp	.+140    	; 0x8f4 <__vector_26+0x150>
     868:	04 c0       	rjmp	.+8      	; 0x872 <__vector_26+0xce>
     86a:	67 dd       	rcall	.-1330   	; 0x33a <get_control_settings_from_bus>
     86c:	43 c0       	rjmp	.+134    	; 0x8f4 <__vector_26+0x150>
     86e:	76 dd       	rcall	.-1300   	; 0x35c <get_autonom_settings_from_bus>
     870:	41 c0       	rjmp	.+130    	; 0x8f4 <__vector_26+0x150>
     872:	78 dd       	rcall	.-1296   	; 0x364 <get_char_from_bus>
     874:	3f c0       	rjmp	.+126    	; 0x8f4 <__vector_26+0x150>
     876:	c0 91 d3 23 	lds	r28, 0x23D3
     87a:	d0 91 d4 23 	lds	r29, 0x23D4
     87e:	08 dd       	rcall	.-1520   	; 0x290 <get_data>
     880:	cc 53       	subi	r28, 0x3C	; 60
     882:	dd 4d       	sbci	r29, 0xDD	; 221
     884:	88 83       	st	Y, r24
     886:	80 91 d3 23 	lds	r24, 0x23D3
     88a:	90 91 d4 23 	lds	r25, 0x23D4
     88e:	01 96       	adiw	r24, 0x01	; 1
     890:	90 93 d4 23 	sts	0x23D4, r25
     894:	80 93 d3 23 	sts	0x23D3, r24
     898:	2d c0       	rjmp	.+90     	; 0x8f4 <__vector_26+0x150>
     89a:	80 91 b9 00 	lds	r24, 0x00B9
     89e:	88 7f       	andi	r24, 0xF8	; 248
     8a0:	80 39       	cpi	r24, 0x90	; 144
     8a2:	11 f4       	brne	.+4      	; 0x8a8 <__vector_26+0x104>
     8a4:	1f dd       	rcall	.-1474   	; 0x2e4 <get_sensor_from_bus>
     8a6:	26 c0       	rjmp	.+76     	; 0x8f4 <__vector_26+0x150>
     8a8:	80 91 b9 00 	lds	r24, 0x00B9
     8ac:	88 7f       	andi	r24, 0xF8	; 248
     8ae:	80 3a       	cpi	r24, 0xA0	; 160
     8b0:	09 f5       	brne	.+66     	; 0x8f4 <__vector_26+0x150>
     8b2:	fd dc       	rcall	.-1542   	; 0x2ae <stop_twi>
     8b4:	80 91 de 23 	lds	r24, 0x23DE
     8b8:	90 91 df 23 	lds	r25, 0x23DF
     8bc:	85 30       	cpi	r24, 0x05	; 5
     8be:	91 05       	cpc	r25, r1
     8c0:	71 f0       	breq	.+28     	; 0x8de <__vector_26+0x13a>
     8c2:	1c f4       	brge	.+6      	; 0x8ca <__vector_26+0x126>
     8c4:	01 97       	sbiw	r24, 0x01	; 1
     8c6:	b1 f4       	brne	.+44     	; 0x8f4 <__vector_26+0x150>
     8c8:	06 c0       	rjmp	.+12     	; 0x8d6 <__vector_26+0x132>
     8ca:	86 30       	cpi	r24, 0x06	; 6
     8cc:	91 05       	cpc	r25, r1
     8ce:	79 f0       	breq	.+30     	; 0x8ee <__vector_26+0x14a>
     8d0:	49 97       	sbiw	r24, 0x19	; 25
     8d2:	81 f4       	brne	.+32     	; 0x8f4 <__vector_26+0x150>
     8d4:	08 c0       	rjmp	.+16     	; 0x8e6 <__vector_26+0x142>
     8d6:	81 e0       	ldi	r24, 0x01	; 1
     8d8:	80 93 bd 22 	sts	0x22BD, r24
     8dc:	0b c0       	rjmp	.+22     	; 0x8f4 <__vector_26+0x150>
     8de:	81 e0       	ldi	r24, 0x01	; 1
     8e0:	80 93 bc 22 	sts	0x22BC, r24
     8e4:	07 c0       	rjmp	.+14     	; 0x8f4 <__vector_26+0x150>
     8e6:	8c ec       	ldi	r24, 0xCC	; 204
     8e8:	92 e2       	ldi	r25, 0x22	; 34
     8ea:	24 df       	rcall	.-440    	; 0x734 <write_to_TwiFIFO>
     8ec:	03 c0       	rjmp	.+6      	; 0x8f4 <__vector_26+0x150>
     8ee:	84 ec       	ldi	r24, 0xC4	; 196
     8f0:	92 e2       	ldi	r25, 0x22	; 34
     8f2:	07 d2       	rcall	.+1038   	; 0xd02 <USART_SendValue>
     8f4:	f1 dc       	rcall	.-1566   	; 0x2d8 <reset_TWI>
     8f6:	fd c0       	rjmp	.+506    	; 0xaf2 <__vector_26+0x34e>
     8f8:	80 91 b9 00 	lds	r24, 0x00B9
     8fc:	88 7f       	andi	r24, 0xF8	; 248
     8fe:	80 36       	cpi	r24, 0x60	; 96
     900:	29 f0       	breq	.+10     	; 0x90c <__vector_26+0x168>
     902:	80 91 b9 00 	lds	r24, 0x00B9
     906:	88 7f       	andi	r24, 0xF8	; 248
     908:	88 36       	cpi	r24, 0x68	; 104
     90a:	21 f4       	brne	.+8      	; 0x914 <__vector_26+0x170>
     90c:	81 e0       	ldi	r24, 0x01	; 1
     90e:	80 93 d5 23 	sts	0x23D5, r24
     912:	38 c0       	rjmp	.+112    	; 0x984 <__vector_26+0x1e0>
     914:	80 91 b9 00 	lds	r24, 0x00B9
     918:	88 7f       	andi	r24, 0xF8	; 248
     91a:	80 38       	cpi	r24, 0x80	; 128
     91c:	e1 f4       	brne	.+56     	; 0x956 <__vector_26+0x1b2>
     91e:	80 91 d5 23 	lds	r24, 0x23D5
     922:	88 23       	and	r24, r24
     924:	41 f0       	breq	.+16     	; 0x936 <__vector_26+0x192>
     926:	b4 dc       	rcall	.-1688   	; 0x290 <get_data>
     928:	80 93 de 23 	sts	0x23DE, r24
     92c:	10 92 df 23 	sts	0x23DF, r1
     930:	10 92 d5 23 	sts	0x23D5, r1
     934:	27 c0       	rjmp	.+78     	; 0x984 <__vector_26+0x1e0>
     936:	80 91 de 23 	lds	r24, 0x23DE
     93a:	90 91 df 23 	lds	r25, 0x23DF
     93e:	82 30       	cpi	r24, 0x02	; 2
     940:	91 05       	cpc	r25, r1
     942:	19 f0       	breq	.+6      	; 0x94a <__vector_26+0x1a6>
     944:	49 97       	sbiw	r24, 0x19	; 25
     946:	f1 f4       	brne	.+60     	; 0x984 <__vector_26+0x1e0>
     948:	04 c0       	rjmp	.+8      	; 0x952 <__vector_26+0x1ae>
     94a:	a2 dc       	rcall	.-1724   	; 0x290 <get_data>
     94c:	80 93 dd 23 	sts	0x23DD, r24
     950:	19 c0       	rjmp	.+50     	; 0x984 <__vector_26+0x1e0>
     952:	08 dd       	rcall	.-1520   	; 0x364 <get_char_from_bus>
     954:	17 c0       	rjmp	.+46     	; 0x984 <__vector_26+0x1e0>
     956:	80 91 b9 00 	lds	r24, 0x00B9
     95a:	88 7f       	andi	r24, 0xF8	; 248
     95c:	80 3a       	cpi	r24, 0xA0	; 160
     95e:	91 f4       	brne	.+36     	; 0x984 <__vector_26+0x1e0>
     960:	a6 dc       	rcall	.-1716   	; 0x2ae <stop_twi>
     962:	80 91 de 23 	lds	r24, 0x23DE
     966:	90 91 df 23 	lds	r25, 0x23DF
     96a:	82 30       	cpi	r24, 0x02	; 2
     96c:	91 05       	cpc	r25, r1
     96e:	19 f0       	breq	.+6      	; 0x976 <__vector_26+0x1d2>
     970:	49 97       	sbiw	r24, 0x19	; 25
     972:	41 f4       	brne	.+16     	; 0x984 <__vector_26+0x1e0>
     974:	04 c0       	rjmp	.+8      	; 0x97e <__vector_26+0x1da>
     976:	81 e0       	ldi	r24, 0x01	; 1
     978:	80 93 ba 22 	sts	0x22BA, r24
     97c:	03 c0       	rjmp	.+6      	; 0x984 <__vector_26+0x1e0>
     97e:	8c ec       	ldi	r24, 0xCC	; 204
     980:	92 e2       	ldi	r25, 0x22	; 34
     982:	d8 de       	rcall	.-592    	; 0x734 <write_to_TwiFIFO>
     984:	a9 dc       	rcall	.-1710   	; 0x2d8 <reset_TWI>
     986:	b5 c0       	rjmp	.+362    	; 0xaf2 <__vector_26+0x34e>
     988:	80 91 b9 00 	lds	r24, 0x00B9
     98c:	88 7f       	andi	r24, 0xF8	; 248
     98e:	80 36       	cpi	r24, 0x60	; 96
     990:	29 f0       	breq	.+10     	; 0x99c <__vector_26+0x1f8>
     992:	80 91 b9 00 	lds	r24, 0x00B9
     996:	88 7f       	andi	r24, 0xF8	; 248
     998:	88 36       	cpi	r24, 0x68	; 104
     99a:	21 f4       	brne	.+8      	; 0x9a4 <__vector_26+0x200>
     99c:	81 e0       	ldi	r24, 0x01	; 1
     99e:	80 93 d5 23 	sts	0x23D5, r24
     9a2:	a6 c0       	rjmp	.+332    	; 0xaf0 <__vector_26+0x34c>
     9a4:	80 91 b9 00 	lds	r24, 0x00B9
     9a8:	88 7f       	andi	r24, 0xF8	; 248
     9aa:	80 37       	cpi	r24, 0x70	; 112
     9ac:	29 f0       	breq	.+10     	; 0x9b8 <__vector_26+0x214>
     9ae:	80 91 b9 00 	lds	r24, 0x00B9
     9b2:	88 7f       	andi	r24, 0xF8	; 248
     9b4:	88 37       	cpi	r24, 0x78	; 120
     9b6:	39 f4       	brne	.+14     	; 0x9c6 <__vector_26+0x222>
     9b8:	8f ef       	ldi	r24, 0xFF	; 255
     9ba:	90 e0       	ldi	r25, 0x00	; 0
     9bc:	90 93 df 23 	sts	0x23DF, r25
     9c0:	80 93 de 23 	sts	0x23DE, r24
     9c4:	95 c0       	rjmp	.+298    	; 0xaf0 <__vector_26+0x34c>
     9c6:	80 91 b9 00 	lds	r24, 0x00B9
     9ca:	88 7f       	andi	r24, 0xF8	; 248
     9cc:	80 38       	cpi	r24, 0x80	; 128
     9ce:	09 f0       	breq	.+2      	; 0x9d2 <__vector_26+0x22e>
     9d0:	62 c0       	rjmp	.+196    	; 0xa96 <__vector_26+0x2f2>
     9d2:	80 91 d5 23 	lds	r24, 0x23D5
     9d6:	88 23       	and	r24, r24
     9d8:	41 f0       	breq	.+16     	; 0x9ea <__vector_26+0x246>
     9da:	5a dc       	rcall	.-1868   	; 0x290 <get_data>
     9dc:	80 93 de 23 	sts	0x23DE, r24
     9e0:	10 92 df 23 	sts	0x23DF, r1
     9e4:	10 92 d5 23 	sts	0x23D5, r1
     9e8:	83 c0       	rjmp	.+262    	; 0xaf0 <__vector_26+0x34c>
     9ea:	80 91 de 23 	lds	r24, 0x23DE
     9ee:	90 91 df 23 	lds	r25, 0x23DF
     9f2:	81 30       	cpi	r24, 0x01	; 1
     9f4:	91 05       	cpc	r25, r1
     9f6:	09 f4       	brne	.+2      	; 0x9fa <__vector_26+0x256>
     9f8:	4a c0       	rjmp	.+148    	; 0xa8e <__vector_26+0x2ea>
     9fa:	1c f4       	brge	.+6      	; 0xa02 <__vector_26+0x25e>
     9fc:	89 2b       	or	r24, r25
     9fe:	41 f0       	breq	.+16     	; 0xa10 <__vector_26+0x26c>
     a00:	77 c0       	rjmp	.+238    	; 0xaf0 <__vector_26+0x34c>
     a02:	84 30       	cpi	r24, 0x04	; 4
     a04:	91 05       	cpc	r25, r1
     a06:	b1 f0       	breq	.+44     	; 0xa34 <__vector_26+0x290>
     a08:	05 97       	sbiw	r24, 0x05	; 5
     a0a:	09 f0       	breq	.+2      	; 0xa0e <__vector_26+0x26a>
     a0c:	71 c0       	rjmp	.+226    	; 0xaf0 <__vector_26+0x34c>
     a0e:	41 c0       	rjmp	.+130    	; 0xa92 <__vector_26+0x2ee>
     a10:	c0 91 d6 23 	lds	r28, 0x23D6
     a14:	d0 91 d7 23 	lds	r29, 0x23D7
     a18:	3b dc       	rcall	.-1930   	; 0x290 <get_data>
     a1a:	c8 53       	subi	r28, 0x38	; 56
     a1c:	dd 4d       	sbci	r29, 0xDD	; 221
     a1e:	88 83       	st	Y, r24
     a20:	80 91 d6 23 	lds	r24, 0x23D6
     a24:	90 91 d7 23 	lds	r25, 0x23D7
     a28:	01 96       	adiw	r24, 0x01	; 1
     a2a:	90 93 d7 23 	sts	0x23D7, r25
     a2e:	80 93 d6 23 	sts	0x23D6, r24
     a32:	5e c0       	rjmp	.+188    	; 0xaf0 <__vector_26+0x34c>
     a34:	2d dc       	rcall	.-1958   	; 0x290 <get_data>
     a36:	81 11       	cpse	r24, r1
     a38:	0a c0       	rjmp	.+20     	; 0xa4e <__vector_26+0x2aa>
     a3a:	80 91 d8 23 	lds	r24, 0x23D8
     a3e:	90 91 d9 23 	lds	r25, 0x23D9
     a42:	01 97       	sbiw	r24, 0x01	; 1
     a44:	90 93 d9 23 	sts	0x23D9, r25
     a48:	80 93 d8 23 	sts	0x23D8, r24
     a4c:	09 c0       	rjmp	.+18     	; 0xa60 <__vector_26+0x2bc>
     a4e:	80 91 d8 23 	lds	r24, 0x23D8
     a52:	90 91 d9 23 	lds	r25, 0x23D9
     a56:	01 96       	adiw	r24, 0x01	; 1
     a58:	90 93 d9 23 	sts	0x23D9, r25
     a5c:	80 93 d8 23 	sts	0x23D8, r24
     a60:	80 91 d8 23 	lds	r24, 0x23D8
     a64:	90 91 d9 23 	lds	r25, 0x23D9
     a68:	18 16       	cp	r1, r24
     a6a:	19 06       	cpc	r1, r25
     a6c:	3c f0       	brlt	.+14     	; 0xa7c <__vector_26+0x2d8>
     a6e:	81 e0       	ldi	r24, 0x01	; 1
     a70:	90 e0       	ldi	r25, 0x00	; 0
     a72:	90 93 d9 23 	sts	0x23D9, r25
     a76:	80 93 d8 23 	sts	0x23D8, r24
     a7a:	3a c0       	rjmp	.+116    	; 0xaf0 <__vector_26+0x34c>
     a7c:	08 97       	sbiw	r24, 0x08	; 8
     a7e:	c4 f1       	brlt	.+112    	; 0xaf0 <__vector_26+0x34c>
     a80:	87 e0       	ldi	r24, 0x07	; 7
     a82:	90 e0       	ldi	r25, 0x00	; 0
     a84:	90 93 d9 23 	sts	0x23D9, r25
     a88:	80 93 d8 23 	sts	0x23D8, r24
     a8c:	31 c0       	rjmp	.+98     	; 0xaf0 <__vector_26+0x34c>
     a8e:	55 dc       	rcall	.-1878   	; 0x33a <get_control_settings_from_bus>
     a90:	2f c0       	rjmp	.+94     	; 0xaf0 <__vector_26+0x34c>
     a92:	64 dc       	rcall	.-1848   	; 0x35c <get_autonom_settings_from_bus>
     a94:	2d c0       	rjmp	.+90     	; 0xaf0 <__vector_26+0x34c>
     a96:	80 91 b9 00 	lds	r24, 0x00B9
     a9a:	88 7f       	andi	r24, 0xF8	; 248
     a9c:	80 39       	cpi	r24, 0x90	; 144
     a9e:	11 f4       	brne	.+4      	; 0xaa4 <__vector_26+0x300>
     aa0:	21 dc       	rcall	.-1982   	; 0x2e4 <get_sensor_from_bus>
     aa2:	26 c0       	rjmp	.+76     	; 0xaf0 <__vector_26+0x34c>
     aa4:	80 91 b9 00 	lds	r24, 0x00B9
     aa8:	88 7f       	andi	r24, 0xF8	; 248
     aaa:	80 3a       	cpi	r24, 0xA0	; 160
     aac:	09 f5       	brne	.+66     	; 0xaf0 <__vector_26+0x34c>
     aae:	ff db       	rcall	.-2050   	; 0x2ae <stop_twi>
     ab0:	80 91 de 23 	lds	r24, 0x23DE
     ab4:	90 91 df 23 	lds	r25, 0x23DF
     ab8:	81 30       	cpi	r24, 0x01	; 1
     aba:	91 05       	cpc	r25, r1
     abc:	91 f0       	breq	.+36     	; 0xae2 <__vector_26+0x33e>
     abe:	1c f4       	brge	.+6      	; 0xac6 <__vector_26+0x322>
     ac0:	89 2b       	or	r24, r25
     ac2:	39 f0       	breq	.+14     	; 0xad2 <__vector_26+0x32e>
     ac4:	15 c0       	rjmp	.+42     	; 0xaf0 <__vector_26+0x34c>
     ac6:	84 30       	cpi	r24, 0x04	; 4
     ac8:	91 05       	cpc	r25, r1
     aca:	39 f0       	breq	.+14     	; 0xada <__vector_26+0x336>
     acc:	05 97       	sbiw	r24, 0x05	; 5
     ace:	81 f4       	brne	.+32     	; 0xaf0 <__vector_26+0x34c>
     ad0:	0c c0       	rjmp	.+24     	; 0xaea <__vector_26+0x346>
     ad2:	81 e0       	ldi	r24, 0x01	; 1
     ad4:	80 93 be 22 	sts	0x22BE, r24
     ad8:	0b c0       	rjmp	.+22     	; 0xaf0 <__vector_26+0x34c>
     ada:	81 e0       	ldi	r24, 0x01	; 1
     adc:	80 93 bb 22 	sts	0x22BB, r24
     ae0:	07 c0       	rjmp	.+14     	; 0xaf0 <__vector_26+0x34c>
     ae2:	81 e0       	ldi	r24, 0x01	; 1
     ae4:	80 93 bd 22 	sts	0x22BD, r24
     ae8:	03 c0       	rjmp	.+6      	; 0xaf0 <__vector_26+0x34c>
     aea:	81 e0       	ldi	r24, 0x01	; 1
     aec:	80 93 bc 22 	sts	0x22BC, r24
     af0:	f3 db       	rcall	.-2074   	; 0x2d8 <reset_TWI>
     af2:	ff 91       	pop	r31
     af4:	ef 91       	pop	r30
     af6:	df 91       	pop	r29
     af8:	cf 91       	pop	r28
     afa:	bf 91       	pop	r27
     afc:	af 91       	pop	r26
     afe:	9f 91       	pop	r25
     b00:	8f 91       	pop	r24
     b02:	7f 91       	pop	r23
     b04:	6f 91       	pop	r22
     b06:	5f 91       	pop	r21
     b08:	4f 91       	pop	r20
     b0a:	3f 91       	pop	r19
     b0c:	2f 91       	pop	r18
     b0e:	0f 90       	pop	r0
     b10:	0b be       	out	0x3b, r0	; 59
     b12:	0f 90       	pop	r0
     b14:	0f be       	out	0x3f, r0	; 63
     b16:	0f 90       	pop	r0
     b18:	1f 90       	pop	r1
     b1a:	18 95       	reti

00000b1c <USART_init>:
{
	for(int i = 0; i < gRxBuffer[1]; i++)
	{
		gTxPayload[i] = gRxBuffer[i+2];
	}
	USART_SendPacket(gRxBuffer[0], gRxBuffer[1]);
     b1c:	10 92 c5 00 	sts	0x00C5, r1
     b20:	89 e0       	ldi	r24, 0x09	; 9
     b22:	80 93 c4 00 	sts	0x00C4, r24
     b26:	88 e9       	ldi	r24, 0x98	; 152
     b28:	80 93 c1 00 	sts	0x00C1, r24
     b2c:	86 e0       	ldi	r24, 0x06	; 6
     b2e:	80 93 c2 00 	sts	0x00C2, r24
     b32:	08 95       	ret

00000b34 <USART_CheckTxReady>:
     b34:	80 91 c0 00 	lds	r24, 0x00C0
     b38:	80 72       	andi	r24, 0x20	; 32
     b3a:	08 95       	ret

00000b3c <USART_WriteByte>:
     b3c:	cf 93       	push	r28
     b3e:	c8 2f       	mov	r28, r24
     b40:	f9 df       	rcall	.-14     	; 0xb34 <USART_CheckTxReady>
     b42:	88 23       	and	r24, r24
     b44:	e9 f3       	breq	.-6      	; 0xb40 <USART_WriteByte+0x4>
     b46:	c0 93 c6 00 	sts	0x00C6, r28
     b4a:	cf 91       	pop	r28
     b4c:	08 95       	ret

00000b4e <USART_crc16>:
     b4e:	cf 92       	push	r12
     b50:	df 92       	push	r13
     b52:	ef 92       	push	r14
     b54:	ff 92       	push	r15
     b56:	0f 93       	push	r16
     b58:	1f 93       	push	r17
     b5a:	cf 93       	push	r28
     b5c:	df 93       	push	r29
     b5e:	66 23       	and	r22, r22
     b60:	09 f4       	brne	.+2      	; 0xb64 <USART_crc16+0x16>
     b62:	3e c0       	rjmp	.+124    	; 0xbe0 <USART_crc16+0x92>
     b64:	06 2f       	mov	r16, r22
     b66:	10 e0       	ldi	r17, 0x00	; 0
     b68:	4f ef       	ldi	r20, 0xFF	; 255
     b6a:	5f ef       	ldi	r21, 0xFF	; 255
     b6c:	ee ef       	ldi	r30, 0xFE	; 254
     b6e:	ff ef       	ldi	r31, 0xFF	; 255
     b70:	c6 2e       	mov	r12, r22
     b72:	d1 2c       	mov	r13, r1
     b74:	e8 2e       	mov	r14, r24
     b76:	f1 2c       	mov	r15, r1
     b78:	c8 e0       	ldi	r28, 0x08	; 8
     b7a:	d0 e0       	ldi	r29, 0x00	; 0
     b7c:	ee 3f       	cpi	r30, 0xFE	; 254
     b7e:	6f ef       	ldi	r22, 0xFF	; 255
     b80:	f6 07       	cpc	r31, r22
     b82:	19 f4       	brne	.+6      	; 0xb8a <USART_crc16+0x3c>
     b84:	8e 2d       	mov	r24, r14
     b86:	9f 2d       	mov	r25, r15
     b88:	30 c0       	rjmp	.+96     	; 0xbea <USART_crc16+0x9c>
     b8a:	ef 3f       	cpi	r30, 0xFF	; 255
     b8c:	8f ef       	ldi	r24, 0xFF	; 255
     b8e:	f8 07       	cpc	r31, r24
     b90:	19 f4       	brne	.+6      	; 0xb98 <USART_crc16+0x4a>
     b92:	8c 2d       	mov	r24, r12
     b94:	9d 2d       	mov	r25, r13
     b96:	29 c0       	rjmp	.+82     	; 0xbea <USART_crc16+0x9c>
     b98:	df 01       	movw	r26, r30
     b9a:	a9 50       	subi	r26, 0x09	; 9
     b9c:	ba 4d       	sbci	r27, 0xDA	; 218
     b9e:	8c 91       	ld	r24, X
     ba0:	90 e0       	ldi	r25, 0x00	; 0
     ba2:	23 c0       	rjmp	.+70     	; 0xbea <USART_crc16+0x9c>
     ba4:	ba 01       	movw	r22, r20
     ba6:	68 27       	eor	r22, r24
     ba8:	79 27       	eor	r23, r25
     baa:	60 ff       	sbrs	r22, 0
     bac:	07 c0       	rjmp	.+14     	; 0xbbc <USART_crc16+0x6e>
     bae:	56 95       	lsr	r21
     bb0:	47 95       	ror	r20
     bb2:	68 e0       	ldi	r22, 0x08	; 8
     bb4:	46 27       	eor	r20, r22
     bb6:	64 e8       	ldi	r22, 0x84	; 132
     bb8:	56 27       	eor	r21, r22
     bba:	02 c0       	rjmp	.+4      	; 0xbc0 <USART_crc16+0x72>
     bbc:	56 95       	lsr	r21
     bbe:	47 95       	ror	r20
     bc0:	96 95       	lsr	r25
     bc2:	87 95       	ror	r24
     bc4:	21 50       	subi	r18, 0x01	; 1
     bc6:	31 09       	sbc	r19, r1
     bc8:	69 f7       	brne	.-38     	; 0xba4 <USART_crc16+0x56>
     bca:	31 96       	adiw	r30, 0x01	; 1
     bcc:	e0 17       	cp	r30, r16
     bce:	f1 07       	cpc	r31, r17
     bd0:	a9 f6       	brne	.-86     	; 0xb7c <USART_crc16+0x2e>
     bd2:	9a 01       	movw	r18, r20
     bd4:	20 95       	com	r18
     bd6:	30 95       	com	r19
     bd8:	32 27       	eor	r19, r18
     bda:	23 27       	eor	r18, r19
     bdc:	32 27       	eor	r19, r18
     bde:	02 c0       	rjmp	.+4      	; 0xbe4 <USART_crc16+0x96>
     be0:	20 e0       	ldi	r18, 0x00	; 0
     be2:	30 e0       	ldi	r19, 0x00	; 0
     be4:	82 2f       	mov	r24, r18
     be6:	93 2f       	mov	r25, r19
     be8:	02 c0       	rjmp	.+4      	; 0xbee <USART_crc16+0xa0>
     bea:	9e 01       	movw	r18, r28
     bec:	db cf       	rjmp	.-74     	; 0xba4 <USART_crc16+0x56>
     bee:	df 91       	pop	r29
     bf0:	cf 91       	pop	r28
     bf2:	1f 91       	pop	r17
     bf4:	0f 91       	pop	r16
     bf6:	ff 90       	pop	r15
     bf8:	ef 90       	pop	r14
     bfa:	df 90       	pop	r13
     bfc:	cf 90       	pop	r12
     bfe:	08 95       	ret

00000c00 <USART_SendPacket>:
     c00:	0f 93       	push	r16
     c02:	1f 93       	push	r17
     c04:	cf 93       	push	r28
     c06:	df 93       	push	r29
     c08:	9e e7       	ldi	r25, 0x7E	; 126
     c0a:	90 93 f6 26 	sts	0x26F6, r25
     c0e:	80 93 f7 26 	sts	0x26F7, r24
     c12:	60 93 f8 26 	sts	0x26F8, r22
     c16:	26 2f       	mov	r18, r22
     c18:	30 e0       	ldi	r19, 0x00	; 0
     c1a:	12 16       	cp	r1, r18
     c1c:	13 06       	cpc	r1, r19
     c1e:	4c f5       	brge	.+82     	; 0xc72 <USART_SendPacket+0x72>
     c20:	e7 ef       	ldi	r30, 0xF7	; 247
     c22:	f5 e2       	ldi	r31, 0x25	; 37
     c24:	03 e0       	ldi	r16, 0x03	; 3
     c26:	10 e0       	ldi	r17, 0x00	; 0
     c28:	c0 e0       	ldi	r28, 0x00	; 0
     c2a:	d0 e0       	ldi	r29, 0x00	; 0
     c2c:	7d e7       	ldi	r23, 0x7D	; 125
     c2e:	50 e2       	ldi	r21, 0x20	; 32
     c30:	90 81       	ld	r25, Z
     c32:	49 2f       	mov	r20, r25
     c34:	4d 57       	subi	r20, 0x7D	; 125
     c36:	42 30       	cpi	r20, 0x02	; 2
     c38:	80 f4       	brcc	.+32     	; 0xc5a <USART_SendPacket+0x5a>
     c3a:	d8 01       	movw	r26, r16
     c3c:	aa 50       	subi	r26, 0x0A	; 10
     c3e:	b9 4d       	sbci	r27, 0xD9	; 217
     c40:	ac 0f       	add	r26, r28
     c42:	bd 1f       	adc	r27, r29
     c44:	7c 93       	st	X, r23
     c46:	0f 5f       	subi	r16, 0xFF	; 255
     c48:	1f 4f       	sbci	r17, 0xFF	; 255
     c4a:	d8 01       	movw	r26, r16
     c4c:	aa 50       	subi	r26, 0x0A	; 10
     c4e:	b9 4d       	sbci	r27, 0xD9	; 217
     c50:	ac 0f       	add	r26, r28
     c52:	bd 1f       	adc	r27, r29
     c54:	95 27       	eor	r25, r21
     c56:	9c 93       	st	X, r25
     c58:	06 c0       	rjmp	.+12     	; 0xc66 <USART_SendPacket+0x66>
     c5a:	d8 01       	movw	r26, r16
     c5c:	aa 50       	subi	r26, 0x0A	; 10
     c5e:	b9 4d       	sbci	r27, 0xD9	; 217
     c60:	ac 0f       	add	r26, r28
     c62:	bd 1f       	adc	r27, r29
     c64:	9c 93       	st	X, r25
     c66:	21 96       	adiw	r28, 0x01	; 1
     c68:	31 96       	adiw	r30, 0x01	; 1
     c6a:	c2 17       	cp	r28, r18
     c6c:	d3 07       	cpc	r29, r19
     c6e:	01 f7       	brne	.-64     	; 0xc30 <USART_SendPacket+0x30>
     c70:	04 c0       	rjmp	.+8      	; 0xc7a <USART_SendPacket+0x7a>
     c72:	03 e0       	ldi	r16, 0x03	; 3
     c74:	10 e0       	ldi	r17, 0x00	; 0
     c76:	c0 e0       	ldi	r28, 0x00	; 0
     c78:	d0 e0       	ldi	r29, 0x00	; 0
     c7a:	69 df       	rcall	.-302    	; 0xb4e <USART_crc16>
     c7c:	f8 01       	movw	r30, r16
     c7e:	ea 50       	subi	r30, 0x0A	; 10
     c80:	f9 4d       	sbci	r31, 0xD9	; 217
     c82:	ec 0f       	add	r30, r28
     c84:	fd 1f       	adc	r31, r29
     c86:	90 83       	st	Z, r25
     c88:	81 83       	std	Z+1, r24	; 0x01
     c8a:	22 96       	adiw	r28, 0x02	; 2
     c8c:	0c 0f       	add	r16, r28
     c8e:	1d 1f       	adc	r17, r29
     c90:	f8 01       	movw	r30, r16
     c92:	ea 50       	subi	r30, 0x0A	; 10
     c94:	f9 4d       	sbci	r31, 0xD9	; 217
     c96:	8e e7       	ldi	r24, 0x7E	; 126
     c98:	80 83       	st	Z, r24
     c9a:	c8 01       	movw	r24, r16
     c9c:	01 96       	adiw	r24, 0x01	; 1
     c9e:	18 16       	cp	r1, r24
     ca0:	19 06       	cpc	r1, r25
     ca2:	4c f4       	brge	.+18     	; 0xcb6 <USART_SendPacket+0xb6>
     ca4:	c6 ef       	ldi	r28, 0xF6	; 246
     ca6:	d6 e2       	ldi	r29, 0x26	; 38
     ca8:	09 50       	subi	r16, 0x09	; 9
     caa:	19 4d       	sbci	r17, 0xD9	; 217
     cac:	89 91       	ld	r24, Y+
     cae:	46 df       	rcall	.-372    	; 0xb3c <USART_WriteByte>
     cb0:	c0 17       	cp	r28, r16
     cb2:	d1 07       	cpc	r29, r17
     cb4:	d9 f7       	brne	.-10     	; 0xcac <USART_SendPacket+0xac>
     cb6:	df 91       	pop	r29
     cb8:	cf 91       	pop	r28
     cba:	1f 91       	pop	r17
     cbc:	0f 91       	pop	r16
     cbe:	08 95       	ret

00000cc0 <USART_SendMessage>:
     cc0:	cf 93       	push	r28
     cc2:	df 93       	push	r29
     cc4:	c8 2f       	mov	r28, r24
     cc6:	d9 2f       	mov	r29, r25
     cc8:	47 ef       	ldi	r20, 0xF7	; 247
     cca:	55 e2       	ldi	r21, 0x25	; 37
     ccc:	20 e0       	ldi	r18, 0x00	; 0
     cce:	30 e0       	ldi	r19, 0x00	; 0
     cd0:	06 c0       	rjmp	.+12     	; 0xcde <USART_SendMessage+0x1e>
     cd2:	69 91       	ld	r22, Y+
     cd4:	fa 01       	movw	r30, r20
     cd6:	61 93       	st	Z+, r22
     cd8:	af 01       	movw	r20, r30
     cda:	2f 5f       	subi	r18, 0xFF	; 255
     cdc:	3f 4f       	sbci	r19, 0xFF	; 255
     cde:	e8 2f       	mov	r30, r24
     ce0:	f9 2f       	mov	r31, r25
     ce2:	df 01       	movw	r26, r30
     ce4:	0d 90       	ld	r0, X+
     ce6:	00 20       	and	r0, r0
     ce8:	e9 f7       	brne	.-6      	; 0xce4 <USART_SendMessage+0x24>
     cea:	11 97       	sbiw	r26, 0x01	; 1
     cec:	bd 01       	movw	r22, r26
     cee:	6e 1b       	sub	r22, r30
     cf0:	7f 0b       	sbc	r23, r31
     cf2:	26 17       	cp	r18, r22
     cf4:	37 07       	cpc	r19, r23
     cf6:	68 f3       	brcs	.-38     	; 0xcd2 <USART_SendMessage+0x12>
     cf8:	8d e4       	ldi	r24, 0x4D	; 77
     cfa:	82 df       	rcall	.-252    	; 0xc00 <USART_SendPacket>
     cfc:	df 91       	pop	r29
     cfe:	cf 91       	pop	r28
     d00:	08 95       	ret

00000d02 <USART_SendValue>:
     d02:	a8 2f       	mov	r26, r24
     d04:	b9 2f       	mov	r27, r25
     d06:	e7 ef       	ldi	r30, 0xF7	; 247
     d08:	f5 e2       	ldi	r31, 0x25	; 37
     d0a:	8b ef       	ldi	r24, 0xFB	; 251
     d0c:	95 e2       	ldi	r25, 0x25	; 37
     d0e:	2d 91       	ld	r18, X+
     d10:	21 93       	st	Z+, r18
     d12:	e8 17       	cp	r30, r24
     d14:	f9 07       	cpc	r31, r25
     d16:	d9 f7       	brne	.-10     	; 0xd0e <USART_SendValue+0xc>
     d18:	64 e0       	ldi	r22, 0x04	; 4
     d1a:	86 e5       	ldi	r24, 0x56	; 86
     d1c:	71 cf       	rjmp	.-286    	; 0xc00 <USART_SendPacket>

00000d1e <USART_SendSensors>:
     d1e:	0f 93       	push	r16
     d20:	1f 93       	push	r17
     d22:	cf 93       	push	r28
     d24:	df 93       	push	r29
     d26:	07 ef       	ldi	r16, 0xF7	; 247
     d28:	15 e2       	ldi	r17, 0x25	; 37
     d2a:	c0 e0       	ldi	r28, 0x00	; 0
     d2c:	d0 e0       	ldi	r29, 0x00	; 0
     d2e:	ce 01       	movw	r24, r28
     d30:	86 dc       	rcall	.-1780   	; 0x63e <TWI_get_sensor>
     d32:	f8 01       	movw	r30, r16
     d34:	81 93       	st	Z+, r24
     d36:	8f 01       	movw	r16, r30
     d38:	21 96       	adiw	r28, 0x01	; 1
     d3a:	c8 30       	cpi	r28, 0x08	; 8
     d3c:	d1 05       	cpc	r29, r1
     d3e:	b9 f7       	brne	.-18     	; 0xd2e <USART_SendSensors+0x10>
     d40:	83 dc       	rcall	.-1786   	; 0x648 <TWI_get_servo>
     d42:	80 93 ff 25 	sts	0x25FF, r24
     d46:	69 e0       	ldi	r22, 0x09	; 9
     d48:	83 e5       	ldi	r24, 0x53	; 83
     d4a:	5a df       	rcall	.-332    	; 0xc00 <USART_SendPacket>
     d4c:	df 91       	pop	r29
     d4e:	cf 91       	pop	r28
     d50:	1f 91       	pop	r17
     d52:	0f 91       	pop	r16
     d54:	08 95       	ret

00000d56 <USART_DecodeMessageRxFIFO>:
     d56:	8f 92       	push	r8
     d58:	9f 92       	push	r9
     d5a:	af 92       	push	r10
     d5c:	bf 92       	push	r11
     d5e:	cf 92       	push	r12
     d60:	df 92       	push	r13
     d62:	ef 92       	push	r14
     d64:	ff 92       	push	r15
     d66:	0f 93       	push	r16
     d68:	1f 93       	push	r17
     d6a:	cf 93       	push	r28
     d6c:	df 93       	push	r29
     d6e:	cd b7       	in	r28, 0x3d	; 61
     d70:	de b7       	in	r29, 0x3e	; 62
     d72:	ad b6       	in	r10, 0x3d	; 61
     d74:	be b6       	in	r11, 0x3e	; 62
     d76:	60 e0       	ldi	r22, 0x00	; 0
     d78:	70 e0       	ldi	r23, 0x00	; 0
     d7a:	80 91 08 11 	lds	r24, 0x1108
     d7e:	90 91 09 11 	lds	r25, 0x1109
     d82:	12 da       	rcall	.-3036   	; 0x1a8 <FifoRead>
     d84:	88 23       	and	r24, r24
     d86:	29 f0       	breq	.+10     	; 0xd92 <USART_DecodeMessageRxFIFO+0x3c>
     d88:	80 e1       	ldi	r24, 0x10	; 16
     d8a:	91 e2       	ldi	r25, 0x21	; 33
     d8c:	99 df       	rcall	.-206    	; 0xcc0 <USART_SendMessage>
     d8e:	81 e0       	ldi	r24, 0x01	; 1
     d90:	42 c0       	rjmp	.+132    	; 0xe16 <USART_DecodeMessageRxFIFO+0xc0>
     d92:	c0 90 00 00 	lds	r12, 0x0000
     d96:	d1 2c       	mov	r13, r1
     d98:	96 01       	movw	r18, r12
     d9a:	21 50       	subi	r18, 0x01	; 1
     d9c:	31 09       	sbc	r19, r1
     d9e:	81 e0       	ldi	r24, 0x01	; 1
     da0:	90 e0       	ldi	r25, 0x00	; 0
     da2:	c1 14       	cp	r12, r1
     da4:	d1 04       	cpc	r13, r1
     da6:	11 f0       	breq	.+4      	; 0xdac <USART_DecodeMessageRxFIFO+0x56>
     da8:	80 e0       	ldi	r24, 0x00	; 0
     daa:	90 e0       	ldi	r25, 0x00	; 0
     dac:	82 0f       	add	r24, r18
     dae:	93 1f       	adc	r25, r19
     db0:	2d b7       	in	r18, 0x3d	; 61
     db2:	3e b7       	in	r19, 0x3e	; 62
     db4:	28 1b       	sub	r18, r24
     db6:	39 0b       	sbc	r19, r25
     db8:	0f b6       	in	r0, 0x3f	; 63
     dba:	f8 94       	cli
     dbc:	3e bf       	out	0x3e, r19	; 62
     dbe:	0f be       	out	0x3f, r0	; 63
     dc0:	2d bf       	out	0x3d, r18	; 61
     dc2:	8d b7       	in	r24, 0x3d	; 61
     dc4:	9e b7       	in	r25, 0x3e	; 62
     dc6:	01 96       	adiw	r24, 0x01	; 1
     dc8:	88 2e       	mov	r8, r24
     dca:	99 2e       	mov	r9, r25
     dcc:	1c 14       	cp	r1, r12
     dce:	1d 04       	cpc	r1, r13
     dd0:	e4 f4       	brge	.+56     	; 0xe0a <USART_DecodeMessageRxFIFO+0xb4>
     dd2:	e8 2e       	mov	r14, r24
     dd4:	f9 2e       	mov	r15, r25
     dd6:	00 e0       	ldi	r16, 0x00	; 0
     dd8:	10 e0       	ldi	r17, 0x00	; 0
     dda:	60 e0       	ldi	r22, 0x00	; 0
     ddc:	70 e0       	ldi	r23, 0x00	; 0
     dde:	80 91 08 11 	lds	r24, 0x1108
     de2:	90 91 09 11 	lds	r25, 0x1109
     de6:	e0 d9       	rcall	.-3136   	; 0x1a8 <FifoRead>
     de8:	88 23       	and	r24, r24
     dea:	29 f0       	breq	.+10     	; 0xdf6 <USART_DecodeMessageRxFIFO+0xa0>
     dec:	82 e3       	ldi	r24, 0x32	; 50
     dee:	91 e2       	ldi	r25, 0x21	; 33
     df0:	67 df       	rcall	.-306    	; 0xcc0 <USART_SendMessage>
     df2:	81 e0       	ldi	r24, 0x01	; 1
     df4:	10 c0       	rjmp	.+32     	; 0xe16 <USART_DecodeMessageRxFIFO+0xc0>
     df6:	80 91 00 00 	lds	r24, 0x0000
     dfa:	f7 01       	movw	r30, r14
     dfc:	81 93       	st	Z+, r24
     dfe:	7f 01       	movw	r14, r30
     e00:	0f 5f       	subi	r16, 0xFF	; 255
     e02:	1f 4f       	sbci	r17, 0xFF	; 255
     e04:	0c 15       	cp	r16, r12
     e06:	1d 05       	cpc	r17, r13
     e08:	44 f3       	brlt	.-48     	; 0xdda <USART_DecodeMessageRxFIFO+0x84>
     e0a:	a6 01       	movw	r20, r12
     e0c:	68 2d       	mov	r22, r8
     e0e:	79 2d       	mov	r23, r9
     e10:	80 e4       	ldi	r24, 0x40	; 64
     e12:	d7 db       	rcall	.-2130   	; 0x5c2 <TWI_send_string_fixed_length>
     e14:	80 e0       	ldi	r24, 0x00	; 0
     e16:	0f b6       	in	r0, 0x3f	; 63
     e18:	f8 94       	cli
     e1a:	be be       	out	0x3e, r11	; 62
     e1c:	0f be       	out	0x3f, r0	; 63
     e1e:	ad be       	out	0x3d, r10	; 61
     e20:	df 91       	pop	r29
     e22:	cf 91       	pop	r28
     e24:	1f 91       	pop	r17
     e26:	0f 91       	pop	r16
     e28:	ff 90       	pop	r15
     e2a:	ef 90       	pop	r14
     e2c:	df 90       	pop	r13
     e2e:	cf 90       	pop	r12
     e30:	bf 90       	pop	r11
     e32:	af 90       	pop	r10
     e34:	9f 90       	pop	r9
     e36:	8f 90       	pop	r8
     e38:	08 95       	ret

00000e3a <USART_DecodeCommandRxFIFO>:
     e3a:	cf 93       	push	r28
     e3c:	df 93       	push	r29
     e3e:	60 e0       	ldi	r22, 0x00	; 0
     e40:	70 e0       	ldi	r23, 0x00	; 0
     e42:	80 91 08 11 	lds	r24, 0x1108
     e46:	90 91 09 11 	lds	r25, 0x1109
     e4a:	ae d9       	rcall	.-3236   	; 0x1a8 <FifoRead>
     e4c:	88 23       	and	r24, r24
     e4e:	29 f0       	breq	.+10     	; 0xe5a <USART_DecodeCommandRxFIFO+0x20>
     e50:	85 e5       	ldi	r24, 0x55	; 85
     e52:	91 e2       	ldi	r25, 0x21	; 33
     e54:	35 df       	rcall	.-406    	; 0xcc0 <USART_SendMessage>
     e56:	81 e0       	ldi	r24, 0x01	; 1
     e58:	42 c0       	rjmp	.+132    	; 0xede <USART_DecodeCommandRxFIFO+0xa4>
     e5a:	80 91 00 00 	lds	r24, 0x0000
     e5e:	83 30       	cpi	r24, 0x03	; 3
     e60:	09 f0       	breq	.+2      	; 0xe64 <USART_DecodeCommandRxFIFO+0x2a>
     e62:	39 c0       	rjmp	.+114    	; 0xed6 <USART_DecodeCommandRxFIFO+0x9c>
     e64:	60 e0       	ldi	r22, 0x00	; 0
     e66:	70 e0       	ldi	r23, 0x00	; 0
     e68:	80 91 08 11 	lds	r24, 0x1108
     e6c:	90 91 09 11 	lds	r25, 0x1109
     e70:	9b d9       	rcall	.-3274   	; 0x1a8 <FifoRead>
     e72:	88 23       	and	r24, r24
     e74:	29 f0       	breq	.+10     	; 0xe80 <USART_DecodeCommandRxFIFO+0x46>
     e76:	87 e7       	ldi	r24, 0x77	; 119
     e78:	91 e2       	ldi	r25, 0x21	; 33
     e7a:	22 df       	rcall	.-444    	; 0xcc0 <USART_SendMessage>
     e7c:	81 e0       	ldi	r24, 0x01	; 1
     e7e:	2f c0       	rjmp	.+94     	; 0xede <USART_DecodeCommandRxFIFO+0xa4>
     e80:	c0 91 00 00 	lds	r28, 0x0000
     e84:	60 e0       	ldi	r22, 0x00	; 0
     e86:	70 e0       	ldi	r23, 0x00	; 0
     e88:	80 91 08 11 	lds	r24, 0x1108
     e8c:	90 91 09 11 	lds	r25, 0x1109
     e90:	8b d9       	rcall	.-3306   	; 0x1a8 <FifoRead>
     e92:	88 23       	and	r24, r24
     e94:	29 f0       	breq	.+10     	; 0xea0 <USART_DecodeCommandRxFIFO+0x66>
     e96:	8f e9       	ldi	r24, 0x9F	; 159
     e98:	91 e2       	ldi	r25, 0x21	; 33
     e9a:	12 df       	rcall	.-476    	; 0xcc0 <USART_SendMessage>
     e9c:	81 e0       	ldi	r24, 0x01	; 1
     e9e:	1f c0       	rjmp	.+62     	; 0xede <USART_DecodeCommandRxFIFO+0xa4>
     ea0:	d0 91 00 00 	lds	r29, 0x0000
     ea4:	60 e0       	ldi	r22, 0x00	; 0
     ea6:	70 e0       	ldi	r23, 0x00	; 0
     ea8:	80 91 08 11 	lds	r24, 0x1108
     eac:	90 91 09 11 	lds	r25, 0x1109
     eb0:	7b d9       	rcall	.-3338   	; 0x1a8 <FifoRead>
     eb2:	88 23       	and	r24, r24
     eb4:	29 f0       	breq	.+10     	; 0xec0 <USART_DecodeCommandRxFIFO+0x86>
     eb6:	86 ec       	ldi	r24, 0xC6	; 198
     eb8:	91 e2       	ldi	r25, 0x21	; 33
     eba:	02 df       	rcall	.-508    	; 0xcc0 <USART_SendMessage>
     ebc:	81 e0       	ldi	r24, 0x01	; 1
     ebe:	0f c0       	rjmp	.+30     	; 0xede <USART_DecodeCommandRxFIFO+0xa4>
     ec0:	40 91 00 00 	lds	r20, 0x0000
     ec4:	92 b1       	in	r25, 0x02	; 2
     ec6:	81 e0       	ldi	r24, 0x01	; 1
     ec8:	89 27       	eor	r24, r25
     eca:	82 b9       	out	0x02, r24	; 2
     ecc:	6d 2f       	mov	r22, r29
     ece:	8c 2f       	mov	r24, r28
     ed0:	02 db       	rcall	.-2556   	; 0x4d6 <TWI_send_command>
     ed2:	80 e0       	ldi	r24, 0x00	; 0
     ed4:	04 c0       	rjmp	.+8      	; 0xede <USART_DecodeCommandRxFIFO+0xa4>
     ed6:	8a ee       	ldi	r24, 0xEA	; 234
     ed8:	91 e2       	ldi	r25, 0x21	; 33
     eda:	f2 de       	rcall	.-540    	; 0xcc0 <USART_SendMessage>
     edc:	81 e0       	ldi	r24, 0x01	; 1
     ede:	df 91       	pop	r29
     ee0:	cf 91       	pop	r28
     ee2:	08 95       	ret

00000ee4 <USART_DecodeParametersRxFIFO>:
     ee4:	cf 93       	push	r28
     ee6:	df 93       	push	r29
     ee8:	60 e0       	ldi	r22, 0x00	; 0
     eea:	70 e0       	ldi	r23, 0x00	; 0
     eec:	80 91 08 11 	lds	r24, 0x1108
     ef0:	90 91 09 11 	lds	r25, 0x1109
     ef4:	59 d9       	rcall	.-3406   	; 0x1a8 <FifoRead>
     ef6:	88 23       	and	r24, r24
     ef8:	29 f0       	breq	.+10     	; 0xf04 <USART_DecodeParametersRxFIFO+0x20>
     efa:	81 e1       	ldi	r24, 0x11	; 17
     efc:	92 e2       	ldi	r25, 0x22	; 34
     efe:	e0 de       	rcall	.-576    	; 0xcc0 <USART_SendMessage>
     f00:	81 e0       	ldi	r24, 0x01	; 1
     f02:	3e c0       	rjmp	.+124    	; 0xf80 <USART_DecodeParametersRxFIFO+0x9c>
     f04:	80 91 00 00 	lds	r24, 0x0000
     f08:	83 30       	cpi	r24, 0x03	; 3
     f0a:	b1 f5       	brne	.+108    	; 0xf78 <USART_DecodeParametersRxFIFO+0x94>
     f0c:	60 e0       	ldi	r22, 0x00	; 0
     f0e:	70 e0       	ldi	r23, 0x00	; 0
     f10:	80 91 08 11 	lds	r24, 0x1108
     f14:	90 91 09 11 	lds	r25, 0x1109
     f18:	47 d9       	rcall	.-3442   	; 0x1a8 <FifoRead>
     f1a:	88 23       	and	r24, r24
     f1c:	29 f0       	breq	.+10     	; 0xf28 <USART_DecodeParametersRxFIFO+0x44>
     f1e:	86 e3       	ldi	r24, 0x36	; 54
     f20:	92 e2       	ldi	r25, 0x22	; 34
     f22:	ce de       	rcall	.-612    	; 0xcc0 <USART_SendMessage>
     f24:	81 e0       	ldi	r24, 0x01	; 1
     f26:	2c c0       	rjmp	.+88     	; 0xf80 <USART_DecodeParametersRxFIFO+0x9c>
     f28:	c0 91 00 00 	lds	r28, 0x0000
     f2c:	60 e0       	ldi	r22, 0x00	; 0
     f2e:	70 e0       	ldi	r23, 0x00	; 0
     f30:	80 91 08 11 	lds	r24, 0x1108
     f34:	90 91 09 11 	lds	r25, 0x1109
     f38:	37 d9       	rcall	.-3474   	; 0x1a8 <FifoRead>
     f3a:	88 23       	and	r24, r24
     f3c:	29 f0       	breq	.+10     	; 0xf48 <USART_DecodeParametersRxFIFO+0x64>
     f3e:	86 e3       	ldi	r24, 0x36	; 54
     f40:	92 e2       	ldi	r25, 0x22	; 34
     f42:	be de       	rcall	.-644    	; 0xcc0 <USART_SendMessage>
     f44:	81 e0       	ldi	r24, 0x01	; 1
     f46:	1c c0       	rjmp	.+56     	; 0xf80 <USART_DecodeParametersRxFIFO+0x9c>
     f48:	d0 91 00 00 	lds	r29, 0x0000
     f4c:	60 e0       	ldi	r22, 0x00	; 0
     f4e:	70 e0       	ldi	r23, 0x00	; 0
     f50:	80 91 08 11 	lds	r24, 0x1108
     f54:	90 91 09 11 	lds	r25, 0x1109
     f58:	27 d9       	rcall	.-3506   	; 0x1a8 <FifoRead>
     f5a:	88 23       	and	r24, r24
     f5c:	29 f0       	breq	.+10     	; 0xf68 <USART_DecodeParametersRxFIFO+0x84>
     f5e:	86 e3       	ldi	r24, 0x36	; 54
     f60:	92 e2       	ldi	r25, 0x22	; 34
     f62:	ae de       	rcall	.-676    	; 0xcc0 <USART_SendMessage>
     f64:	81 e0       	ldi	r24, 0x01	; 1
     f66:	0c c0       	rjmp	.+24     	; 0xf80 <USART_DecodeParametersRxFIFO+0x9c>
     f68:	20 91 00 00 	lds	r18, 0x0000
     f6c:	4d 2f       	mov	r20, r29
     f6e:	6c 2f       	mov	r22, r28
     f70:	80 e2       	ldi	r24, 0x20	; 32
     f72:	35 da       	rcall	.-2966   	; 0x3de <TWI_send_control_settings>
     f74:	80 e0       	ldi	r24, 0x00	; 0
     f76:	04 c0       	rjmp	.+8      	; 0xf80 <USART_DecodeParametersRxFIFO+0x9c>
     f78:	8a ee       	ldi	r24, 0xEA	; 234
     f7a:	91 e2       	ldi	r25, 0x21	; 33
     f7c:	a1 de       	rcall	.-702    	; 0xcc0 <USART_SendMessage>
     f7e:	81 e0       	ldi	r24, 0x01	; 1
     f80:	df 91       	pop	r29
     f82:	cf 91       	pop	r28
     f84:	08 95       	ret

00000f86 <USART_DecodeAutonomRxFIFO>:
     f86:	60 e0       	ldi	r22, 0x00	; 0
     f88:	70 e0       	ldi	r23, 0x00	; 0
     f8a:	80 91 08 11 	lds	r24, 0x1108
     f8e:	90 91 09 11 	lds	r25, 0x1109
     f92:	0a d9       	rcall	.-3564   	; 0x1a8 <FifoRead>
     f94:	88 23       	and	r24, r24
     f96:	29 f0       	breq	.+10     	; 0xfa2 <USART_DecodeAutonomRxFIFO+0x1c>
     f98:	8f e4       	ldi	r24, 0x4F	; 79
     f9a:	92 e2       	ldi	r25, 0x22	; 34
     f9c:	91 de       	rcall	.-734    	; 0xcc0 <USART_SendMessage>
     f9e:	81 e0       	ldi	r24, 0x01	; 1
     fa0:	08 95       	ret
     fa2:	80 91 00 00 	lds	r24, 0x0000
     fa6:	81 30       	cpi	r24, 0x01	; 1
     fa8:	c1 f4       	brne	.+48     	; 0xfda <USART_DecodeAutonomRxFIFO+0x54>
     faa:	60 e0       	ldi	r22, 0x00	; 0
     fac:	70 e0       	ldi	r23, 0x00	; 0
     fae:	80 91 08 11 	lds	r24, 0x1108
     fb2:	90 91 09 11 	lds	r25, 0x1109
     fb6:	f8 d8       	rcall	.-3600   	; 0x1a8 <FifoRead>
     fb8:	88 23       	and	r24, r24
     fba:	29 f0       	breq	.+10     	; 0xfc6 <USART_DecodeAutonomRxFIFO+0x40>
     fbc:	81 e7       	ldi	r24, 0x71	; 113
     fbe:	92 e2       	ldi	r25, 0x22	; 34
     fc0:	7f de       	rcall	.-770    	; 0xcc0 <USART_SendMessage>
     fc2:	81 e0       	ldi	r24, 0x01	; 1
     fc4:	08 95       	ret
     fc6:	60 91 00 00 	lds	r22, 0x0000
     fca:	92 b1       	in	r25, 0x02	; 2
     fcc:	82 e0       	ldi	r24, 0x02	; 2
     fce:	89 27       	eor	r24, r25
     fd0:	82 b9       	out	0x02, r24	; 2
     fd2:	80 e2       	ldi	r24, 0x20	; 32
     fd4:	4f da       	rcall	.-2914   	; 0x474 <TWI_send_autonom_settings>
     fd6:	80 e0       	ldi	r24, 0x00	; 0
     fd8:	08 95       	ret
     fda:	87 e8       	ldi	r24, 0x87	; 135
     fdc:	92 e2       	ldi	r25, 0x22	; 34
     fde:	70 de       	rcall	.-800    	; 0xcc0 <USART_SendMessage>
     fe0:	81 e0       	ldi	r24, 0x01	; 1
     fe2:	08 95       	ret

00000fe4 <USART_DecodeElevationRxFIFO>:
     fe4:	60 e0       	ldi	r22, 0x00	; 0
     fe6:	70 e0       	ldi	r23, 0x00	; 0
     fe8:	80 91 08 11 	lds	r24, 0x1108
     fec:	90 91 09 11 	lds	r25, 0x1109
     ff0:	db d8       	rcall	.-3658   	; 0x1a8 <FifoRead>
     ff2:	81 11       	cpse	r24, r1
     ff4:	16 c0       	rjmp	.+44     	; 0x1022 <USART_DecodeElevationRxFIFO+0x3e>
     ff6:	80 91 00 00 	lds	r24, 0x0000
     ffa:	81 30       	cpi	r24, 0x01	; 1
     ffc:	a1 f4       	brne	.+40     	; 0x1026 <USART_DecodeElevationRxFIFO+0x42>
     ffe:	60 e0       	ldi	r22, 0x00	; 0
    1000:	70 e0       	ldi	r23, 0x00	; 0
    1002:	80 91 08 11 	lds	r24, 0x1108
    1006:	90 91 09 11 	lds	r25, 0x1109
    100a:	ce d8       	rcall	.-3684   	; 0x1a8 <FifoRead>
    100c:	81 11       	cpse	r24, r1
    100e:	0d c0       	rjmp	.+26     	; 0x102a <USART_DecodeElevationRxFIFO+0x46>
    1010:	80 91 00 00 	lds	r24, 0x0000
    1014:	22 b1       	in	r18, 0x02	; 2
    1016:	91 e0       	ldi	r25, 0x01	; 1
    1018:	92 27       	eor	r25, r18
    101a:	92 b9       	out	0x02, r25	; 2
    101c:	a4 da       	rcall	.-2744   	; 0x566 <TWI_send_elevation>
    101e:	80 e0       	ldi	r24, 0x00	; 0
    1020:	08 95       	ret
    1022:	81 e0       	ldi	r24, 0x01	; 1
    1024:	08 95       	ret
    1026:	81 e0       	ldi	r24, 0x01	; 1
    1028:	08 95       	ret
    102a:	81 e0       	ldi	r24, 0x01	; 1
    102c:	08 95       	ret

0000102e <USART_DecodeRxFIFO>:
    102e:	22 c0       	rjmp	.+68     	; 0x1074 <USART_DecodeRxFIFO+0x46>
    1030:	80 91 00 00 	lds	r24, 0x0000
    1034:	85 34       	cpi	r24, 0x45	; 69
    1036:	d9 f0       	breq	.+54     	; 0x106e <USART_DecodeRxFIFO+0x40>
    1038:	28 f4       	brcc	.+10     	; 0x1044 <USART_DecodeRxFIFO+0x16>
    103a:	81 34       	cpi	r24, 0x41	; 65
    103c:	a1 f0       	breq	.+40     	; 0x1066 <USART_DecodeRxFIFO+0x38>
    103e:	83 34       	cpi	r24, 0x43	; 67
    1040:	c9 f4       	brne	.+50     	; 0x1074 <USART_DecodeRxFIFO+0x46>
    1042:	09 c0       	rjmp	.+18     	; 0x1056 <USART_DecodeRxFIFO+0x28>
    1044:	8d 34       	cpi	r24, 0x4D	; 77
    1046:	19 f0       	breq	.+6      	; 0x104e <USART_DecodeRxFIFO+0x20>
    1048:	80 35       	cpi	r24, 0x50	; 80
    104a:	a1 f4       	brne	.+40     	; 0x1074 <USART_DecodeRxFIFO+0x46>
    104c:	08 c0       	rjmp	.+16     	; 0x105e <USART_DecodeRxFIFO+0x30>
    104e:	83 de       	rcall	.-762    	; 0xd56 <USART_DecodeMessageRxFIFO>
    1050:	88 23       	and	r24, r24
    1052:	81 f0       	breq	.+32     	; 0x1074 <USART_DecodeRxFIFO+0x46>
    1054:	08 95       	ret
    1056:	f1 de       	rcall	.-542    	; 0xe3a <USART_DecodeCommandRxFIFO>
    1058:	88 23       	and	r24, r24
    105a:	61 f0       	breq	.+24     	; 0x1074 <USART_DecodeRxFIFO+0x46>
    105c:	08 95       	ret
    105e:	42 df       	rcall	.-380    	; 0xee4 <USART_DecodeParametersRxFIFO>
    1060:	88 23       	and	r24, r24
    1062:	41 f0       	breq	.+16     	; 0x1074 <USART_DecodeRxFIFO+0x46>
    1064:	08 95       	ret
    1066:	8f df       	rcall	.-226    	; 0xf86 <USART_DecodeAutonomRxFIFO>
    1068:	88 23       	and	r24, r24
    106a:	21 f0       	breq	.+8      	; 0x1074 <USART_DecodeRxFIFO+0x46>
    106c:	08 95       	ret
    106e:	ba df       	rcall	.-140    	; 0xfe4 <USART_DecodeElevationRxFIFO>
    1070:	81 11       	cpse	r24, r1
    1072:	09 c0       	rjmp	.+18     	; 0x1086 <USART_DecodeRxFIFO+0x58>
    1074:	60 e0       	ldi	r22, 0x00	; 0
    1076:	70 e0       	ldi	r23, 0x00	; 0
    1078:	80 91 08 11 	lds	r24, 0x1108
    107c:	90 91 09 11 	lds	r25, 0x1109
    1080:	93 d8       	rcall	.-3802   	; 0x1a8 <FifoRead>
    1082:	88 23       	and	r24, r24
    1084:	a9 f2       	breq	.-86     	; 0x1030 <USART_DecodeRxFIFO+0x2>
    1086:	08 95       	ret

00001088 <__vector_20>:
}


ISR (USART0_RX_vect)
{
    1088:	1f 92       	push	r1
    108a:	0f 92       	push	r0
    108c:	0f b6       	in	r0, 0x3f	; 63
    108e:	0f 92       	push	r0
    1090:	11 24       	eor	r1, r1
    1092:	0b b6       	in	r0, 0x3b	; 59
    1094:	0f 92       	push	r0
    1096:	ef 92       	push	r14
    1098:	ff 92       	push	r15
    109a:	0f 93       	push	r16
    109c:	1f 93       	push	r17
    109e:	2f 93       	push	r18
    10a0:	3f 93       	push	r19
    10a2:	4f 93       	push	r20
    10a4:	5f 93       	push	r21
    10a6:	6f 93       	push	r22
    10a8:	7f 93       	push	r23
    10aa:	8f 93       	push	r24
    10ac:	9f 93       	push	r25
    10ae:	af 93       	push	r26
    10b0:	bf 93       	push	r27
    10b2:	cf 93       	push	r28
    10b4:	df 93       	push	r29
    10b6:	ef 93       	push	r30
    10b8:	ff 93       	push	r31
	uint8_t data;
	data = UDR0; // read data from buffer TODO: add check for overflow
    10ba:	20 91 c6 00 	lds	r18, 0x00C6
	
	
	
	if(data == 0x7e)
    10be:	2e 37       	cpi	r18, 0x7E	; 126
    10c0:	09 f0       	breq	.+2      	; 0x10c4 <__vector_20+0x3c>
    10c2:	3d c0       	rjmp	.+122    	; 0x113e <__vector_20+0xb6>
	{
		if(gRxBufferIndex >= 4 || gRxBufferIndex == gRxBuffer[1] + 4) //TODO: add crc check
    10c4:	80 91 c2 22 	lds	r24, 0x22C2
    10c8:	90 91 c3 22 	lds	r25, 0x22C3
    10cc:	84 30       	cpi	r24, 0x04	; 4
    10ce:	91 05       	cpc	r25, r1
    10d0:	40 f4       	brcc	.+16     	; 0x10e2 <__vector_20+0x5a>
    10d2:	20 91 f3 23 	lds	r18, 0x23F3
    10d6:	30 e0       	ldi	r19, 0x00	; 0
    10d8:	2c 5f       	subi	r18, 0xFC	; 252
    10da:	3f 4f       	sbci	r19, 0xFF	; 255
    10dc:	82 17       	cp	r24, r18
    10de:	93 07       	cpc	r25, r19
    10e0:	49 f5       	brne	.+82     	; 0x1134 <__vector_20+0xac>
		{
			if(gInvertNextFlag)
    10e2:	80 91 c0 22 	lds	r24, 0x22C0
    10e6:	90 91 c1 22 	lds	r25, 0x22C1
    10ea:	89 2b       	or	r24, r25
    10ec:	21 f0       	breq	.+8      	; 0x10f6 <__vector_20+0x6e>
			{
				data = (1<<5)^data;
				gInvertNextFlag = 0;
    10ee:	10 92 c1 22 	sts	0x22C1, r1
    10f2:	10 92 c0 22 	sts	0x22C0, r1
    10f6:	02 ef       	ldi	r16, 0xF2	; 242
    10f8:	13 e2       	ldi	r17, 0x23	; 35
			}
			
			//USART_Bounce();
			
			// Add packet (no crc) to fifo-buffer to cue it for decoding
			for(int i = 0; i < gRxBuffer[1] + 2; ++i)
    10fa:	c0 e0       	ldi	r28, 0x00	; 0
    10fc:	d0 e0       	ldi	r29, 0x00	; 0
    10fe:	0f 2e       	mov	r0, r31
    1100:	f3 ef       	ldi	r31, 0xF3	; 243
    1102:	ef 2e       	mov	r14, r31
    1104:	f3 e2       	ldi	r31, 0x23	; 35
    1106:	ff 2e       	mov	r15, r31
    1108:	f0 2d       	mov	r31, r0
			{
				if(FifoWrite(gRxFIFO, gRxBuffer[i]))
    110a:	f8 01       	movw	r30, r16
    110c:	61 91       	ld	r22, Z+
    110e:	8f 01       	movw	r16, r30
    1110:	80 91 08 11 	lds	r24, 0x1108
    1114:	90 91 09 11 	lds	r25, 0x1109
    1118:	27 d8       	rcall	.-4018   	; 0x168 <FifoWrite>
    111a:	88 23       	and	r24, r24
    111c:	19 f0       	breq	.+6      	; 0x1124 <__vector_20+0x9c>
				{
					USART_SendMessage("U_FIFO-full");
    111e:	8e ea       	ldi	r24, 0xAE	; 174
    1120:	92 e2       	ldi	r25, 0x22	; 34
    1122:	ce dd       	rcall	.-1124   	; 0xcc0 <USART_SendMessage>
			}
			
			//USART_Bounce();
			
			// Add packet (no crc) to fifo-buffer to cue it for decoding
			for(int i = 0; i < gRxBuffer[1] + 2; ++i)
    1124:	21 96       	adiw	r28, 0x01	; 1
    1126:	f7 01       	movw	r30, r14
    1128:	80 81       	ld	r24, Z
    112a:	90 e0       	ldi	r25, 0x00	; 0
    112c:	02 96       	adiw	r24, 0x02	; 2
    112e:	c8 17       	cp	r28, r24
    1130:	d9 07       	cpc	r29, r25
    1132:	5c f3       	brlt	.-42     	; 0x110a <__vector_20+0x82>
					USART_SendMessage("U_FIFO-full");
				}
			}
		}
		
		gRxBufferIndex = 0; // always reset buffer index when frame delimiter (0x7e) is read
    1134:	10 92 c3 22 	sts	0x22C3, r1
    1138:	10 92 c2 22 	sts	0x22C2, r1
    113c:	16 c0       	rjmp	.+44     	; 0x116a <__vector_20+0xe2>
		
	}else if(data == 0x7d)
    113e:	2d 37       	cpi	r18, 0x7D	; 125
    1140:	39 f4       	brne	.+14     	; 0x1150 <__vector_20+0xc8>
	{
		gInvertNextFlag = 1;
    1142:	81 e0       	ldi	r24, 0x01	; 1
    1144:	90 e0       	ldi	r25, 0x00	; 0
    1146:	90 93 c1 22 	sts	0x22C1, r25
    114a:	80 93 c0 22 	sts	0x22C0, r24
    114e:	0d c0       	rjmp	.+26     	; 0x116a <__vector_20+0xe2>
	}else
	{
		gRxBuffer[gRxBufferIndex] = data;
    1150:	80 91 c2 22 	lds	r24, 0x22C2
    1154:	90 91 c3 22 	lds	r25, 0x22C3
    1158:	fc 01       	movw	r30, r24
    115a:	ee 50       	subi	r30, 0x0E	; 14
    115c:	fc 4d       	sbci	r31, 0xDC	; 220
    115e:	20 83       	st	Z, r18
		++gRxBufferIndex;
    1160:	01 96       	adiw	r24, 0x01	; 1
    1162:	90 93 c3 22 	sts	0x22C3, r25
    1166:	80 93 c2 22 	sts	0x22C2, r24
	}
	
	
}
    116a:	ff 91       	pop	r31
    116c:	ef 91       	pop	r30
    116e:	df 91       	pop	r29
    1170:	cf 91       	pop	r28
    1172:	bf 91       	pop	r27
    1174:	af 91       	pop	r26
    1176:	9f 91       	pop	r25
    1178:	8f 91       	pop	r24
    117a:	7f 91       	pop	r23
    117c:	6f 91       	pop	r22
    117e:	5f 91       	pop	r21
    1180:	4f 91       	pop	r20
    1182:	3f 91       	pop	r19
    1184:	2f 91       	pop	r18
    1186:	1f 91       	pop	r17
    1188:	0f 91       	pop	r16
    118a:	ff 90       	pop	r15
    118c:	ef 90       	pop	r14
    118e:	0f 90       	pop	r0
    1190:	0b be       	out	0x3b, r0	; 59
    1192:	0f 90       	pop	r0
    1194:	0f be       	out	0x3f, r0	; 63
    1196:	0f 90       	pop	r0
    1198:	1f 90       	pop	r1
    119a:	18 95       	reti

0000119c <__fixunssfsi>:
    119c:	70 d0       	rcall	.+224    	; 0x127e <__fp_splitA>
    119e:	88 f0       	brcs	.+34     	; 0x11c2 <__fixunssfsi+0x26>
    11a0:	9f 57       	subi	r25, 0x7F	; 127
    11a2:	90 f0       	brcs	.+36     	; 0x11c8 <__fixunssfsi+0x2c>
    11a4:	b9 2f       	mov	r27, r25
    11a6:	99 27       	eor	r25, r25
    11a8:	b7 51       	subi	r27, 0x17	; 23
    11aa:	a0 f0       	brcs	.+40     	; 0x11d4 <__fixunssfsi+0x38>
    11ac:	d1 f0       	breq	.+52     	; 0x11e2 <__fixunssfsi+0x46>
    11ae:	66 0f       	add	r22, r22
    11b0:	77 1f       	adc	r23, r23
    11b2:	88 1f       	adc	r24, r24
    11b4:	99 1f       	adc	r25, r25
    11b6:	1a f0       	brmi	.+6      	; 0x11be <__fixunssfsi+0x22>
    11b8:	ba 95       	dec	r27
    11ba:	c9 f7       	brne	.-14     	; 0x11ae <__fixunssfsi+0x12>
    11bc:	12 c0       	rjmp	.+36     	; 0x11e2 <__fixunssfsi+0x46>
    11be:	b1 30       	cpi	r27, 0x01	; 1
    11c0:	81 f0       	breq	.+32     	; 0x11e2 <__fixunssfsi+0x46>
    11c2:	77 d0       	rcall	.+238    	; 0x12b2 <__fp_zero>
    11c4:	b1 e0       	ldi	r27, 0x01	; 1
    11c6:	08 95       	ret
    11c8:	74 c0       	rjmp	.+232    	; 0x12b2 <__fp_zero>
    11ca:	67 2f       	mov	r22, r23
    11cc:	78 2f       	mov	r23, r24
    11ce:	88 27       	eor	r24, r24
    11d0:	b8 5f       	subi	r27, 0xF8	; 248
    11d2:	39 f0       	breq	.+14     	; 0x11e2 <__fixunssfsi+0x46>
    11d4:	b9 3f       	cpi	r27, 0xF9	; 249
    11d6:	cc f3       	brlt	.-14     	; 0x11ca <__fixunssfsi+0x2e>
    11d8:	86 95       	lsr	r24
    11da:	77 95       	ror	r23
    11dc:	67 95       	ror	r22
    11de:	b3 95       	inc	r27
    11e0:	d9 f7       	brne	.-10     	; 0x11d8 <__fixunssfsi+0x3c>
    11e2:	3e f4       	brtc	.+14     	; 0x11f2 <__fixunssfsi+0x56>
    11e4:	90 95       	com	r25
    11e6:	80 95       	com	r24
    11e8:	70 95       	com	r23
    11ea:	61 95       	neg	r22
    11ec:	7f 4f       	sbci	r23, 0xFF	; 255
    11ee:	8f 4f       	sbci	r24, 0xFF	; 255
    11f0:	9f 4f       	sbci	r25, 0xFF	; 255
    11f2:	08 95       	ret

000011f4 <__floatunsisf>:
    11f4:	e8 94       	clt
    11f6:	09 c0       	rjmp	.+18     	; 0x120a <__floatsisf+0x12>

000011f8 <__floatsisf>:
    11f8:	97 fb       	bst	r25, 7
    11fa:	3e f4       	brtc	.+14     	; 0x120a <__floatsisf+0x12>
    11fc:	90 95       	com	r25
    11fe:	80 95       	com	r24
    1200:	70 95       	com	r23
    1202:	61 95       	neg	r22
    1204:	7f 4f       	sbci	r23, 0xFF	; 255
    1206:	8f 4f       	sbci	r24, 0xFF	; 255
    1208:	9f 4f       	sbci	r25, 0xFF	; 255
    120a:	99 23       	and	r25, r25
    120c:	a9 f0       	breq	.+42     	; 0x1238 <__floatsisf+0x40>
    120e:	f9 2f       	mov	r31, r25
    1210:	96 e9       	ldi	r25, 0x96	; 150
    1212:	bb 27       	eor	r27, r27
    1214:	93 95       	inc	r25
    1216:	f6 95       	lsr	r31
    1218:	87 95       	ror	r24
    121a:	77 95       	ror	r23
    121c:	67 95       	ror	r22
    121e:	b7 95       	ror	r27
    1220:	f1 11       	cpse	r31, r1
    1222:	f8 cf       	rjmp	.-16     	; 0x1214 <__floatsisf+0x1c>
    1224:	fa f4       	brpl	.+62     	; 0x1264 <__floatsisf+0x6c>
    1226:	bb 0f       	add	r27, r27
    1228:	11 f4       	brne	.+4      	; 0x122e <__floatsisf+0x36>
    122a:	60 ff       	sbrs	r22, 0
    122c:	1b c0       	rjmp	.+54     	; 0x1264 <__floatsisf+0x6c>
    122e:	6f 5f       	subi	r22, 0xFF	; 255
    1230:	7f 4f       	sbci	r23, 0xFF	; 255
    1232:	8f 4f       	sbci	r24, 0xFF	; 255
    1234:	9f 4f       	sbci	r25, 0xFF	; 255
    1236:	16 c0       	rjmp	.+44     	; 0x1264 <__floatsisf+0x6c>
    1238:	88 23       	and	r24, r24
    123a:	11 f0       	breq	.+4      	; 0x1240 <__floatsisf+0x48>
    123c:	96 e9       	ldi	r25, 0x96	; 150
    123e:	11 c0       	rjmp	.+34     	; 0x1262 <__floatsisf+0x6a>
    1240:	77 23       	and	r23, r23
    1242:	21 f0       	breq	.+8      	; 0x124c <__floatsisf+0x54>
    1244:	9e e8       	ldi	r25, 0x8E	; 142
    1246:	87 2f       	mov	r24, r23
    1248:	76 2f       	mov	r23, r22
    124a:	05 c0       	rjmp	.+10     	; 0x1256 <__floatsisf+0x5e>
    124c:	66 23       	and	r22, r22
    124e:	71 f0       	breq	.+28     	; 0x126c <__floatsisf+0x74>
    1250:	96 e8       	ldi	r25, 0x86	; 134
    1252:	86 2f       	mov	r24, r22
    1254:	70 e0       	ldi	r23, 0x00	; 0
    1256:	60 e0       	ldi	r22, 0x00	; 0
    1258:	2a f0       	brmi	.+10     	; 0x1264 <__floatsisf+0x6c>
    125a:	9a 95       	dec	r25
    125c:	66 0f       	add	r22, r22
    125e:	77 1f       	adc	r23, r23
    1260:	88 1f       	adc	r24, r24
    1262:	da f7       	brpl	.-10     	; 0x125a <__floatsisf+0x62>
    1264:	88 0f       	add	r24, r24
    1266:	96 95       	lsr	r25
    1268:	87 95       	ror	r24
    126a:	97 f9       	bld	r25, 7
    126c:	08 95       	ret

0000126e <__fp_split3>:
    126e:	57 fd       	sbrc	r21, 7
    1270:	90 58       	subi	r25, 0x80	; 128
    1272:	44 0f       	add	r20, r20
    1274:	55 1f       	adc	r21, r21
    1276:	59 f0       	breq	.+22     	; 0x128e <__fp_splitA+0x10>
    1278:	5f 3f       	cpi	r21, 0xFF	; 255
    127a:	71 f0       	breq	.+28     	; 0x1298 <__fp_splitA+0x1a>
    127c:	47 95       	ror	r20

0000127e <__fp_splitA>:
    127e:	88 0f       	add	r24, r24
    1280:	97 fb       	bst	r25, 7
    1282:	99 1f       	adc	r25, r25
    1284:	61 f0       	breq	.+24     	; 0x129e <__fp_splitA+0x20>
    1286:	9f 3f       	cpi	r25, 0xFF	; 255
    1288:	79 f0       	breq	.+30     	; 0x12a8 <__fp_splitA+0x2a>
    128a:	87 95       	ror	r24
    128c:	08 95       	ret
    128e:	12 16       	cp	r1, r18
    1290:	13 06       	cpc	r1, r19
    1292:	14 06       	cpc	r1, r20
    1294:	55 1f       	adc	r21, r21
    1296:	f2 cf       	rjmp	.-28     	; 0x127c <__fp_split3+0xe>
    1298:	46 95       	lsr	r20
    129a:	f1 df       	rcall	.-30     	; 0x127e <__fp_splitA>
    129c:	08 c0       	rjmp	.+16     	; 0x12ae <__fp_splitA+0x30>
    129e:	16 16       	cp	r1, r22
    12a0:	17 06       	cpc	r1, r23
    12a2:	18 06       	cpc	r1, r24
    12a4:	99 1f       	adc	r25, r25
    12a6:	f1 cf       	rjmp	.-30     	; 0x128a <__fp_splitA+0xc>
    12a8:	86 95       	lsr	r24
    12aa:	71 05       	cpc	r23, r1
    12ac:	61 05       	cpc	r22, r1
    12ae:	08 94       	sec
    12b0:	08 95       	ret

000012b2 <__fp_zero>:
    12b2:	e8 94       	clt

000012b4 <__fp_szero>:
    12b4:	bb 27       	eor	r27, r27
    12b6:	66 27       	eor	r22, r22
    12b8:	77 27       	eor	r23, r23
    12ba:	cb 01       	movw	r24, r22
    12bc:	97 f9       	bld	r25, 7
    12be:	08 95       	ret

000012c0 <__mulsf3>:
    12c0:	0b d0       	rcall	.+22     	; 0x12d8 <__mulsf3x>
    12c2:	78 c0       	rjmp	.+240    	; 0x13b4 <__fp_round>
    12c4:	69 d0       	rcall	.+210    	; 0x1398 <__fp_pscA>
    12c6:	28 f0       	brcs	.+10     	; 0x12d2 <__mulsf3+0x12>
    12c8:	6e d0       	rcall	.+220    	; 0x13a6 <__fp_pscB>
    12ca:	18 f0       	brcs	.+6      	; 0x12d2 <__mulsf3+0x12>
    12cc:	95 23       	and	r25, r21
    12ce:	09 f0       	breq	.+2      	; 0x12d2 <__mulsf3+0x12>
    12d0:	5a c0       	rjmp	.+180    	; 0x1386 <__fp_inf>
    12d2:	5f c0       	rjmp	.+190    	; 0x1392 <__fp_nan>
    12d4:	11 24       	eor	r1, r1
    12d6:	ee cf       	rjmp	.-36     	; 0x12b4 <__fp_szero>

000012d8 <__mulsf3x>:
    12d8:	ca df       	rcall	.-108    	; 0x126e <__fp_split3>
    12da:	a0 f3       	brcs	.-24     	; 0x12c4 <__mulsf3+0x4>

000012dc <__mulsf3_pse>:
    12dc:	95 9f       	mul	r25, r21
    12de:	d1 f3       	breq	.-12     	; 0x12d4 <__mulsf3+0x14>
    12e0:	95 0f       	add	r25, r21
    12e2:	50 e0       	ldi	r21, 0x00	; 0
    12e4:	55 1f       	adc	r21, r21
    12e6:	62 9f       	mul	r22, r18
    12e8:	f0 01       	movw	r30, r0
    12ea:	72 9f       	mul	r23, r18
    12ec:	bb 27       	eor	r27, r27
    12ee:	f0 0d       	add	r31, r0
    12f0:	b1 1d       	adc	r27, r1
    12f2:	63 9f       	mul	r22, r19
    12f4:	aa 27       	eor	r26, r26
    12f6:	f0 0d       	add	r31, r0
    12f8:	b1 1d       	adc	r27, r1
    12fa:	aa 1f       	adc	r26, r26
    12fc:	64 9f       	mul	r22, r20
    12fe:	66 27       	eor	r22, r22
    1300:	b0 0d       	add	r27, r0
    1302:	a1 1d       	adc	r26, r1
    1304:	66 1f       	adc	r22, r22
    1306:	82 9f       	mul	r24, r18
    1308:	22 27       	eor	r18, r18
    130a:	b0 0d       	add	r27, r0
    130c:	a1 1d       	adc	r26, r1
    130e:	62 1f       	adc	r22, r18
    1310:	73 9f       	mul	r23, r19
    1312:	b0 0d       	add	r27, r0
    1314:	a1 1d       	adc	r26, r1
    1316:	62 1f       	adc	r22, r18
    1318:	83 9f       	mul	r24, r19
    131a:	a0 0d       	add	r26, r0
    131c:	61 1d       	adc	r22, r1
    131e:	22 1f       	adc	r18, r18
    1320:	74 9f       	mul	r23, r20
    1322:	33 27       	eor	r19, r19
    1324:	a0 0d       	add	r26, r0
    1326:	61 1d       	adc	r22, r1
    1328:	23 1f       	adc	r18, r19
    132a:	84 9f       	mul	r24, r20
    132c:	60 0d       	add	r22, r0
    132e:	21 1d       	adc	r18, r1
    1330:	82 2f       	mov	r24, r18
    1332:	76 2f       	mov	r23, r22
    1334:	6a 2f       	mov	r22, r26
    1336:	11 24       	eor	r1, r1
    1338:	9f 57       	subi	r25, 0x7F	; 127
    133a:	50 40       	sbci	r21, 0x00	; 0
    133c:	8a f0       	brmi	.+34     	; 0x1360 <__mulsf3_pse+0x84>
    133e:	e1 f0       	breq	.+56     	; 0x1378 <__mulsf3_pse+0x9c>
    1340:	88 23       	and	r24, r24
    1342:	4a f0       	brmi	.+18     	; 0x1356 <__mulsf3_pse+0x7a>
    1344:	ee 0f       	add	r30, r30
    1346:	ff 1f       	adc	r31, r31
    1348:	bb 1f       	adc	r27, r27
    134a:	66 1f       	adc	r22, r22
    134c:	77 1f       	adc	r23, r23
    134e:	88 1f       	adc	r24, r24
    1350:	91 50       	subi	r25, 0x01	; 1
    1352:	50 40       	sbci	r21, 0x00	; 0
    1354:	a9 f7       	brne	.-22     	; 0x1340 <__mulsf3_pse+0x64>
    1356:	9e 3f       	cpi	r25, 0xFE	; 254
    1358:	51 05       	cpc	r21, r1
    135a:	70 f0       	brcs	.+28     	; 0x1378 <__mulsf3_pse+0x9c>
    135c:	14 c0       	rjmp	.+40     	; 0x1386 <__fp_inf>
    135e:	aa cf       	rjmp	.-172    	; 0x12b4 <__fp_szero>
    1360:	5f 3f       	cpi	r21, 0xFF	; 255
    1362:	ec f3       	brlt	.-6      	; 0x135e <__mulsf3_pse+0x82>
    1364:	98 3e       	cpi	r25, 0xE8	; 232
    1366:	dc f3       	brlt	.-10     	; 0x135e <__mulsf3_pse+0x82>
    1368:	86 95       	lsr	r24
    136a:	77 95       	ror	r23
    136c:	67 95       	ror	r22
    136e:	b7 95       	ror	r27
    1370:	f7 95       	ror	r31
    1372:	e7 95       	ror	r30
    1374:	9f 5f       	subi	r25, 0xFF	; 255
    1376:	c1 f7       	brne	.-16     	; 0x1368 <__mulsf3_pse+0x8c>
    1378:	fe 2b       	or	r31, r30
    137a:	88 0f       	add	r24, r24
    137c:	91 1d       	adc	r25, r1
    137e:	96 95       	lsr	r25
    1380:	87 95       	ror	r24
    1382:	97 f9       	bld	r25, 7
    1384:	08 95       	ret

00001386 <__fp_inf>:
    1386:	97 f9       	bld	r25, 7
    1388:	9f 67       	ori	r25, 0x7F	; 127
    138a:	80 e8       	ldi	r24, 0x80	; 128
    138c:	70 e0       	ldi	r23, 0x00	; 0
    138e:	60 e0       	ldi	r22, 0x00	; 0
    1390:	08 95       	ret

00001392 <__fp_nan>:
    1392:	9f ef       	ldi	r25, 0xFF	; 255
    1394:	80 ec       	ldi	r24, 0xC0	; 192
    1396:	08 95       	ret

00001398 <__fp_pscA>:
    1398:	00 24       	eor	r0, r0
    139a:	0a 94       	dec	r0
    139c:	16 16       	cp	r1, r22
    139e:	17 06       	cpc	r1, r23
    13a0:	18 06       	cpc	r1, r24
    13a2:	09 06       	cpc	r0, r25
    13a4:	08 95       	ret

000013a6 <__fp_pscB>:
    13a6:	00 24       	eor	r0, r0
    13a8:	0a 94       	dec	r0
    13aa:	12 16       	cp	r1, r18
    13ac:	13 06       	cpc	r1, r19
    13ae:	14 06       	cpc	r1, r20
    13b0:	05 06       	cpc	r0, r21
    13b2:	08 95       	ret

000013b4 <__fp_round>:
    13b4:	09 2e       	mov	r0, r25
    13b6:	03 94       	inc	r0
    13b8:	00 0c       	add	r0, r0
    13ba:	11 f4       	brne	.+4      	; 0x13c0 <__fp_round+0xc>
    13bc:	88 23       	and	r24, r24
    13be:	52 f0       	brmi	.+20     	; 0x13d4 <__fp_round+0x20>
    13c0:	bb 0f       	add	r27, r27
    13c2:	40 f4       	brcc	.+16     	; 0x13d4 <__fp_round+0x20>
    13c4:	bf 2b       	or	r27, r31
    13c6:	11 f4       	brne	.+4      	; 0x13cc <__fp_round+0x18>
    13c8:	60 ff       	sbrs	r22, 0
    13ca:	04 c0       	rjmp	.+8      	; 0x13d4 <__fp_round+0x20>
    13cc:	6f 5f       	subi	r22, 0xFF	; 255
    13ce:	7f 4f       	sbci	r23, 0xFF	; 255
    13d0:	8f 4f       	sbci	r24, 0xFF	; 255
    13d2:	9f 4f       	sbci	r25, 0xFF	; 255
    13d4:	08 95       	ret

000013d6 <_exit>:
    13d6:	f8 94       	cli

000013d8 <__stop_program>:
    13d8:	ff cf       	rjmp	.-2      	; 0x13d8 <__stop_program>
