
kommunikationsmodulen.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00002216  00800100  000014cc  00001560  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000014cc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000641  00802316  00802316  00003776  2**0
                  ALLOC
  3 .stab         00001674  00000000  00000000  00003778  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000598  00000000  00000000  00004dec  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00005384  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000002c0  00000000  00000000  000053b3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000026a0  00000000  00000000  00005673  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000971  00000000  00000000  00007d13  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001ad6  00000000  00000000  00008684  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000007fc  00000000  00000000  0000a15c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000008f6  00000000  00000000  0000a958  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001a2c  00000000  00000000  0000b24e  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000002b8  00000000  00000000  0000cc7a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	61 c0       	rjmp	.+194    	; 0xc8 <__bad_interrupt>
       6:	00 00       	nop
       8:	5f c0       	rjmp	.+190    	; 0xc8 <__bad_interrupt>
       a:	00 00       	nop
       c:	5d c0       	rjmp	.+186    	; 0xc8 <__bad_interrupt>
       e:	00 00       	nop
      10:	5b c0       	rjmp	.+182    	; 0xc8 <__bad_interrupt>
      12:	00 00       	nop
      14:	59 c0       	rjmp	.+178    	; 0xc8 <__bad_interrupt>
      16:	00 00       	nop
      18:	57 c0       	rjmp	.+174    	; 0xc8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	55 c0       	rjmp	.+170    	; 0xc8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	53 c0       	rjmp	.+166    	; 0xc8 <__bad_interrupt>
      22:	00 00       	nop
      24:	51 c0       	rjmp	.+162    	; 0xc8 <__bad_interrupt>
      26:	00 00       	nop
      28:	4f c0       	rjmp	.+158    	; 0xc8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4d c0       	rjmp	.+154    	; 0xc8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4b c0       	rjmp	.+150    	; 0xc8 <__bad_interrupt>
      32:	00 00       	nop
      34:	ff c0       	rjmp	.+510    	; 0x234 <__vector_13>
      36:	00 00       	nop
      38:	47 c0       	rjmp	.+142    	; 0xc8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	45 c0       	rjmp	.+138    	; 0xc8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	43 c0       	rjmp	.+134    	; 0xc8 <__bad_interrupt>
      42:	00 00       	nop
      44:	41 c0       	rjmp	.+130    	; 0xc8 <__bad_interrupt>
      46:	00 00       	nop
      48:	3f c0       	rjmp	.+126    	; 0xc8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3d c0       	rjmp	.+122    	; 0xc8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	0c 94 bc 08 	jmp	0x1178	; 0x1178 <__vector_20>
      54:	39 c0       	rjmp	.+114    	; 0xc8 <__bad_interrupt>
      56:	00 00       	nop
      58:	37 c0       	rjmp	.+110    	; 0xc8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	35 c0       	rjmp	.+106    	; 0xc8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	33 c0       	rjmp	.+102    	; 0xc8 <__bad_interrupt>
      62:	00 00       	nop
      64:	31 c0       	rjmp	.+98     	; 0xc8 <__bad_interrupt>
      66:	00 00       	nop
      68:	e0 c3       	rjmp	.+1984   	; 0x82a <__vector_26>
      6a:	00 00       	nop
      6c:	2d c0       	rjmp	.+90     	; 0xc8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2b c0       	rjmp	.+86     	; 0xc8 <__bad_interrupt>
      72:	00 00       	nop
      74:	29 c0       	rjmp	.+82     	; 0xc8 <__bad_interrupt>
      76:	00 00       	nop
      78:	27 c0       	rjmp	.+78     	; 0xc8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	25 c0       	rjmp	.+74     	; 0xc8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	e7 c0       	rjmp	.+462    	; 0x250 <__vector_32>
      82:	00 00       	nop
      84:	21 c0       	rjmp	.+66     	; 0xc8 <__bad_interrupt>
      86:	00 00       	nop
      88:	1f c0       	rjmp	.+62     	; 0xc8 <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e4       	ldi	r29, 0x40	; 64
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	13 e2       	ldi	r17, 0x23	; 35
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	ec ec       	ldi	r30, 0xCC	; 204
      a0:	f4 e1       	ldi	r31, 0x14	; 20
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a6 31       	cpi	r26, 0x16	; 22
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	29 e2       	ldi	r18, 0x29	; 41
      b4:	a6 e1       	ldi	r26, 0x16	; 22
      b6:	b3 e2       	ldi	r27, 0x23	; 35
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a7 35       	cpi	r26, 0x57	; 87
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	a2 d0       	rcall	.+324    	; 0x208 <main>
      c4:	0c 94 64 0a 	jmp	0x14c8	; 0x14c8 <_exit>

000000c8 <__bad_interrupt>:
      c8:	9b cf       	rjmp	.-202    	; 0x0 <__vectors>

000000ca <set_counter_1>:
	TCNT3 = 0;
}

void set_counter_1(uint16_t delay)
{
	delay = 18.000 * delay;
      ca:	bc 01       	movw	r22, r24
      cc:	80 e0       	ldi	r24, 0x00	; 0
      ce:	90 e0       	ldi	r25, 0x00	; 0
      d0:	0e 94 73 09 	call	0x12e6	; 0x12e6 <__floatunsisf>
      d4:	20 e0       	ldi	r18, 0x00	; 0
      d6:	30 e0       	ldi	r19, 0x00	; 0
      d8:	40 e9       	ldi	r20, 0x90	; 144
      da:	51 e4       	ldi	r21, 0x41	; 65
      dc:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <__mulsf3>
      e0:	0e 94 47 09 	call	0x128e	; 0x128e <__fixunssfsi>
	OCR1A = delay;
      e4:	70 93 89 00 	sts	0x0089, r23
      e8:	60 93 88 00 	sts	0x0088, r22
      ec:	08 95       	ret

000000ee <set_counter_2>:
}

void set_counter_2(uint16_t delay)
{
	delay = 18.000 * delay;
      ee:	bc 01       	movw	r22, r24
      f0:	80 e0       	ldi	r24, 0x00	; 0
      f2:	90 e0       	ldi	r25, 0x00	; 0
      f4:	0e 94 73 09 	call	0x12e6	; 0x12e6 <__floatunsisf>
      f8:	20 e0       	ldi	r18, 0x00	; 0
      fa:	30 e0       	ldi	r19, 0x00	; 0
      fc:	40 e9       	ldi	r20, 0x90	; 144
      fe:	51 e4       	ldi	r21, 0x41	; 65
     100:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <__mulsf3>
     104:	0e 94 47 09 	call	0x128e	; 0x128e <__fixunssfsi>
	OCR3A = delay;
     108:	70 93 99 00 	sts	0x0099, r23
     10c:	60 93 98 00 	sts	0x0098, r22
     110:	08 95       	ret

00000112 <init_counters>:

//---------------------------------------COUNTERS/TIMERS-----------
void init_counters()
{
	// WGMn3:0 = 4 (OCRnA) or 12 (OCRn), where top value is read from.
	TCCR1B |= 0b00000101; // clock 1, prescaler 1024
     112:	e1 e8       	ldi	r30, 0x81	; 129
     114:	f0 e0       	ldi	r31, 0x00	; 0
     116:	80 81       	ld	r24, Z
     118:	85 60       	ori	r24, 0x05	; 5
     11a:	80 83       	st	Z, r24
	TCCR3B |= 0b00000101; // clock 2, prescaler 1024
     11c:	e1 e9       	ldi	r30, 0x91	; 145
     11e:	f0 e0       	ldi	r31, 0x00	; 0
     120:	80 81       	ld	r24, Z
     122:	85 60       	ori	r24, 0x05	; 5
     124:	80 83       	st	Z, r24
	
	// standardvalue for interrupt is 1000ms
	set_counter_1(1000);
     126:	88 ee       	ldi	r24, 0xE8	; 232
     128:	93 e0       	ldi	r25, 0x03	; 3
     12a:	cf df       	rcall	.-98     	; 0xca <set_counter_1>
	set_counter_2(1000);
     12c:	88 ee       	ldi	r24, 0xE8	; 232
     12e:	93 e0       	ldi	r25, 0x03	; 3
     130:	de df       	rcall	.-68     	; 0xee <set_counter_2>
	
	TIMSK1 |= 0b00000010; // Enable interrupts when OCF1A, in TIFR1, is set.
     132:	ef e6       	ldi	r30, 0x6F	; 111
     134:	f0 e0       	ldi	r31, 0x00	; 0
     136:	80 81       	ld	r24, Z
     138:	82 60       	ori	r24, 0x02	; 2
     13a:	80 83       	st	Z, r24
	TIMSK3 |= 0b00000010; // Enable interrupts when OCF2A, in TIFR2, is set.
     13c:	e1 e7       	ldi	r30, 0x71	; 113
     13e:	f0 e0       	ldi	r31, 0x00	; 0
     140:	80 81       	ld	r24, Z
     142:	82 60       	ori	r24, 0x02	; 2
     144:	80 83       	st	Z, r24
	// OCF1A (or ICFn) Flag, in TIFR1, can be used to generate interrupts.
	TCNT1 = 0;
     146:	10 92 85 00 	sts	0x0085, r1
     14a:	10 92 84 00 	sts	0x0084, r1
	TCNT3 = 0;
     14e:	10 92 95 00 	sts	0x0095, r1
     152:	10 92 94 00 	sts	0x0094, r1
     156:	08 95       	ret

00000158 <FifoDataLength>:

#include <avr/io.h>
#include "fifo.h"

uint8_t FifoDataLength (struct fifo *fifo)
{
     158:	fc 01       	movw	r30, r24
	return (fifo->write - fifo->read) & (fifo->size -1);
     15a:	90 81       	ld	r25, Z
     15c:	91 50       	subi	r25, 0x01	; 1
     15e:	84 81       	ldd	r24, Z+4	; 0x04
     160:	22 81       	ldd	r18, Z+2	; 0x02
     162:	82 1b       	sub	r24, r18
};
     164:	89 23       	and	r24, r25
     166:	08 95       	ret

00000168 <FifoWrite>:

uint8_t FifoWrite (struct fifo *fifo, unsigned char data)
{
     168:	1f 93       	push	r17
     16a:	cf 93       	push	r28
     16c:	df 93       	push	r29
     16e:	ec 01       	movw	r28, r24
     170:	16 2f       	mov	r17, r22
	// fifo full : error
	if (FifoDataLength(fifo) == (fifo->size - 1))
     172:	f2 df       	rcall	.-28     	; 0x158 <FifoDataLength>
     174:	28 81       	ld	r18, Y
     176:	39 81       	ldd	r19, Y+1	; 0x01
     178:	21 50       	subi	r18, 0x01	; 1
     17a:	31 09       	sbc	r19, r1
     17c:	90 e0       	ldi	r25, 0x00	; 0
     17e:	82 17       	cp	r24, r18
     180:	93 07       	cpc	r25, r19
     182:	69 f0       	breq	.+26     	; 0x19e <FifoWrite+0x36>
	{
		return 1;
	}
	// write data & increment write pointer
	fifo->buffer[fifo->write] = data;
     184:	8c 81       	ldd	r24, Y+4	; 0x04
     186:	9d 81       	ldd	r25, Y+5	; 0x05
     188:	fe 01       	movw	r30, r28
     18a:	e8 0f       	add	r30, r24
     18c:	f9 1f       	adc	r31, r25
     18e:	16 83       	std	Z+6, r17	; 0x06
	fifo->write = (fifo->write + 1) & (fifo->size - 1);
     190:	01 96       	adiw	r24, 0x01	; 1
     192:	28 23       	and	r18, r24
     194:	39 23       	and	r19, r25
     196:	3d 83       	std	Y+5, r19	; 0x05
     198:	2c 83       	std	Y+4, r18	; 0x04
	return 0;
     19a:	80 e0       	ldi	r24, 0x00	; 0
     19c:	01 c0       	rjmp	.+2      	; 0x1a0 <FifoWrite+0x38>
uint8_t FifoWrite (struct fifo *fifo, unsigned char data)
{
	// fifo full : error
	if (FifoDataLength(fifo) == (fifo->size - 1))
	{
		return 1;
     19e:	81 e0       	ldi	r24, 0x01	; 1
	}
	// write data & increment write pointer
	fifo->buffer[fifo->write] = data;
	fifo->write = (fifo->write + 1) & (fifo->size - 1);
	return 0;
};
     1a0:	df 91       	pop	r29
     1a2:	cf 91       	pop	r28
     1a4:	1f 91       	pop	r17
     1a6:	08 95       	ret

000001a8 <FifoRead>:


uint8_t FifoRead (struct fifo *fifo, unsigned char *data)
{
     1a8:	0f 93       	push	r16
     1aa:	1f 93       	push	r17
     1ac:	cf 93       	push	r28
     1ae:	df 93       	push	r29
     1b0:	ec 01       	movw	r28, r24
     1b2:	8b 01       	movw	r16, r22
	// fifo empty : error
	if (FifoDataLength(fifo) == 0)
     1b4:	d1 df       	rcall	.-94     	; 0x158 <FifoDataLength>
     1b6:	88 23       	and	r24, r24
     1b8:	a1 f0       	breq	.+40     	; 0x1e2 <FifoRead+0x3a>
	{
		return 1;
	}
	// read data & increment read pointer
	*data = fifo->buffer[fifo->read];
     1ba:	ea 81       	ldd	r30, Y+2	; 0x02
     1bc:	fb 81       	ldd	r31, Y+3	; 0x03
     1be:	ec 0f       	add	r30, r28
     1c0:	fd 1f       	adc	r31, r29
     1c2:	86 81       	ldd	r24, Z+6	; 0x06
     1c4:	f8 01       	movw	r30, r16
     1c6:	80 83       	st	Z, r24
	fifo->read = (fifo->read + 1) & (fifo->size - 1);
     1c8:	28 81       	ld	r18, Y
     1ca:	39 81       	ldd	r19, Y+1	; 0x01
     1cc:	21 50       	subi	r18, 0x01	; 1
     1ce:	31 09       	sbc	r19, r1
     1d0:	8a 81       	ldd	r24, Y+2	; 0x02
     1d2:	9b 81       	ldd	r25, Y+3	; 0x03
     1d4:	01 96       	adiw	r24, 0x01	; 1
     1d6:	82 23       	and	r24, r18
     1d8:	93 23       	and	r25, r19
     1da:	9b 83       	std	Y+3, r25	; 0x03
     1dc:	8a 83       	std	Y+2, r24	; 0x02
	return 0;
     1de:	80 e0       	ldi	r24, 0x00	; 0
     1e0:	01 c0       	rjmp	.+2      	; 0x1e4 <FifoRead+0x3c>
uint8_t FifoRead (struct fifo *fifo, unsigned char *data)
{
	// fifo empty : error
	if (FifoDataLength(fifo) == 0)
	{
		return 1;
     1e2:	81 e0       	ldi	r24, 0x01	; 1
	}
	// read data & increment read pointer
	*data = fifo->buffer[fifo->read];
	fifo->read = (fifo->read + 1) & (fifo->size - 1);
	return 0;
     1e4:	df 91       	pop	r29
     1e6:	cf 91       	pop	r28
     1e8:	1f 91       	pop	r17
     1ea:	0f 91       	pop	r16
     1ec:	08 95       	ret

000001ee <init>:
     1ee:	81 b1       	in	r24, 0x01	; 1
     1f0:	83 60       	ori	r24, 0x03	; 3
     1f2:	81 b9       	out	0x01, r24	; 1
     1f4:	87 b1       	in	r24, 0x07	; 7
     1f6:	80 6c       	ori	r24, 0xC0	; 192
     1f8:	87 b9       	out	0x07, r24	; 7
     1fa:	d3 d4       	rcall	.+2470   	; 0xba2 <USART_init>
     1fc:	80 e8       	ldi	r24, 0x80	; 128
     1fe:	d1 d0       	rcall	.+418    	; 0x3a2 <TWI_init>
     200:	88 df       	rcall	.-240    	; 0x112 <init_counters>
     202:	80 ed       	ldi	r24, 0xD0	; 208
     204:	97 e0       	ldi	r25, 0x07	; 7
     206:	73 cf       	rjmp	.-282    	; 0xee <set_counter_2>

00000208 <main>:
     208:	f2 df       	rcall	.-28     	; 0x1ee <init>
     20a:	78 94       	sei
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     20c:	2f ef       	ldi	r18, 0xFF	; 255
     20e:	8f e1       	ldi	r24, 0x1F	; 31
     210:	9c e1       	ldi	r25, 0x1C	; 28
     212:	21 50       	subi	r18, 0x01	; 1
     214:	80 40       	sbci	r24, 0x00	; 0
     216:	90 40       	sbci	r25, 0x00	; 0
     218:	e1 f7       	brne	.-8      	; 0x212 <main+0xa>
     21a:	00 c0       	rjmp	.+0      	; 0x21c <main+0x14>
     21c:	00 00       	nop
     21e:	7a d7       	rcall	.+3828   	; 0x1114 <USART_decode_rx_fifo>
     220:	4f d2       	rcall	.+1182   	; 0x6c0 <TWI_sensor_flag>
     222:	81 11       	cpse	r24, r1
     224:	bf d5       	rcall	.+2942   	; 0xda4 <USART_send_sensors>
     226:	56 d2       	rcall	.+1196   	; 0x6d4 <TWI_autonom_settings_flag>
     228:	88 23       	and	r24, r24
     22a:	11 f0       	breq	.+4      	; 0x230 <main+0x28>
     22c:	46 d2       	rcall	.+1164   	; 0x6ba <TWI_get_autonom_settings>
     22e:	d6 d5       	rcall	.+2988   	; 0xddc <USART_send_autonom>
     230:	5b d2       	rcall	.+1206   	; 0x6e8 <decode_message_TwiFIFO>
     232:	f5 cf       	rjmp	.-22     	; 0x21e <main+0x16>

00000234 <__vector_13>:
     234:	1f 92       	push	r1
     236:	0f 92       	push	r0
     238:	0f b6       	in	r0, 0x3f	; 63
     23a:	0f 92       	push	r0
     23c:	11 24       	eor	r1, r1
     23e:	10 92 85 00 	sts	0x0085, r1
     242:	10 92 84 00 	sts	0x0084, r1
     246:	0f 90       	pop	r0
     248:	0f be       	out	0x3f, r0	; 63
     24a:	0f 90       	pop	r0
     24c:	1f 90       	pop	r1
     24e:	18 95       	reti

00000250 <__vector_32>:
     250:	1f 92       	push	r1
     252:	0f 92       	push	r0
     254:	0f b6       	in	r0, 0x3f	; 63
     256:	0f 92       	push	r0
     258:	11 24       	eor	r1, r1
     25a:	10 92 95 00 	sts	0x0095, r1
     25e:	10 92 94 00 	sts	0x0094, r1
     262:	0f 90       	pop	r0
     264:	0f be       	out	0x3f, r0	; 63
     266:	0f 90       	pop	r0
     268:	1f 90       	pop	r1
     26a:	18 95       	reti

0000026c <set_twi_reciever_enable>:
     26c:	85 e4       	ldi	r24, 0x45	; 69
     26e:	80 93 bc 00 	sts	0x00BC, r24
     272:	08 95       	ret

00000274 <clear_int>:
     274:	81 ec       	ldi	r24, 0xC1	; 193
     276:	80 93 bc 00 	sts	0x00BC, r24
     27a:	08 95       	ret

0000027c <start_bus>:
     27c:	84 ea       	ldi	r24, 0xA4	; 164
     27e:	80 93 bc 00 	sts	0x00BC, r24
     282:	08 95       	ret

00000284 <stop_bus>:
     284:	85 ed       	ldi	r24, 0xD5	; 213
     286:	80 93 bc 00 	sts	0x00BC, r24
     28a:	08 95       	ret

0000028c <Error>:
     28c:	80 91 b9 00 	lds	r24, 0x00B9
     290:	88 7f       	andi	r24, 0xF8	; 248
     292:	88 33       	cpi	r24, 0x38	; 56
     294:	09 f0       	breq	.+2      	; 0x298 <Error+0xc>
     296:	f6 cf       	rjmp	.-20     	; 0x284 <stop_bus>
     298:	ed cf       	rjmp	.-38     	; 0x274 <clear_int>

0000029a <get_data>:
     29a:	80 91 bb 00 	lds	r24, 0x00BB
     29e:	08 95       	ret

000002a0 <wait_for_bus>:
     2a0:	ec eb       	ldi	r30, 0xBC	; 188
     2a2:	f0 e0       	ldi	r31, 0x00	; 0
     2a4:	80 81       	ld	r24, Z
     2a6:	88 23       	and	r24, r24
     2a8:	ec f7       	brge	.-6      	; 0x2a4 <wait_for_bus+0x4>
     2aa:	08 95       	ret

000002ac <send_data_and_wait>:
     2ac:	80 93 bb 00 	sts	0x00BB, r24
     2b0:	84 e8       	ldi	r24, 0x84	; 132
     2b2:	80 93 bc 00 	sts	0x00BC, r24
     2b6:	f4 cf       	rjmp	.-24     	; 0x2a0 <wait_for_bus>

000002b8 <stop_twi>:
     2b8:	10 92 33 24 	sts	0x2433, r1
     2bc:	10 92 32 24 	sts	0x2432, r1
     2c0:	10 92 3d 24 	sts	0x243D, r1
     2c4:	10 92 3c 24 	sts	0x243C, r1
     2c8:	10 92 28 24 	sts	0x2428, r1
     2cc:	10 92 27 24 	sts	0x2427, r1
     2d0:	10 92 2d 24 	sts	0x242D, r1
     2d4:	10 92 2c 24 	sts	0x242C, r1
     2d8:	10 92 30 24 	sts	0x2430, r1
     2dc:	10 92 2f 24 	sts	0x242F, r1
     2e0:	08 95       	ret

000002e2 <reset_TWI>:
     2e2:	ec eb       	ldi	r30, 0xBC	; 188
     2e4:	f0 e0       	ldi	r31, 0x00	; 0
     2e6:	80 81       	ld	r24, Z
     2e8:	80 6c       	ori	r24, 0xC0	; 192
     2ea:	80 83       	st	Z, r24
     2ec:	08 95       	ret

000002ee <get_sensor_from_bus>:
     2ee:	cf 93       	push	r28
     2f0:	df 93       	push	r29
     2f2:	c0 91 3c 24 	lds	r28, 0x243C
     2f6:	d0 91 3d 24 	lds	r29, 0x243D
     2fa:	c8 30       	cpi	r28, 0x08	; 8
     2fc:	d1 05       	cpc	r29, r1
     2fe:	91 f4       	brne	.+36     	; 0x324 <get_sensor_from_bus+0x36>
     300:	ee e3       	ldi	r30, 0x3E	; 62
     302:	f4 e2       	ldi	r31, 0x24	; 36
     304:	a6 e4       	ldi	r26, 0x46	; 70
     306:	b4 e2       	ldi	r27, 0x24	; 36
     308:	86 e4       	ldi	r24, 0x46	; 70
     30a:	94 e2       	ldi	r25, 0x24	; 36
     30c:	21 91       	ld	r18, Z+
     30e:	2d 93       	st	X+, r18
     310:	e8 17       	cp	r30, r24
     312:	f9 07       	cpc	r31, r25
     314:	d9 f7       	brne	.-10     	; 0x30c <get_sensor_from_bus+0x1e>
     316:	c1 df       	rcall	.-126    	; 0x29a <get_data>
     318:	80 93 36 24 	sts	0x2436, r24
     31c:	81 e0       	ldi	r24, 0x01	; 1
     31e:	80 93 1b 23 	sts	0x231B, r24
     322:	0d c0       	rjmp	.+26     	; 0x33e <get_sensor_from_bus+0x50>
     324:	ba df       	rcall	.-140    	; 0x29a <get_data>
     326:	c2 5c       	subi	r28, 0xC2	; 194
     328:	db 4d       	sbci	r29, 0xDB	; 219
     32a:	88 83       	st	Y, r24
     32c:	80 91 3c 24 	lds	r24, 0x243C
     330:	90 91 3d 24 	lds	r25, 0x243D
     334:	01 96       	adiw	r24, 0x01	; 1
     336:	90 93 3d 24 	sts	0x243D, r25
     33a:	80 93 3c 24 	sts	0x243C, r24
     33e:	df 91       	pop	r29
     340:	cf 91       	pop	r28
     342:	08 95       	ret

00000344 <get_control_settings_from_bus>:
     344:	cf 93       	push	r28
     346:	df 93       	push	r29
     348:	c0 91 2c 24 	lds	r28, 0x242C
     34c:	d0 91 2d 24 	lds	r29, 0x242D
     350:	a4 df       	rcall	.-184    	; 0x29a <get_data>
     352:	c7 5d       	subi	r28, 0xD7	; 215
     354:	db 4d       	sbci	r29, 0xDB	; 219
     356:	88 83       	st	Y, r24
     358:	10 92 2d 24 	sts	0x242D, r1
     35c:	10 92 2c 24 	sts	0x242C, r1
     360:	df 91       	pop	r29
     362:	cf 91       	pop	r28
     364:	08 95       	ret

00000366 <get_autonom_settings_from_bus>:
     366:	99 df       	rcall	.-206    	; 0x29a <get_data>
     368:	80 93 27 23 	sts	0x2327, r24
     36c:	08 95       	ret

0000036e <get_char_from_bus>:
     36e:	cf 93       	push	r28
     370:	df 93       	push	r29
     372:	c0 91 27 24 	lds	r28, 0x2427
     376:	d0 91 28 24 	lds	r29, 0x2428
     37a:	8f df       	rcall	.-226    	; 0x29a <get_data>
     37c:	c8 5d       	subi	r28, 0xD8	; 216
     37e:	dc 4d       	sbci	r29, 0xDC	; 220
     380:	88 83       	st	Y, r24
     382:	80 91 27 24 	lds	r24, 0x2427
     386:	90 91 28 24 	lds	r25, 0x2428
     38a:	01 96       	adiw	r24, 0x01	; 1
     38c:	90 93 28 24 	sts	0x2428, r25
     390:	80 93 27 24 	sts	0x2427, r24
     394:	90 93 38 24 	sts	0x2438, r25
     398:	80 93 37 24 	sts	0x2437, r24
     39c:	df 91       	pop	r29
     39e:	cf 91       	pop	r28
     3a0:	08 95       	ret

000003a2 <TWI_init>:
     3a2:	80 93 2e 24 	sts	0x242E, r24
     3a6:	80 34       	cpi	r24, 0x40	; 64
     3a8:	79 f0       	breq	.+30     	; 0x3c8 <TWI_init+0x26>
     3aa:	80 38       	cpi	r24, 0x80	; 128
     3ac:	19 f0       	breq	.+6      	; 0x3b4 <TWI_init+0x12>
     3ae:	80 32       	cpi	r24, 0x20	; 32
     3b0:	d1 f4       	brne	.+52     	; 0x3e6 <TWI_init+0x44>
     3b2:	12 c0       	rjmp	.+36     	; 0x3d8 <TWI_init+0x36>
     3b4:	83 e0       	ldi	r24, 0x03	; 3
     3b6:	88 b9       	out	0x08, r24	; 8
     3b8:	59 df       	rcall	.-334    	; 0x26c <set_twi_reciever_enable>
     3ba:	8f e3       	ldi	r24, 0x3F	; 63
     3bc:	80 93 b8 00 	sts	0x00B8, r24
     3c0:	81 e8       	ldi	r24, 0x81	; 129
     3c2:	80 93 ba 00 	sts	0x00BA, r24
     3c6:	08 95       	ret
     3c8:	8f e3       	ldi	r24, 0x3F	; 63
     3ca:	80 93 b8 00 	sts	0x00B8, r24
     3ce:	4e df       	rcall	.-356    	; 0x26c <set_twi_reciever_enable>
     3d0:	80 e4       	ldi	r24, 0x40	; 64
     3d2:	80 93 ba 00 	sts	0x00BA, r24
     3d6:	08 95       	ret
     3d8:	8f e3       	ldi	r24, 0x3F	; 63
     3da:	80 93 b8 00 	sts	0x00B8, r24
     3de:	46 df       	rcall	.-372    	; 0x26c <set_twi_reciever_enable>
     3e0:	81 e2       	ldi	r24, 0x21	; 33
     3e2:	80 93 ba 00 	sts	0x00BA, r24
     3e6:	08 95       	ret

000003e8 <TWI_send_control_settings>:
     3e8:	0f 93       	push	r16
     3ea:	1f 93       	push	r17
     3ec:	cf 93       	push	r28
     3ee:	df 93       	push	r29
     3f0:	c8 2f       	mov	r28, r24
     3f2:	d6 2f       	mov	r29, r22
     3f4:	14 2f       	mov	r17, r20
     3f6:	02 2f       	mov	r16, r18
     3f8:	41 df       	rcall	.-382    	; 0x27c <start_bus>
     3fa:	52 df       	rcall	.-348    	; 0x2a0 <wait_for_bus>
     3fc:	90 91 b9 00 	lds	r25, 0x00B9
     400:	98 7f       	andi	r25, 0xF8	; 248
     402:	98 30       	cpi	r25, 0x08	; 8
     404:	19 f0       	breq	.+6      	; 0x40c <TWI_send_control_settings+0x24>
     406:	42 df       	rcall	.-380    	; 0x28c <Error>
     408:	80 e0       	ldi	r24, 0x00	; 0
     40a:	34 c0       	rjmp	.+104    	; 0x474 <TWI_send_control_settings+0x8c>
     40c:	8c 2f       	mov	r24, r28
     40e:	4e df       	rcall	.-356    	; 0x2ac <send_data_and_wait>
     410:	80 91 b9 00 	lds	r24, 0x00B9
     414:	88 7f       	andi	r24, 0xF8	; 248
     416:	88 31       	cpi	r24, 0x18	; 24
     418:	19 f0       	breq	.+6      	; 0x420 <TWI_send_control_settings+0x38>
     41a:	38 df       	rcall	.-400    	; 0x28c <Error>
     41c:	80 e0       	ldi	r24, 0x00	; 0
     41e:	2a c0       	rjmp	.+84     	; 0x474 <TWI_send_control_settings+0x8c>
     420:	81 e0       	ldi	r24, 0x01	; 1
     422:	44 df       	rcall	.-376    	; 0x2ac <send_data_and_wait>
     424:	80 91 b9 00 	lds	r24, 0x00B9
     428:	88 7f       	andi	r24, 0xF8	; 248
     42a:	88 32       	cpi	r24, 0x28	; 40
     42c:	19 f0       	breq	.+6      	; 0x434 <TWI_send_control_settings+0x4c>
     42e:	2e df       	rcall	.-420    	; 0x28c <Error>
     430:	80 e0       	ldi	r24, 0x00	; 0
     432:	20 c0       	rjmp	.+64     	; 0x474 <TWI_send_control_settings+0x8c>
     434:	8d 2f       	mov	r24, r29
     436:	3a df       	rcall	.-396    	; 0x2ac <send_data_and_wait>
     438:	80 91 b9 00 	lds	r24, 0x00B9
     43c:	88 7f       	andi	r24, 0xF8	; 248
     43e:	88 32       	cpi	r24, 0x28	; 40
     440:	19 f0       	breq	.+6      	; 0x448 <TWI_send_control_settings+0x60>
     442:	24 df       	rcall	.-440    	; 0x28c <Error>
     444:	80 e0       	ldi	r24, 0x00	; 0
     446:	16 c0       	rjmp	.+44     	; 0x474 <TWI_send_control_settings+0x8c>
     448:	81 2f       	mov	r24, r17
     44a:	30 df       	rcall	.-416    	; 0x2ac <send_data_and_wait>
     44c:	80 91 b9 00 	lds	r24, 0x00B9
     450:	88 7f       	andi	r24, 0xF8	; 248
     452:	88 32       	cpi	r24, 0x28	; 40
     454:	19 f0       	breq	.+6      	; 0x45c <TWI_send_control_settings+0x74>
     456:	1a df       	rcall	.-460    	; 0x28c <Error>
     458:	80 e0       	ldi	r24, 0x00	; 0
     45a:	0c c0       	rjmp	.+24     	; 0x474 <TWI_send_control_settings+0x8c>
     45c:	80 2f       	mov	r24, r16
     45e:	26 df       	rcall	.-436    	; 0x2ac <send_data_and_wait>
     460:	80 91 b9 00 	lds	r24, 0x00B9
     464:	88 7f       	andi	r24, 0xF8	; 248
     466:	88 32       	cpi	r24, 0x28	; 40
     468:	19 f0       	breq	.+6      	; 0x470 <TWI_send_control_settings+0x88>
     46a:	10 df       	rcall	.-480    	; 0x28c <Error>
     46c:	80 e0       	ldi	r24, 0x00	; 0
     46e:	02 c0       	rjmp	.+4      	; 0x474 <TWI_send_control_settings+0x8c>
     470:	09 df       	rcall	.-494    	; 0x284 <stop_bus>
     472:	81 e0       	ldi	r24, 0x01	; 1
     474:	df 91       	pop	r29
     476:	cf 91       	pop	r28
     478:	1f 91       	pop	r17
     47a:	0f 91       	pop	r16
     47c:	08 95       	ret

0000047e <TWI_send_autonom_settings>:
     47e:	cf 93       	push	r28
     480:	df 93       	push	r29
     482:	c8 2f       	mov	r28, r24
     484:	d6 2f       	mov	r29, r22
     486:	fa de       	rcall	.-524    	; 0x27c <start_bus>
     488:	0b df       	rcall	.-490    	; 0x2a0 <wait_for_bus>
     48a:	90 91 b9 00 	lds	r25, 0x00B9
     48e:	98 7f       	andi	r25, 0xF8	; 248
     490:	98 30       	cpi	r25, 0x08	; 8
     492:	19 f0       	breq	.+6      	; 0x49a <TWI_send_autonom_settings+0x1c>
     494:	fb de       	rcall	.-522    	; 0x28c <Error>
     496:	80 e0       	ldi	r24, 0x00	; 0
     498:	20 c0       	rjmp	.+64     	; 0x4da <TWI_send_autonom_settings+0x5c>
     49a:	8c 2f       	mov	r24, r28
     49c:	07 df       	rcall	.-498    	; 0x2ac <send_data_and_wait>
     49e:	80 91 b9 00 	lds	r24, 0x00B9
     4a2:	88 7f       	andi	r24, 0xF8	; 248
     4a4:	88 31       	cpi	r24, 0x18	; 24
     4a6:	19 f0       	breq	.+6      	; 0x4ae <TWI_send_autonom_settings+0x30>
     4a8:	f1 de       	rcall	.-542    	; 0x28c <Error>
     4aa:	80 e0       	ldi	r24, 0x00	; 0
     4ac:	16 c0       	rjmp	.+44     	; 0x4da <TWI_send_autonom_settings+0x5c>
     4ae:	85 e0       	ldi	r24, 0x05	; 5
     4b0:	fd de       	rcall	.-518    	; 0x2ac <send_data_and_wait>
     4b2:	80 91 b9 00 	lds	r24, 0x00B9
     4b6:	88 7f       	andi	r24, 0xF8	; 248
     4b8:	88 32       	cpi	r24, 0x28	; 40
     4ba:	19 f0       	breq	.+6      	; 0x4c2 <TWI_send_autonom_settings+0x44>
     4bc:	e7 de       	rcall	.-562    	; 0x28c <Error>
     4be:	80 e0       	ldi	r24, 0x00	; 0
     4c0:	0c c0       	rjmp	.+24     	; 0x4da <TWI_send_autonom_settings+0x5c>
     4c2:	8d 2f       	mov	r24, r29
     4c4:	f3 de       	rcall	.-538    	; 0x2ac <send_data_and_wait>
     4c6:	80 91 b9 00 	lds	r24, 0x00B9
     4ca:	88 7f       	andi	r24, 0xF8	; 248
     4cc:	88 32       	cpi	r24, 0x28	; 40
     4ce:	19 f0       	breq	.+6      	; 0x4d6 <TWI_send_autonom_settings+0x58>
     4d0:	dd de       	rcall	.-582    	; 0x28c <Error>
     4d2:	80 e0       	ldi	r24, 0x00	; 0
     4d4:	02 c0       	rjmp	.+4      	; 0x4da <TWI_send_autonom_settings+0x5c>
     4d6:	d6 de       	rcall	.-596    	; 0x284 <stop_bus>
     4d8:	81 e0       	ldi	r24, 0x01	; 1
     4da:	df 91       	pop	r29
     4dc:	cf 91       	pop	r28
     4de:	08 95       	ret

000004e0 <TWI_send_command>:
     4e0:	1f 93       	push	r17
     4e2:	cf 93       	push	r28
     4e4:	df 93       	push	r29
     4e6:	c8 2f       	mov	r28, r24
     4e8:	d6 2f       	mov	r29, r22
     4ea:	14 2f       	mov	r17, r20
     4ec:	c7 de       	rcall	.-626    	; 0x27c <start_bus>
     4ee:	d8 de       	rcall	.-592    	; 0x2a0 <wait_for_bus>
     4f0:	90 91 b9 00 	lds	r25, 0x00B9
     4f4:	98 7f       	andi	r25, 0xF8	; 248
     4f6:	98 30       	cpi	r25, 0x08	; 8
     4f8:	19 f0       	breq	.+6      	; 0x500 <TWI_send_command+0x20>
     4fa:	c8 de       	rcall	.-624    	; 0x28c <Error>
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	34 c0       	rjmp	.+104    	; 0x568 <TWI_send_command+0x88>
     500:	80 e2       	ldi	r24, 0x20	; 32
     502:	d4 de       	rcall	.-600    	; 0x2ac <send_data_and_wait>
     504:	80 91 b9 00 	lds	r24, 0x00B9
     508:	88 7f       	andi	r24, 0xF8	; 248
     50a:	88 31       	cpi	r24, 0x18	; 24
     50c:	19 f0       	breq	.+6      	; 0x514 <TWI_send_command+0x34>
     50e:	be de       	rcall	.-644    	; 0x28c <Error>
     510:	80 e0       	ldi	r24, 0x00	; 0
     512:	2a c0       	rjmp	.+84     	; 0x568 <TWI_send_command+0x88>
     514:	80 e0       	ldi	r24, 0x00	; 0
     516:	ca de       	rcall	.-620    	; 0x2ac <send_data_and_wait>
     518:	80 91 b9 00 	lds	r24, 0x00B9
     51c:	88 7f       	andi	r24, 0xF8	; 248
     51e:	88 32       	cpi	r24, 0x28	; 40
     520:	19 f0       	breq	.+6      	; 0x528 <TWI_send_command+0x48>
     522:	b4 de       	rcall	.-664    	; 0x28c <Error>
     524:	80 e0       	ldi	r24, 0x00	; 0
     526:	20 c0       	rjmp	.+64     	; 0x568 <TWI_send_command+0x88>
     528:	8c 2f       	mov	r24, r28
     52a:	c0 de       	rcall	.-640    	; 0x2ac <send_data_and_wait>
     52c:	80 91 b9 00 	lds	r24, 0x00B9
     530:	88 7f       	andi	r24, 0xF8	; 248
     532:	88 32       	cpi	r24, 0x28	; 40
     534:	19 f0       	breq	.+6      	; 0x53c <TWI_send_command+0x5c>
     536:	aa de       	rcall	.-684    	; 0x28c <Error>
     538:	80 e0       	ldi	r24, 0x00	; 0
     53a:	16 c0       	rjmp	.+44     	; 0x568 <TWI_send_command+0x88>
     53c:	8d 2f       	mov	r24, r29
     53e:	b6 de       	rcall	.-660    	; 0x2ac <send_data_and_wait>
     540:	80 91 b9 00 	lds	r24, 0x00B9
     544:	88 7f       	andi	r24, 0xF8	; 248
     546:	88 32       	cpi	r24, 0x28	; 40
     548:	19 f0       	breq	.+6      	; 0x550 <TWI_send_command+0x70>
     54a:	a0 de       	rcall	.-704    	; 0x28c <Error>
     54c:	80 e0       	ldi	r24, 0x00	; 0
     54e:	0c c0       	rjmp	.+24     	; 0x568 <TWI_send_command+0x88>
     550:	81 2f       	mov	r24, r17
     552:	ac de       	rcall	.-680    	; 0x2ac <send_data_and_wait>
     554:	80 91 b9 00 	lds	r24, 0x00B9
     558:	88 7f       	andi	r24, 0xF8	; 248
     55a:	88 32       	cpi	r24, 0x28	; 40
     55c:	19 f0       	breq	.+6      	; 0x564 <TWI_send_command+0x84>
     55e:	96 de       	rcall	.-724    	; 0x28c <Error>
     560:	80 e0       	ldi	r24, 0x00	; 0
     562:	02 c0       	rjmp	.+4      	; 0x568 <TWI_send_command+0x88>
     564:	8f de       	rcall	.-738    	; 0x284 <stop_bus>
     566:	81 e0       	ldi	r24, 0x01	; 1
     568:	df 91       	pop	r29
     56a:	cf 91       	pop	r28
     56c:	1f 91       	pop	r17
     56e:	08 95       	ret

00000570 <TWI_send_elevation>:
     570:	cf 93       	push	r28
     572:	c8 2f       	mov	r28, r24
     574:	83 de       	rcall	.-762    	; 0x27c <start_bus>
     576:	94 de       	rcall	.-728    	; 0x2a0 <wait_for_bus>
     578:	90 91 b9 00 	lds	r25, 0x00B9
     57c:	98 7f       	andi	r25, 0xF8	; 248
     57e:	98 30       	cpi	r25, 0x08	; 8
     580:	19 f0       	breq	.+6      	; 0x588 <TWI_send_elevation+0x18>
     582:	84 de       	rcall	.-760    	; 0x28c <Error>
     584:	80 e0       	ldi	r24, 0x00	; 0
     586:	20 c0       	rjmp	.+64     	; 0x5c8 <TWI_send_elevation+0x58>
     588:	80 e2       	ldi	r24, 0x20	; 32
     58a:	90 de       	rcall	.-736    	; 0x2ac <send_data_and_wait>
     58c:	80 91 b9 00 	lds	r24, 0x00B9
     590:	88 7f       	andi	r24, 0xF8	; 248
     592:	88 31       	cpi	r24, 0x18	; 24
     594:	19 f0       	breq	.+6      	; 0x59c <TWI_send_elevation+0x2c>
     596:	7a de       	rcall	.-780    	; 0x28c <Error>
     598:	80 e0       	ldi	r24, 0x00	; 0
     59a:	16 c0       	rjmp	.+44     	; 0x5c8 <TWI_send_elevation+0x58>
     59c:	84 e0       	ldi	r24, 0x04	; 4
     59e:	86 de       	rcall	.-756    	; 0x2ac <send_data_and_wait>
     5a0:	80 91 b9 00 	lds	r24, 0x00B9
     5a4:	88 7f       	andi	r24, 0xF8	; 248
     5a6:	88 32       	cpi	r24, 0x28	; 40
     5a8:	19 f0       	breq	.+6      	; 0x5b0 <TWI_send_elevation+0x40>
     5aa:	70 de       	rcall	.-800    	; 0x28c <Error>
     5ac:	80 e0       	ldi	r24, 0x00	; 0
     5ae:	0c c0       	rjmp	.+24     	; 0x5c8 <TWI_send_elevation+0x58>
     5b0:	8c 2f       	mov	r24, r28
     5b2:	7c de       	rcall	.-776    	; 0x2ac <send_data_and_wait>
     5b4:	80 91 b9 00 	lds	r24, 0x00B9
     5b8:	88 7f       	andi	r24, 0xF8	; 248
     5ba:	88 32       	cpi	r24, 0x28	; 40
     5bc:	19 f0       	breq	.+6      	; 0x5c4 <TWI_send_elevation+0x54>
     5be:	66 de       	rcall	.-820    	; 0x28c <Error>
     5c0:	80 e0       	ldi	r24, 0x00	; 0
     5c2:	02 c0       	rjmp	.+4      	; 0x5c8 <TWI_send_elevation+0x58>
     5c4:	5f de       	rcall	.-834    	; 0x284 <stop_bus>
     5c6:	81 e0       	ldi	r24, 0x01	; 1
     5c8:	cf 91       	pop	r28
     5ca:	08 95       	ret

000005cc <TWI_send_string_fixed_length>:
     5cc:	ef 92       	push	r14
     5ce:	ff 92       	push	r15
     5d0:	0f 93       	push	r16
     5d2:	1f 93       	push	r17
     5d4:	cf 93       	push	r28
     5d6:	df 93       	push	r29
     5d8:	c8 2f       	mov	r28, r24
     5da:	e6 2e       	mov	r14, r22
     5dc:	f7 2e       	mov	r15, r23
     5de:	8a 01       	movw	r16, r20
     5e0:	4d de       	rcall	.-870    	; 0x27c <start_bus>
     5e2:	5e de       	rcall	.-836    	; 0x2a0 <wait_for_bus>
     5e4:	90 91 b9 00 	lds	r25, 0x00B9
     5e8:	98 7f       	andi	r25, 0xF8	; 248
     5ea:	98 30       	cpi	r25, 0x08	; 8
     5ec:	19 f0       	breq	.+6      	; 0x5f4 <TWI_send_string_fixed_length+0x28>
     5ee:	4e de       	rcall	.-868    	; 0x28c <Error>
     5f0:	80 e0       	ldi	r24, 0x00	; 0
     5f2:	23 c0       	rjmp	.+70     	; 0x63a <TWI_send_string_fixed_length+0x6e>
     5f4:	8c 2f       	mov	r24, r28
     5f6:	5a de       	rcall	.-844    	; 0x2ac <send_data_and_wait>
     5f8:	80 91 b9 00 	lds	r24, 0x00B9
     5fc:	88 7f       	andi	r24, 0xF8	; 248
     5fe:	88 31       	cpi	r24, 0x18	; 24
     600:	19 f0       	breq	.+6      	; 0x608 <TWI_send_string_fixed_length+0x3c>
     602:	44 de       	rcall	.-888    	; 0x28c <Error>
     604:	80 e0       	ldi	r24, 0x00	; 0
     606:	19 c0       	rjmp	.+50     	; 0x63a <TWI_send_string_fixed_length+0x6e>
     608:	89 e1       	ldi	r24, 0x19	; 25
     60a:	50 de       	rcall	.-864    	; 0x2ac <send_data_and_wait>
     60c:	80 91 b9 00 	lds	r24, 0x00B9
     610:	88 7f       	andi	r24, 0xF8	; 248
     612:	88 32       	cpi	r24, 0x28	; 40
     614:	21 f4       	brne	.+8      	; 0x61e <TWI_send_string_fixed_length+0x52>
     616:	10 16       	cp	r1, r16
     618:	11 06       	cpc	r1, r17
     61a:	24 f0       	brlt	.+8      	; 0x624 <TWI_send_string_fixed_length+0x58>
     61c:	0c c0       	rjmp	.+24     	; 0x636 <TWI_send_string_fixed_length+0x6a>
     61e:	36 de       	rcall	.-916    	; 0x28c <Error>
     620:	80 e0       	ldi	r24, 0x00	; 0
     622:	0b c0       	rjmp	.+22     	; 0x63a <TWI_send_string_fixed_length+0x6e>
     624:	ce 2d       	mov	r28, r14
     626:	df 2d       	mov	r29, r15
     628:	0c 0f       	add	r16, r28
     62a:	1d 1f       	adc	r17, r29
     62c:	89 91       	ld	r24, Y+
     62e:	3e de       	rcall	.-900    	; 0x2ac <send_data_and_wait>
     630:	c0 17       	cp	r28, r16
     632:	d1 07       	cpc	r29, r17
     634:	d9 f7       	brne	.-10     	; 0x62c <TWI_send_string_fixed_length+0x60>
     636:	26 de       	rcall	.-948    	; 0x284 <stop_bus>
     638:	81 e0       	ldi	r24, 0x01	; 1
     63a:	df 91       	pop	r29
     63c:	cf 91       	pop	r28
     63e:	1f 91       	pop	r17
     640:	0f 91       	pop	r16
     642:	ff 90       	pop	r15
     644:	ef 90       	pop	r14
     646:	08 95       	ret

00000648 <TWI_send_status_settings>:
     648:	cf 93       	push	r28
     64a:	df 93       	push	r29
     64c:	c8 2f       	mov	r28, r24
     64e:	d6 2f       	mov	r29, r22
     650:	15 de       	rcall	.-982    	; 0x27c <start_bus>
     652:	26 de       	rcall	.-948    	; 0x2a0 <wait_for_bus>
     654:	90 91 b9 00 	lds	r25, 0x00B9
     658:	98 7f       	andi	r25, 0xF8	; 248
     65a:	98 30       	cpi	r25, 0x08	; 8
     65c:	19 f0       	breq	.+6      	; 0x664 <TWI_send_status_settings+0x1c>
     65e:	16 de       	rcall	.-980    	; 0x28c <Error>
     660:	80 e0       	ldi	r24, 0x00	; 0
     662:	20 c0       	rjmp	.+64     	; 0x6a4 <TWI_send_status_settings+0x5c>
     664:	8c 2f       	mov	r24, r28
     666:	22 de       	rcall	.-956    	; 0x2ac <send_data_and_wait>
     668:	80 91 b9 00 	lds	r24, 0x00B9
     66c:	88 7f       	andi	r24, 0xF8	; 248
     66e:	88 31       	cpi	r24, 0x18	; 24
     670:	19 f0       	breq	.+6      	; 0x678 <TWI_send_status_settings+0x30>
     672:	0c de       	rcall	.-1000   	; 0x28c <Error>
     674:	80 e0       	ldi	r24, 0x00	; 0
     676:	16 c0       	rjmp	.+44     	; 0x6a4 <TWI_send_status_settings+0x5c>
     678:	87 e0       	ldi	r24, 0x07	; 7
     67a:	18 de       	rcall	.-976    	; 0x2ac <send_data_and_wait>
     67c:	80 91 b9 00 	lds	r24, 0x00B9
     680:	88 7f       	andi	r24, 0xF8	; 248
     682:	88 32       	cpi	r24, 0x28	; 40
     684:	19 f0       	breq	.+6      	; 0x68c <TWI_send_status_settings+0x44>
     686:	02 de       	rcall	.-1020   	; 0x28c <Error>
     688:	80 e0       	ldi	r24, 0x00	; 0
     68a:	0c c0       	rjmp	.+24     	; 0x6a4 <TWI_send_status_settings+0x5c>
     68c:	8d 2f       	mov	r24, r29
     68e:	0e de       	rcall	.-996    	; 0x2ac <send_data_and_wait>
     690:	80 91 b9 00 	lds	r24, 0x00B9
     694:	88 7f       	andi	r24, 0xF8	; 248
     696:	88 32       	cpi	r24, 0x28	; 40
     698:	19 f0       	breq	.+6      	; 0x6a0 <TWI_send_status_settings+0x58>
     69a:	f8 dd       	rcall	.-1040   	; 0x28c <Error>
     69c:	80 e0       	ldi	r24, 0x00	; 0
     69e:	02 c0       	rjmp	.+4      	; 0x6a4 <TWI_send_status_settings+0x5c>
     6a0:	f1 dd       	rcall	.-1054   	; 0x284 <stop_bus>
     6a2:	81 e0       	ldi	r24, 0x01	; 1
     6a4:	df 91       	pop	r29
     6a6:	cf 91       	pop	r28
     6a8:	08 95       	ret

000006aa <TWI_get_sensor>:
     6aa:	8a 5b       	subi	r24, 0xBA	; 186
     6ac:	9b 4d       	sbci	r25, 0xDB	; 219
     6ae:	fc 01       	movw	r30, r24
     6b0:	80 81       	ld	r24, Z
     6b2:	08 95       	ret

000006b4 <TWI_get_servo>:
     6b4:	80 91 36 24 	lds	r24, 0x2436
     6b8:	08 95       	ret

000006ba <TWI_get_autonom_settings>:
     6ba:	80 91 27 23 	lds	r24, 0x2327
     6be:	08 95       	ret

000006c0 <TWI_sensor_flag>:
     6c0:	80 91 1b 23 	lds	r24, 0x231B
     6c4:	88 23       	and	r24, r24
     6c6:	21 f0       	breq	.+8      	; 0x6d0 <TWI_sensor_flag+0x10>
     6c8:	10 92 1b 23 	sts	0x231B, r1
     6cc:	81 e0       	ldi	r24, 0x01	; 1
     6ce:	08 95       	ret
     6d0:	80 e0       	ldi	r24, 0x00	; 0
     6d2:	08 95       	ret

000006d4 <TWI_autonom_settings_flag>:
     6d4:	80 91 18 23 	lds	r24, 0x2318
     6d8:	88 23       	and	r24, r24
     6da:	21 f0       	breq	.+8      	; 0x6e4 <TWI_autonom_settings_flag+0x10>
     6dc:	10 92 18 23 	sts	0x2318, r1
     6e0:	81 e0       	ldi	r24, 0x01	; 1
     6e2:	08 95       	ret
     6e4:	80 e0       	ldi	r24, 0x00	; 0
     6e6:	08 95       	ret

000006e8 <decode_message_TwiFIFO>:
     6e8:	8f 92       	push	r8
     6ea:	9f 92       	push	r9
     6ec:	af 92       	push	r10
     6ee:	bf 92       	push	r11
     6f0:	cf 92       	push	r12
     6f2:	df 92       	push	r13
     6f4:	ef 92       	push	r14
     6f6:	ff 92       	push	r15
     6f8:	0f 93       	push	r16
     6fa:	1f 93       	push	r17
     6fc:	cf 93       	push	r28
     6fe:	df 93       	push	r29
     700:	cd b7       	in	r28, 0x3d	; 61
     702:	de b7       	in	r29, 0x3e	; 62
     704:	ad b6       	in	r10, 0x3d	; 61
     706:	be b6       	in	r11, 0x3e	; 62
     708:	60 e0       	ldi	r22, 0x00	; 0
     70a:	70 e0       	ldi	r23, 0x00	; 0
     70c:	80 91 00 01 	lds	r24, 0x0100
     710:	90 91 01 01 	lds	r25, 0x0101
     714:	49 dd       	rcall	.-1390   	; 0x1a8 <FifoRead>
     716:	81 11       	cpse	r24, r1
     718:	3b c0       	rjmp	.+118    	; 0x790 <decode_message_TwiFIFO+0xa8>
     71a:	c0 90 00 00 	lds	r12, 0x0000
     71e:	d1 2c       	mov	r13, r1
     720:	96 01       	movw	r18, r12
     722:	21 50       	subi	r18, 0x01	; 1
     724:	31 09       	sbc	r19, r1
     726:	81 e0       	ldi	r24, 0x01	; 1
     728:	90 e0       	ldi	r25, 0x00	; 0
     72a:	c1 14       	cp	r12, r1
     72c:	d1 04       	cpc	r13, r1
     72e:	11 f0       	breq	.+4      	; 0x734 <decode_message_TwiFIFO+0x4c>
     730:	80 e0       	ldi	r24, 0x00	; 0
     732:	90 e0       	ldi	r25, 0x00	; 0
     734:	82 0f       	add	r24, r18
     736:	93 1f       	adc	r25, r19
     738:	2d b7       	in	r18, 0x3d	; 61
     73a:	3e b7       	in	r19, 0x3e	; 62
     73c:	28 1b       	sub	r18, r24
     73e:	39 0b       	sbc	r19, r25
     740:	0f b6       	in	r0, 0x3f	; 63
     742:	f8 94       	cli
     744:	3e bf       	out	0x3e, r19	; 62
     746:	0f be       	out	0x3f, r0	; 63
     748:	2d bf       	out	0x3d, r18	; 61
     74a:	2f 5f       	subi	r18, 0xFF	; 255
     74c:	3f 4f       	sbci	r19, 0xFF	; 255
     74e:	82 2e       	mov	r8, r18
     750:	93 2e       	mov	r9, r19
     752:	1c 14       	cp	r1, r12
     754:	1d 04       	cpc	r1, r13
     756:	bc f4       	brge	.+46     	; 0x786 <decode_message_TwiFIFO+0x9e>
     758:	e2 2e       	mov	r14, r18
     75a:	f3 2e       	mov	r15, r19
     75c:	00 e0       	ldi	r16, 0x00	; 0
     75e:	10 e0       	ldi	r17, 0x00	; 0
     760:	60 e0       	ldi	r22, 0x00	; 0
     762:	70 e0       	ldi	r23, 0x00	; 0
     764:	80 91 00 01 	lds	r24, 0x0100
     768:	90 91 01 01 	lds	r25, 0x0101
     76c:	1d dd       	rcall	.-1478   	; 0x1a8 <FifoRead>
     76e:	81 11       	cpse	r24, r1
     770:	11 c0       	rjmp	.+34     	; 0x794 <decode_message_TwiFIFO+0xac>
     772:	20 91 00 00 	lds	r18, 0x0000
     776:	f7 01       	movw	r30, r14
     778:	21 93       	st	Z+, r18
     77a:	7f 01       	movw	r14, r30
     77c:	0f 5f       	subi	r16, 0xFF	; 255
     77e:	1f 4f       	sbci	r17, 0xFF	; 255
     780:	0c 15       	cp	r16, r12
     782:	1d 05       	cpc	r17, r13
     784:	6c f3       	brlt	.-38     	; 0x760 <decode_message_TwiFIFO+0x78>
     786:	88 2d       	mov	r24, r8
     788:	99 2d       	mov	r25, r9
     78a:	dd d2       	rcall	.+1466   	; 0xd46 <USART_send_message>
     78c:	80 e0       	ldi	r24, 0x00	; 0
     78e:	03 c0       	rjmp	.+6      	; 0x796 <decode_message_TwiFIFO+0xae>
     790:	81 e0       	ldi	r24, 0x01	; 1
     792:	01 c0       	rjmp	.+2      	; 0x796 <decode_message_TwiFIFO+0xae>
     794:	81 e0       	ldi	r24, 0x01	; 1
     796:	0f b6       	in	r0, 0x3f	; 63
     798:	f8 94       	cli
     79a:	be be       	out	0x3e, r11	; 62
     79c:	0f be       	out	0x3f, r0	; 63
     79e:	ad be       	out	0x3d, r10	; 61
     7a0:	df 91       	pop	r29
     7a2:	cf 91       	pop	r28
     7a4:	1f 91       	pop	r17
     7a6:	0f 91       	pop	r16
     7a8:	ff 90       	pop	r15
     7aa:	ef 90       	pop	r14
     7ac:	df 90       	pop	r13
     7ae:	cf 90       	pop	r12
     7b0:	bf 90       	pop	r11
     7b2:	af 90       	pop	r10
     7b4:	9f 90       	pop	r9
     7b6:	8f 90       	pop	r8
     7b8:	08 95       	ret

000007ba <write_to_TwiFIFO>:
     7ba:	0f 93       	push	r16
     7bc:	1f 93       	push	r17
     7be:	cf 93       	push	r28
     7c0:	df 93       	push	r29
     7c2:	d8 2f       	mov	r29, r24
     7c4:	c9 2f       	mov	r28, r25
     7c6:	60 91 37 24 	lds	r22, 0x2437
     7ca:	80 91 00 01 	lds	r24, 0x0100
     7ce:	90 91 01 01 	lds	r25, 0x0101
     7d2:	ca dc       	rcall	.-1644   	; 0x168 <FifoWrite>
     7d4:	81 11       	cpse	r24, r1
     7d6:	1f c0       	rjmp	.+62     	; 0x816 <write_to_TwiFIFO+0x5c>
     7d8:	20 91 37 24 	lds	r18, 0x2437
     7dc:	30 91 38 24 	lds	r19, 0x2438
     7e0:	12 16       	cp	r1, r18
     7e2:	13 06       	cpc	r1, r19
     7e4:	d4 f4       	brge	.+52     	; 0x81a <write_to_TwiFIFO+0x60>
     7e6:	0d 2f       	mov	r16, r29
     7e8:	1c 2f       	mov	r17, r28
     7ea:	c0 e0       	ldi	r28, 0x00	; 0
     7ec:	d0 e0       	ldi	r29, 0x00	; 0
     7ee:	f8 01       	movw	r30, r16
     7f0:	61 91       	ld	r22, Z+
     7f2:	8f 01       	movw	r16, r30
     7f4:	80 91 00 01 	lds	r24, 0x0100
     7f8:	90 91 01 01 	lds	r25, 0x0101
     7fc:	b5 dc       	rcall	.-1686   	; 0x168 <FifoWrite>
     7fe:	81 11       	cpse	r24, r1
     800:	0e c0       	rjmp	.+28     	; 0x81e <write_to_TwiFIFO+0x64>
     802:	21 96       	adiw	r28, 0x01	; 1
     804:	80 91 37 24 	lds	r24, 0x2437
     808:	90 91 38 24 	lds	r25, 0x2438
     80c:	c8 17       	cp	r28, r24
     80e:	d9 07       	cpc	r29, r25
     810:	74 f3       	brlt	.-36     	; 0x7ee <write_to_TwiFIFO+0x34>
     812:	80 e0       	ldi	r24, 0x00	; 0
     814:	05 c0       	rjmp	.+10     	; 0x820 <write_to_TwiFIFO+0x66>
     816:	81 e0       	ldi	r24, 0x01	; 1
     818:	03 c0       	rjmp	.+6      	; 0x820 <write_to_TwiFIFO+0x66>
     81a:	80 e0       	ldi	r24, 0x00	; 0
     81c:	01 c0       	rjmp	.+2      	; 0x820 <write_to_TwiFIFO+0x66>
     81e:	81 e0       	ldi	r24, 0x01	; 1
     820:	df 91       	pop	r29
     822:	cf 91       	pop	r28
     824:	1f 91       	pop	r17
     826:	0f 91       	pop	r16
     828:	08 95       	ret

0000082a <__vector_26>:
     82a:	1f 92       	push	r1
     82c:	0f 92       	push	r0
     82e:	0f b6       	in	r0, 0x3f	; 63
     830:	0f 92       	push	r0
     832:	11 24       	eor	r1, r1
     834:	0b b6       	in	r0, 0x3b	; 59
     836:	0f 92       	push	r0
     838:	2f 93       	push	r18
     83a:	3f 93       	push	r19
     83c:	4f 93       	push	r20
     83e:	5f 93       	push	r21
     840:	6f 93       	push	r22
     842:	7f 93       	push	r23
     844:	8f 93       	push	r24
     846:	9f 93       	push	r25
     848:	af 93       	push	r26
     84a:	bf 93       	push	r27
     84c:	cf 93       	push	r28
     84e:	df 93       	push	r29
     850:	ef 93       	push	r30
     852:	ff 93       	push	r31
     854:	80 91 2e 24 	lds	r24, 0x242E
     858:	80 34       	cpi	r24, 0x40	; 64
     85a:	09 f4       	brne	.+2      	; 0x85e <__vector_26+0x34>
     85c:	90 c0       	rjmp	.+288    	; 0x97e <__vector_26+0x154>
     85e:	80 38       	cpi	r24, 0x80	; 128
     860:	21 f0       	breq	.+8      	; 0x86a <__vector_26+0x40>
     862:	80 32       	cpi	r24, 0x20	; 32
     864:	09 f0       	breq	.+2      	; 0x868 <__vector_26+0x3e>
     866:	88 c1       	rjmp	.+784    	; 0xb78 <__vector_26+0x34e>
     868:	d2 c0       	rjmp	.+420    	; 0xa0e <__vector_26+0x1e4>
     86a:	80 91 b9 00 	lds	r24, 0x00B9
     86e:	88 7f       	andi	r24, 0xF8	; 248
     870:	80 36       	cpi	r24, 0x60	; 96
     872:	29 f0       	breq	.+10     	; 0x87e <__vector_26+0x54>
     874:	80 91 b9 00 	lds	r24, 0x00B9
     878:	88 7f       	andi	r24, 0xF8	; 248
     87a:	88 36       	cpi	r24, 0x68	; 104
     87c:	21 f4       	brne	.+8      	; 0x886 <__vector_26+0x5c>
     87e:	81 e0       	ldi	r24, 0x01	; 1
     880:	80 93 31 24 	sts	0x2431, r24
     884:	7a c0       	rjmp	.+244    	; 0x97a <__vector_26+0x150>
     886:	80 91 b9 00 	lds	r24, 0x00B9
     88a:	88 7f       	andi	r24, 0xF8	; 248
     88c:	80 37       	cpi	r24, 0x70	; 112
     88e:	29 f0       	breq	.+10     	; 0x89a <__vector_26+0x70>
     890:	80 91 b9 00 	lds	r24, 0x00B9
     894:	88 7f       	andi	r24, 0xF8	; 248
     896:	88 37       	cpi	r24, 0x78	; 120
     898:	39 f4       	brne	.+14     	; 0x8a8 <__vector_26+0x7e>
     89a:	8f ef       	ldi	r24, 0xFF	; 255
     89c:	90 e0       	ldi	r25, 0x00	; 0
     89e:	90 93 3b 24 	sts	0x243B, r25
     8a2:	80 93 3a 24 	sts	0x243A, r24
     8a6:	69 c0       	rjmp	.+210    	; 0x97a <__vector_26+0x150>
     8a8:	80 91 b9 00 	lds	r24, 0x00B9
     8ac:	88 7f       	andi	r24, 0xF8	; 248
     8ae:	80 38       	cpi	r24, 0x80	; 128
     8b0:	b9 f5       	brne	.+110    	; 0x920 <__vector_26+0xf6>
     8b2:	80 91 31 24 	lds	r24, 0x2431
     8b6:	88 23       	and	r24, r24
     8b8:	41 f0       	breq	.+16     	; 0x8ca <__vector_26+0xa0>
     8ba:	ef dc       	rcall	.-1570   	; 0x29a <get_data>
     8bc:	80 93 3a 24 	sts	0x243A, r24
     8c0:	10 92 3b 24 	sts	0x243B, r1
     8c4:	10 92 31 24 	sts	0x2431, r1
     8c8:	58 c0       	rjmp	.+176    	; 0x97a <__vector_26+0x150>
     8ca:	80 91 3a 24 	lds	r24, 0x243A
     8ce:	90 91 3b 24 	lds	r25, 0x243B
     8d2:	85 30       	cpi	r24, 0x05	; 5
     8d4:	91 05       	cpc	r25, r1
     8d6:	71 f0       	breq	.+28     	; 0x8f4 <__vector_26+0xca>
     8d8:	24 f4       	brge	.+8      	; 0x8e2 <__vector_26+0xb8>
     8da:	01 97       	sbiw	r24, 0x01	; 1
     8dc:	09 f0       	breq	.+2      	; 0x8e0 <__vector_26+0xb6>
     8de:	4d c0       	rjmp	.+154    	; 0x97a <__vector_26+0x150>
     8e0:	07 c0       	rjmp	.+14     	; 0x8f0 <__vector_26+0xc6>
     8e2:	86 30       	cpi	r24, 0x06	; 6
     8e4:	91 05       	cpc	r25, r1
     8e6:	51 f0       	breq	.+20     	; 0x8fc <__vector_26+0xd2>
     8e8:	49 97       	sbiw	r24, 0x19	; 25
     8ea:	09 f0       	breq	.+2      	; 0x8ee <__vector_26+0xc4>
     8ec:	46 c0       	rjmp	.+140    	; 0x97a <__vector_26+0x150>
     8ee:	04 c0       	rjmp	.+8      	; 0x8f8 <__vector_26+0xce>
     8f0:	29 dd       	rcall	.-1454   	; 0x344 <get_control_settings_from_bus>
     8f2:	43 c0       	rjmp	.+134    	; 0x97a <__vector_26+0x150>
     8f4:	38 dd       	rcall	.-1424   	; 0x366 <get_autonom_settings_from_bus>
     8f6:	41 c0       	rjmp	.+130    	; 0x97a <__vector_26+0x150>
     8f8:	3a dd       	rcall	.-1420   	; 0x36e <get_char_from_bus>
     8fa:	3f c0       	rjmp	.+126    	; 0x97a <__vector_26+0x150>
     8fc:	c0 91 2f 24 	lds	r28, 0x242F
     900:	d0 91 30 24 	lds	r29, 0x2430
     904:	ca dc       	rcall	.-1644   	; 0x29a <get_data>
     906:	c0 5e       	subi	r28, 0xE0	; 224
     908:	dc 4d       	sbci	r29, 0xDC	; 220
     90a:	88 83       	st	Y, r24
     90c:	80 91 2f 24 	lds	r24, 0x242F
     910:	90 91 30 24 	lds	r25, 0x2430
     914:	01 96       	adiw	r24, 0x01	; 1
     916:	90 93 30 24 	sts	0x2430, r25
     91a:	80 93 2f 24 	sts	0x242F, r24
     91e:	2d c0       	rjmp	.+90     	; 0x97a <__vector_26+0x150>
     920:	80 91 b9 00 	lds	r24, 0x00B9
     924:	88 7f       	andi	r24, 0xF8	; 248
     926:	80 39       	cpi	r24, 0x90	; 144
     928:	11 f4       	brne	.+4      	; 0x92e <__vector_26+0x104>
     92a:	e1 dc       	rcall	.-1598   	; 0x2ee <get_sensor_from_bus>
     92c:	26 c0       	rjmp	.+76     	; 0x97a <__vector_26+0x150>
     92e:	80 91 b9 00 	lds	r24, 0x00B9
     932:	88 7f       	andi	r24, 0xF8	; 248
     934:	80 3a       	cpi	r24, 0xA0	; 160
     936:	09 f5       	brne	.+66     	; 0x97a <__vector_26+0x150>
     938:	bf dc       	rcall	.-1666   	; 0x2b8 <stop_twi>
     93a:	80 91 3a 24 	lds	r24, 0x243A
     93e:	90 91 3b 24 	lds	r25, 0x243B
     942:	85 30       	cpi	r24, 0x05	; 5
     944:	91 05       	cpc	r25, r1
     946:	71 f0       	breq	.+28     	; 0x964 <__vector_26+0x13a>
     948:	1c f4       	brge	.+6      	; 0x950 <__vector_26+0x126>
     94a:	01 97       	sbiw	r24, 0x01	; 1
     94c:	b1 f4       	brne	.+44     	; 0x97a <__vector_26+0x150>
     94e:	06 c0       	rjmp	.+12     	; 0x95c <__vector_26+0x132>
     950:	86 30       	cpi	r24, 0x06	; 6
     952:	91 05       	cpc	r25, r1
     954:	79 f0       	breq	.+30     	; 0x974 <__vector_26+0x14a>
     956:	49 97       	sbiw	r24, 0x19	; 25
     958:	81 f4       	brne	.+32     	; 0x97a <__vector_26+0x150>
     95a:	08 c0       	rjmp	.+16     	; 0x96c <__vector_26+0x142>
     95c:	81 e0       	ldi	r24, 0x01	; 1
     95e:	80 93 19 23 	sts	0x2319, r24
     962:	0b c0       	rjmp	.+22     	; 0x97a <__vector_26+0x150>
     964:	81 e0       	ldi	r24, 0x01	; 1
     966:	80 93 18 23 	sts	0x2318, r24
     96a:	07 c0       	rjmp	.+14     	; 0x97a <__vector_26+0x150>
     96c:	88 e2       	ldi	r24, 0x28	; 40
     96e:	93 e2       	ldi	r25, 0x23	; 35
     970:	24 df       	rcall	.-440    	; 0x7ba <write_to_TwiFIFO>
     972:	03 c0       	rjmp	.+6      	; 0x97a <__vector_26+0x150>
     974:	80 e2       	ldi	r24, 0x20	; 32
     976:	93 e2       	ldi	r25, 0x23	; 35
     978:	07 d2       	rcall	.+1038   	; 0xd88 <USART_send_value>
     97a:	b3 dc       	rcall	.-1690   	; 0x2e2 <reset_TWI>
     97c:	fd c0       	rjmp	.+506    	; 0xb78 <__vector_26+0x34e>
     97e:	80 91 b9 00 	lds	r24, 0x00B9
     982:	88 7f       	andi	r24, 0xF8	; 248
     984:	80 36       	cpi	r24, 0x60	; 96
     986:	29 f0       	breq	.+10     	; 0x992 <__vector_26+0x168>
     988:	80 91 b9 00 	lds	r24, 0x00B9
     98c:	88 7f       	andi	r24, 0xF8	; 248
     98e:	88 36       	cpi	r24, 0x68	; 104
     990:	21 f4       	brne	.+8      	; 0x99a <__vector_26+0x170>
     992:	81 e0       	ldi	r24, 0x01	; 1
     994:	80 93 31 24 	sts	0x2431, r24
     998:	38 c0       	rjmp	.+112    	; 0xa0a <__vector_26+0x1e0>
     99a:	80 91 b9 00 	lds	r24, 0x00B9
     99e:	88 7f       	andi	r24, 0xF8	; 248
     9a0:	80 38       	cpi	r24, 0x80	; 128
     9a2:	e1 f4       	brne	.+56     	; 0x9dc <__vector_26+0x1b2>
     9a4:	80 91 31 24 	lds	r24, 0x2431
     9a8:	88 23       	and	r24, r24
     9aa:	41 f0       	breq	.+16     	; 0x9bc <__vector_26+0x192>
     9ac:	76 dc       	rcall	.-1812   	; 0x29a <get_data>
     9ae:	80 93 3a 24 	sts	0x243A, r24
     9b2:	10 92 3b 24 	sts	0x243B, r1
     9b6:	10 92 31 24 	sts	0x2431, r1
     9ba:	27 c0       	rjmp	.+78     	; 0xa0a <__vector_26+0x1e0>
     9bc:	80 91 3a 24 	lds	r24, 0x243A
     9c0:	90 91 3b 24 	lds	r25, 0x243B
     9c4:	82 30       	cpi	r24, 0x02	; 2
     9c6:	91 05       	cpc	r25, r1
     9c8:	19 f0       	breq	.+6      	; 0x9d0 <__vector_26+0x1a6>
     9ca:	49 97       	sbiw	r24, 0x19	; 25
     9cc:	f1 f4       	brne	.+60     	; 0xa0a <__vector_26+0x1e0>
     9ce:	04 c0       	rjmp	.+8      	; 0x9d8 <__vector_26+0x1ae>
     9d0:	64 dc       	rcall	.-1848   	; 0x29a <get_data>
     9d2:	80 93 39 24 	sts	0x2439, r24
     9d6:	19 c0       	rjmp	.+50     	; 0xa0a <__vector_26+0x1e0>
     9d8:	ca dc       	rcall	.-1644   	; 0x36e <get_char_from_bus>
     9da:	17 c0       	rjmp	.+46     	; 0xa0a <__vector_26+0x1e0>
     9dc:	80 91 b9 00 	lds	r24, 0x00B9
     9e0:	88 7f       	andi	r24, 0xF8	; 248
     9e2:	80 3a       	cpi	r24, 0xA0	; 160
     9e4:	91 f4       	brne	.+36     	; 0xa0a <__vector_26+0x1e0>
     9e6:	68 dc       	rcall	.-1840   	; 0x2b8 <stop_twi>
     9e8:	80 91 3a 24 	lds	r24, 0x243A
     9ec:	90 91 3b 24 	lds	r25, 0x243B
     9f0:	82 30       	cpi	r24, 0x02	; 2
     9f2:	91 05       	cpc	r25, r1
     9f4:	19 f0       	breq	.+6      	; 0x9fc <__vector_26+0x1d2>
     9f6:	49 97       	sbiw	r24, 0x19	; 25
     9f8:	41 f4       	brne	.+16     	; 0xa0a <__vector_26+0x1e0>
     9fa:	04 c0       	rjmp	.+8      	; 0xa04 <__vector_26+0x1da>
     9fc:	81 e0       	ldi	r24, 0x01	; 1
     9fe:	80 93 16 23 	sts	0x2316, r24
     a02:	03 c0       	rjmp	.+6      	; 0xa0a <__vector_26+0x1e0>
     a04:	88 e2       	ldi	r24, 0x28	; 40
     a06:	93 e2       	ldi	r25, 0x23	; 35
     a08:	d8 de       	rcall	.-592    	; 0x7ba <write_to_TwiFIFO>
     a0a:	6b dc       	rcall	.-1834   	; 0x2e2 <reset_TWI>
     a0c:	b5 c0       	rjmp	.+362    	; 0xb78 <__vector_26+0x34e>
     a0e:	80 91 b9 00 	lds	r24, 0x00B9
     a12:	88 7f       	andi	r24, 0xF8	; 248
     a14:	80 36       	cpi	r24, 0x60	; 96
     a16:	29 f0       	breq	.+10     	; 0xa22 <__vector_26+0x1f8>
     a18:	80 91 b9 00 	lds	r24, 0x00B9
     a1c:	88 7f       	andi	r24, 0xF8	; 248
     a1e:	88 36       	cpi	r24, 0x68	; 104
     a20:	21 f4       	brne	.+8      	; 0xa2a <__vector_26+0x200>
     a22:	81 e0       	ldi	r24, 0x01	; 1
     a24:	80 93 31 24 	sts	0x2431, r24
     a28:	a6 c0       	rjmp	.+332    	; 0xb76 <__vector_26+0x34c>
     a2a:	80 91 b9 00 	lds	r24, 0x00B9
     a2e:	88 7f       	andi	r24, 0xF8	; 248
     a30:	80 37       	cpi	r24, 0x70	; 112
     a32:	29 f0       	breq	.+10     	; 0xa3e <__vector_26+0x214>
     a34:	80 91 b9 00 	lds	r24, 0x00B9
     a38:	88 7f       	andi	r24, 0xF8	; 248
     a3a:	88 37       	cpi	r24, 0x78	; 120
     a3c:	39 f4       	brne	.+14     	; 0xa4c <__vector_26+0x222>
     a3e:	8f ef       	ldi	r24, 0xFF	; 255
     a40:	90 e0       	ldi	r25, 0x00	; 0
     a42:	90 93 3b 24 	sts	0x243B, r25
     a46:	80 93 3a 24 	sts	0x243A, r24
     a4a:	95 c0       	rjmp	.+298    	; 0xb76 <__vector_26+0x34c>
     a4c:	80 91 b9 00 	lds	r24, 0x00B9
     a50:	88 7f       	andi	r24, 0xF8	; 248
     a52:	80 38       	cpi	r24, 0x80	; 128
     a54:	09 f0       	breq	.+2      	; 0xa58 <__vector_26+0x22e>
     a56:	62 c0       	rjmp	.+196    	; 0xb1c <__vector_26+0x2f2>
     a58:	80 91 31 24 	lds	r24, 0x2431
     a5c:	88 23       	and	r24, r24
     a5e:	41 f0       	breq	.+16     	; 0xa70 <__vector_26+0x246>
     a60:	1c dc       	rcall	.-1992   	; 0x29a <get_data>
     a62:	80 93 3a 24 	sts	0x243A, r24
     a66:	10 92 3b 24 	sts	0x243B, r1
     a6a:	10 92 31 24 	sts	0x2431, r1
     a6e:	83 c0       	rjmp	.+262    	; 0xb76 <__vector_26+0x34c>
     a70:	80 91 3a 24 	lds	r24, 0x243A
     a74:	90 91 3b 24 	lds	r25, 0x243B
     a78:	81 30       	cpi	r24, 0x01	; 1
     a7a:	91 05       	cpc	r25, r1
     a7c:	09 f4       	brne	.+2      	; 0xa80 <__vector_26+0x256>
     a7e:	4a c0       	rjmp	.+148    	; 0xb14 <__vector_26+0x2ea>
     a80:	1c f4       	brge	.+6      	; 0xa88 <__vector_26+0x25e>
     a82:	89 2b       	or	r24, r25
     a84:	41 f0       	breq	.+16     	; 0xa96 <__vector_26+0x26c>
     a86:	77 c0       	rjmp	.+238    	; 0xb76 <__vector_26+0x34c>
     a88:	84 30       	cpi	r24, 0x04	; 4
     a8a:	91 05       	cpc	r25, r1
     a8c:	b1 f0       	breq	.+44     	; 0xaba <__vector_26+0x290>
     a8e:	05 97       	sbiw	r24, 0x05	; 5
     a90:	09 f0       	breq	.+2      	; 0xa94 <__vector_26+0x26a>
     a92:	71 c0       	rjmp	.+226    	; 0xb76 <__vector_26+0x34c>
     a94:	41 c0       	rjmp	.+130    	; 0xb18 <__vector_26+0x2ee>
     a96:	c0 91 32 24 	lds	r28, 0x2432
     a9a:	d0 91 33 24 	lds	r29, 0x2433
     a9e:	fd db       	rcall	.-2054   	; 0x29a <get_data>
     aa0:	cc 5d       	subi	r28, 0xDC	; 220
     aa2:	dc 4d       	sbci	r29, 0xDC	; 220
     aa4:	88 83       	st	Y, r24
     aa6:	80 91 32 24 	lds	r24, 0x2432
     aaa:	90 91 33 24 	lds	r25, 0x2433
     aae:	01 96       	adiw	r24, 0x01	; 1
     ab0:	90 93 33 24 	sts	0x2433, r25
     ab4:	80 93 32 24 	sts	0x2432, r24
     ab8:	5e c0       	rjmp	.+188    	; 0xb76 <__vector_26+0x34c>
     aba:	ef db       	rcall	.-2082   	; 0x29a <get_data>
     abc:	81 11       	cpse	r24, r1
     abe:	0a c0       	rjmp	.+20     	; 0xad4 <__vector_26+0x2aa>
     ac0:	80 91 34 24 	lds	r24, 0x2434
     ac4:	90 91 35 24 	lds	r25, 0x2435
     ac8:	01 97       	sbiw	r24, 0x01	; 1
     aca:	90 93 35 24 	sts	0x2435, r25
     ace:	80 93 34 24 	sts	0x2434, r24
     ad2:	09 c0       	rjmp	.+18     	; 0xae6 <__vector_26+0x2bc>
     ad4:	80 91 34 24 	lds	r24, 0x2434
     ad8:	90 91 35 24 	lds	r25, 0x2435
     adc:	01 96       	adiw	r24, 0x01	; 1
     ade:	90 93 35 24 	sts	0x2435, r25
     ae2:	80 93 34 24 	sts	0x2434, r24
     ae6:	80 91 34 24 	lds	r24, 0x2434
     aea:	90 91 35 24 	lds	r25, 0x2435
     aee:	18 16       	cp	r1, r24
     af0:	19 06       	cpc	r1, r25
     af2:	3c f0       	brlt	.+14     	; 0xb02 <__vector_26+0x2d8>
     af4:	81 e0       	ldi	r24, 0x01	; 1
     af6:	90 e0       	ldi	r25, 0x00	; 0
     af8:	90 93 35 24 	sts	0x2435, r25
     afc:	80 93 34 24 	sts	0x2434, r24
     b00:	3a c0       	rjmp	.+116    	; 0xb76 <__vector_26+0x34c>
     b02:	08 97       	sbiw	r24, 0x08	; 8
     b04:	c4 f1       	brlt	.+112    	; 0xb76 <__vector_26+0x34c>
     b06:	87 e0       	ldi	r24, 0x07	; 7
     b08:	90 e0       	ldi	r25, 0x00	; 0
     b0a:	90 93 35 24 	sts	0x2435, r25
     b0e:	80 93 34 24 	sts	0x2434, r24
     b12:	31 c0       	rjmp	.+98     	; 0xb76 <__vector_26+0x34c>
     b14:	17 dc       	rcall	.-2002   	; 0x344 <get_control_settings_from_bus>
     b16:	2f c0       	rjmp	.+94     	; 0xb76 <__vector_26+0x34c>
     b18:	26 dc       	rcall	.-1972   	; 0x366 <get_autonom_settings_from_bus>
     b1a:	2d c0       	rjmp	.+90     	; 0xb76 <__vector_26+0x34c>
     b1c:	80 91 b9 00 	lds	r24, 0x00B9
     b20:	88 7f       	andi	r24, 0xF8	; 248
     b22:	80 39       	cpi	r24, 0x90	; 144
     b24:	11 f4       	brne	.+4      	; 0xb2a <__vector_26+0x300>
     b26:	e3 db       	rcall	.-2106   	; 0x2ee <get_sensor_from_bus>
     b28:	26 c0       	rjmp	.+76     	; 0xb76 <__vector_26+0x34c>
     b2a:	80 91 b9 00 	lds	r24, 0x00B9
     b2e:	88 7f       	andi	r24, 0xF8	; 248
     b30:	80 3a       	cpi	r24, 0xA0	; 160
     b32:	09 f5       	brne	.+66     	; 0xb76 <__vector_26+0x34c>
     b34:	c1 db       	rcall	.-2174   	; 0x2b8 <stop_twi>
     b36:	80 91 3a 24 	lds	r24, 0x243A
     b3a:	90 91 3b 24 	lds	r25, 0x243B
     b3e:	81 30       	cpi	r24, 0x01	; 1
     b40:	91 05       	cpc	r25, r1
     b42:	91 f0       	breq	.+36     	; 0xb68 <__vector_26+0x33e>
     b44:	1c f4       	brge	.+6      	; 0xb4c <__vector_26+0x322>
     b46:	89 2b       	or	r24, r25
     b48:	39 f0       	breq	.+14     	; 0xb58 <__vector_26+0x32e>
     b4a:	15 c0       	rjmp	.+42     	; 0xb76 <__vector_26+0x34c>
     b4c:	84 30       	cpi	r24, 0x04	; 4
     b4e:	91 05       	cpc	r25, r1
     b50:	39 f0       	breq	.+14     	; 0xb60 <__vector_26+0x336>
     b52:	05 97       	sbiw	r24, 0x05	; 5
     b54:	81 f4       	brne	.+32     	; 0xb76 <__vector_26+0x34c>
     b56:	0c c0       	rjmp	.+24     	; 0xb70 <__vector_26+0x346>
     b58:	81 e0       	ldi	r24, 0x01	; 1
     b5a:	80 93 1a 23 	sts	0x231A, r24
     b5e:	0b c0       	rjmp	.+22     	; 0xb76 <__vector_26+0x34c>
     b60:	81 e0       	ldi	r24, 0x01	; 1
     b62:	80 93 17 23 	sts	0x2317, r24
     b66:	07 c0       	rjmp	.+14     	; 0xb76 <__vector_26+0x34c>
     b68:	81 e0       	ldi	r24, 0x01	; 1
     b6a:	80 93 19 23 	sts	0x2319, r24
     b6e:	03 c0       	rjmp	.+6      	; 0xb76 <__vector_26+0x34c>
     b70:	81 e0       	ldi	r24, 0x01	; 1
     b72:	80 93 18 23 	sts	0x2318, r24
     b76:	b5 db       	rcall	.-2198   	; 0x2e2 <reset_TWI>
     b78:	ff 91       	pop	r31
     b7a:	ef 91       	pop	r30
     b7c:	df 91       	pop	r29
     b7e:	cf 91       	pop	r28
     b80:	bf 91       	pop	r27
     b82:	af 91       	pop	r26
     b84:	9f 91       	pop	r25
     b86:	8f 91       	pop	r24
     b88:	7f 91       	pop	r23
     b8a:	6f 91       	pop	r22
     b8c:	5f 91       	pop	r21
     b8e:	4f 91       	pop	r20
     b90:	3f 91       	pop	r19
     b92:	2f 91       	pop	r18
     b94:	0f 90       	pop	r0
     b96:	0b be       	out	0x3b, r0	; 59
     b98:	0f 90       	pop	r0
     b9a:	0f be       	out	0x3f, r0	; 63
     b9c:	0f 90       	pop	r0
     b9e:	1f 90       	pop	r1
     ba0:	18 95       	reti

00000ba2 <USART_init>:
{
	for(int i = 0; i < gRxBuffer[1]; i++)
	{
		gTxPayload[i] = gRxBuffer[i+2];
	}
	USART_send_packet(gRxBuffer[0], gRxBuffer[1]);
     ba2:	10 92 c5 00 	sts	0x00C5, r1
     ba6:	89 e0       	ldi	r24, 0x09	; 9
     ba8:	80 93 c4 00 	sts	0x00C4, r24
     bac:	88 e9       	ldi	r24, 0x98	; 152
     bae:	80 93 c1 00 	sts	0x00C1, r24
     bb2:	86 e0       	ldi	r24, 0x06	; 6
     bb4:	80 93 c2 00 	sts	0x00C2, r24
     bb8:	08 95       	ret

00000bba <USART_check_tx_ready>:
     bba:	80 91 c0 00 	lds	r24, 0x00C0
     bbe:	80 72       	andi	r24, 0x20	; 32
     bc0:	08 95       	ret

00000bc2 <USART_write_byte>:
     bc2:	cf 93       	push	r28
     bc4:	c8 2f       	mov	r28, r24
     bc6:	f9 df       	rcall	.-14     	; 0xbba <USART_check_tx_ready>
     bc8:	88 23       	and	r24, r24
     bca:	e9 f3       	breq	.-6      	; 0xbc6 <USART_write_byte+0x4>
     bcc:	c0 93 c6 00 	sts	0x00C6, r28
     bd0:	cf 91       	pop	r28
     bd2:	08 95       	ret

00000bd4 <USART_crc16>:
     bd4:	cf 92       	push	r12
     bd6:	df 92       	push	r13
     bd8:	ef 92       	push	r14
     bda:	ff 92       	push	r15
     bdc:	0f 93       	push	r16
     bde:	1f 93       	push	r17
     be0:	cf 93       	push	r28
     be2:	df 93       	push	r29
     be4:	66 23       	and	r22, r22
     be6:	09 f4       	brne	.+2      	; 0xbea <USART_crc16+0x16>
     be8:	3e c0       	rjmp	.+124    	; 0xc66 <USART_crc16+0x92>
     bea:	06 2f       	mov	r16, r22
     bec:	10 e0       	ldi	r17, 0x00	; 0
     bee:	4f ef       	ldi	r20, 0xFF	; 255
     bf0:	5f ef       	ldi	r21, 0xFF	; 255
     bf2:	ee ef       	ldi	r30, 0xFE	; 254
     bf4:	ff ef       	ldi	r31, 0xFF	; 255
     bf6:	c6 2e       	mov	r12, r22
     bf8:	d1 2c       	mov	r13, r1
     bfa:	e8 2e       	mov	r14, r24
     bfc:	f1 2c       	mov	r15, r1
     bfe:	c8 e0       	ldi	r28, 0x08	; 8
     c00:	d0 e0       	ldi	r29, 0x00	; 0
     c02:	ee 3f       	cpi	r30, 0xFE	; 254
     c04:	6f ef       	ldi	r22, 0xFF	; 255
     c06:	f6 07       	cpc	r31, r22
     c08:	19 f4       	brne	.+6      	; 0xc10 <USART_crc16+0x3c>
     c0a:	8e 2d       	mov	r24, r14
     c0c:	9f 2d       	mov	r25, r15
     c0e:	30 c0       	rjmp	.+96     	; 0xc70 <USART_crc16+0x9c>
     c10:	ef 3f       	cpi	r30, 0xFF	; 255
     c12:	8f ef       	ldi	r24, 0xFF	; 255
     c14:	f8 07       	cpc	r31, r24
     c16:	19 f4       	brne	.+6      	; 0xc1e <USART_crc16+0x4a>
     c18:	8c 2d       	mov	r24, r12
     c1a:	9d 2d       	mov	r25, r13
     c1c:	29 c0       	rjmp	.+82     	; 0xc70 <USART_crc16+0x9c>
     c1e:	df 01       	movw	r26, r30
     c20:	ad 5a       	subi	r26, 0xAD	; 173
     c22:	b9 4d       	sbci	r27, 0xD9	; 217
     c24:	8c 91       	ld	r24, X
     c26:	90 e0       	ldi	r25, 0x00	; 0
     c28:	23 c0       	rjmp	.+70     	; 0xc70 <USART_crc16+0x9c>
     c2a:	ba 01       	movw	r22, r20
     c2c:	68 27       	eor	r22, r24
     c2e:	79 27       	eor	r23, r25
     c30:	60 ff       	sbrs	r22, 0
     c32:	07 c0       	rjmp	.+14     	; 0xc42 <USART_crc16+0x6e>
     c34:	56 95       	lsr	r21
     c36:	47 95       	ror	r20
     c38:	68 e0       	ldi	r22, 0x08	; 8
     c3a:	46 27       	eor	r20, r22
     c3c:	64 e8       	ldi	r22, 0x84	; 132
     c3e:	56 27       	eor	r21, r22
     c40:	02 c0       	rjmp	.+4      	; 0xc46 <USART_crc16+0x72>
     c42:	56 95       	lsr	r21
     c44:	47 95       	ror	r20
     c46:	96 95       	lsr	r25
     c48:	87 95       	ror	r24
     c4a:	21 50       	subi	r18, 0x01	; 1
     c4c:	31 09       	sbc	r19, r1
     c4e:	69 f7       	brne	.-38     	; 0xc2a <USART_crc16+0x56>
     c50:	31 96       	adiw	r30, 0x01	; 1
     c52:	e0 17       	cp	r30, r16
     c54:	f1 07       	cpc	r31, r17
     c56:	a9 f6       	brne	.-86     	; 0xc02 <USART_crc16+0x2e>
     c58:	9a 01       	movw	r18, r20
     c5a:	20 95       	com	r18
     c5c:	30 95       	com	r19
     c5e:	32 27       	eor	r19, r18
     c60:	23 27       	eor	r18, r19
     c62:	32 27       	eor	r19, r18
     c64:	02 c0       	rjmp	.+4      	; 0xc6a <USART_crc16+0x96>
     c66:	20 e0       	ldi	r18, 0x00	; 0
     c68:	30 e0       	ldi	r19, 0x00	; 0
     c6a:	82 2f       	mov	r24, r18
     c6c:	93 2f       	mov	r25, r19
     c6e:	02 c0       	rjmp	.+4      	; 0xc74 <USART_crc16+0xa0>
     c70:	9e 01       	movw	r18, r28
     c72:	db cf       	rjmp	.-74     	; 0xc2a <USART_crc16+0x56>
     c74:	df 91       	pop	r29
     c76:	cf 91       	pop	r28
     c78:	1f 91       	pop	r17
     c7a:	0f 91       	pop	r16
     c7c:	ff 90       	pop	r15
     c7e:	ef 90       	pop	r14
     c80:	df 90       	pop	r13
     c82:	cf 90       	pop	r12
     c84:	08 95       	ret

00000c86 <USART_send_packet>:
     c86:	0f 93       	push	r16
     c88:	1f 93       	push	r17
     c8a:	cf 93       	push	r28
     c8c:	df 93       	push	r29
     c8e:	9e e7       	ldi	r25, 0x7E	; 126
     c90:	90 93 52 27 	sts	0x2752, r25
     c94:	80 93 53 27 	sts	0x2753, r24
     c98:	60 93 54 27 	sts	0x2754, r22
     c9c:	26 2f       	mov	r18, r22
     c9e:	30 e0       	ldi	r19, 0x00	; 0
     ca0:	12 16       	cp	r1, r18
     ca2:	13 06       	cpc	r1, r19
     ca4:	4c f5       	brge	.+82     	; 0xcf8 <USART_send_packet+0x72>
     ca6:	e3 e5       	ldi	r30, 0x53	; 83
     ca8:	f6 e2       	ldi	r31, 0x26	; 38
     caa:	03 e0       	ldi	r16, 0x03	; 3
     cac:	10 e0       	ldi	r17, 0x00	; 0
     cae:	c0 e0       	ldi	r28, 0x00	; 0
     cb0:	d0 e0       	ldi	r29, 0x00	; 0
     cb2:	7d e7       	ldi	r23, 0x7D	; 125
     cb4:	50 e2       	ldi	r21, 0x20	; 32
     cb6:	90 81       	ld	r25, Z
     cb8:	49 2f       	mov	r20, r25
     cba:	4d 57       	subi	r20, 0x7D	; 125
     cbc:	42 30       	cpi	r20, 0x02	; 2
     cbe:	80 f4       	brcc	.+32     	; 0xce0 <USART_send_packet+0x5a>
     cc0:	d8 01       	movw	r26, r16
     cc2:	ae 5a       	subi	r26, 0xAE	; 174
     cc4:	b8 4d       	sbci	r27, 0xD8	; 216
     cc6:	ac 0f       	add	r26, r28
     cc8:	bd 1f       	adc	r27, r29
     cca:	7c 93       	st	X, r23
     ccc:	0f 5f       	subi	r16, 0xFF	; 255
     cce:	1f 4f       	sbci	r17, 0xFF	; 255
     cd0:	d8 01       	movw	r26, r16
     cd2:	ae 5a       	subi	r26, 0xAE	; 174
     cd4:	b8 4d       	sbci	r27, 0xD8	; 216
     cd6:	ac 0f       	add	r26, r28
     cd8:	bd 1f       	adc	r27, r29
     cda:	95 27       	eor	r25, r21
     cdc:	9c 93       	st	X, r25
     cde:	06 c0       	rjmp	.+12     	; 0xcec <USART_send_packet+0x66>
     ce0:	d8 01       	movw	r26, r16
     ce2:	ae 5a       	subi	r26, 0xAE	; 174
     ce4:	b8 4d       	sbci	r27, 0xD8	; 216
     ce6:	ac 0f       	add	r26, r28
     ce8:	bd 1f       	adc	r27, r29
     cea:	9c 93       	st	X, r25
     cec:	21 96       	adiw	r28, 0x01	; 1
     cee:	31 96       	adiw	r30, 0x01	; 1
     cf0:	c2 17       	cp	r28, r18
     cf2:	d3 07       	cpc	r29, r19
     cf4:	01 f7       	brne	.-64     	; 0xcb6 <USART_send_packet+0x30>
     cf6:	04 c0       	rjmp	.+8      	; 0xd00 <USART_send_packet+0x7a>
     cf8:	03 e0       	ldi	r16, 0x03	; 3
     cfa:	10 e0       	ldi	r17, 0x00	; 0
     cfc:	c0 e0       	ldi	r28, 0x00	; 0
     cfe:	d0 e0       	ldi	r29, 0x00	; 0
     d00:	69 df       	rcall	.-302    	; 0xbd4 <USART_crc16>
     d02:	f8 01       	movw	r30, r16
     d04:	ee 5a       	subi	r30, 0xAE	; 174
     d06:	f8 4d       	sbci	r31, 0xD8	; 216
     d08:	ec 0f       	add	r30, r28
     d0a:	fd 1f       	adc	r31, r29
     d0c:	90 83       	st	Z, r25
     d0e:	81 83       	std	Z+1, r24	; 0x01
     d10:	22 96       	adiw	r28, 0x02	; 2
     d12:	0c 0f       	add	r16, r28
     d14:	1d 1f       	adc	r17, r29
     d16:	f8 01       	movw	r30, r16
     d18:	ee 5a       	subi	r30, 0xAE	; 174
     d1a:	f8 4d       	sbci	r31, 0xD8	; 216
     d1c:	8e e7       	ldi	r24, 0x7E	; 126
     d1e:	80 83       	st	Z, r24
     d20:	c8 01       	movw	r24, r16
     d22:	01 96       	adiw	r24, 0x01	; 1
     d24:	18 16       	cp	r1, r24
     d26:	19 06       	cpc	r1, r25
     d28:	4c f4       	brge	.+18     	; 0xd3c <USART_send_packet+0xb6>
     d2a:	c2 e5       	ldi	r28, 0x52	; 82
     d2c:	d7 e2       	ldi	r29, 0x27	; 39
     d2e:	0d 5a       	subi	r16, 0xAD	; 173
     d30:	18 4d       	sbci	r17, 0xD8	; 216
     d32:	89 91       	ld	r24, Y+
     d34:	46 df       	rcall	.-372    	; 0xbc2 <USART_write_byte>
     d36:	c0 17       	cp	r28, r16
     d38:	d1 07       	cpc	r29, r17
     d3a:	d9 f7       	brne	.-10     	; 0xd32 <USART_send_packet+0xac>
     d3c:	df 91       	pop	r29
     d3e:	cf 91       	pop	r28
     d40:	1f 91       	pop	r17
     d42:	0f 91       	pop	r16
     d44:	08 95       	ret

00000d46 <USART_send_message>:
     d46:	cf 93       	push	r28
     d48:	df 93       	push	r29
     d4a:	c8 2f       	mov	r28, r24
     d4c:	d9 2f       	mov	r29, r25
     d4e:	43 e5       	ldi	r20, 0x53	; 83
     d50:	56 e2       	ldi	r21, 0x26	; 38
     d52:	20 e0       	ldi	r18, 0x00	; 0
     d54:	30 e0       	ldi	r19, 0x00	; 0
     d56:	06 c0       	rjmp	.+12     	; 0xd64 <USART_send_message+0x1e>
     d58:	69 91       	ld	r22, Y+
     d5a:	fa 01       	movw	r30, r20
     d5c:	61 93       	st	Z+, r22
     d5e:	af 01       	movw	r20, r30
     d60:	2f 5f       	subi	r18, 0xFF	; 255
     d62:	3f 4f       	sbci	r19, 0xFF	; 255
     d64:	e8 2f       	mov	r30, r24
     d66:	f9 2f       	mov	r31, r25
     d68:	df 01       	movw	r26, r30
     d6a:	0d 90       	ld	r0, X+
     d6c:	00 20       	and	r0, r0
     d6e:	e9 f7       	brne	.-6      	; 0xd6a <USART_send_message+0x24>
     d70:	11 97       	sbiw	r26, 0x01	; 1
     d72:	bd 01       	movw	r22, r26
     d74:	6e 1b       	sub	r22, r30
     d76:	7f 0b       	sbc	r23, r31
     d78:	26 17       	cp	r18, r22
     d7a:	37 07       	cpc	r19, r23
     d7c:	68 f3       	brcs	.-38     	; 0xd58 <USART_send_message+0x12>
     d7e:	8d e4       	ldi	r24, 0x4D	; 77
     d80:	82 df       	rcall	.-252    	; 0xc86 <USART_send_packet>
     d82:	df 91       	pop	r29
     d84:	cf 91       	pop	r28
     d86:	08 95       	ret

00000d88 <USART_send_value>:
     d88:	a8 2f       	mov	r26, r24
     d8a:	b9 2f       	mov	r27, r25
     d8c:	e3 e5       	ldi	r30, 0x53	; 83
     d8e:	f6 e2       	ldi	r31, 0x26	; 38
     d90:	87 e5       	ldi	r24, 0x57	; 87
     d92:	96 e2       	ldi	r25, 0x26	; 38
     d94:	2d 91       	ld	r18, X+
     d96:	21 93       	st	Z+, r18
     d98:	e8 17       	cp	r30, r24
     d9a:	f9 07       	cpc	r31, r25
     d9c:	d9 f7       	brne	.-10     	; 0xd94 <USART_send_value+0xc>
     d9e:	64 e0       	ldi	r22, 0x04	; 4
     da0:	86 e5       	ldi	r24, 0x56	; 86
     da2:	71 cf       	rjmp	.-286    	; 0xc86 <USART_send_packet>

00000da4 <USART_send_sensors>:
     da4:	0f 93       	push	r16
     da6:	1f 93       	push	r17
     da8:	cf 93       	push	r28
     daa:	df 93       	push	r29
     dac:	03 e5       	ldi	r16, 0x53	; 83
     dae:	16 e2       	ldi	r17, 0x26	; 38
     db0:	c0 e0       	ldi	r28, 0x00	; 0
     db2:	d0 e0       	ldi	r29, 0x00	; 0
     db4:	ce 01       	movw	r24, r28
     db6:	79 dc       	rcall	.-1806   	; 0x6aa <TWI_get_sensor>
     db8:	f8 01       	movw	r30, r16
     dba:	81 93       	st	Z+, r24
     dbc:	8f 01       	movw	r16, r30
     dbe:	21 96       	adiw	r28, 0x01	; 1
     dc0:	c8 30       	cpi	r28, 0x08	; 8
     dc2:	d1 05       	cpc	r29, r1
     dc4:	b9 f7       	brne	.-18     	; 0xdb4 <USART_send_sensors+0x10>
     dc6:	76 dc       	rcall	.-1812   	; 0x6b4 <TWI_get_servo>
     dc8:	80 93 5b 26 	sts	0x265B, r24
     dcc:	69 e0       	ldi	r22, 0x09	; 9
     dce:	83 e5       	ldi	r24, 0x53	; 83
     dd0:	5a df       	rcall	.-332    	; 0xc86 <USART_send_packet>
     dd2:	df 91       	pop	r29
     dd4:	cf 91       	pop	r28
     dd6:	1f 91       	pop	r17
     dd8:	0f 91       	pop	r16
     dda:	08 95       	ret

00000ddc <USART_send_autonom>:
     ddc:	80 93 53 26 	sts	0x2653, r24
     de0:	61 e0       	ldi	r22, 0x01	; 1
     de2:	81 e4       	ldi	r24, 0x41	; 65
     de4:	50 cf       	rjmp	.-352    	; 0xc86 <USART_send_packet>

00000de6 <USART_decode_message_rx_fifo>:
     de6:	8f 92       	push	r8
     de8:	9f 92       	push	r9
     dea:	af 92       	push	r10
     dec:	bf 92       	push	r11
     dee:	cf 92       	push	r12
     df0:	df 92       	push	r13
     df2:	ef 92       	push	r14
     df4:	ff 92       	push	r15
     df6:	0f 93       	push	r16
     df8:	1f 93       	push	r17
     dfa:	cf 93       	push	r28
     dfc:	df 93       	push	r29
     dfe:	cd b7       	in	r28, 0x3d	; 61
     e00:	de b7       	in	r29, 0x3e	; 62
     e02:	ad b6       	in	r10, 0x3d	; 61
     e04:	be b6       	in	r11, 0x3e	; 62
     e06:	60 e0       	ldi	r22, 0x00	; 0
     e08:	70 e0       	ldi	r23, 0x00	; 0
     e0a:	80 91 08 11 	lds	r24, 0x1108
     e0e:	90 91 09 11 	lds	r25, 0x1109
     e12:	ca d9       	rcall	.-3180   	; 0x1a8 <FifoRead>
     e14:	88 23       	and	r24, r24
     e16:	29 f0       	breq	.+10     	; 0xe22 <USART_decode_message_rx_fifo+0x3c>
     e18:	80 e1       	ldi	r24, 0x10	; 16
     e1a:	91 e2       	ldi	r25, 0x21	; 33
     e1c:	94 df       	rcall	.-216    	; 0xd46 <USART_send_message>
     e1e:	81 e0       	ldi	r24, 0x01	; 1
     e20:	42 c0       	rjmp	.+132    	; 0xea6 <USART_decode_message_rx_fifo+0xc0>
     e22:	c0 90 00 00 	lds	r12, 0x0000
     e26:	d1 2c       	mov	r13, r1
     e28:	96 01       	movw	r18, r12
     e2a:	21 50       	subi	r18, 0x01	; 1
     e2c:	31 09       	sbc	r19, r1
     e2e:	81 e0       	ldi	r24, 0x01	; 1
     e30:	90 e0       	ldi	r25, 0x00	; 0
     e32:	c1 14       	cp	r12, r1
     e34:	d1 04       	cpc	r13, r1
     e36:	11 f0       	breq	.+4      	; 0xe3c <USART_decode_message_rx_fifo+0x56>
     e38:	80 e0       	ldi	r24, 0x00	; 0
     e3a:	90 e0       	ldi	r25, 0x00	; 0
     e3c:	82 0f       	add	r24, r18
     e3e:	93 1f       	adc	r25, r19
     e40:	2d b7       	in	r18, 0x3d	; 61
     e42:	3e b7       	in	r19, 0x3e	; 62
     e44:	28 1b       	sub	r18, r24
     e46:	39 0b       	sbc	r19, r25
     e48:	0f b6       	in	r0, 0x3f	; 63
     e4a:	f8 94       	cli
     e4c:	3e bf       	out	0x3e, r19	; 62
     e4e:	0f be       	out	0x3f, r0	; 63
     e50:	2d bf       	out	0x3d, r18	; 61
     e52:	8d b7       	in	r24, 0x3d	; 61
     e54:	9e b7       	in	r25, 0x3e	; 62
     e56:	01 96       	adiw	r24, 0x01	; 1
     e58:	88 2e       	mov	r8, r24
     e5a:	99 2e       	mov	r9, r25
     e5c:	1c 14       	cp	r1, r12
     e5e:	1d 04       	cpc	r1, r13
     e60:	e4 f4       	brge	.+56     	; 0xe9a <USART_decode_message_rx_fifo+0xb4>
     e62:	e8 2e       	mov	r14, r24
     e64:	f9 2e       	mov	r15, r25
     e66:	00 e0       	ldi	r16, 0x00	; 0
     e68:	10 e0       	ldi	r17, 0x00	; 0
     e6a:	60 e0       	ldi	r22, 0x00	; 0
     e6c:	70 e0       	ldi	r23, 0x00	; 0
     e6e:	80 91 08 11 	lds	r24, 0x1108
     e72:	90 91 09 11 	lds	r25, 0x1109
     e76:	98 d9       	rcall	.-3280   	; 0x1a8 <FifoRead>
     e78:	88 23       	and	r24, r24
     e7a:	29 f0       	breq	.+10     	; 0xe86 <USART_decode_message_rx_fifo+0xa0>
     e7c:	82 e3       	ldi	r24, 0x32	; 50
     e7e:	91 e2       	ldi	r25, 0x21	; 33
     e80:	62 df       	rcall	.-316    	; 0xd46 <USART_send_message>
     e82:	81 e0       	ldi	r24, 0x01	; 1
     e84:	10 c0       	rjmp	.+32     	; 0xea6 <USART_decode_message_rx_fifo+0xc0>
     e86:	80 91 00 00 	lds	r24, 0x0000
     e8a:	f7 01       	movw	r30, r14
     e8c:	81 93       	st	Z+, r24
     e8e:	7f 01       	movw	r14, r30
     e90:	0f 5f       	subi	r16, 0xFF	; 255
     e92:	1f 4f       	sbci	r17, 0xFF	; 255
     e94:	0c 15       	cp	r16, r12
     e96:	1d 05       	cpc	r17, r13
     e98:	44 f3       	brlt	.-48     	; 0xe6a <USART_decode_message_rx_fifo+0x84>
     e9a:	a6 01       	movw	r20, r12
     e9c:	68 2d       	mov	r22, r8
     e9e:	79 2d       	mov	r23, r9
     ea0:	80 e4       	ldi	r24, 0x40	; 64
     ea2:	94 db       	rcall	.-2264   	; 0x5cc <TWI_send_string_fixed_length>
     ea4:	80 e0       	ldi	r24, 0x00	; 0
     ea6:	0f b6       	in	r0, 0x3f	; 63
     ea8:	f8 94       	cli
     eaa:	be be       	out	0x3e, r11	; 62
     eac:	0f be       	out	0x3f, r0	; 63
     eae:	ad be       	out	0x3d, r10	; 61
     eb0:	df 91       	pop	r29
     eb2:	cf 91       	pop	r28
     eb4:	1f 91       	pop	r17
     eb6:	0f 91       	pop	r16
     eb8:	ff 90       	pop	r15
     eba:	ef 90       	pop	r14
     ebc:	df 90       	pop	r13
     ebe:	cf 90       	pop	r12
     ec0:	bf 90       	pop	r11
     ec2:	af 90       	pop	r10
     ec4:	9f 90       	pop	r9
     ec6:	8f 90       	pop	r8
     ec8:	08 95       	ret

00000eca <USART_decode_command_rx_fifo>:
     eca:	cf 93       	push	r28
     ecc:	df 93       	push	r29
     ece:	60 e0       	ldi	r22, 0x00	; 0
     ed0:	70 e0       	ldi	r23, 0x00	; 0
     ed2:	80 91 08 11 	lds	r24, 0x1108
     ed6:	90 91 09 11 	lds	r25, 0x1109
     eda:	66 d9       	rcall	.-3380   	; 0x1a8 <FifoRead>
     edc:	88 23       	and	r24, r24
     ede:	29 f0       	breq	.+10     	; 0xeea <USART_decode_command_rx_fifo+0x20>
     ee0:	85 e5       	ldi	r24, 0x55	; 85
     ee2:	91 e2       	ldi	r25, 0x21	; 33
     ee4:	30 df       	rcall	.-416    	; 0xd46 <USART_send_message>
     ee6:	81 e0       	ldi	r24, 0x01	; 1
     ee8:	42 c0       	rjmp	.+132    	; 0xf6e <USART_decode_command_rx_fifo+0xa4>
     eea:	80 91 00 00 	lds	r24, 0x0000
     eee:	83 30       	cpi	r24, 0x03	; 3
     ef0:	09 f0       	breq	.+2      	; 0xef4 <USART_decode_command_rx_fifo+0x2a>
     ef2:	39 c0       	rjmp	.+114    	; 0xf66 <USART_decode_command_rx_fifo+0x9c>
     ef4:	60 e0       	ldi	r22, 0x00	; 0
     ef6:	70 e0       	ldi	r23, 0x00	; 0
     ef8:	80 91 08 11 	lds	r24, 0x1108
     efc:	90 91 09 11 	lds	r25, 0x1109
     f00:	53 d9       	rcall	.-3418   	; 0x1a8 <FifoRead>
     f02:	88 23       	and	r24, r24
     f04:	29 f0       	breq	.+10     	; 0xf10 <USART_decode_command_rx_fifo+0x46>
     f06:	87 e7       	ldi	r24, 0x77	; 119
     f08:	91 e2       	ldi	r25, 0x21	; 33
     f0a:	1d df       	rcall	.-454    	; 0xd46 <USART_send_message>
     f0c:	81 e0       	ldi	r24, 0x01	; 1
     f0e:	2f c0       	rjmp	.+94     	; 0xf6e <USART_decode_command_rx_fifo+0xa4>
     f10:	c0 91 00 00 	lds	r28, 0x0000
     f14:	60 e0       	ldi	r22, 0x00	; 0
     f16:	70 e0       	ldi	r23, 0x00	; 0
     f18:	80 91 08 11 	lds	r24, 0x1108
     f1c:	90 91 09 11 	lds	r25, 0x1109
     f20:	43 d9       	rcall	.-3450   	; 0x1a8 <FifoRead>
     f22:	88 23       	and	r24, r24
     f24:	29 f0       	breq	.+10     	; 0xf30 <USART_decode_command_rx_fifo+0x66>
     f26:	8f e9       	ldi	r24, 0x9F	; 159
     f28:	91 e2       	ldi	r25, 0x21	; 33
     f2a:	0d df       	rcall	.-486    	; 0xd46 <USART_send_message>
     f2c:	81 e0       	ldi	r24, 0x01	; 1
     f2e:	1f c0       	rjmp	.+62     	; 0xf6e <USART_decode_command_rx_fifo+0xa4>
     f30:	d0 91 00 00 	lds	r29, 0x0000
     f34:	60 e0       	ldi	r22, 0x00	; 0
     f36:	70 e0       	ldi	r23, 0x00	; 0
     f38:	80 91 08 11 	lds	r24, 0x1108
     f3c:	90 91 09 11 	lds	r25, 0x1109
     f40:	33 d9       	rcall	.-3482   	; 0x1a8 <FifoRead>
     f42:	88 23       	and	r24, r24
     f44:	29 f0       	breq	.+10     	; 0xf50 <USART_decode_command_rx_fifo+0x86>
     f46:	86 ec       	ldi	r24, 0xC6	; 198
     f48:	91 e2       	ldi	r25, 0x21	; 33
     f4a:	fd de       	rcall	.-518    	; 0xd46 <USART_send_message>
     f4c:	81 e0       	ldi	r24, 0x01	; 1
     f4e:	0f c0       	rjmp	.+30     	; 0xf6e <USART_decode_command_rx_fifo+0xa4>
     f50:	40 91 00 00 	lds	r20, 0x0000
     f54:	92 b1       	in	r25, 0x02	; 2
     f56:	81 e0       	ldi	r24, 0x01	; 1
     f58:	89 27       	eor	r24, r25
     f5a:	82 b9       	out	0x02, r24	; 2
     f5c:	6d 2f       	mov	r22, r29
     f5e:	8c 2f       	mov	r24, r28
     f60:	bf da       	rcall	.-2690   	; 0x4e0 <TWI_send_command>
     f62:	80 e0       	ldi	r24, 0x00	; 0
     f64:	04 c0       	rjmp	.+8      	; 0xf6e <USART_decode_command_rx_fifo+0xa4>
     f66:	8a ee       	ldi	r24, 0xEA	; 234
     f68:	91 e2       	ldi	r25, 0x21	; 33
     f6a:	ed de       	rcall	.-550    	; 0xd46 <USART_send_message>
     f6c:	81 e0       	ldi	r24, 0x01	; 1
     f6e:	df 91       	pop	r29
     f70:	cf 91       	pop	r28
     f72:	08 95       	ret

00000f74 <USART_decode_parameters_rx_fifo>:
     f74:	cf 93       	push	r28
     f76:	df 93       	push	r29
     f78:	60 e0       	ldi	r22, 0x00	; 0
     f7a:	70 e0       	ldi	r23, 0x00	; 0
     f7c:	80 91 08 11 	lds	r24, 0x1108
     f80:	90 91 09 11 	lds	r25, 0x1109
     f84:	11 d9       	rcall	.-3550   	; 0x1a8 <FifoRead>
     f86:	88 23       	and	r24, r24
     f88:	29 f0       	breq	.+10     	; 0xf94 <USART_decode_parameters_rx_fifo+0x20>
     f8a:	81 e1       	ldi	r24, 0x11	; 17
     f8c:	92 e2       	ldi	r25, 0x22	; 34
     f8e:	db de       	rcall	.-586    	; 0xd46 <USART_send_message>
     f90:	81 e0       	ldi	r24, 0x01	; 1
     f92:	3e c0       	rjmp	.+124    	; 0x1010 <USART_decode_parameters_rx_fifo+0x9c>
     f94:	80 91 00 00 	lds	r24, 0x0000
     f98:	83 30       	cpi	r24, 0x03	; 3
     f9a:	b1 f5       	brne	.+108    	; 0x1008 <USART_decode_parameters_rx_fifo+0x94>
     f9c:	60 e0       	ldi	r22, 0x00	; 0
     f9e:	70 e0       	ldi	r23, 0x00	; 0
     fa0:	80 91 08 11 	lds	r24, 0x1108
     fa4:	90 91 09 11 	lds	r25, 0x1109
     fa8:	ff d8       	rcall	.-3586   	; 0x1a8 <FifoRead>
     faa:	88 23       	and	r24, r24
     fac:	29 f0       	breq	.+10     	; 0xfb8 <USART_decode_parameters_rx_fifo+0x44>
     fae:	86 e3       	ldi	r24, 0x36	; 54
     fb0:	92 e2       	ldi	r25, 0x22	; 34
     fb2:	c9 de       	rcall	.-622    	; 0xd46 <USART_send_message>
     fb4:	81 e0       	ldi	r24, 0x01	; 1
     fb6:	2c c0       	rjmp	.+88     	; 0x1010 <USART_decode_parameters_rx_fifo+0x9c>
     fb8:	c0 91 00 00 	lds	r28, 0x0000
     fbc:	60 e0       	ldi	r22, 0x00	; 0
     fbe:	70 e0       	ldi	r23, 0x00	; 0
     fc0:	80 91 08 11 	lds	r24, 0x1108
     fc4:	90 91 09 11 	lds	r25, 0x1109
     fc8:	ef d8       	rcall	.-3618   	; 0x1a8 <FifoRead>
     fca:	88 23       	and	r24, r24
     fcc:	29 f0       	breq	.+10     	; 0xfd8 <USART_decode_parameters_rx_fifo+0x64>
     fce:	86 e3       	ldi	r24, 0x36	; 54
     fd0:	92 e2       	ldi	r25, 0x22	; 34
     fd2:	b9 de       	rcall	.-654    	; 0xd46 <USART_send_message>
     fd4:	81 e0       	ldi	r24, 0x01	; 1
     fd6:	1c c0       	rjmp	.+56     	; 0x1010 <USART_decode_parameters_rx_fifo+0x9c>
     fd8:	d0 91 00 00 	lds	r29, 0x0000
     fdc:	60 e0       	ldi	r22, 0x00	; 0
     fde:	70 e0       	ldi	r23, 0x00	; 0
     fe0:	80 91 08 11 	lds	r24, 0x1108
     fe4:	90 91 09 11 	lds	r25, 0x1109
     fe8:	df d8       	rcall	.-3650   	; 0x1a8 <FifoRead>
     fea:	88 23       	and	r24, r24
     fec:	29 f0       	breq	.+10     	; 0xff8 <USART_decode_parameters_rx_fifo+0x84>
     fee:	86 e3       	ldi	r24, 0x36	; 54
     ff0:	92 e2       	ldi	r25, 0x22	; 34
     ff2:	a9 de       	rcall	.-686    	; 0xd46 <USART_send_message>
     ff4:	81 e0       	ldi	r24, 0x01	; 1
     ff6:	0c c0       	rjmp	.+24     	; 0x1010 <USART_decode_parameters_rx_fifo+0x9c>
     ff8:	20 91 00 00 	lds	r18, 0x0000
     ffc:	4d 2f       	mov	r20, r29
     ffe:	6c 2f       	mov	r22, r28
    1000:	80 e2       	ldi	r24, 0x20	; 32
    1002:	f2 d9       	rcall	.-3100   	; 0x3e8 <TWI_send_control_settings>
    1004:	80 e0       	ldi	r24, 0x00	; 0
    1006:	04 c0       	rjmp	.+8      	; 0x1010 <USART_decode_parameters_rx_fifo+0x9c>
    1008:	8a ee       	ldi	r24, 0xEA	; 234
    100a:	91 e2       	ldi	r25, 0x21	; 33
    100c:	9c de       	rcall	.-712    	; 0xd46 <USART_send_message>
    100e:	81 e0       	ldi	r24, 0x01	; 1
    1010:	df 91       	pop	r29
    1012:	cf 91       	pop	r28
    1014:	08 95       	ret

00001016 <USART_decode_autonom_rx_fifo>:
    1016:	60 e0       	ldi	r22, 0x00	; 0
    1018:	70 e0       	ldi	r23, 0x00	; 0
    101a:	80 91 08 11 	lds	r24, 0x1108
    101e:	90 91 09 11 	lds	r25, 0x1109
    1022:	c2 d8       	rcall	.-3708   	; 0x1a8 <FifoRead>
    1024:	88 23       	and	r24, r24
    1026:	29 f0       	breq	.+10     	; 0x1032 <USART_decode_autonom_rx_fifo+0x1c>
    1028:	8f e4       	ldi	r24, 0x4F	; 79
    102a:	92 e2       	ldi	r25, 0x22	; 34
    102c:	8c de       	rcall	.-744    	; 0xd46 <USART_send_message>
    102e:	81 e0       	ldi	r24, 0x01	; 1
    1030:	08 95       	ret
    1032:	80 91 00 00 	lds	r24, 0x0000
    1036:	81 30       	cpi	r24, 0x01	; 1
    1038:	c1 f4       	brne	.+48     	; 0x106a <USART_decode_autonom_rx_fifo+0x54>
    103a:	60 e0       	ldi	r22, 0x00	; 0
    103c:	70 e0       	ldi	r23, 0x00	; 0
    103e:	80 91 08 11 	lds	r24, 0x1108
    1042:	90 91 09 11 	lds	r25, 0x1109
    1046:	b0 d8       	rcall	.-3744   	; 0x1a8 <FifoRead>
    1048:	88 23       	and	r24, r24
    104a:	29 f0       	breq	.+10     	; 0x1056 <USART_decode_autonom_rx_fifo+0x40>
    104c:	81 e7       	ldi	r24, 0x71	; 113
    104e:	92 e2       	ldi	r25, 0x22	; 34
    1050:	7a de       	rcall	.-780    	; 0xd46 <USART_send_message>
    1052:	81 e0       	ldi	r24, 0x01	; 1
    1054:	08 95       	ret
    1056:	60 91 00 00 	lds	r22, 0x0000
    105a:	98 b1       	in	r25, 0x08	; 8
    105c:	80 e4       	ldi	r24, 0x40	; 64
    105e:	89 27       	eor	r24, r25
    1060:	88 b9       	out	0x08, r24	; 8
    1062:	80 e2       	ldi	r24, 0x20	; 32
    1064:	0c da       	rcall	.-3048   	; 0x47e <TWI_send_autonom_settings>
    1066:	80 e0       	ldi	r24, 0x00	; 0
    1068:	08 95       	ret
    106a:	87 e8       	ldi	r24, 0x87	; 135
    106c:	92 e2       	ldi	r25, 0x22	; 34
    106e:	6b de       	rcall	.-810    	; 0xd46 <USART_send_message>
    1070:	81 e0       	ldi	r24, 0x01	; 1
    1072:	08 95       	ret

00001074 <USART_decode_status_rx_fifo>:
    1074:	60 e0       	ldi	r22, 0x00	; 0
    1076:	70 e0       	ldi	r23, 0x00	; 0
    1078:	80 91 08 11 	lds	r24, 0x1108
    107c:	90 91 09 11 	lds	r25, 0x1109
    1080:	93 d8       	rcall	.-3802   	; 0x1a8 <FifoRead>
    1082:	88 23       	and	r24, r24
    1084:	29 f0       	breq	.+10     	; 0x1090 <USART_decode_status_rx_fifo+0x1c>
    1086:	8e ea       	ldi	r24, 0xAE	; 174
    1088:	92 e2       	ldi	r25, 0x22	; 34
    108a:	5d de       	rcall	.-838    	; 0xd46 <USART_send_message>
    108c:	81 e0       	ldi	r24, 0x01	; 1
    108e:	08 95       	ret
    1090:	80 91 00 00 	lds	r24, 0x0000
    1094:	81 30       	cpi	r24, 0x01	; 1
    1096:	a1 f4       	brne	.+40     	; 0x10c0 <USART_decode_status_rx_fifo+0x4c>
    1098:	60 e0       	ldi	r22, 0x00	; 0
    109a:	70 e0       	ldi	r23, 0x00	; 0
    109c:	80 91 08 11 	lds	r24, 0x1108
    10a0:	90 91 09 11 	lds	r25, 0x1109
    10a4:	81 d8       	rcall	.-3838   	; 0x1a8 <FifoRead>
    10a6:	88 23       	and	r24, r24
    10a8:	29 f0       	breq	.+10     	; 0x10b4 <USART_decode_status_rx_fifo+0x40>
    10aa:	8f ec       	ldi	r24, 0xCF	; 207
    10ac:	92 e2       	ldi	r25, 0x22	; 34
    10ae:	4b de       	rcall	.-874    	; 0xd46 <USART_send_message>
    10b0:	81 e0       	ldi	r24, 0x01	; 1
    10b2:	08 95       	ret
    10b4:	60 91 00 00 	lds	r22, 0x0000
    10b8:	80 e2       	ldi	r24, 0x20	; 32
    10ba:	c6 da       	rcall	.-2676   	; 0x648 <TWI_send_status_settings>
    10bc:	80 e0       	ldi	r24, 0x00	; 0
    10be:	08 95       	ret
    10c0:	84 ee       	ldi	r24, 0xE4	; 228
    10c2:	92 e2       	ldi	r25, 0x22	; 34
    10c4:	40 de       	rcall	.-896    	; 0xd46 <USART_send_message>
    10c6:	81 e0       	ldi	r24, 0x01	; 1
    10c8:	08 95       	ret

000010ca <USART_DecodeElevationRxFIFO>:
    10ca:	60 e0       	ldi	r22, 0x00	; 0
    10cc:	70 e0       	ldi	r23, 0x00	; 0
    10ce:	80 91 08 11 	lds	r24, 0x1108
    10d2:	90 91 09 11 	lds	r25, 0x1109
    10d6:	68 d8       	rcall	.-3888   	; 0x1a8 <FifoRead>
    10d8:	81 11       	cpse	r24, r1
    10da:	16 c0       	rjmp	.+44     	; 0x1108 <USART_DecodeElevationRxFIFO+0x3e>
    10dc:	80 91 00 00 	lds	r24, 0x0000
    10e0:	81 30       	cpi	r24, 0x01	; 1
    10e2:	a1 f4       	brne	.+40     	; 0x110c <USART_DecodeElevationRxFIFO+0x42>
    10e4:	60 e0       	ldi	r22, 0x00	; 0
    10e6:	70 e0       	ldi	r23, 0x00	; 0
    10e8:	80 91 08 11 	lds	r24, 0x1108
    10ec:	90 91 09 11 	lds	r25, 0x1109
    10f0:	5b d8       	rcall	.-3914   	; 0x1a8 <FifoRead>
    10f2:	81 11       	cpse	r24, r1
    10f4:	0d c0       	rjmp	.+26     	; 0x1110 <USART_DecodeElevationRxFIFO+0x46>
    10f6:	80 91 00 00 	lds	r24, 0x0000
    10fa:	22 b1       	in	r18, 0x02	; 2
    10fc:	92 e0       	ldi	r25, 0x02	; 2
    10fe:	92 27       	eor	r25, r18
    1100:	92 b9       	out	0x02, r25	; 2
    1102:	36 da       	rcall	.-2964   	; 0x570 <TWI_send_elevation>
    1104:	80 e0       	ldi	r24, 0x00	; 0
    1106:	08 95       	ret
    1108:	81 e0       	ldi	r24, 0x01	; 1
    110a:	08 95       	ret
    110c:	81 e0       	ldi	r24, 0x01	; 1
    110e:	08 95       	ret
    1110:	81 e0       	ldi	r24, 0x01	; 1
    1112:	08 95       	ret

00001114 <USART_decode_rx_fifo>:
    1114:	27 c0       	rjmp	.+78     	; 0x1164 <USART_decode_rx_fifo+0x50>
    1116:	80 91 00 00 	lds	r24, 0x0000
    111a:	85 34       	cpi	r24, 0x45	; 69
    111c:	e1 f0       	breq	.+56     	; 0x1156 <USART_decode_rx_fifo+0x42>
    111e:	28 f4       	brcc	.+10     	; 0x112a <USART_decode_rx_fifo+0x16>
    1120:	81 34       	cpi	r24, 0x41	; 65
    1122:	a9 f0       	breq	.+42     	; 0x114e <USART_decode_rx_fifo+0x3a>
    1124:	83 34       	cpi	r24, 0x43	; 67
    1126:	f1 f4       	brne	.+60     	; 0x1164 <USART_decode_rx_fifo+0x50>
    1128:	0a c0       	rjmp	.+20     	; 0x113e <USART_decode_rx_fifo+0x2a>
    112a:	80 35       	cpi	r24, 0x50	; 80
    112c:	61 f0       	breq	.+24     	; 0x1146 <USART_decode_rx_fifo+0x32>
    112e:	84 35       	cpi	r24, 0x54	; 84
    1130:	b1 f0       	breq	.+44     	; 0x115e <USART_decode_rx_fifo+0x4a>
    1132:	8d 34       	cpi	r24, 0x4D	; 77
    1134:	b9 f4       	brne	.+46     	; 0x1164 <USART_decode_rx_fifo+0x50>
    1136:	57 de       	rcall	.-850    	; 0xde6 <USART_decode_message_rx_fifo>
    1138:	88 23       	and	r24, r24
    113a:	a1 f0       	breq	.+40     	; 0x1164 <USART_decode_rx_fifo+0x50>
    113c:	08 95       	ret
    113e:	c5 de       	rcall	.-630    	; 0xeca <USART_decode_command_rx_fifo>
    1140:	88 23       	and	r24, r24
    1142:	81 f0       	breq	.+32     	; 0x1164 <USART_decode_rx_fifo+0x50>
    1144:	08 95       	ret
    1146:	16 df       	rcall	.-468    	; 0xf74 <USART_decode_parameters_rx_fifo>
    1148:	88 23       	and	r24, r24
    114a:	61 f0       	breq	.+24     	; 0x1164 <USART_decode_rx_fifo+0x50>
    114c:	08 95       	ret
    114e:	63 df       	rcall	.-314    	; 0x1016 <USART_decode_autonom_rx_fifo>
    1150:	88 23       	and	r24, r24
    1152:	41 f0       	breq	.+16     	; 0x1164 <USART_decode_rx_fifo+0x50>
    1154:	08 95       	ret
    1156:	b9 df       	rcall	.-142    	; 0x10ca <USART_DecodeElevationRxFIFO>
    1158:	88 23       	and	r24, r24
    115a:	21 f0       	breq	.+8      	; 0x1164 <USART_decode_rx_fifo+0x50>
    115c:	08 95       	ret
    115e:	8a df       	rcall	.-236    	; 0x1074 <USART_decode_status_rx_fifo>
    1160:	81 11       	cpse	r24, r1
    1162:	09 c0       	rjmp	.+18     	; 0x1176 <USART_decode_rx_fifo+0x62>
    1164:	60 e0       	ldi	r22, 0x00	; 0
    1166:	70 e0       	ldi	r23, 0x00	; 0
    1168:	80 91 08 11 	lds	r24, 0x1108
    116c:	90 91 09 11 	lds	r25, 0x1109
    1170:	1b d8       	rcall	.-4042   	; 0x1a8 <FifoRead>
    1172:	88 23       	and	r24, r24
    1174:	81 f2       	breq	.-96     	; 0x1116 <USART_decode_rx_fifo+0x2>
    1176:	08 95       	ret

00001178 <__vector_20>:
}


ISR (USART0_RX_vect)
{
    1178:	1f 92       	push	r1
    117a:	0f 92       	push	r0
    117c:	0f b6       	in	r0, 0x3f	; 63
    117e:	0f 92       	push	r0
    1180:	11 24       	eor	r1, r1
    1182:	0b b6       	in	r0, 0x3b	; 59
    1184:	0f 92       	push	r0
    1186:	ef 92       	push	r14
    1188:	ff 92       	push	r15
    118a:	0f 93       	push	r16
    118c:	1f 93       	push	r17
    118e:	2f 93       	push	r18
    1190:	3f 93       	push	r19
    1192:	4f 93       	push	r20
    1194:	5f 93       	push	r21
    1196:	6f 93       	push	r22
    1198:	7f 93       	push	r23
    119a:	8f 93       	push	r24
    119c:	9f 93       	push	r25
    119e:	af 93       	push	r26
    11a0:	bf 93       	push	r27
    11a2:	cf 93       	push	r28
    11a4:	df 93       	push	r29
    11a6:	ef 93       	push	r30
    11a8:	ff 93       	push	r31
	uint8_t data;
	data = UDR0; // read data from buffer TODO: add check for overflow
    11aa:	20 91 c6 00 	lds	r18, 0x00C6
	
	
	
	if(data == 0x7e)
    11ae:	2e 37       	cpi	r18, 0x7E	; 126
    11b0:	09 f0       	breq	.+2      	; 0x11b4 <__vector_20+0x3c>
    11b2:	3e c0       	rjmp	.+124    	; 0x1230 <__vector_20+0xb8>
	{
		if(gRxBufferIndex >= 4 || gRxBufferIndex == gRxBuffer[1] + 4) //TODO: add crc check
    11b4:	80 91 1e 23 	lds	r24, 0x231E
    11b8:	90 91 1f 23 	lds	r25, 0x231F
    11bc:	84 30       	cpi	r24, 0x04	; 4
    11be:	91 05       	cpc	r25, r1
    11c0:	40 f4       	brcc	.+16     	; 0x11d2 <__vector_20+0x5a>
    11c2:	20 91 4f 24 	lds	r18, 0x244F
    11c6:	30 e0       	ldi	r19, 0x00	; 0
    11c8:	2c 5f       	subi	r18, 0xFC	; 252
    11ca:	3f 4f       	sbci	r19, 0xFF	; 255
    11cc:	82 17       	cp	r24, r18
    11ce:	93 07       	cpc	r25, r19
    11d0:	51 f5       	brne	.+84     	; 0x1226 <__vector_20+0xae>
		{
			if(gInvertNextFlag)
    11d2:	80 91 1c 23 	lds	r24, 0x231C
    11d6:	90 91 1d 23 	lds	r25, 0x231D
    11da:	89 2b       	or	r24, r25
    11dc:	21 f0       	breq	.+8      	; 0x11e6 <__vector_20+0x6e>
			{
				data = (1<<5)^data;
				gInvertNextFlag = 0;
    11de:	10 92 1d 23 	sts	0x231D, r1
    11e2:	10 92 1c 23 	sts	0x231C, r1
    11e6:	0e e4       	ldi	r16, 0x4E	; 78
    11e8:	14 e2       	ldi	r17, 0x24	; 36
			}
			
			//USART_Bounce();
			
			// Add packet (no crc) to fifo-buffer to cue it for decoding
			for(int i = 0; i < gRxBuffer[1] + 2; ++i)
    11ea:	c0 e0       	ldi	r28, 0x00	; 0
    11ec:	d0 e0       	ldi	r29, 0x00	; 0
    11ee:	0f 2e       	mov	r0, r31
    11f0:	ff e4       	ldi	r31, 0x4F	; 79
    11f2:	ef 2e       	mov	r14, r31
    11f4:	f4 e2       	ldi	r31, 0x24	; 36
    11f6:	ff 2e       	mov	r15, r31
    11f8:	f0 2d       	mov	r31, r0
			{
				if(FifoWrite(gRxFIFO, gRxBuffer[i]))
    11fa:	f8 01       	movw	r30, r16
    11fc:	61 91       	ld	r22, Z+
    11fe:	8f 01       	movw	r16, r30
    1200:	80 91 08 11 	lds	r24, 0x1108
    1204:	90 91 09 11 	lds	r25, 0x1109
    1208:	0e 94 b4 00 	call	0x168	; 0x168 <FifoWrite>
    120c:	88 23       	and	r24, r24
    120e:	19 f0       	breq	.+6      	; 0x1216 <__vector_20+0x9e>
				{
					USART_send_message("U_FIFO-full");
    1210:	8a e0       	ldi	r24, 0x0A	; 10
    1212:	93 e2       	ldi	r25, 0x23	; 35
    1214:	98 dd       	rcall	.-1232   	; 0xd46 <USART_send_message>
			}
			
			//USART_Bounce();
			
			// Add packet (no crc) to fifo-buffer to cue it for decoding
			for(int i = 0; i < gRxBuffer[1] + 2; ++i)
    1216:	21 96       	adiw	r28, 0x01	; 1
    1218:	f7 01       	movw	r30, r14
    121a:	80 81       	ld	r24, Z
    121c:	90 e0       	ldi	r25, 0x00	; 0
    121e:	02 96       	adiw	r24, 0x02	; 2
    1220:	c8 17       	cp	r28, r24
    1222:	d9 07       	cpc	r29, r25
    1224:	54 f3       	brlt	.-44     	; 0x11fa <__vector_20+0x82>
					USART_send_message("U_FIFO-full");
				}
			}
		}
		
		gRxBufferIndex = 0; // always reset buffer index when frame delimiter (0x7e) is read
    1226:	10 92 1f 23 	sts	0x231F, r1
    122a:	10 92 1e 23 	sts	0x231E, r1
    122e:	16 c0       	rjmp	.+44     	; 0x125c <__vector_20+0xe4>
		
	}else if(data == 0x7d)
    1230:	2d 37       	cpi	r18, 0x7D	; 125
    1232:	39 f4       	brne	.+14     	; 0x1242 <__vector_20+0xca>
	{
		gInvertNextFlag = 1;
    1234:	81 e0       	ldi	r24, 0x01	; 1
    1236:	90 e0       	ldi	r25, 0x00	; 0
    1238:	90 93 1d 23 	sts	0x231D, r25
    123c:	80 93 1c 23 	sts	0x231C, r24
    1240:	0d c0       	rjmp	.+26     	; 0x125c <__vector_20+0xe4>
	}else
	{
		gRxBuffer[gRxBufferIndex] = data;
    1242:	80 91 1e 23 	lds	r24, 0x231E
    1246:	90 91 1f 23 	lds	r25, 0x231F
    124a:	fc 01       	movw	r30, r24
    124c:	e2 5b       	subi	r30, 0xB2	; 178
    124e:	fb 4d       	sbci	r31, 0xDB	; 219
    1250:	20 83       	st	Z, r18
		++gRxBufferIndex;
    1252:	01 96       	adiw	r24, 0x01	; 1
    1254:	90 93 1f 23 	sts	0x231F, r25
    1258:	80 93 1e 23 	sts	0x231E, r24
	}
	
	
}
    125c:	ff 91       	pop	r31
    125e:	ef 91       	pop	r30
    1260:	df 91       	pop	r29
    1262:	cf 91       	pop	r28
    1264:	bf 91       	pop	r27
    1266:	af 91       	pop	r26
    1268:	9f 91       	pop	r25
    126a:	8f 91       	pop	r24
    126c:	7f 91       	pop	r23
    126e:	6f 91       	pop	r22
    1270:	5f 91       	pop	r21
    1272:	4f 91       	pop	r20
    1274:	3f 91       	pop	r19
    1276:	2f 91       	pop	r18
    1278:	1f 91       	pop	r17
    127a:	0f 91       	pop	r16
    127c:	ff 90       	pop	r15
    127e:	ef 90       	pop	r14
    1280:	0f 90       	pop	r0
    1282:	0b be       	out	0x3b, r0	; 59
    1284:	0f 90       	pop	r0
    1286:	0f be       	out	0x3f, r0	; 63
    1288:	0f 90       	pop	r0
    128a:	1f 90       	pop	r1
    128c:	18 95       	reti

0000128e <__fixunssfsi>:
    128e:	70 d0       	rcall	.+224    	; 0x1370 <__fp_splitA>
    1290:	88 f0       	brcs	.+34     	; 0x12b4 <__fixunssfsi+0x26>
    1292:	9f 57       	subi	r25, 0x7F	; 127
    1294:	90 f0       	brcs	.+36     	; 0x12ba <__fixunssfsi+0x2c>
    1296:	b9 2f       	mov	r27, r25
    1298:	99 27       	eor	r25, r25
    129a:	b7 51       	subi	r27, 0x17	; 23
    129c:	a0 f0       	brcs	.+40     	; 0x12c6 <__fixunssfsi+0x38>
    129e:	d1 f0       	breq	.+52     	; 0x12d4 <__fixunssfsi+0x46>
    12a0:	66 0f       	add	r22, r22
    12a2:	77 1f       	adc	r23, r23
    12a4:	88 1f       	adc	r24, r24
    12a6:	99 1f       	adc	r25, r25
    12a8:	1a f0       	brmi	.+6      	; 0x12b0 <__fixunssfsi+0x22>
    12aa:	ba 95       	dec	r27
    12ac:	c9 f7       	brne	.-14     	; 0x12a0 <__fixunssfsi+0x12>
    12ae:	12 c0       	rjmp	.+36     	; 0x12d4 <__fixunssfsi+0x46>
    12b0:	b1 30       	cpi	r27, 0x01	; 1
    12b2:	81 f0       	breq	.+32     	; 0x12d4 <__fixunssfsi+0x46>
    12b4:	77 d0       	rcall	.+238    	; 0x13a4 <__fp_zero>
    12b6:	b1 e0       	ldi	r27, 0x01	; 1
    12b8:	08 95       	ret
    12ba:	74 c0       	rjmp	.+232    	; 0x13a4 <__fp_zero>
    12bc:	67 2f       	mov	r22, r23
    12be:	78 2f       	mov	r23, r24
    12c0:	88 27       	eor	r24, r24
    12c2:	b8 5f       	subi	r27, 0xF8	; 248
    12c4:	39 f0       	breq	.+14     	; 0x12d4 <__fixunssfsi+0x46>
    12c6:	b9 3f       	cpi	r27, 0xF9	; 249
    12c8:	cc f3       	brlt	.-14     	; 0x12bc <__fixunssfsi+0x2e>
    12ca:	86 95       	lsr	r24
    12cc:	77 95       	ror	r23
    12ce:	67 95       	ror	r22
    12d0:	b3 95       	inc	r27
    12d2:	d9 f7       	brne	.-10     	; 0x12ca <__fixunssfsi+0x3c>
    12d4:	3e f4       	brtc	.+14     	; 0x12e4 <__fixunssfsi+0x56>
    12d6:	90 95       	com	r25
    12d8:	80 95       	com	r24
    12da:	70 95       	com	r23
    12dc:	61 95       	neg	r22
    12de:	7f 4f       	sbci	r23, 0xFF	; 255
    12e0:	8f 4f       	sbci	r24, 0xFF	; 255
    12e2:	9f 4f       	sbci	r25, 0xFF	; 255
    12e4:	08 95       	ret

000012e6 <__floatunsisf>:
    12e6:	e8 94       	clt
    12e8:	09 c0       	rjmp	.+18     	; 0x12fc <__floatsisf+0x12>

000012ea <__floatsisf>:
    12ea:	97 fb       	bst	r25, 7
    12ec:	3e f4       	brtc	.+14     	; 0x12fc <__floatsisf+0x12>
    12ee:	90 95       	com	r25
    12f0:	80 95       	com	r24
    12f2:	70 95       	com	r23
    12f4:	61 95       	neg	r22
    12f6:	7f 4f       	sbci	r23, 0xFF	; 255
    12f8:	8f 4f       	sbci	r24, 0xFF	; 255
    12fa:	9f 4f       	sbci	r25, 0xFF	; 255
    12fc:	99 23       	and	r25, r25
    12fe:	a9 f0       	breq	.+42     	; 0x132a <__floatsisf+0x40>
    1300:	f9 2f       	mov	r31, r25
    1302:	96 e9       	ldi	r25, 0x96	; 150
    1304:	bb 27       	eor	r27, r27
    1306:	93 95       	inc	r25
    1308:	f6 95       	lsr	r31
    130a:	87 95       	ror	r24
    130c:	77 95       	ror	r23
    130e:	67 95       	ror	r22
    1310:	b7 95       	ror	r27
    1312:	f1 11       	cpse	r31, r1
    1314:	f8 cf       	rjmp	.-16     	; 0x1306 <__floatsisf+0x1c>
    1316:	fa f4       	brpl	.+62     	; 0x1356 <__floatsisf+0x6c>
    1318:	bb 0f       	add	r27, r27
    131a:	11 f4       	brne	.+4      	; 0x1320 <__floatsisf+0x36>
    131c:	60 ff       	sbrs	r22, 0
    131e:	1b c0       	rjmp	.+54     	; 0x1356 <__floatsisf+0x6c>
    1320:	6f 5f       	subi	r22, 0xFF	; 255
    1322:	7f 4f       	sbci	r23, 0xFF	; 255
    1324:	8f 4f       	sbci	r24, 0xFF	; 255
    1326:	9f 4f       	sbci	r25, 0xFF	; 255
    1328:	16 c0       	rjmp	.+44     	; 0x1356 <__floatsisf+0x6c>
    132a:	88 23       	and	r24, r24
    132c:	11 f0       	breq	.+4      	; 0x1332 <__floatsisf+0x48>
    132e:	96 e9       	ldi	r25, 0x96	; 150
    1330:	11 c0       	rjmp	.+34     	; 0x1354 <__floatsisf+0x6a>
    1332:	77 23       	and	r23, r23
    1334:	21 f0       	breq	.+8      	; 0x133e <__floatsisf+0x54>
    1336:	9e e8       	ldi	r25, 0x8E	; 142
    1338:	87 2f       	mov	r24, r23
    133a:	76 2f       	mov	r23, r22
    133c:	05 c0       	rjmp	.+10     	; 0x1348 <__floatsisf+0x5e>
    133e:	66 23       	and	r22, r22
    1340:	71 f0       	breq	.+28     	; 0x135e <__floatsisf+0x74>
    1342:	96 e8       	ldi	r25, 0x86	; 134
    1344:	86 2f       	mov	r24, r22
    1346:	70 e0       	ldi	r23, 0x00	; 0
    1348:	60 e0       	ldi	r22, 0x00	; 0
    134a:	2a f0       	brmi	.+10     	; 0x1356 <__floatsisf+0x6c>
    134c:	9a 95       	dec	r25
    134e:	66 0f       	add	r22, r22
    1350:	77 1f       	adc	r23, r23
    1352:	88 1f       	adc	r24, r24
    1354:	da f7       	brpl	.-10     	; 0x134c <__floatsisf+0x62>
    1356:	88 0f       	add	r24, r24
    1358:	96 95       	lsr	r25
    135a:	87 95       	ror	r24
    135c:	97 f9       	bld	r25, 7
    135e:	08 95       	ret

00001360 <__fp_split3>:
    1360:	57 fd       	sbrc	r21, 7
    1362:	90 58       	subi	r25, 0x80	; 128
    1364:	44 0f       	add	r20, r20
    1366:	55 1f       	adc	r21, r21
    1368:	59 f0       	breq	.+22     	; 0x1380 <__fp_splitA+0x10>
    136a:	5f 3f       	cpi	r21, 0xFF	; 255
    136c:	71 f0       	breq	.+28     	; 0x138a <__fp_splitA+0x1a>
    136e:	47 95       	ror	r20

00001370 <__fp_splitA>:
    1370:	88 0f       	add	r24, r24
    1372:	97 fb       	bst	r25, 7
    1374:	99 1f       	adc	r25, r25
    1376:	61 f0       	breq	.+24     	; 0x1390 <__fp_splitA+0x20>
    1378:	9f 3f       	cpi	r25, 0xFF	; 255
    137a:	79 f0       	breq	.+30     	; 0x139a <__fp_splitA+0x2a>
    137c:	87 95       	ror	r24
    137e:	08 95       	ret
    1380:	12 16       	cp	r1, r18
    1382:	13 06       	cpc	r1, r19
    1384:	14 06       	cpc	r1, r20
    1386:	55 1f       	adc	r21, r21
    1388:	f2 cf       	rjmp	.-28     	; 0x136e <__fp_split3+0xe>
    138a:	46 95       	lsr	r20
    138c:	f1 df       	rcall	.-30     	; 0x1370 <__fp_splitA>
    138e:	08 c0       	rjmp	.+16     	; 0x13a0 <__fp_splitA+0x30>
    1390:	16 16       	cp	r1, r22
    1392:	17 06       	cpc	r1, r23
    1394:	18 06       	cpc	r1, r24
    1396:	99 1f       	adc	r25, r25
    1398:	f1 cf       	rjmp	.-30     	; 0x137c <__fp_splitA+0xc>
    139a:	86 95       	lsr	r24
    139c:	71 05       	cpc	r23, r1
    139e:	61 05       	cpc	r22, r1
    13a0:	08 94       	sec
    13a2:	08 95       	ret

000013a4 <__fp_zero>:
    13a4:	e8 94       	clt

000013a6 <__fp_szero>:
    13a6:	bb 27       	eor	r27, r27
    13a8:	66 27       	eor	r22, r22
    13aa:	77 27       	eor	r23, r23
    13ac:	cb 01       	movw	r24, r22
    13ae:	97 f9       	bld	r25, 7
    13b0:	08 95       	ret

000013b2 <__mulsf3>:
    13b2:	0b d0       	rcall	.+22     	; 0x13ca <__mulsf3x>
    13b4:	78 c0       	rjmp	.+240    	; 0x14a6 <__fp_round>
    13b6:	69 d0       	rcall	.+210    	; 0x148a <__fp_pscA>
    13b8:	28 f0       	brcs	.+10     	; 0x13c4 <__mulsf3+0x12>
    13ba:	6e d0       	rcall	.+220    	; 0x1498 <__fp_pscB>
    13bc:	18 f0       	brcs	.+6      	; 0x13c4 <__mulsf3+0x12>
    13be:	95 23       	and	r25, r21
    13c0:	09 f0       	breq	.+2      	; 0x13c4 <__mulsf3+0x12>
    13c2:	5a c0       	rjmp	.+180    	; 0x1478 <__fp_inf>
    13c4:	5f c0       	rjmp	.+190    	; 0x1484 <__fp_nan>
    13c6:	11 24       	eor	r1, r1
    13c8:	ee cf       	rjmp	.-36     	; 0x13a6 <__fp_szero>

000013ca <__mulsf3x>:
    13ca:	ca df       	rcall	.-108    	; 0x1360 <__fp_split3>
    13cc:	a0 f3       	brcs	.-24     	; 0x13b6 <__mulsf3+0x4>

000013ce <__mulsf3_pse>:
    13ce:	95 9f       	mul	r25, r21
    13d0:	d1 f3       	breq	.-12     	; 0x13c6 <__mulsf3+0x14>
    13d2:	95 0f       	add	r25, r21
    13d4:	50 e0       	ldi	r21, 0x00	; 0
    13d6:	55 1f       	adc	r21, r21
    13d8:	62 9f       	mul	r22, r18
    13da:	f0 01       	movw	r30, r0
    13dc:	72 9f       	mul	r23, r18
    13de:	bb 27       	eor	r27, r27
    13e0:	f0 0d       	add	r31, r0
    13e2:	b1 1d       	adc	r27, r1
    13e4:	63 9f       	mul	r22, r19
    13e6:	aa 27       	eor	r26, r26
    13e8:	f0 0d       	add	r31, r0
    13ea:	b1 1d       	adc	r27, r1
    13ec:	aa 1f       	adc	r26, r26
    13ee:	64 9f       	mul	r22, r20
    13f0:	66 27       	eor	r22, r22
    13f2:	b0 0d       	add	r27, r0
    13f4:	a1 1d       	adc	r26, r1
    13f6:	66 1f       	adc	r22, r22
    13f8:	82 9f       	mul	r24, r18
    13fa:	22 27       	eor	r18, r18
    13fc:	b0 0d       	add	r27, r0
    13fe:	a1 1d       	adc	r26, r1
    1400:	62 1f       	adc	r22, r18
    1402:	73 9f       	mul	r23, r19
    1404:	b0 0d       	add	r27, r0
    1406:	a1 1d       	adc	r26, r1
    1408:	62 1f       	adc	r22, r18
    140a:	83 9f       	mul	r24, r19
    140c:	a0 0d       	add	r26, r0
    140e:	61 1d       	adc	r22, r1
    1410:	22 1f       	adc	r18, r18
    1412:	74 9f       	mul	r23, r20
    1414:	33 27       	eor	r19, r19
    1416:	a0 0d       	add	r26, r0
    1418:	61 1d       	adc	r22, r1
    141a:	23 1f       	adc	r18, r19
    141c:	84 9f       	mul	r24, r20
    141e:	60 0d       	add	r22, r0
    1420:	21 1d       	adc	r18, r1
    1422:	82 2f       	mov	r24, r18
    1424:	76 2f       	mov	r23, r22
    1426:	6a 2f       	mov	r22, r26
    1428:	11 24       	eor	r1, r1
    142a:	9f 57       	subi	r25, 0x7F	; 127
    142c:	50 40       	sbci	r21, 0x00	; 0
    142e:	8a f0       	brmi	.+34     	; 0x1452 <__mulsf3_pse+0x84>
    1430:	e1 f0       	breq	.+56     	; 0x146a <__mulsf3_pse+0x9c>
    1432:	88 23       	and	r24, r24
    1434:	4a f0       	brmi	.+18     	; 0x1448 <__mulsf3_pse+0x7a>
    1436:	ee 0f       	add	r30, r30
    1438:	ff 1f       	adc	r31, r31
    143a:	bb 1f       	adc	r27, r27
    143c:	66 1f       	adc	r22, r22
    143e:	77 1f       	adc	r23, r23
    1440:	88 1f       	adc	r24, r24
    1442:	91 50       	subi	r25, 0x01	; 1
    1444:	50 40       	sbci	r21, 0x00	; 0
    1446:	a9 f7       	brne	.-22     	; 0x1432 <__mulsf3_pse+0x64>
    1448:	9e 3f       	cpi	r25, 0xFE	; 254
    144a:	51 05       	cpc	r21, r1
    144c:	70 f0       	brcs	.+28     	; 0x146a <__mulsf3_pse+0x9c>
    144e:	14 c0       	rjmp	.+40     	; 0x1478 <__fp_inf>
    1450:	aa cf       	rjmp	.-172    	; 0x13a6 <__fp_szero>
    1452:	5f 3f       	cpi	r21, 0xFF	; 255
    1454:	ec f3       	brlt	.-6      	; 0x1450 <__mulsf3_pse+0x82>
    1456:	98 3e       	cpi	r25, 0xE8	; 232
    1458:	dc f3       	brlt	.-10     	; 0x1450 <__mulsf3_pse+0x82>
    145a:	86 95       	lsr	r24
    145c:	77 95       	ror	r23
    145e:	67 95       	ror	r22
    1460:	b7 95       	ror	r27
    1462:	f7 95       	ror	r31
    1464:	e7 95       	ror	r30
    1466:	9f 5f       	subi	r25, 0xFF	; 255
    1468:	c1 f7       	brne	.-16     	; 0x145a <__mulsf3_pse+0x8c>
    146a:	fe 2b       	or	r31, r30
    146c:	88 0f       	add	r24, r24
    146e:	91 1d       	adc	r25, r1
    1470:	96 95       	lsr	r25
    1472:	87 95       	ror	r24
    1474:	97 f9       	bld	r25, 7
    1476:	08 95       	ret

00001478 <__fp_inf>:
    1478:	97 f9       	bld	r25, 7
    147a:	9f 67       	ori	r25, 0x7F	; 127
    147c:	80 e8       	ldi	r24, 0x80	; 128
    147e:	70 e0       	ldi	r23, 0x00	; 0
    1480:	60 e0       	ldi	r22, 0x00	; 0
    1482:	08 95       	ret

00001484 <__fp_nan>:
    1484:	9f ef       	ldi	r25, 0xFF	; 255
    1486:	80 ec       	ldi	r24, 0xC0	; 192
    1488:	08 95       	ret

0000148a <__fp_pscA>:
    148a:	00 24       	eor	r0, r0
    148c:	0a 94       	dec	r0
    148e:	16 16       	cp	r1, r22
    1490:	17 06       	cpc	r1, r23
    1492:	18 06       	cpc	r1, r24
    1494:	09 06       	cpc	r0, r25
    1496:	08 95       	ret

00001498 <__fp_pscB>:
    1498:	00 24       	eor	r0, r0
    149a:	0a 94       	dec	r0
    149c:	12 16       	cp	r1, r18
    149e:	13 06       	cpc	r1, r19
    14a0:	14 06       	cpc	r1, r20
    14a2:	05 06       	cpc	r0, r21
    14a4:	08 95       	ret

000014a6 <__fp_round>:
    14a6:	09 2e       	mov	r0, r25
    14a8:	03 94       	inc	r0
    14aa:	00 0c       	add	r0, r0
    14ac:	11 f4       	brne	.+4      	; 0x14b2 <__fp_round+0xc>
    14ae:	88 23       	and	r24, r24
    14b0:	52 f0       	brmi	.+20     	; 0x14c6 <__fp_round+0x20>
    14b2:	bb 0f       	add	r27, r27
    14b4:	40 f4       	brcc	.+16     	; 0x14c6 <__fp_round+0x20>
    14b6:	bf 2b       	or	r27, r31
    14b8:	11 f4       	brne	.+4      	; 0x14be <__fp_round+0x18>
    14ba:	60 ff       	sbrs	r22, 0
    14bc:	04 c0       	rjmp	.+8      	; 0x14c6 <__fp_round+0x20>
    14be:	6f 5f       	subi	r22, 0xFF	; 255
    14c0:	7f 4f       	sbci	r23, 0xFF	; 255
    14c2:	8f 4f       	sbci	r24, 0xFF	; 255
    14c4:	9f 4f       	sbci	r25, 0xFF	; 255
    14c6:	08 95       	ret

000014c8 <_exit>:
    14c8:	f8 94       	cli

000014ca <__stop_program>:
    14ca:	ff cf       	rjmp	.-2      	; 0x14ca <__stop_program>
