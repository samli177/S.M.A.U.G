
Navigationsenheten.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000012bc  00800100  00002474  00002508  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002474  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000684  008013bc  008013bc  000037c4  2**0
                  ALLOC
  3 .stab         00002e68  00000000  00000000  000037c4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000d48  00000000  00000000  0000662c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00007374  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000438  00000000  00000000  000073a3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00003f8a  00000000  00000000  000077db  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000fbc  00000000  00000000  0000b765  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00002745  00000000  00000000  0000c721  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000ccc  00000000  00000000  0000ee68  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000e38  00000000  00000000  0000fb34  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000026e8  00000000  00000000  0001096c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000490  00000000  00000000  00013054  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	6b c0       	rjmp	.+214    	; 0xd8 <__ctors_end>
       2:	00 00       	nop
       4:	3a c6       	rjmp	.+3188   	; 0xc7a <__vector_1>
       6:	00 00       	nop
       8:	62 c6       	rjmp	.+3268   	; 0xcce <__vector_2>
       a:	00 00       	nop
       c:	83 c0       	rjmp	.+262    	; 0x114 <__bad_interrupt>
       e:	00 00       	nop
      10:	26 c7       	rjmp	.+3660   	; 0xe5e <__vector_4>
      12:	00 00       	nop
      14:	7f c0       	rjmp	.+254    	; 0x114 <__bad_interrupt>
      16:	00 00       	nop
      18:	7d c0       	rjmp	.+250    	; 0x114 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	7b c0       	rjmp	.+246    	; 0x114 <__bad_interrupt>
      1e:	00 00       	nop
      20:	79 c0       	rjmp	.+242    	; 0x114 <__bad_interrupt>
      22:	00 00       	nop
      24:	77 c0       	rjmp	.+238    	; 0x114 <__bad_interrupt>
      26:	00 00       	nop
      28:	75 c0       	rjmp	.+234    	; 0x114 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	73 c0       	rjmp	.+230    	; 0x114 <__bad_interrupt>
      2e:	00 00       	nop
      30:	71 c0       	rjmp	.+226    	; 0x114 <__bad_interrupt>
      32:	00 00       	nop
      34:	c7 c6       	rjmp	.+3470   	; 0xdc4 <__vector_13>
      36:	00 00       	nop
      38:	6d c0       	rjmp	.+218    	; 0x114 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	6b c0       	rjmp	.+214    	; 0x114 <__bad_interrupt>
      3e:	00 00       	nop
      40:	69 c0       	rjmp	.+210    	; 0x114 <__bad_interrupt>
      42:	00 00       	nop
      44:	67 c0       	rjmp	.+206    	; 0x114 <__bad_interrupt>
      46:	00 00       	nop
      48:	65 c0       	rjmp	.+202    	; 0x114 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	63 c0       	rjmp	.+198    	; 0x114 <__bad_interrupt>
      4e:	00 00       	nop
      50:	0c 94 d6 0e 	jmp	0x1dac	; 0x1dac <__vector_20>
      54:	5f c0       	rjmp	.+190    	; 0x114 <__bad_interrupt>
      56:	00 00       	nop
      58:	5d c0       	rjmp	.+186    	; 0x114 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	5b c0       	rjmp	.+182    	; 0x114 <__bad_interrupt>
      5e:	00 00       	nop
      60:	59 c0       	rjmp	.+178    	; 0x114 <__bad_interrupt>
      62:	00 00       	nop
      64:	57 c0       	rjmp	.+174    	; 0x114 <__bad_interrupt>
      66:	00 00       	nop
      68:	0c 94 e5 09 	jmp	0x13ca	; 0x13ca <__vector_26>
      6c:	53 c0       	rjmp	.+166    	; 0x114 <__bad_interrupt>
      6e:	00 00       	nop
      70:	51 c0       	rjmp	.+162    	; 0x114 <__bad_interrupt>
      72:	00 00       	nop
      74:	4f c0       	rjmp	.+158    	; 0x114 <__bad_interrupt>
      76:	00 00       	nop
      78:	4d c0       	rjmp	.+154    	; 0x114 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	4b c0       	rjmp	.+150    	; 0x114 <__bad_interrupt>
      7e:	00 00       	nop
      80:	af c6       	rjmp	.+3422   	; 0xde0 <__vector_32>
      82:	00 00       	nop
      84:	47 c0       	rjmp	.+142    	; 0x114 <__bad_interrupt>
      86:	00 00       	nop
      88:	45 c0       	rjmp	.+138    	; 0x114 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	08 4a       	sbci	r16, 0xA8	; 168
      8e:	d7 3b       	cpi	r29, 0xB7	; 183
      90:	3b ce       	rjmp	.-906    	; 0xfffffd08 <__eeprom_end+0xff7efd08>
      92:	01 6e       	ori	r16, 0xE1	; 225
      94:	84 bc       	out	0x24, r8	; 36
      96:	bf fd       	.word	0xfdbf	; ????
      98:	c1 2f       	mov	r28, r17
      9a:	3d 6c       	ori	r19, 0xCD	; 205
      9c:	74 31       	cpi	r23, 0x14	; 20
      9e:	9a bd       	out	0x2a, r25	; 42
      a0:	56 83       	std	Z+6, r21	; 0x06
      a2:	3d da       	rcall	.-2950   	; 0xfffff51e <__eeprom_end+0xff7ef51e>
      a4:	3d 00       	.word	0x003d	; ????
      a6:	c7 7f       	andi	r28, 0xF7	; 247
      a8:	11 be       	out	0x31, r1	; 49
      aa:	d9 e4       	ldi	r29, 0x49	; 73
      ac:	bb 4c       	sbci	r27, 0xCB	; 203
      ae:	3e 91       	ld	r19, -X
      b0:	6b aa       	std	Y+51, r6	; 0x33
      b2:	aa be       	out	0x3a, r10	; 58
      b4:	00 00       	nop
      b6:	00 80       	ld	r0, Z
      b8:	3f 05       	cpc	r19, r15
      ba:	a8 4c       	sbci	r26, 0xC8	; 200
      bc:	cd b2       	in	r12, 0x1d	; 29
      be:	d4 4e       	sbci	r29, 0xE4	; 228
      c0:	b9 38       	cpi	r27, 0x89	; 137
      c2:	36 a9       	ldd	r19, Z+54	; 0x36
      c4:	02 0c       	add	r0, r2
      c6:	50 b9       	out	0x00, r21	; 0
      c8:	91 86       	std	Z+9, r9	; 0x09
      ca:	88 08       	sbc	r8, r8
      cc:	3c a6       	std	Y+44, r3	; 0x2c
      ce:	aa aa       	std	Y+50, r10	; 0x32
      d0:	2a be       	out	0x3a, r2	; 58
      d2:	00 00       	nop
      d4:	00 80       	ld	r0, Z
      d6:	3f 00       	.word	0x003f	; ????

000000d8 <__ctors_end>:
      d8:	11 24       	eor	r1, r1
      da:	1f be       	out	0x3f, r1	; 63
      dc:	cf ef       	ldi	r28, 0xFF	; 255
      de:	d0 e4       	ldi	r29, 0x40	; 64
      e0:	de bf       	out	0x3e, r29	; 62
      e2:	cd bf       	out	0x3d, r28	; 61

000000e4 <__do_copy_data>:
      e4:	13 e1       	ldi	r17, 0x13	; 19
      e6:	a0 e0       	ldi	r26, 0x00	; 0
      e8:	b1 e0       	ldi	r27, 0x01	; 1
      ea:	e4 e7       	ldi	r30, 0x74	; 116
      ec:	f4 e2       	ldi	r31, 0x24	; 36
      ee:	00 e0       	ldi	r16, 0x00	; 0
      f0:	0b bf       	out	0x3b, r16	; 59
      f2:	02 c0       	rjmp	.+4      	; 0xf8 <__do_copy_data+0x14>
      f4:	07 90       	elpm	r0, Z+
      f6:	0d 92       	st	X+, r0
      f8:	ac 3b       	cpi	r26, 0xBC	; 188
      fa:	b1 07       	cpc	r27, r17
      fc:	d9 f7       	brne	.-10     	; 0xf4 <__do_copy_data+0x10>

000000fe <__do_clear_bss>:
      fe:	2a e1       	ldi	r18, 0x1A	; 26
     100:	ac eb       	ldi	r26, 0xBC	; 188
     102:	b3 e1       	ldi	r27, 0x13	; 19
     104:	01 c0       	rjmp	.+2      	; 0x108 <.do_clear_bss_start>

00000106 <.do_clear_bss_loop>:
     106:	1d 92       	st	X+, r1

00000108 <.do_clear_bss_start>:
     108:	a0 34       	cpi	r26, 0x40	; 64
     10a:	b2 07       	cpc	r27, r18
     10c:	e1 f7       	brne	.-8      	; 0x106 <.do_clear_bss_loop>
     10e:	09 d6       	rcall	.+3090   	; 0xd22 <main>
     110:	0c 94 38 12 	jmp	0x2470	; 0x2470 <_exit>

00000114 <__bad_interrupt>:
     114:	75 cf       	rjmp	.-278    	; 0x0 <__vectors>

00000116 <turn_around>:
	}
}

void turn_around()
{
	if(gStatus)
     116:	80 91 00 01 	lds	r24, 0x0100
     11a:	88 23       	and	r24, r24
     11c:	29 f0       	breq	.+10     	; 0x128 <turn_around+0x12>
	{
		TWI_send_string(C_ADDRESS, "Starting to turn around.");
     11e:	6c e1       	ldi	r22, 0x1C	; 28
     120:	71 e1       	ldi	r23, 0x11	; 17
     122:	80 e8       	ldi	r24, 0x80	; 128
     124:	0e 94 a4 08 	call	0x1148	; 0x1148 <TWI_send_string>
			//TWI_send_string(C_ADDRESS, "Rotating right.");
		}
		USART_send_command_parameters(0, MAX_ROTATION_COUNTER_CLOCKWISE, 0);
		navigation_stepping_delay();
	}*/
	USART_send_turn(180, 0);
     128:	60 e0       	ldi	r22, 0x00	; 0
     12a:	84 eb       	ldi	r24, 0xB4	; 180
     12c:	90 e0       	ldi	r25, 0x00	; 0
     12e:	0e 94 5f 0c 	call	0x18be	; 0x18be <USART_send_turn>
	while(USART_turn_done() == 0)
     132:	08 c0       	rjmp	.+16     	; 0x144 <turn_around+0x2e>
	{
		USART_decode_rx_fifo();
     134:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <USART_decode_rx_fifo>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     138:	8f e3       	ldi	r24, 0x3F	; 63
     13a:	9c e9       	ldi	r25, 0x9C	; 156
     13c:	01 97       	sbiw	r24, 0x01	; 1
     13e:	f1 f7       	brne	.-4      	; 0x13c <turn_around+0x26>
     140:	00 c0       	rjmp	.+0      	; 0x142 <turn_around+0x2c>
     142:	00 00       	nop
		}
		USART_send_command_parameters(0, MAX_ROTATION_COUNTER_CLOCKWISE, 0);
		navigation_stepping_delay();
	}*/
	USART_send_turn(180, 0);
	while(USART_turn_done() == 0)
     144:	0e 94 88 0e 	call	0x1d10	; 0x1d10 <USART_turn_done>
     148:	88 23       	and	r24, r24
     14a:	a1 f3       	breq	.-24     	; 0x134 <turn_around+0x1e>
	{
		USART_decode_rx_fifo();
		_delay_ms(10);
	}
	
	if(gStatus)
     14c:	80 91 00 01 	lds	r24, 0x0100
     150:	88 23       	and	r24, r24
     152:	21 f0       	breq	.+8      	; 0x15c <turn_around+0x46>
	{
		TWI_send_string(C_ADDRESS, "Corridor ahead, done turning around.");
     154:	65 e3       	ldi	r22, 0x35	; 53
     156:	71 e1       	ldi	r23, 0x11	; 17
     158:	80 e8       	ldi	r24, 0x80	; 128
     15a:	f6 c7       	rjmp	.+4076   	; 0x1148 <TWI_send_string>
     15c:	08 95       	ret

0000015e <walk_forward>:
	}
}

void walk_forward()
{
     15e:	8f 92       	push	r8
     160:	9f 92       	push	r9
     162:	af 92       	push	r10
     164:	bf 92       	push	r11
     166:	cf 92       	push	r12
     168:	df 92       	push	r13
     16a:	ef 92       	push	r14
     16c:	ff 92       	push	r15
     16e:	cf 93       	push	r28
     170:	df 93       	push	r29
	if(gStatus)
	{
		//TWI_send_string(C_ADDRESS, "Finding regulation parameters.");
	}
	float angleOffset = navigation_angle_offset();
     172:	89 d4       	rcall	.+2322   	; 0xa86 <navigation_angle_offset>
     174:	6b 01       	movw	r12, r22
     176:	7c 01       	movw	r14, r24
	float directionCompensationAngle = navigation_direction_regulation(angleOffset);
     178:	d0 d2       	rcall	.+1440   	; 0x71a <navigation_direction_regulation>
     17a:	4b 01       	movw	r8, r22
     17c:	5c 01       	movw	r10, r24
	if(gStatus)
	{
		//TWI_send_string(C_ADDRESS, "Found regulation parameters.");
	}
	int adjustmentRotation = (51 + 50 * angleOffset * 2.0/PI);
     17e:	20 e0       	ldi	r18, 0x00	; 0
     180:	30 e0       	ldi	r19, 0x00	; 0
     182:	48 e4       	ldi	r20, 0x48	; 72
     184:	52 e4       	ldi	r21, 0x42	; 66
     186:	c7 01       	movw	r24, r14
     188:	b6 01       	movw	r22, r12
     18a:	0e 94 b3 11 	call	0x2366	; 0x2366 <__mulsf3>
     18e:	9b 01       	movw	r18, r22
     190:	ac 01       	movw	r20, r24
     192:	0e 94 6c 0f 	call	0x1ed8	; 0x1ed8 <__addsf3>
     196:	2b ed       	ldi	r18, 0xDB	; 219
     198:	3f e0       	ldi	r19, 0x0F	; 15
     19a:	49 e4       	ldi	r20, 0x49	; 73
     19c:	50 e4       	ldi	r21, 0x40	; 64
     19e:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__divsf3>
     1a2:	20 e0       	ldi	r18, 0x00	; 0
     1a4:	30 e0       	ldi	r19, 0x00	; 0
     1a6:	4c e4       	ldi	r20, 0x4C	; 76
     1a8:	52 e4       	ldi	r21, 0x42	; 66
     1aa:	0e 94 6c 0f 	call	0x1ed8	; 0x1ed8 <__addsf3>
     1ae:	0e 94 67 10 	call	0x20ce	; 0x20ce <__fixsfsi>
	if (adjustmentRotation >= 100)
     1b2:	64 36       	cpi	r22, 0x64	; 100
     1b4:	71 05       	cpc	r23, r1
     1b6:	34 f4       	brge	.+12     	; 0x1c4 <walk_forward+0x66>
     1b8:	eb 01       	movw	r28, r22
     1ba:	dd 23       	and	r29, r29
     1bc:	2c f4       	brge	.+10     	; 0x1c8 <walk_forward+0x6a>
     1be:	c0 e0       	ldi	r28, 0x00	; 0
     1c0:	d0 e0       	ldi	r29, 0x00	; 0
     1c2:	02 c0       	rjmp	.+4      	; 0x1c8 <walk_forward+0x6a>
	{
		adjustmentRotation = 100;
     1c4:	c4 e6       	ldi	r28, 0x64	; 100
     1c6:	d0 e0       	ldi	r29, 0x00	; 0
	}
	else if(adjustmentRotation <= 0)
	{
		adjustmentRotation = 0;
	}
	int adjustmentDirection = 90 * directionCompensationAngle/(2*PI);
     1c8:	20 e0       	ldi	r18, 0x00	; 0
     1ca:	30 e0       	ldi	r19, 0x00	; 0
     1cc:	44 eb       	ldi	r20, 0xB4	; 180
     1ce:	52 e4       	ldi	r21, 0x42	; 66
     1d0:	c5 01       	movw	r24, r10
     1d2:	b4 01       	movw	r22, r8
     1d4:	0e 94 b3 11 	call	0x2366	; 0x2366 <__mulsf3>
     1d8:	2b ed       	ldi	r18, 0xDB	; 219
     1da:	3f e0       	ldi	r19, 0x0F	; 15
     1dc:	49 ec       	ldi	r20, 0xC9	; 201
     1de:	50 e4       	ldi	r21, 0x40	; 64
     1e0:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__divsf3>
     1e4:	0e 94 67 10 	call	0x20ce	; 0x20ce <__fixsfsi>
     1e8:	26 2f       	mov	r18, r22
	if(gStatus)
	{
		//TWI_send_string(C_ADDRESS, "Taking a step.");
	}
	USART_send_command_parameters((uint8_t)adjustmentDirection, (uint8_t)adjustmentRotation, gSpeed);
     1ea:	40 91 01 01 	lds	r20, 0x0101
     1ee:	6c 2f       	mov	r22, r28
     1f0:	82 2f       	mov	r24, r18
     1f2:	0e 94 62 0f 	call	0x1ec4	; 0x1ec4 <USART_send_command_parameters>
	//TWI_send_float(C_ADDRESS, adjustmentDirection);
	navigation_stepping_delay();
     1f6:	b8 d1       	rcall	.+880    	; 0x568 <navigation_stepping_delay>
	//TWI_send_float(C_ADDRESS, adjustmentRotation);
}
     1f8:	df 91       	pop	r29
     1fa:	cf 91       	pop	r28
     1fc:	ff 90       	pop	r15
     1fe:	ef 90       	pop	r14
     200:	df 90       	pop	r13
     202:	cf 90       	pop	r12
     204:	bf 90       	pop	r11
     206:	af 90       	pop	r10
     208:	9f 90       	pop	r9
     20a:	8f 90       	pop	r8
     20c:	08 95       	ret

0000020e <turn_right>:
		TWI_send_string(C_ADDRESS, "Done turning left.");
	}
}

void turn_right()
{
     20e:	cf 93       	push	r28
     210:	df 93       	push	r29
	if(gStatus)
     212:	80 91 00 01 	lds	r24, 0x0100
     216:	88 23       	and	r24, r24
     218:	21 f0       	breq	.+8      	; 0x222 <turn_right+0x14>
	{
		TWI_send_string(C_ADDRESS, "Starting turning right.");
     21a:	6a e5       	ldi	r22, 0x5A	; 90
     21c:	71 e1       	ldi	r23, 0x11	; 17
     21e:	80 e8       	ldi	r24, 0x80	; 128
     220:	93 d7       	rcall	.+3878   	; 0x1148 <TWI_send_string>
			//TWI_send_string(C_ADDRESS, "Rotating right.");
		}
		USART_send_command_parameters(0, MAX_ROTATION_CLOCKWISE, 0);
		navigation_stepping_delay();
	}*/
	USART_send_turn(90, 1);
     222:	61 e0       	ldi	r22, 0x01	; 1
     224:	8a e5       	ldi	r24, 0x5A	; 90
     226:	90 e0       	ldi	r25, 0x00	; 0
     228:	0e 94 5f 0c 	call	0x18be	; 0x18be <USART_send_turn>
	while(USART_turn_done() == 0)
     22c:	08 c0       	rjmp	.+16     	; 0x23e <turn_right+0x30>
	{
		USART_decode_rx_fifo();
     22e:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <USART_decode_rx_fifo>
     232:	8f e3       	ldi	r24, 0x3F	; 63
     234:	9c e9       	ldi	r25, 0x9C	; 156
     236:	01 97       	sbiw	r24, 0x01	; 1
     238:	f1 f7       	brne	.-4      	; 0x236 <turn_right+0x28>
     23a:	00 c0       	rjmp	.+0      	; 0x23c <turn_right+0x2e>
     23c:	00 00       	nop
		}
		USART_send_command_parameters(0, MAX_ROTATION_CLOCKWISE, 0);
		navigation_stepping_delay();
	}*/
	USART_send_turn(90, 1);
	while(USART_turn_done() == 0)
     23e:	0e 94 88 0e 	call	0x1d10	; 0x1d10 <USART_turn_done>
     242:	88 23       	and	r24, r24
     244:	a1 f3       	breq	.-24     	; 0x22e <turn_right+0x20>
     246:	c6 e0       	ldi	r28, 0x06	; 6
     248:	d0 e0       	ldi	r29, 0x00	; 0
     24a:	03 c0       	rjmp	.+6      	; 0x252 <turn_right+0x44>
		_delay_ms(10);
	}
	
	for(int i = 0; (i < TURN_EXIT_ITTERATIONS && navigation_autonomous_walk() != 0); ++i)
	{
		walk_forward();
     24c:	88 df       	rcall	.-240    	; 0x15e <walk_forward>
     24e:	21 97       	sbiw	r28, 0x01	; 1
	{
		USART_decode_rx_fifo();
		_delay_ms(10);
	}
	
	for(int i = 0; (i < TURN_EXIT_ITTERATIONS && navigation_autonomous_walk() != 0); ++i)
     250:	19 f0       	breq	.+6      	; 0x258 <turn_right+0x4a>
     252:	84 d1       	rcall	.+776    	; 0x55c <navigation_autonomous_walk>
     254:	81 11       	cpse	r24, r1
     256:	fa cf       	rjmp	.-12     	; 0x24c <turn_right+0x3e>
	{
		walk_forward();
	}
	if(gStatus)
     258:	80 91 00 01 	lds	r24, 0x0100
     25c:	88 23       	and	r24, r24
     25e:	21 f0       	breq	.+8      	; 0x268 <turn_right+0x5a>
	{
		TWI_send_string(C_ADDRESS, "Done turning right.");
     260:	62 e7       	ldi	r22, 0x72	; 114
     262:	71 e1       	ldi	r23, 0x11	; 17
     264:	80 e8       	ldi	r24, 0x80	; 128
     266:	70 d7       	rcall	.+3808   	; 0x1148 <TWI_send_string>
	}
}
     268:	df 91       	pop	r29
     26a:	cf 91       	pop	r28
     26c:	08 95       	ret

0000026e <turn_left>:
{
	return gStatus;
}

void turn_left()
{
     26e:	cf 93       	push	r28
     270:	df 93       	push	r29
	if(gStatus)
     272:	80 91 00 01 	lds	r24, 0x0100
     276:	88 23       	and	r24, r24
     278:	21 f0       	breq	.+8      	; 0x282 <turn_left+0x14>
	{
		TWI_send_string(C_ADDRESS, "Starting turning left.");
     27a:	66 e8       	ldi	r22, 0x86	; 134
     27c:	71 e1       	ldi	r23, 0x11	; 17
     27e:	80 e8       	ldi	r24, 0x80	; 128
     280:	63 d7       	rcall	.+3782   	; 0x1148 <TWI_send_string>
			//TWI_send_string(C_ADDRESS, "Rotating right.");
		}
		USART_send_command_parameters(0, MAX_ROTATION_COUNTER_CLOCKWISE, 0);
		navigation_stepping_delay();
	}*/
	USART_send_turn(90, 0);
     282:	60 e0       	ldi	r22, 0x00	; 0
     284:	8a e5       	ldi	r24, 0x5A	; 90
     286:	90 e0       	ldi	r25, 0x00	; 0
     288:	0e 94 5f 0c 	call	0x18be	; 0x18be <USART_send_turn>
	while(USART_turn_done() == 0)
     28c:	08 c0       	rjmp	.+16     	; 0x29e <turn_left+0x30>
	{
		USART_decode_rx_fifo();
     28e:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <USART_decode_rx_fifo>
     292:	8f e3       	ldi	r24, 0x3F	; 63
     294:	9c e9       	ldi	r25, 0x9C	; 156
     296:	01 97       	sbiw	r24, 0x01	; 1
     298:	f1 f7       	brne	.-4      	; 0x296 <turn_left+0x28>
     29a:	00 c0       	rjmp	.+0      	; 0x29c <turn_left+0x2e>
     29c:	00 00       	nop
		}
		USART_send_command_parameters(0, MAX_ROTATION_COUNTER_CLOCKWISE, 0);
		navigation_stepping_delay();
	}*/
	USART_send_turn(90, 0);
	while(USART_turn_done() == 0)
     29e:	0e 94 88 0e 	call	0x1d10	; 0x1d10 <USART_turn_done>
     2a2:	88 23       	and	r24, r24
     2a4:	a1 f3       	breq	.-24     	; 0x28e <turn_left+0x20>
     2a6:	c6 e0       	ldi	r28, 0x06	; 6
     2a8:	d0 e0       	ldi	r29, 0x00	; 0
     2aa:	03 c0       	rjmp	.+6      	; 0x2b2 <turn_left+0x44>
		_delay_ms(10);
	}
	
	for(int i = 0; (i < TURN_EXIT_ITTERATIONS && navigation_autonomous_walk() != 0); ++i)
	{
		walk_forward();
     2ac:	58 df       	rcall	.-336    	; 0x15e <walk_forward>
     2ae:	21 97       	sbiw	r28, 0x01	; 1
	{
		USART_decode_rx_fifo();
		_delay_ms(10);
	}
	
	for(int i = 0; (i < TURN_EXIT_ITTERATIONS && navigation_autonomous_walk() != 0); ++i)
     2b0:	19 f0       	breq	.+6      	; 0x2b8 <turn_left+0x4a>
     2b2:	54 d1       	rcall	.+680    	; 0x55c <navigation_autonomous_walk>
     2b4:	81 11       	cpse	r24, r1
     2b6:	fa cf       	rjmp	.-12     	; 0x2ac <turn_left+0x3e>
	{
		walk_forward();
	}
	if(gStatus)
     2b8:	80 91 00 01 	lds	r24, 0x0100
     2bc:	88 23       	and	r24, r24
     2be:	21 f0       	breq	.+8      	; 0x2c8 <turn_left+0x5a>
	{
		TWI_send_string(C_ADDRESS, "Done turning left.");
     2c0:	6d e9       	ldi	r22, 0x9D	; 157
     2c2:	71 e1       	ldi	r23, 0x11	; 17
     2c4:	80 e8       	ldi	r24, 0x80	; 128
     2c6:	40 d7       	rcall	.+3712   	; 0x1148 <TWI_send_string>
	}
}
     2c8:	df 91       	pop	r29
     2ca:	cf 91       	pop	r28
     2cc:	08 95       	ret

000002ce <climb>:
	//TWI_send_float(C_ADDRESS, adjustmentRotation);
}

void climb()
{
	USART_send_climb();	
     2ce:	0c 94 68 0c 	jmp	0x18d0	; 0x18d0 <USART_send_climb>
     2d2:	08 95       	ret

000002d4 <autonomouswalk_walk>:
}

void autonomouswalk_walk()
{
	navigation_low_pass_obstacle();
     2d4:	d2 d1       	rcall	.+932    	; 0x67a <navigation_low_pass_obstacle>
	if(navigation_left_algorithm())
     2d6:	3c d1       	rcall	.+632    	; 0x550 <navigation_left_algorithm>
     2d8:	88 23       	and	r24, r24
     2da:	09 f4       	brne	.+2      	; 0x2de <autonomouswalk_walk+0xa>
     2dc:	4c c0       	rjmp	.+152    	; 0x376 <autonomouswalk_walk+0xa2>
	{
		if(navigation_check_left_turn() == 2)
     2de:	08 d2       	rcall	.+1040   	; 0x6f0 <navigation_check_left_turn>
     2e0:	82 30       	cpi	r24, 0x02	; 2
     2e2:	31 f4       	brne	.+12     	; 0x2f0 <autonomouswalk_walk+0x1c>
		{
			for(int i = 0;i < TURN_ENTRY_ITTERATIONS_LEFT; ++i)
			{
				walk_forward();
     2e4:	3c df       	rcall	.-392    	; 0x15e <walk_forward>
     2e6:	3b df       	rcall	.-394    	; 0x15e <walk_forward>
			}
			turn_left();
     2e8:	c2 df       	rcall	.-124    	; 0x26e <turn_left>
			decisionCounter = 0;
     2ea:	10 92 bc 13 	sts	0x13BC, r1
     2ee:	08 95       	ret
		}
		else if(navigation_get_sensor(4) > CORRIDOR_WIDTH / 2)
     2f0:	84 e0       	ldi	r24, 0x04	; 4
     2f2:	90 e0       	ldi	r25, 0x00	; 0
     2f4:	7b d1       	rcall	.+758    	; 0x5ec <navigation_get_sensor>
     2f6:	89 32       	cpi	r24, 0x29	; 41
     2f8:	c0 f0       	brcs	.+48     	; 0x32a <autonomouswalk_walk+0x56>
		{
			if(navigation_get_sensor(6) < CORRIDOR_WIDTH / 2 - 5)
     2fa:	86 e0       	ldi	r24, 0x06	; 6
     2fc:	90 e0       	ldi	r25, 0x00	; 0
     2fe:	76 d1       	rcall	.+748    	; 0x5ec <navigation_get_sensor>
     300:	83 32       	cpi	r24, 0x23	; 35
     302:	78 f4       	brcc	.+30     	; 0x322 <autonomouswalk_walk+0x4e>
			{
				climb();
     304:	e4 df       	rcall	.-56     	; 0x2ce <climb>
				while(USART_climb_done() == 0)
     306:	08 c0       	rjmp	.+16     	; 0x318 <autonomouswalk_walk+0x44>
				{
					USART_decode_rx_fifo();
     308:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <USART_decode_rx_fifo>
     30c:	8f e3       	ldi	r24, 0x3F	; 63
     30e:	9c e9       	ldi	r25, 0x9C	; 156
     310:	01 97       	sbiw	r24, 0x01	; 1
     312:	f1 f7       	brne	.-4      	; 0x310 <autonomouswalk_walk+0x3c>
     314:	00 c0       	rjmp	.+0      	; 0x316 <autonomouswalk_walk+0x42>
     316:	00 00       	nop
		else if(navigation_get_sensor(4) > CORRIDOR_WIDTH / 2)
		{
			if(navigation_get_sensor(6) < CORRIDOR_WIDTH / 2 - 5)
			{
				climb();
				while(USART_climb_done() == 0)
     318:	0e 94 92 0e 	call	0x1d24	; 0x1d24 <USART_climb_done>
     31c:	88 23       	and	r24, r24
     31e:	a1 f3       	breq	.-24     	; 0x308 <autonomouswalk_walk+0x34>
     320:	01 c0       	rjmp	.+2      	; 0x324 <autonomouswalk_walk+0x50>
					_delay_ms(10);
				}
			}
			else
			{
				walk_forward();	
     322:	1d df       	rcall	.-454    	; 0x15e <walk_forward>
			}
			decisionCounter = 0;
     324:	10 92 bc 13 	sts	0x13BC, r1
     328:	08 95       	ret
		}
		else if(navigation_check_right_turn() == 2)
     32a:	cd d1       	rcall	.+922    	; 0x6c6 <navigation_check_right_turn>
     32c:	82 30       	cpi	r24, 0x02	; 2
     32e:	21 f4       	brne	.+8      	; 0x338 <autonomouswalk_walk+0x64>
		{
			turn_right();
     330:	6e df       	rcall	.-292    	; 0x20e <turn_right>
			decisionCounter = 0;
     332:	10 92 bc 13 	sts	0x13BC, r1
     336:	08 95       	ret
		}
		else if(navigation_check_left_turn() == 0 && navigation_check_right_turn() == 0)
     338:	db d1       	rcall	.+950    	; 0x6f0 <navigation_check_left_turn>
     33a:	81 11       	cpse	r24, r1
     33c:	07 c0       	rjmp	.+14     	; 0x34c <autonomouswalk_walk+0x78>
     33e:	c3 d1       	rcall	.+902    	; 0x6c6 <navigation_check_right_turn>
     340:	81 11       	cpse	r24, r1
     342:	04 c0       	rjmp	.+8      	; 0x34c <autonomouswalk_walk+0x78>
		{
			turn_around();
     344:	e8 de       	rcall	.-560    	; 0x116 <turn_around>
			decisionCounter = 0;
     346:	10 92 bc 13 	sts	0x13BC, r1
     34a:	08 95       	ret
		}
		else if(decisionCounter < 4)
     34c:	80 91 bc 13 	lds	r24, 0x13BC
     350:	84 30       	cpi	r24, 0x04	; 4
     352:	38 f4       	brcc	.+14     	; 0x362 <autonomouswalk_walk+0x8e>
		{
			walk_forward();
     354:	04 df       	rcall	.-504    	; 0x15e <walk_forward>
			++decisionCounter;
     356:	80 91 bc 13 	lds	r24, 0x13BC
     35a:	8f 5f       	subi	r24, 0xFF	; 255
     35c:	80 93 bc 13 	sts	0x13BC, r24
     360:	08 95       	ret
		}
		else
		{
			decisionCounter = 0;
     362:	10 92 bc 13 	sts	0x13BC, r1
			navigation_set_autonomous_walk(0);
     366:	80 e0       	ldi	r24, 0x00	; 0
     368:	fc d0       	rcall	.+504    	; 0x562 <navigation_set_autonomous_walk>
			TWI_send_string_fixed_length(C_ADDRESS, "ERROR: Can't make a decision, turning off autonomous mode", 57);
     36a:	49 e3       	ldi	r20, 0x39	; 57
     36c:	50 e0       	ldi	r21, 0x00	; 0
     36e:	60 eb       	ldi	r22, 0xB0	; 176
     370:	71 e1       	ldi	r23, 0x11	; 17
     372:	80 e8       	ldi	r24, 0x80	; 128
     374:	2f c7       	rjmp	.+3678   	; 0x11d4 <TWI_send_string_fixed_length>
		}
	}
	else
	{
		if(navigation_check_right_turn() == 2)
     376:	a7 d1       	rcall	.+846    	; 0x6c6 <navigation_check_right_turn>
     378:	82 30       	cpi	r24, 0x02	; 2
     37a:	31 f4       	brne	.+12     	; 0x388 <autonomouswalk_walk+0xb4>
		{
			for(int i = 0;i < TURN_ENTRY_ITTERATIONS_RIGHT; ++i)
			{
				walk_forward();
     37c:	f0 de       	rcall	.-544    	; 0x15e <walk_forward>
     37e:	ef de       	rcall	.-546    	; 0x15e <walk_forward>
			}
			turn_right();
     380:	46 df       	rcall	.-372    	; 0x20e <turn_right>
			decisionCounter = 0;
     382:	10 92 bc 13 	sts	0x13BC, r1
     386:	08 95       	ret
		}
		else if(navigation_get_sensor(4) > CORRIDOR_WIDTH / 2)
     388:	84 e0       	ldi	r24, 0x04	; 4
     38a:	90 e0       	ldi	r25, 0x00	; 0
     38c:	2f d1       	rcall	.+606    	; 0x5ec <navigation_get_sensor>
     38e:	89 32       	cpi	r24, 0x29	; 41
     390:	c0 f0       	brcs	.+48     	; 0x3c2 <autonomouswalk_walk+0xee>
		{
			if(navigation_get_sensor(6) < CORRIDOR_WIDTH / 2 - 5)
     392:	86 e0       	ldi	r24, 0x06	; 6
     394:	90 e0       	ldi	r25, 0x00	; 0
     396:	2a d1       	rcall	.+596    	; 0x5ec <navigation_get_sensor>
     398:	83 32       	cpi	r24, 0x23	; 35
     39a:	78 f4       	brcc	.+30     	; 0x3ba <autonomouswalk_walk+0xe6>
			{
				climb();
     39c:	98 df       	rcall	.-208    	; 0x2ce <climb>
				while(USART_climb_done() == 0)
     39e:	08 c0       	rjmp	.+16     	; 0x3b0 <autonomouswalk_walk+0xdc>
				{
					USART_decode_rx_fifo();
     3a0:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <USART_decode_rx_fifo>
     3a4:	8f e3       	ldi	r24, 0x3F	; 63
     3a6:	9c e9       	ldi	r25, 0x9C	; 156
     3a8:	01 97       	sbiw	r24, 0x01	; 1
     3aa:	f1 f7       	brne	.-4      	; 0x3a8 <autonomouswalk_walk+0xd4>
     3ac:	00 c0       	rjmp	.+0      	; 0x3ae <autonomouswalk_walk+0xda>
     3ae:	00 00       	nop
		else if(navigation_get_sensor(4) > CORRIDOR_WIDTH / 2)
		{
			if(navigation_get_sensor(6) < CORRIDOR_WIDTH / 2 - 5)
			{
				climb();
				while(USART_climb_done() == 0)
     3b0:	0e 94 92 0e 	call	0x1d24	; 0x1d24 <USART_climb_done>
     3b4:	88 23       	and	r24, r24
     3b6:	a1 f3       	breq	.-24     	; 0x3a0 <autonomouswalk_walk+0xcc>
     3b8:	01 c0       	rjmp	.+2      	; 0x3bc <autonomouswalk_walk+0xe8>
					_delay_ms(10);
				}
			}
			else
			{
				walk_forward();
     3ba:	d1 de       	rcall	.-606    	; 0x15e <walk_forward>
			}
			decisionCounter = 0;
     3bc:	10 92 bc 13 	sts	0x13BC, r1
     3c0:	08 95       	ret
		}
		else if(navigation_check_left_turn() == 2)
     3c2:	96 d1       	rcall	.+812    	; 0x6f0 <navigation_check_left_turn>
     3c4:	82 30       	cpi	r24, 0x02	; 2
     3c6:	21 f4       	brne	.+8      	; 0x3d0 <autonomouswalk_walk+0xfc>
		{
			turn_left();
     3c8:	52 df       	rcall	.-348    	; 0x26e <turn_left>
			decisionCounter = 0;
     3ca:	10 92 bc 13 	sts	0x13BC, r1
     3ce:	08 95       	ret
		}
		else if(navigation_check_left_turn() == 0 && navigation_check_right_turn() == 0)
     3d0:	8f d1       	rcall	.+798    	; 0x6f0 <navigation_check_left_turn>
     3d2:	81 11       	cpse	r24, r1
     3d4:	07 c0       	rjmp	.+14     	; 0x3e4 <autonomouswalk_walk+0x110>
     3d6:	77 d1       	rcall	.+750    	; 0x6c6 <navigation_check_right_turn>
     3d8:	81 11       	cpse	r24, r1
     3da:	04 c0       	rjmp	.+8      	; 0x3e4 <autonomouswalk_walk+0x110>
		{
			turn_around();
     3dc:	9c de       	rcall	.-712    	; 0x116 <turn_around>
			decisionCounter = 0;
     3de:	10 92 bc 13 	sts	0x13BC, r1
     3e2:	08 95       	ret
		}
		else if(decisionCounter < 4)
     3e4:	80 91 bc 13 	lds	r24, 0x13BC
     3e8:	84 30       	cpi	r24, 0x04	; 4
     3ea:	38 f4       	brcc	.+14     	; 0x3fa <autonomouswalk_walk+0x126>
		{
			walk_forward();
     3ec:	b8 de       	rcall	.-656    	; 0x15e <walk_forward>
			++decisionCounter;
     3ee:	80 91 bc 13 	lds	r24, 0x13BC
     3f2:	8f 5f       	subi	r24, 0xFF	; 255
     3f4:	80 93 bc 13 	sts	0x13BC, r24
     3f8:	08 95       	ret
		}
		else
		{
			decisionCounter = 0;
     3fa:	10 92 bc 13 	sts	0x13BC, r1
			navigation_set_autonomous_walk(0);
     3fe:	80 e0       	ldi	r24, 0x00	; 0
     400:	b0 d0       	rcall	.+352    	; 0x562 <navigation_set_autonomous_walk>
			TWI_send_string_fixed_length(C_ADDRESS, "ERROR: Can't make a decision, turning off autonomous mode", 57);
     402:	49 e3       	ldi	r20, 0x39	; 57
     404:	50 e0       	ldi	r21, 0x00	; 0
     406:	60 eb       	ldi	r22, 0xB0	; 176
     408:	71 e1       	ldi	r23, 0x11	; 17
     40a:	80 e8       	ldi	r24, 0x80	; 128
     40c:	e3 c6       	rjmp	.+3526   	; 0x11d4 <TWI_send_string_fixed_length>

0000040e <set_counter_1>:
	TCNT3 = 0;
}

void set_counter_1(uint16_t delay)
{
	delay = 15.625 * delay;
     40e:	bc 01       	movw	r22, r24
     410:	80 e0       	ldi	r24, 0x00	; 0
     412:	90 e0       	ldi	r25, 0x00	; 0
     414:	0e 94 98 10 	call	0x2130	; 0x2130 <__floatunsisf>
     418:	20 e0       	ldi	r18, 0x00	; 0
     41a:	30 e0       	ldi	r19, 0x00	; 0
     41c:	4a e7       	ldi	r20, 0x7A	; 122
     41e:	51 e4       	ldi	r21, 0x41	; 65
     420:	0e 94 b3 11 	call	0x2366	; 0x2366 <__mulsf3>
     424:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <__fixunssfsi>
	OCR1A = delay;
     428:	70 93 89 00 	sts	0x0089, r23
     42c:	60 93 88 00 	sts	0x0088, r22
     430:	08 95       	ret

00000432 <set_counter_2>:
}

void set_counter_2(uint16_t delay)
{
	delay = 15.625 * delay;
     432:	bc 01       	movw	r22, r24
     434:	80 e0       	ldi	r24, 0x00	; 0
     436:	90 e0       	ldi	r25, 0x00	; 0
     438:	0e 94 98 10 	call	0x2130	; 0x2130 <__floatunsisf>
     43c:	20 e0       	ldi	r18, 0x00	; 0
     43e:	30 e0       	ldi	r19, 0x00	; 0
     440:	4a e7       	ldi	r20, 0x7A	; 122
     442:	51 e4       	ldi	r21, 0x41	; 65
     444:	0e 94 b3 11 	call	0x2366	; 0x2366 <__mulsf3>
     448:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <__fixunssfsi>
	OCR3A = delay;
     44c:	70 93 99 00 	sts	0x0099, r23
     450:	60 93 98 00 	sts	0x0098, r22
     454:	08 95       	ret

00000456 <init_counters>:

//---------------------------------------COUNTERS/TIMERS-----------
void init_counters()
{
	// WGMn3:0 = 4 (OCRnA) or 12 (OCRn), where top value is read from.
	TCCR1B |= 0b00000101; // clock 1, prescaler 1024
     456:	e1 e8       	ldi	r30, 0x81	; 129
     458:	f0 e0       	ldi	r31, 0x00	; 0
     45a:	80 81       	ld	r24, Z
     45c:	85 60       	ori	r24, 0x05	; 5
     45e:	80 83       	st	Z, r24
	TCCR3B |= 0b00000101; // clock 2, prescaler 1024
     460:	e1 e9       	ldi	r30, 0x91	; 145
     462:	f0 e0       	ldi	r31, 0x00	; 0
     464:	80 81       	ld	r24, Z
     466:	85 60       	ori	r24, 0x05	; 5
     468:	80 83       	st	Z, r24
	
	// standardvalue for interrupt is 1000ms
	set_counter_1(1000);
     46a:	88 ee       	ldi	r24, 0xE8	; 232
     46c:	93 e0       	ldi	r25, 0x03	; 3
     46e:	cf df       	rcall	.-98     	; 0x40e <set_counter_1>
	set_counter_2(1000);
     470:	88 ee       	ldi	r24, 0xE8	; 232
     472:	93 e0       	ldi	r25, 0x03	; 3
     474:	de df       	rcall	.-68     	; 0x432 <set_counter_2>
	
	TIMSK1 |= 0b00000010; // Enable interrupts when OCF1A, in TIFR1, is set.
     476:	ef e6       	ldi	r30, 0x6F	; 111
     478:	f0 e0       	ldi	r31, 0x00	; 0
     47a:	80 81       	ld	r24, Z
     47c:	82 60       	ori	r24, 0x02	; 2
     47e:	80 83       	st	Z, r24
	TIMSK3 |= 0b00000010; // Enable interrupts when OCF2A, in TIFR2, is set.
     480:	e1 e7       	ldi	r30, 0x71	; 113
     482:	f0 e0       	ldi	r31, 0x00	; 0
     484:	80 81       	ld	r24, Z
     486:	82 60       	ori	r24, 0x02	; 2
     488:	80 83       	st	Z, r24
	// OCF1A (or ICFn) Flag, in TIFR1, can be used to generate interrupts.
	TCNT1 = 0;
     48a:	10 92 85 00 	sts	0x0085, r1
     48e:	10 92 84 00 	sts	0x0084, r1
	TCNT3 = 0;
     492:	10 92 95 00 	sts	0x0095, r1
     496:	10 92 94 00 	sts	0x0094, r1
     49a:	08 95       	ret

0000049c <FifoDataLength>:
     49c:	fc 01       	movw	r30, r24
     49e:	90 81       	ld	r25, Z
     4a0:	91 50       	subi	r25, 0x01	; 1
     4a2:	84 81       	ldd	r24, Z+4	; 0x04
     4a4:	22 81       	ldd	r18, Z+2	; 0x02
     4a6:	82 1b       	sub	r24, r18
     4a8:	89 23       	and	r24, r25
     4aa:	08 95       	ret

000004ac <FifoWrite>:
     4ac:	1f 93       	push	r17
     4ae:	cf 93       	push	r28
     4b0:	df 93       	push	r29
     4b2:	ec 01       	movw	r28, r24
     4b4:	16 2f       	mov	r17, r22
     4b6:	f2 df       	rcall	.-28     	; 0x49c <FifoDataLength>
     4b8:	28 81       	ld	r18, Y
     4ba:	39 81       	ldd	r19, Y+1	; 0x01
     4bc:	21 50       	subi	r18, 0x01	; 1
     4be:	31 09       	sbc	r19, r1
     4c0:	90 e0       	ldi	r25, 0x00	; 0
     4c2:	82 17       	cp	r24, r18
     4c4:	93 07       	cpc	r25, r19
     4c6:	69 f0       	breq	.+26     	; 0x4e2 <FifoWrite+0x36>
     4c8:	8c 81       	ldd	r24, Y+4	; 0x04
     4ca:	9d 81       	ldd	r25, Y+5	; 0x05
     4cc:	fe 01       	movw	r30, r28
     4ce:	e8 0f       	add	r30, r24
     4d0:	f9 1f       	adc	r31, r25
     4d2:	16 83       	std	Z+6, r17	; 0x06
     4d4:	01 96       	adiw	r24, 0x01	; 1
     4d6:	28 23       	and	r18, r24
     4d8:	39 23       	and	r19, r25
     4da:	3d 83       	std	Y+5, r19	; 0x05
     4dc:	2c 83       	std	Y+4, r18	; 0x04
     4de:	80 e0       	ldi	r24, 0x00	; 0
     4e0:	01 c0       	rjmp	.+2      	; 0x4e4 <FifoWrite+0x38>
     4e2:	81 e0       	ldi	r24, 0x01	; 1
     4e4:	df 91       	pop	r29
     4e6:	cf 91       	pop	r28
     4e8:	1f 91       	pop	r17
     4ea:	08 95       	ret

000004ec <FifoRead>:
     4ec:	0f 93       	push	r16
     4ee:	1f 93       	push	r17
     4f0:	cf 93       	push	r28
     4f2:	df 93       	push	r29
     4f4:	ec 01       	movw	r28, r24
     4f6:	8b 01       	movw	r16, r22
     4f8:	d1 df       	rcall	.-94     	; 0x49c <FifoDataLength>
     4fa:	88 23       	and	r24, r24
     4fc:	a1 f0       	breq	.+40     	; 0x526 <FifoRead+0x3a>
     4fe:	ea 81       	ldd	r30, Y+2	; 0x02
     500:	fb 81       	ldd	r31, Y+3	; 0x03
     502:	ec 0f       	add	r30, r28
     504:	fd 1f       	adc	r31, r29
     506:	86 81       	ldd	r24, Z+6	; 0x06
     508:	f8 01       	movw	r30, r16
     50a:	80 83       	st	Z, r24
     50c:	28 81       	ld	r18, Y
     50e:	39 81       	ldd	r19, Y+1	; 0x01
     510:	21 50       	subi	r18, 0x01	; 1
     512:	31 09       	sbc	r19, r1
     514:	8a 81       	ldd	r24, Y+2	; 0x02
     516:	9b 81       	ldd	r25, Y+3	; 0x03
     518:	01 96       	adiw	r24, 0x01	; 1
     51a:	82 23       	and	r24, r18
     51c:	93 23       	and	r25, r19
     51e:	9b 83       	std	Y+3, r25	; 0x03
     520:	8a 83       	std	Y+2, r24	; 0x02
     522:	80 e0       	ldi	r24, 0x00	; 0
     524:	01 c0       	rjmp	.+2      	; 0x528 <FifoRead+0x3c>
     526:	81 e0       	ldi	r24, 0x01	; 1
     528:	df 91       	pop	r29
     52a:	cf 91       	pop	r28
     52c:	1f 91       	pop	r17
     52e:	0f 91       	pop	r16
     530:	08 95       	ret

00000532 <navigation_set_Kp>:
	}
	else
	{
		return 0;
	}
}
     532:	68 2f       	mov	r22, r24
     534:	70 e0       	ldi	r23, 0x00	; 0
     536:	80 e0       	ldi	r24, 0x00	; 0
     538:	90 e0       	ldi	r25, 0x00	; 0
     53a:	0e 94 98 10 	call	0x2130	; 0x2130 <__floatunsisf>
     53e:	60 93 03 01 	sts	0x0103, r22
     542:	70 93 04 01 	sts	0x0104, r23
     546:	80 93 05 01 	sts	0x0105, r24
     54a:	90 93 06 01 	sts	0x0106, r25
     54e:	08 95       	ret

00000550 <navigation_left_algorithm>:
     550:	80 91 07 01 	lds	r24, 0x0107
     554:	08 95       	ret

00000556 <navigation_set_algorithm>:
     556:	80 93 07 01 	sts	0x0107, r24
     55a:	08 95       	ret

0000055c <navigation_autonomous_walk>:
     55c:	80 91 02 01 	lds	r24, 0x0102
     560:	08 95       	ret

00000562 <navigation_set_autonomous_walk>:
     562:	80 93 02 01 	sts	0x0102, r24
     566:	08 95       	ret

00000568 <navigation_stepping_delay>:
     568:	cf 93       	push	r28
     56a:	c2 e0       	ldi	r28, 0x02	; 2
     56c:	0e c0       	rjmp	.+28     	; 0x58a <navigation_stepping_delay+0x22>
     56e:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <USART_decode_rx_fifo>
     572:	2f ef       	ldi	r18, 0xFF	; 255
     574:	89 ef       	ldi	r24, 0xF9	; 249
     576:	90 e0       	ldi	r25, 0x00	; 0
     578:	21 50       	subi	r18, 0x01	; 1
     57a:	80 40       	sbci	r24, 0x00	; 0
     57c:	90 40       	sbci	r25, 0x00	; 0
     57e:	e1 f7       	brne	.-8      	; 0x578 <navigation_stepping_delay+0x10>
     580:	00 c0       	rjmp	.+0      	; 0x582 <navigation_stepping_delay+0x1a>
     582:	00 00       	nop
     584:	82 b1       	in	r24, 0x02	; 2
     586:	8c 27       	eor	r24, r28
     588:	82 b9       	out	0x02, r24	; 2
     58a:	0e 94 7e 0e 	call	0x1cfc	; 0x1cfc <USART_ready>
     58e:	88 23       	and	r24, r24
     590:	71 f3       	breq	.-36     	; 0x56e <navigation_stepping_delay+0x6>
     592:	cf 91       	pop	r28
     594:	08 95       	ret

00000596 <navigation_fill_buffer>:
     596:	0f 93       	push	r16
     598:	1f 93       	push	r17
     59a:	cf 93       	push	r28
     59c:	df 93       	push	r29
     59e:	c0 e0       	ldi	r28, 0x00	; 0
     5a0:	d0 e0       	ldi	r29, 0x00	; 0
     5a2:	00 91 be 13 	lds	r16, 0x13BE
     5a6:	10 e0       	ldi	r17, 0x00	; 0
     5a8:	ce 01       	movw	r24, r28
     5aa:	9f d6       	rcall	.+3390   	; 0x12ea <TWI_get_sensor>
     5ac:	fe 01       	movw	r30, r28
     5ae:	ee 0f       	add	r30, r30
     5b0:	ff 1f       	adc	r31, r31
     5b2:	ee 0f       	add	r30, r30
     5b4:	ff 1f       	adc	r31, r31
     5b6:	ec 0f       	add	r30, r28
     5b8:	fd 1f       	adc	r31, r29
     5ba:	0e 0f       	add	r16, r30
     5bc:	1f 1f       	adc	r17, r31
     5be:	f8 01       	movw	r30, r16
     5c0:	ef 51       	subi	r30, 0x1F	; 31
     5c2:	fc 4e       	sbci	r31, 0xEC	; 236
     5c4:	80 83       	st	Z, r24
     5c6:	21 96       	adiw	r28, 0x01	; 1
     5c8:	c8 30       	cpi	r28, 0x08	; 8
     5ca:	d1 05       	cpc	r29, r1
     5cc:	51 f7       	brne	.-44     	; 0x5a2 <navigation_fill_buffer+0xc>
     5ce:	80 91 be 13 	lds	r24, 0x13BE
     5d2:	84 30       	cpi	r24, 0x04	; 4
     5d4:	19 f4       	brne	.+6      	; 0x5dc <navigation_fill_buffer+0x46>
     5d6:	10 92 be 13 	sts	0x13BE, r1
     5da:	03 c0       	rjmp	.+6      	; 0x5e2 <navigation_fill_buffer+0x4c>
     5dc:	8f 5f       	subi	r24, 0xFF	; 255
     5de:	80 93 be 13 	sts	0x13BE, r24
     5e2:	df 91       	pop	r29
     5e4:	cf 91       	pop	r28
     5e6:	1f 91       	pop	r17
     5e8:	0f 91       	pop	r16
     5ea:	08 95       	ret

000005ec <navigation_get_sensor>:
     5ec:	cf 93       	push	r28
     5ee:	df 93       	push	r29
     5f0:	00 d0       	rcall	.+0      	; 0x5f2 <navigation_get_sensor+0x6>
     5f2:	00 d0       	rcall	.+0      	; 0x5f4 <navigation_get_sensor+0x8>
     5f4:	1f 92       	push	r1
     5f6:	cd b7       	in	r28, 0x3d	; 61
     5f8:	de b7       	in	r29, 0x3e	; 62
     5fa:	fc 01       	movw	r30, r24
     5fc:	ee 0f       	add	r30, r30
     5fe:	ff 1f       	adc	r31, r31
     600:	ee 0f       	add	r30, r30
     602:	ff 1f       	adc	r31, r31
     604:	8e 0f       	add	r24, r30
     606:	9f 1f       	adc	r25, r31
     608:	fc 01       	movw	r30, r24
     60a:	ef 51       	subi	r30, 0x1F	; 31
     60c:	fc 4e       	sbci	r31, 0xEC	; 236
     60e:	80 81       	ld	r24, Z
     610:	89 83       	std	Y+1, r24	; 0x01
     612:	81 81       	ldd	r24, Z+1	; 0x01
     614:	8a 83       	std	Y+2, r24	; 0x02
     616:	82 81       	ldd	r24, Z+2	; 0x02
     618:	8b 83       	std	Y+3, r24	; 0x03
     61a:	83 81       	ldd	r24, Z+3	; 0x03
     61c:	8c 83       	std	Y+4, r24	; 0x04
     61e:	84 81       	ldd	r24, Z+4	; 0x04
     620:	8d 83       	std	Y+5, r24	; 0x05
     622:	24 e0       	ldi	r18, 0x04	; 4
     624:	30 e0       	ldi	r19, 0x00	; 0
     626:	0e c0       	rjmp	.+28     	; 0x644 <navigation_get_sensor+0x58>
     628:	41 91       	ld	r20, Z+
     62a:	50 81       	ld	r21, Z
     62c:	54 17       	cp	r21, r20
     62e:	20 f4       	brcc	.+8      	; 0x638 <navigation_get_sensor+0x4c>
     630:	df 01       	movw	r26, r30
     632:	11 97       	sbiw	r26, 0x01	; 1
     634:	5c 93       	st	X, r21
     636:	40 83       	st	Z, r20
     638:	8e 17       	cp	r24, r30
     63a:	9f 07       	cpc	r25, r31
     63c:	a9 f7       	brne	.-22     	; 0x628 <navigation_get_sensor+0x3c>
     63e:	21 50       	subi	r18, 0x01	; 1
     640:	31 09       	sbc	r19, r1
     642:	49 f0       	breq	.+18     	; 0x656 <navigation_get_sensor+0x6a>
     644:	12 16       	cp	r1, r18
     646:	13 06       	cpc	r1, r19
     648:	d4 f7       	brge	.-12     	; 0x63e <navigation_get_sensor+0x52>
     64a:	fe 01       	movw	r30, r28
     64c:	31 96       	adiw	r30, 0x01	; 1
     64e:	cf 01       	movw	r24, r30
     650:	82 0f       	add	r24, r18
     652:	93 1f       	adc	r25, r19
     654:	e9 cf       	rjmp	.-46     	; 0x628 <navigation_get_sensor+0x3c>
     656:	8b 81       	ldd	r24, Y+3	; 0x03
     658:	0f 90       	pop	r0
     65a:	0f 90       	pop	r0
     65c:	0f 90       	pop	r0
     65e:	0f 90       	pop	r0
     660:	0f 90       	pop	r0
     662:	df 91       	pop	r29
     664:	cf 91       	pop	r28
     666:	08 95       	ret

00000668 <navigation_detect_low_pass_obsticle>:
	}
}

uint8_t navigation_detect_low_pass_obsticle()
{
	if (navigation_get_sensor(7) < HEIGHT_LIMIT)
     668:	87 e0       	ldi	r24, 0x07	; 7
     66a:	90 e0       	ldi	r25, 0x00	; 0
     66c:	bf df       	rcall	.-130    	; 0x5ec <navigation_get_sensor>
     66e:	91 e0       	ldi	r25, 0x01	; 1
     670:	88 32       	cpi	r24, 0x28	; 40
     672:	08 f0       	brcs	.+2      	; 0x676 <navigation_detect_low_pass_obsticle+0xe>
     674:	90 e0       	ldi	r25, 0x00	; 0
	}
	else
	{
		return 0;
	}
}
     676:	89 2f       	mov	r24, r25
     678:	08 95       	ret

0000067a <navigation_low_pass_obstacle>:
	}
}

void navigation_low_pass_obstacle()
{
	if(navigation_detect_low_pass_obsticle() && !(lowPassObstacleFlag))
     67a:	f6 df       	rcall	.-20     	; 0x668 <navigation_detect_low_pass_obsticle>
     67c:	88 23       	and	r24, r24
     67e:	e9 f0       	breq	.+58     	; 0x6ba <navigation_low_pass_obstacle+0x40>
     680:	80 91 bd 13 	lds	r24, 0x13BD
     684:	81 11       	cpse	r24, r1
     686:	19 c0       	rjmp	.+50     	; 0x6ba <navigation_low_pass_obstacle+0x40>
	{
		TWI_send_string_fixed_length(S_ADDRESS,"Low pass obstacle detected.", 27);
     688:	4b e1       	ldi	r20, 0x1B	; 27
     68a:	50 e0       	ldi	r21, 0x00	; 0
     68c:	6a ee       	ldi	r22, 0xEA	; 234
     68e:	71 e1       	ldi	r23, 0x11	; 17
     690:	80 e4       	ldi	r24, 0x40	; 64
     692:	a0 d5       	rcall	.+2880   	; 0x11d4 <TWI_send_string_fixed_length>
     694:	2f ef       	ldi	r18, 0xFF	; 255
     696:	86 e7       	ldi	r24, 0x76	; 118
     698:	91 e0       	ldi	r25, 0x01	; 1
     69a:	21 50       	subi	r18, 0x01	; 1
     69c:	80 40       	sbci	r24, 0x00	; 0
     69e:	90 40       	sbci	r25, 0x00	; 0
     6a0:	e1 f7       	brne	.-8      	; 0x69a <navigation_low_pass_obstacle+0x20>
     6a2:	00 c0       	rjmp	.+0      	; 0x6a4 <navigation_low_pass_obstacle+0x2a>
     6a4:	00 00       	nop
		_delay_ms(30);
		TWI_send_string_fixed_length(C_ADDRESS,"Low pass obstacle detected.", 27);
     6a6:	4b e1       	ldi	r20, 0x1B	; 27
     6a8:	50 e0       	ldi	r21, 0x00	; 0
     6aa:	6a ee       	ldi	r22, 0xEA	; 234
     6ac:	71 e1       	ldi	r23, 0x11	; 17
     6ae:	80 e8       	ldi	r24, 0x80	; 128
     6b0:	91 d5       	rcall	.+2850   	; 0x11d4 <TWI_send_string_fixed_length>
		lowPassObstacleFlag = 1;
     6b2:	81 e0       	ldi	r24, 0x01	; 1
     6b4:	80 93 bd 13 	sts	0x13BD, r24
     6b8:	08 95       	ret
	}
	else if(!(navigation_detect_low_pass_obsticle()))
     6ba:	d6 df       	rcall	.-84     	; 0x668 <navigation_detect_low_pass_obsticle>
     6bc:	81 11       	cpse	r24, r1
     6be:	02 c0       	rjmp	.+4      	; 0x6c4 <navigation_low_pass_obstacle+0x4a>
	{
		lowPassObstacleFlag = 0;
     6c0:	10 92 bd 13 	sts	0x13BD, r1
     6c4:	08 95       	ret

000006c6 <navigation_check_right_turn>:
	}
}

uint8_t navigation_check_right_turn()
{
	if(navigation_get_sensor(1) >= (CORRIDOR_WIDTH / 2 + 20) && navigation_get_sensor(3) >= (CORRIDOR_WIDTH / 2 + 20))
     6c6:	81 e0       	ldi	r24, 0x01	; 1
     6c8:	90 e0       	ldi	r25, 0x00	; 0
     6ca:	90 df       	rcall	.-224    	; 0x5ec <navigation_get_sensor>
     6cc:	8c 33       	cpi	r24, 0x3C	; 60
     6ce:	28 f0       	brcs	.+10     	; 0x6da <navigation_check_right_turn+0x14>
     6d0:	83 e0       	ldi	r24, 0x03	; 3
     6d2:	90 e0       	ldi	r25, 0x00	; 0
     6d4:	8b df       	rcall	.-234    	; 0x5ec <navigation_get_sensor>
     6d6:	8c 33       	cpi	r24, 0x3C	; 60
     6d8:	40 f4       	brcc	.+16     	; 0x6ea <navigation_check_right_turn+0x24>
	{
		return 2;
	}
	else if(navigation_get_sensor(1) >= (CORRIDOR_WIDTH - 10))
     6da:	81 e0       	ldi	r24, 0x01	; 1
     6dc:	90 e0       	ldi	r25, 0x00	; 0
     6de:	86 df       	rcall	.-244    	; 0x5ec <navigation_get_sensor>
     6e0:	91 e0       	ldi	r25, 0x01	; 1
     6e2:	86 34       	cpi	r24, 0x46	; 70
     6e4:	18 f4       	brcc	.+6      	; 0x6ec <navigation_check_right_turn+0x26>
     6e6:	90 e0       	ldi	r25, 0x00	; 0
     6e8:	01 c0       	rjmp	.+2      	; 0x6ec <navigation_check_right_turn+0x26>

uint8_t navigation_check_right_turn()
{
	if(navigation_get_sensor(1) >= (CORRIDOR_WIDTH / 2 + 20) && navigation_get_sensor(3) >= (CORRIDOR_WIDTH / 2 + 20))
	{
		return 2;
     6ea:	92 e0       	ldi	r25, 0x02	; 2
	}
	else
	{
		return 0;
	}
}
     6ec:	89 2f       	mov	r24, r25
     6ee:	08 95       	ret

000006f0 <navigation_check_left_turn>:
	}
}

uint8_t navigation_check_left_turn()
{
	if(navigation_get_sensor(0) >= (CORRIDOR_WIDTH / 2 + 20) && navigation_get_sensor(2) >= (CORRIDOR_WIDTH / 2 + 20))
     6f0:	80 e0       	ldi	r24, 0x00	; 0
     6f2:	90 e0       	ldi	r25, 0x00	; 0
     6f4:	7b df       	rcall	.-266    	; 0x5ec <navigation_get_sensor>
     6f6:	8c 33       	cpi	r24, 0x3C	; 60
     6f8:	28 f0       	brcs	.+10     	; 0x704 <navigation_check_left_turn+0x14>
     6fa:	82 e0       	ldi	r24, 0x02	; 2
     6fc:	90 e0       	ldi	r25, 0x00	; 0
     6fe:	76 df       	rcall	.-276    	; 0x5ec <navigation_get_sensor>
     700:	8c 33       	cpi	r24, 0x3C	; 60
     702:	40 f4       	brcc	.+16     	; 0x714 <navigation_check_left_turn+0x24>
	{
		return 2;
	}
	else if(navigation_get_sensor(0) >= (CORRIDOR_WIDTH - 10))
     704:	80 e0       	ldi	r24, 0x00	; 0
     706:	90 e0       	ldi	r25, 0x00	; 0
     708:	71 df       	rcall	.-286    	; 0x5ec <navigation_get_sensor>
     70a:	91 e0       	ldi	r25, 0x01	; 1
     70c:	86 34       	cpi	r24, 0x46	; 70
     70e:	18 f4       	brcc	.+6      	; 0x716 <navigation_check_left_turn+0x26>
     710:	90 e0       	ldi	r25, 0x00	; 0
     712:	01 c0       	rjmp	.+2      	; 0x716 <navigation_check_left_turn+0x26>

uint8_t navigation_check_left_turn()
{
	if(navigation_get_sensor(0) >= (CORRIDOR_WIDTH / 2 + 20) && navigation_get_sensor(2) >= (CORRIDOR_WIDTH / 2 + 20))
	{
		return 2;
     714:	92 e0       	ldi	r25, 0x02	; 2
	}
	else
	{
		return 0;
	}
}
     716:	89 2f       	mov	r24, r25
     718:	08 95       	ret

0000071a <navigation_direction_regulation>:
		return 0;
	}
}

float navigation_direction_regulation(float angleOffset)
{
     71a:	cf 92       	push	r12
     71c:	df 92       	push	r13
     71e:	ef 92       	push	r14
     720:	ff 92       	push	r15
     722:	cf 93       	push	r28
     724:	df 93       	push	r29
     726:	6b 01       	movw	r12, r22
     728:	7c 01       	movw	r14, r24
	int d = 0;
	if(gAlgorithm)
     72a:	80 91 07 01 	lds	r24, 0x0107
     72e:	88 23       	and	r24, r24
     730:	09 f4       	brne	.+2      	; 0x734 <navigation_direction_regulation+0x1a>
     732:	a5 c0       	rjmp	.+330    	; 0x87e <navigation_direction_regulation+0x164>
	{
		if(abs(navigation_get_sensor(2) - navigation_get_sensor(0)) < 10 && navigation_get_sensor(0) < (CORRIDOR_WIDTH / 2 + 10))
     734:	82 e0       	ldi	r24, 0x02	; 2
     736:	90 e0       	ldi	r25, 0x00	; 0
     738:	59 df       	rcall	.-334    	; 0x5ec <navigation_get_sensor>
     73a:	c8 2f       	mov	r28, r24
     73c:	80 e0       	ldi	r24, 0x00	; 0
     73e:	90 e0       	ldi	r25, 0x00	; 0
     740:	55 df       	rcall	.-342    	; 0x5ec <navigation_get_sensor>
     742:	2c 2f       	mov	r18, r28
     744:	30 e0       	ldi	r19, 0x00	; 0
     746:	a9 01       	movw	r20, r18
     748:	48 1b       	sub	r20, r24
     74a:	51 09       	sbc	r21, r1
     74c:	ca 01       	movw	r24, r20
     74e:	99 23       	and	r25, r25
     750:	1c f4       	brge	.+6      	; 0x758 <navigation_direction_regulation+0x3e>
     752:	91 95       	neg	r25
     754:	81 95       	neg	r24
     756:	91 09       	sbc	r25, r1
     758:	0a 97       	sbiw	r24, 0x0a	; 10
     75a:	0c f0       	brlt	.+2      	; 0x75e <navigation_direction_regulation+0x44>
     75c:	3c c0       	rjmp	.+120    	; 0x7d6 <navigation_direction_regulation+0xbc>
     75e:	80 e0       	ldi	r24, 0x00	; 0
     760:	90 e0       	ldi	r25, 0x00	; 0
     762:	44 df       	rcall	.-376    	; 0x5ec <navigation_get_sensor>
     764:	82 33       	cpi	r24, 0x32	; 50
     766:	b8 f5       	brcc	.+110    	; 0x7d6 <navigation_direction_regulation+0xbc>
		{
			d = ((navigation_get_sensor(2) + navigation_get_sensor(0)) / 2.0 + DISTANCE_MIDDLE_TO_SIDE - LEFT_SIDE_OFFSET) * cosf(angleOffset) - CORRIDOR_WIDTH / 2;
     768:	82 e0       	ldi	r24, 0x02	; 2
     76a:	90 e0       	ldi	r25, 0x00	; 0
     76c:	3f df       	rcall	.-386    	; 0x5ec <navigation_get_sensor>
     76e:	c8 2f       	mov	r28, r24
     770:	80 e0       	ldi	r24, 0x00	; 0
     772:	90 e0       	ldi	r25, 0x00	; 0
     774:	3b df       	rcall	.-394    	; 0x5ec <navigation_get_sensor>
     776:	d8 2f       	mov	r29, r24
     778:	c7 01       	movw	r24, r14
     77a:	b6 01       	movw	r22, r12
     77c:	0e 94 fc 0f 	call	0x1ff8	; 0x1ff8 <cos>
     780:	6b 01       	movw	r12, r22
     782:	7c 01       	movw	r14, r24
     784:	6d 2f       	mov	r22, r29
     786:	70 e0       	ldi	r23, 0x00	; 0
     788:	6c 0f       	add	r22, r28
     78a:	71 1d       	adc	r23, r1
     78c:	88 27       	eor	r24, r24
     78e:	77 fd       	sbrc	r23, 7
     790:	80 95       	com	r24
     792:	98 2f       	mov	r25, r24
     794:	0e 94 9a 10 	call	0x2134	; 0x2134 <__floatsisf>
     798:	20 e0       	ldi	r18, 0x00	; 0
     79a:	30 e0       	ldi	r19, 0x00	; 0
     79c:	40 e0       	ldi	r20, 0x00	; 0
     79e:	5f e3       	ldi	r21, 0x3F	; 63
     7a0:	0e 94 b3 11 	call	0x2366	; 0x2366 <__mulsf3>
     7a4:	26 e6       	ldi	r18, 0x66	; 102
     7a6:	36 e6       	ldi	r19, 0x66	; 102
     7a8:	46 ed       	ldi	r20, 0xD6	; 214
     7aa:	50 e4       	ldi	r21, 0x40	; 64
     7ac:	0e 94 6c 0f 	call	0x1ed8	; 0x1ed8 <__addsf3>
     7b0:	20 e0       	ldi	r18, 0x00	; 0
     7b2:	30 e0       	ldi	r19, 0x00	; 0
     7b4:	40 ea       	ldi	r20, 0xA0	; 160
     7b6:	50 e4       	ldi	r21, 0x40	; 64
     7b8:	0e 94 6b 0f 	call	0x1ed6	; 0x1ed6 <__subsf3>
     7bc:	a7 01       	movw	r20, r14
     7be:	96 01       	movw	r18, r12
     7c0:	0e 94 b3 11 	call	0x2366	; 0x2366 <__mulsf3>
     7c4:	20 e0       	ldi	r18, 0x00	; 0
     7c6:	30 e0       	ldi	r19, 0x00	; 0
     7c8:	40 e2       	ldi	r20, 0x20	; 32
     7ca:	52 e4       	ldi	r21, 0x42	; 66
     7cc:	0e 94 6b 0f 	call	0x1ed6	; 0x1ed6 <__subsf3>
     7d0:	0e 94 67 10 	call	0x20ce	; 0x20ce <__fixsfsi>
     7d4:	f8 c0       	rjmp	.+496    	; 0x9c6 <navigation_direction_regulation+0x2ac>
		}
		else if(abs(navigation_get_sensor(1) - navigation_get_sensor(3)) < 10 && navigation_get_sensor(1) < (CORRIDOR_WIDTH / 2 + 10))
     7d6:	81 e0       	ldi	r24, 0x01	; 1
     7d8:	90 e0       	ldi	r25, 0x00	; 0
     7da:	08 df       	rcall	.-496    	; 0x5ec <navigation_get_sensor>
     7dc:	c8 2f       	mov	r28, r24
     7de:	83 e0       	ldi	r24, 0x03	; 3
     7e0:	90 e0       	ldi	r25, 0x00	; 0
     7e2:	04 df       	rcall	.-504    	; 0x5ec <navigation_get_sensor>
     7e4:	2c 2f       	mov	r18, r28
     7e6:	30 e0       	ldi	r19, 0x00	; 0
     7e8:	a9 01       	movw	r20, r18
     7ea:	48 1b       	sub	r20, r24
     7ec:	51 09       	sbc	r21, r1
     7ee:	ca 01       	movw	r24, r20
     7f0:	99 23       	and	r25, r25
     7f2:	1c f4       	brge	.+6      	; 0x7fa <navigation_direction_regulation+0xe0>
     7f4:	91 95       	neg	r25
     7f6:	81 95       	neg	r24
     7f8:	91 09       	sbc	r25, r1
     7fa:	0a 97       	sbiw	r24, 0x0a	; 10
     7fc:	0c f0       	brlt	.+2      	; 0x800 <navigation_direction_regulation+0xe6>
     7fe:	34 c1       	rjmp	.+616    	; 0xa68 <navigation_direction_regulation+0x34e>
     800:	81 e0       	ldi	r24, 0x01	; 1
     802:	90 e0       	ldi	r25, 0x00	; 0
     804:	f3 de       	rcall	.-538    	; 0x5ec <navigation_get_sensor>
     806:	82 33       	cpi	r24, 0x32	; 50
     808:	08 f0       	brcs	.+2      	; 0x80c <navigation_direction_regulation+0xf2>
     80a:	2e c1       	rjmp	.+604    	; 0xa68 <navigation_direction_regulation+0x34e>
		{
			d = CORRIDOR_WIDTH / 2 - ((navigation_get_sensor(1) + navigation_get_sensor(3)) / 2.0 + DISTANCE_MIDDLE_TO_SIDE - RIGHT_SIDE_OFFSET) * cosf(angleOffset);
     80c:	81 e0       	ldi	r24, 0x01	; 1
     80e:	90 e0       	ldi	r25, 0x00	; 0
     810:	ed de       	rcall	.-550    	; 0x5ec <navigation_get_sensor>
     812:	c8 2f       	mov	r28, r24
     814:	83 e0       	ldi	r24, 0x03	; 3
     816:	90 e0       	ldi	r25, 0x00	; 0
     818:	e9 de       	rcall	.-558    	; 0x5ec <navigation_get_sensor>
     81a:	d8 2f       	mov	r29, r24
     81c:	c7 01       	movw	r24, r14
     81e:	b6 01       	movw	r22, r12
     820:	0e 94 fc 0f 	call	0x1ff8	; 0x1ff8 <cos>
     824:	6b 01       	movw	r12, r22
     826:	7c 01       	movw	r14, r24
     828:	6d 2f       	mov	r22, r29
     82a:	70 e0       	ldi	r23, 0x00	; 0
     82c:	6c 0f       	add	r22, r28
     82e:	71 1d       	adc	r23, r1
     830:	88 27       	eor	r24, r24
     832:	77 fd       	sbrc	r23, 7
     834:	80 95       	com	r24
     836:	98 2f       	mov	r25, r24
     838:	0e 94 9a 10 	call	0x2134	; 0x2134 <__floatsisf>
     83c:	20 e0       	ldi	r18, 0x00	; 0
     83e:	30 e0       	ldi	r19, 0x00	; 0
     840:	40 e0       	ldi	r20, 0x00	; 0
     842:	5f e3       	ldi	r21, 0x3F	; 63
     844:	0e 94 b3 11 	call	0x2366	; 0x2366 <__mulsf3>
     848:	26 e6       	ldi	r18, 0x66	; 102
     84a:	36 e6       	ldi	r19, 0x66	; 102
     84c:	46 ed       	ldi	r20, 0xD6	; 214
     84e:	50 e4       	ldi	r21, 0x40	; 64
     850:	0e 94 6c 0f 	call	0x1ed8	; 0x1ed8 <__addsf3>
     854:	20 e0       	ldi	r18, 0x00	; 0
     856:	30 e0       	ldi	r19, 0x00	; 0
     858:	40 ea       	ldi	r20, 0xA0	; 160
     85a:	50 e4       	ldi	r21, 0x40	; 64
     85c:	0e 94 6b 0f 	call	0x1ed6	; 0x1ed6 <__subsf3>
     860:	a7 01       	movw	r20, r14
     862:	96 01       	movw	r18, r12
     864:	0e 94 b3 11 	call	0x2366	; 0x2366 <__mulsf3>
     868:	9b 01       	movw	r18, r22
     86a:	ac 01       	movw	r20, r24
     86c:	60 e0       	ldi	r22, 0x00	; 0
     86e:	70 e0       	ldi	r23, 0x00	; 0
     870:	80 e2       	ldi	r24, 0x20	; 32
     872:	92 e4       	ldi	r25, 0x42	; 66
     874:	0e 94 6b 0f 	call	0x1ed6	; 0x1ed6 <__subsf3>
     878:	0e 94 67 10 	call	0x20ce	; 0x20ce <__fixsfsi>
     87c:	a4 c0       	rjmp	.+328    	; 0x9c6 <navigation_direction_regulation+0x2ac>
		}
	}
	else 
	{
		if(abs(navigation_get_sensor(1) - navigation_get_sensor(3)) < 10 && navigation_get_sensor(1) < (CORRIDOR_WIDTH / 2 + 10))
     87e:	81 e0       	ldi	r24, 0x01	; 1
     880:	90 e0       	ldi	r25, 0x00	; 0
     882:	b4 de       	rcall	.-664    	; 0x5ec <navigation_get_sensor>
     884:	c8 2f       	mov	r28, r24
     886:	83 e0       	ldi	r24, 0x03	; 3
     888:	90 e0       	ldi	r25, 0x00	; 0
     88a:	b0 de       	rcall	.-672    	; 0x5ec <navigation_get_sensor>
     88c:	2c 2f       	mov	r18, r28
     88e:	30 e0       	ldi	r19, 0x00	; 0
     890:	a9 01       	movw	r20, r18
     892:	48 1b       	sub	r20, r24
     894:	51 09       	sbc	r21, r1
     896:	ca 01       	movw	r24, r20
     898:	99 23       	and	r25, r25
     89a:	1c f4       	brge	.+6      	; 0x8a2 <navigation_direction_regulation+0x188>
     89c:	91 95       	neg	r25
     89e:	81 95       	neg	r24
     8a0:	91 09       	sbc	r25, r1
     8a2:	0a 97       	sbiw	r24, 0x0a	; 10
     8a4:	0c f0       	brlt	.+2      	; 0x8a8 <navigation_direction_regulation+0x18e>
     8a6:	3e c0       	rjmp	.+124    	; 0x924 <navigation_direction_regulation+0x20a>
     8a8:	81 e0       	ldi	r24, 0x01	; 1
     8aa:	90 e0       	ldi	r25, 0x00	; 0
     8ac:	9f de       	rcall	.-706    	; 0x5ec <navigation_get_sensor>
     8ae:	82 33       	cpi	r24, 0x32	; 50
     8b0:	c8 f5       	brcc	.+114    	; 0x924 <navigation_direction_regulation+0x20a>
		{
			d = CORRIDOR_WIDTH / 2 - ((navigation_get_sensor(1) + navigation_get_sensor(3)) / 2.0 + DISTANCE_MIDDLE_TO_SIDE - RIGHT_SIDE_OFFSET) * cosf(angleOffset);
     8b2:	81 e0       	ldi	r24, 0x01	; 1
     8b4:	90 e0       	ldi	r25, 0x00	; 0
     8b6:	9a de       	rcall	.-716    	; 0x5ec <navigation_get_sensor>
     8b8:	c8 2f       	mov	r28, r24
     8ba:	83 e0       	ldi	r24, 0x03	; 3
     8bc:	90 e0       	ldi	r25, 0x00	; 0
     8be:	96 de       	rcall	.-724    	; 0x5ec <navigation_get_sensor>
     8c0:	d8 2f       	mov	r29, r24
     8c2:	c7 01       	movw	r24, r14
     8c4:	b6 01       	movw	r22, r12
     8c6:	0e 94 fc 0f 	call	0x1ff8	; 0x1ff8 <cos>
     8ca:	6b 01       	movw	r12, r22
     8cc:	7c 01       	movw	r14, r24
     8ce:	6d 2f       	mov	r22, r29
     8d0:	70 e0       	ldi	r23, 0x00	; 0
     8d2:	6c 0f       	add	r22, r28
     8d4:	71 1d       	adc	r23, r1
     8d6:	88 27       	eor	r24, r24
     8d8:	77 fd       	sbrc	r23, 7
     8da:	80 95       	com	r24
     8dc:	98 2f       	mov	r25, r24
     8de:	0e 94 9a 10 	call	0x2134	; 0x2134 <__floatsisf>
     8e2:	20 e0       	ldi	r18, 0x00	; 0
     8e4:	30 e0       	ldi	r19, 0x00	; 0
     8e6:	40 e0       	ldi	r20, 0x00	; 0
     8e8:	5f e3       	ldi	r21, 0x3F	; 63
     8ea:	0e 94 b3 11 	call	0x2366	; 0x2366 <__mulsf3>
     8ee:	26 e6       	ldi	r18, 0x66	; 102
     8f0:	36 e6       	ldi	r19, 0x66	; 102
     8f2:	46 ed       	ldi	r20, 0xD6	; 214
     8f4:	50 e4       	ldi	r21, 0x40	; 64
     8f6:	0e 94 6c 0f 	call	0x1ed8	; 0x1ed8 <__addsf3>
     8fa:	20 e0       	ldi	r18, 0x00	; 0
     8fc:	30 e0       	ldi	r19, 0x00	; 0
     8fe:	40 ea       	ldi	r20, 0xA0	; 160
     900:	50 e4       	ldi	r21, 0x40	; 64
     902:	0e 94 6b 0f 	call	0x1ed6	; 0x1ed6 <__subsf3>
     906:	a7 01       	movw	r20, r14
     908:	96 01       	movw	r18, r12
     90a:	0e 94 b3 11 	call	0x2366	; 0x2366 <__mulsf3>
     90e:	9b 01       	movw	r18, r22
     910:	ac 01       	movw	r20, r24
     912:	60 e0       	ldi	r22, 0x00	; 0
     914:	70 e0       	ldi	r23, 0x00	; 0
     916:	80 e2       	ldi	r24, 0x20	; 32
     918:	92 e4       	ldi	r25, 0x42	; 66
     91a:	0e 94 6b 0f 	call	0x1ed6	; 0x1ed6 <__subsf3>
     91e:	0e 94 67 10 	call	0x20ce	; 0x20ce <__fixsfsi>
     922:	51 c0       	rjmp	.+162    	; 0x9c6 <navigation_direction_regulation+0x2ac>
		}
		else if(abs(navigation_get_sensor(2) - navigation_get_sensor(0)) < 10 && navigation_get_sensor(0) < (CORRIDOR_WIDTH / 2 + 10))
     924:	82 e0       	ldi	r24, 0x02	; 2
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	61 de       	rcall	.-830    	; 0x5ec <navigation_get_sensor>
     92a:	c8 2f       	mov	r28, r24
     92c:	80 e0       	ldi	r24, 0x00	; 0
     92e:	90 e0       	ldi	r25, 0x00	; 0
     930:	5d de       	rcall	.-838    	; 0x5ec <navigation_get_sensor>
     932:	2c 2f       	mov	r18, r28
     934:	30 e0       	ldi	r19, 0x00	; 0
     936:	a9 01       	movw	r20, r18
     938:	48 1b       	sub	r20, r24
     93a:	51 09       	sbc	r21, r1
     93c:	ca 01       	movw	r24, r20
     93e:	99 23       	and	r25, r25
     940:	1c f4       	brge	.+6      	; 0x948 <navigation_direction_regulation+0x22e>
     942:	91 95       	neg	r25
     944:	81 95       	neg	r24
     946:	91 09       	sbc	r25, r1
     948:	0a 97       	sbiw	r24, 0x0a	; 10
     94a:	0c f0       	brlt	.+2      	; 0x94e <navigation_direction_regulation+0x234>
     94c:	8d c0       	rjmp	.+282    	; 0xa68 <navigation_direction_regulation+0x34e>
     94e:	80 e0       	ldi	r24, 0x00	; 0
     950:	90 e0       	ldi	r25, 0x00	; 0
     952:	4c de       	rcall	.-872    	; 0x5ec <navigation_get_sensor>
     954:	82 33       	cpi	r24, 0x32	; 50
     956:	08 f0       	brcs	.+2      	; 0x95a <navigation_direction_regulation+0x240>
     958:	87 c0       	rjmp	.+270    	; 0xa68 <navigation_direction_regulation+0x34e>
		{
			d = ((navigation_get_sensor(2) + navigation_get_sensor(0)) / 2.0 + DISTANCE_MIDDLE_TO_SIDE - LEFT_SIDE_OFFSET) * cosf(angleOffset) - CORRIDOR_WIDTH / 2;
     95a:	82 e0       	ldi	r24, 0x02	; 2
     95c:	90 e0       	ldi	r25, 0x00	; 0
     95e:	46 de       	rcall	.-884    	; 0x5ec <navigation_get_sensor>
     960:	c8 2f       	mov	r28, r24
     962:	80 e0       	ldi	r24, 0x00	; 0
     964:	90 e0       	ldi	r25, 0x00	; 0
     966:	42 de       	rcall	.-892    	; 0x5ec <navigation_get_sensor>
     968:	d8 2f       	mov	r29, r24
     96a:	c7 01       	movw	r24, r14
     96c:	b6 01       	movw	r22, r12
     96e:	0e 94 fc 0f 	call	0x1ff8	; 0x1ff8 <cos>
     972:	6b 01       	movw	r12, r22
     974:	7c 01       	movw	r14, r24
     976:	6d 2f       	mov	r22, r29
     978:	70 e0       	ldi	r23, 0x00	; 0
     97a:	6c 0f       	add	r22, r28
     97c:	71 1d       	adc	r23, r1
     97e:	88 27       	eor	r24, r24
     980:	77 fd       	sbrc	r23, 7
     982:	80 95       	com	r24
     984:	98 2f       	mov	r25, r24
     986:	0e 94 9a 10 	call	0x2134	; 0x2134 <__floatsisf>
     98a:	20 e0       	ldi	r18, 0x00	; 0
     98c:	30 e0       	ldi	r19, 0x00	; 0
     98e:	40 e0       	ldi	r20, 0x00	; 0
     990:	5f e3       	ldi	r21, 0x3F	; 63
     992:	0e 94 b3 11 	call	0x2366	; 0x2366 <__mulsf3>
     996:	26 e6       	ldi	r18, 0x66	; 102
     998:	36 e6       	ldi	r19, 0x66	; 102
     99a:	46 ed       	ldi	r20, 0xD6	; 214
     99c:	50 e4       	ldi	r21, 0x40	; 64
     99e:	0e 94 6c 0f 	call	0x1ed8	; 0x1ed8 <__addsf3>
     9a2:	20 e0       	ldi	r18, 0x00	; 0
     9a4:	30 e0       	ldi	r19, 0x00	; 0
     9a6:	40 ea       	ldi	r20, 0xA0	; 160
     9a8:	50 e4       	ldi	r21, 0x40	; 64
     9aa:	0e 94 6b 0f 	call	0x1ed6	; 0x1ed6 <__subsf3>
     9ae:	a7 01       	movw	r20, r14
     9b0:	96 01       	movw	r18, r12
     9b2:	0e 94 b3 11 	call	0x2366	; 0x2366 <__mulsf3>
     9b6:	20 e0       	ldi	r18, 0x00	; 0
     9b8:	30 e0       	ldi	r19, 0x00	; 0
     9ba:	40 e2       	ldi	r20, 0x20	; 32
     9bc:	52 e4       	ldi	r21, 0x42	; 66
     9be:	0e 94 6b 0f 	call	0x1ed6	; 0x1ed6 <__subsf3>
     9c2:	0e 94 67 10 	call	0x20ce	; 0x20ce <__fixsfsi>
		}
	}
	
	if(abs(d) < ACCEPTABLE_DISTANCE_OFFSET)
     9c6:	cb 01       	movw	r24, r22
     9c8:	01 96       	adiw	r24, 0x01	; 1
     9ca:	03 97       	sbiw	r24, 0x03	; 3
     9cc:	08 f4       	brcc	.+2      	; 0x9d0 <navigation_direction_regulation+0x2b6>
     9ce:	47 c0       	rjmp	.+142    	; 0xa5e <navigation_direction_regulation+0x344>
	{
		return 0;
	}
	else
	{
		float dir = atanf(d * gKp);
     9d0:	88 27       	eor	r24, r24
     9d2:	77 fd       	sbrc	r23, 7
     9d4:	80 95       	com	r24
     9d6:	98 2f       	mov	r25, r24
     9d8:	0e 94 9a 10 	call	0x2134	; 0x2134 <__floatsisf>
     9dc:	20 91 03 01 	lds	r18, 0x0103
     9e0:	30 91 04 01 	lds	r19, 0x0104
     9e4:	40 91 05 01 	lds	r20, 0x0105
     9e8:	50 91 06 01 	lds	r21, 0x0106
     9ec:	0e 94 b3 11 	call	0x2366	; 0x2366 <__mulsf3>
     9f0:	0e 94 d0 0f 	call	0x1fa0	; 0x1fa0 <atan>
     9f4:	c6 2e       	mov	r12, r22
     9f6:	d7 2e       	mov	r13, r23
     9f8:	e8 2e       	mov	r14, r24
     9fa:	f9 2e       	mov	r15, r25
		if(dir < 0)
     9fc:	20 e0       	ldi	r18, 0x00	; 0
     9fe:	30 e0       	ldi	r19, 0x00	; 0
     a00:	a9 01       	movw	r20, r18
     a02:	0e 94 f8 0f 	call	0x1ff0	; 0x1ff0 <__cmpsf2>
     a06:	88 23       	and	r24, r24
     a08:	7c f4       	brge	.+30     	; 0xa28 <navigation_direction_regulation+0x30e>
		{
			dir += 2*PI;
     a0a:	2b ed       	ldi	r18, 0xDB	; 219
     a0c:	3f e0       	ldi	r19, 0x0F	; 15
     a0e:	49 ec       	ldi	r20, 0xC9	; 201
     a10:	50 e4       	ldi	r21, 0x40	; 64
     a12:	6c 2d       	mov	r22, r12
     a14:	7d 2d       	mov	r23, r13
     a16:	8e 2d       	mov	r24, r14
     a18:	9f 2d       	mov	r25, r15
     a1a:	0e 94 6c 0f 	call	0x1ed8	; 0x1ed8 <__addsf3>
     a1e:	c6 2e       	mov	r12, r22
     a20:	d7 2e       	mov	r13, r23
     a22:	e8 2e       	mov	r14, r24
     a24:	f9 2e       	mov	r15, r25
     a26:	24 c0       	rjmp	.+72     	; 0xa70 <navigation_direction_regulation+0x356>
		} else if(dir >= 2*PI)
     a28:	2b ed       	ldi	r18, 0xDB	; 219
     a2a:	3f e0       	ldi	r19, 0x0F	; 15
     a2c:	49 ec       	ldi	r20, 0xC9	; 201
     a2e:	50 e4       	ldi	r21, 0x40	; 64
     a30:	6c 2d       	mov	r22, r12
     a32:	7d 2d       	mov	r23, r13
     a34:	8e 2d       	mov	r24, r14
     a36:	9f 2d       	mov	r25, r15
     a38:	0e 94 a8 11 	call	0x2350	; 0x2350 <__gesf2>
     a3c:	88 23       	and	r24, r24
     a3e:	c4 f0       	brlt	.+48     	; 0xa70 <navigation_direction_regulation+0x356>
		{
			dir -= 2*PI;
     a40:	2b ed       	ldi	r18, 0xDB	; 219
     a42:	3f e0       	ldi	r19, 0x0F	; 15
     a44:	49 ec       	ldi	r20, 0xC9	; 201
     a46:	50 e4       	ldi	r21, 0x40	; 64
     a48:	6c 2d       	mov	r22, r12
     a4a:	7d 2d       	mov	r23, r13
     a4c:	8e 2d       	mov	r24, r14
     a4e:	9f 2d       	mov	r25, r15
     a50:	0e 94 6b 0f 	call	0x1ed6	; 0x1ed6 <__subsf3>
     a54:	c6 2e       	mov	r12, r22
     a56:	d7 2e       	mov	r13, r23
     a58:	e8 2e       	mov	r14, r24
     a5a:	f9 2e       	mov	r15, r25
     a5c:	09 c0       	rjmp	.+18     	; 0xa70 <navigation_direction_regulation+0x356>
		}
	}
	
	if(abs(d) < ACCEPTABLE_DISTANCE_OFFSET)
	{
		return 0;
     a5e:	c1 2c       	mov	r12, r1
     a60:	d1 2c       	mov	r13, r1
     a62:	e1 2c       	mov	r14, r1
     a64:	f1 2c       	mov	r15, r1
     a66:	04 c0       	rjmp	.+8      	; 0xa70 <navigation_direction_regulation+0x356>
     a68:	c1 2c       	mov	r12, r1
     a6a:	d1 2c       	mov	r13, r1
     a6c:	e1 2c       	mov	r14, r1
     a6e:	f1 2c       	mov	r15, r1
			dir -= 2*PI;
		}
		// Dir is between 0 and 2*PI radians
		return dir;
	}
}
     a70:	6c 2d       	mov	r22, r12
     a72:	7d 2d       	mov	r23, r13
     a74:	8e 2d       	mov	r24, r14
     a76:	9f 2d       	mov	r25, r15
     a78:	df 91       	pop	r29
     a7a:	cf 91       	pop	r28
     a7c:	ff 90       	pop	r15
     a7e:	ef 90       	pop	r14
     a80:	df 90       	pop	r13
     a82:	cf 90       	pop	r12
     a84:	08 95       	ret

00000a86 <navigation_angle_offset>:
	}
	
}

float navigation_angle_offset()
{
     a86:	cf 92       	push	r12
     a88:	df 92       	push	r13
     a8a:	ef 92       	push	r14
     a8c:	ff 92       	push	r15
	float angle = 0;
	if (gAlgorithm)
     a8e:	80 91 07 01 	lds	r24, 0x0107
     a92:	88 23       	and	r24, r24
     a94:	09 f4       	brne	.+2      	; 0xa98 <navigation_angle_offset+0x12>
     a96:	6c c0       	rjmp	.+216    	; 0xb70 <navigation_angle_offset+0xea>
	{
		if(abs(navigation_get_sensor(2) - navigation_get_sensor(0)) < 10 && navigation_get_sensor(0) < (CORRIDOR_WIDTH / 2 + 10))
     a98:	82 e0       	ldi	r24, 0x02	; 2
     a9a:	90 e0       	ldi	r25, 0x00	; 0
     a9c:	a7 dd       	rcall	.-1202   	; 0x5ec <navigation_get_sensor>
     a9e:	f8 2e       	mov	r15, r24
     aa0:	80 e0       	ldi	r24, 0x00	; 0
     aa2:	90 e0       	ldi	r25, 0x00	; 0
     aa4:	a3 dd       	rcall	.-1210   	; 0x5ec <navigation_get_sensor>
     aa6:	2f 2d       	mov	r18, r15
     aa8:	30 e0       	ldi	r19, 0x00	; 0
     aaa:	a9 01       	movw	r20, r18
     aac:	48 1b       	sub	r20, r24
     aae:	51 09       	sbc	r21, r1
     ab0:	ca 01       	movw	r24, r20
     ab2:	99 23       	and	r25, r25
     ab4:	1c f4       	brge	.+6      	; 0xabc <navigation_angle_offset+0x36>
     ab6:	91 95       	neg	r25
     ab8:	81 95       	neg	r24
     aba:	91 09       	sbc	r25, r1
     abc:	0a 97       	sbiw	r24, 0x0a	; 10
     abe:	0c f5       	brge	.+66     	; 0xb02 <navigation_angle_offset+0x7c>
     ac0:	80 e0       	ldi	r24, 0x00	; 0
     ac2:	90 e0       	ldi	r25, 0x00	; 0
     ac4:	93 dd       	rcall	.-1242   	; 0x5ec <navigation_get_sensor>
     ac6:	82 33       	cpi	r24, 0x32	; 50
     ac8:	e0 f4       	brcc	.+56     	; 0xb02 <navigation_angle_offset+0x7c>
		{
			// Use wall to the left
			angle = atanf((navigation_get_sensor(2) - navigation_get_sensor(0))/DISTANCE_FRONT_TO_BACK);
     aca:	82 e0       	ldi	r24, 0x02	; 2
     acc:	90 e0       	ldi	r25, 0x00	; 0
     ace:	8e dd       	rcall	.-1252   	; 0x5ec <navigation_get_sensor>
     ad0:	f8 2e       	mov	r15, r24
     ad2:	80 e0       	ldi	r24, 0x00	; 0
     ad4:	90 e0       	ldi	r25, 0x00	; 0
     ad6:	8a dd       	rcall	.-1260   	; 0x5ec <navigation_get_sensor>
     ad8:	6f 2d       	mov	r22, r15
     ada:	70 e0       	ldi	r23, 0x00	; 0
     adc:	68 1b       	sub	r22, r24
     ade:	71 09       	sbc	r23, r1
     ae0:	88 27       	eor	r24, r24
     ae2:	77 fd       	sbrc	r23, 7
     ae4:	80 95       	com	r24
     ae6:	98 2f       	mov	r25, r24
     ae8:	0e 94 9a 10 	call	0x2134	; 0x2134 <__floatsisf>
     aec:	20 e0       	ldi	r18, 0x00	; 0
     aee:	30 e0       	ldi	r19, 0x00	; 0
     af0:	40 e8       	ldi	r20, 0x80	; 128
     af2:	5d e3       	ldi	r21, 0x3D	; 61
     af4:	0e 94 b3 11 	call	0x2366	; 0x2366 <__mulsf3>
     af8:	0e 94 d0 0f 	call	0x1fa0	; 0x1fa0 <atan>
     afc:	6b 01       	movw	r12, r22
     afe:	7c 01       	movw	r14, r24
     b00:	a0 c0       	rjmp	.+320    	; 0xc42 <navigation_angle_offset+0x1bc>
		}
		else if(abs(navigation_get_sensor(1) - navigation_get_sensor(3)) < 10 && navigation_get_sensor(1) < (CORRIDOR_WIDTH / 2 + 10))
     b02:	81 e0       	ldi	r24, 0x01	; 1
     b04:	90 e0       	ldi	r25, 0x00	; 0
     b06:	72 dd       	rcall	.-1308   	; 0x5ec <navigation_get_sensor>
     b08:	f8 2e       	mov	r15, r24
     b0a:	83 e0       	ldi	r24, 0x03	; 3
     b0c:	90 e0       	ldi	r25, 0x00	; 0
     b0e:	6e dd       	rcall	.-1316   	; 0x5ec <navigation_get_sensor>
     b10:	2f 2d       	mov	r18, r15
     b12:	30 e0       	ldi	r19, 0x00	; 0
     b14:	a9 01       	movw	r20, r18
     b16:	48 1b       	sub	r20, r24
     b18:	51 09       	sbc	r21, r1
     b1a:	ca 01       	movw	r24, r20
     b1c:	99 23       	and	r25, r25
     b1e:	1c f4       	brge	.+6      	; 0xb26 <navigation_angle_offset+0xa0>
     b20:	91 95       	neg	r25
     b22:	81 95       	neg	r24
     b24:	91 09       	sbc	r25, r1
     b26:	0a 97       	sbiw	r24, 0x0a	; 10
     b28:	0c f0       	brlt	.+2      	; 0xb2c <navigation_angle_offset+0xa6>
     b2a:	9a c0       	rjmp	.+308    	; 0xc60 <navigation_angle_offset+0x1da>
     b2c:	81 e0       	ldi	r24, 0x01	; 1
     b2e:	90 e0       	ldi	r25, 0x00	; 0
     b30:	5d dd       	rcall	.-1350   	; 0x5ec <navigation_get_sensor>
     b32:	82 33       	cpi	r24, 0x32	; 50
     b34:	08 f0       	brcs	.+2      	; 0xb38 <navigation_angle_offset+0xb2>
     b36:	94 c0       	rjmp	.+296    	; 0xc60 <navigation_angle_offset+0x1da>
		{
			// Use wall to the right
			angle = atanf((navigation_get_sensor(1) - navigation_get_sensor(3))/DISTANCE_FRONT_TO_BACK);
     b38:	81 e0       	ldi	r24, 0x01	; 1
     b3a:	90 e0       	ldi	r25, 0x00	; 0
     b3c:	57 dd       	rcall	.-1362   	; 0x5ec <navigation_get_sensor>
     b3e:	f8 2e       	mov	r15, r24
     b40:	83 e0       	ldi	r24, 0x03	; 3
     b42:	90 e0       	ldi	r25, 0x00	; 0
     b44:	53 dd       	rcall	.-1370   	; 0x5ec <navigation_get_sensor>
     b46:	6f 2d       	mov	r22, r15
     b48:	70 e0       	ldi	r23, 0x00	; 0
     b4a:	68 1b       	sub	r22, r24
     b4c:	71 09       	sbc	r23, r1
     b4e:	88 27       	eor	r24, r24
     b50:	77 fd       	sbrc	r23, 7
     b52:	80 95       	com	r24
     b54:	98 2f       	mov	r25, r24
     b56:	0e 94 9a 10 	call	0x2134	; 0x2134 <__floatsisf>
     b5a:	20 e0       	ldi	r18, 0x00	; 0
     b5c:	30 e0       	ldi	r19, 0x00	; 0
     b5e:	40 e8       	ldi	r20, 0x80	; 128
     b60:	5d e3       	ldi	r21, 0x3D	; 61
     b62:	0e 94 b3 11 	call	0x2366	; 0x2366 <__mulsf3>
     b66:	0e 94 d0 0f 	call	0x1fa0	; 0x1fa0 <atan>
     b6a:	6b 01       	movw	r12, r22
     b6c:	7c 01       	movw	r14, r24
     b6e:	69 c0       	rjmp	.+210    	; 0xc42 <navigation_angle_offset+0x1bc>
		}
	}
	else 
	{
		if(abs(navigation_get_sensor(1) - navigation_get_sensor(3)) < 10 && navigation_get_sensor(1) < (CORRIDOR_WIDTH / 2 + 10))
     b70:	81 e0       	ldi	r24, 0x01	; 1
     b72:	90 e0       	ldi	r25, 0x00	; 0
     b74:	3b dd       	rcall	.-1418   	; 0x5ec <navigation_get_sensor>
     b76:	f8 2e       	mov	r15, r24
     b78:	83 e0       	ldi	r24, 0x03	; 3
     b7a:	90 e0       	ldi	r25, 0x00	; 0
     b7c:	37 dd       	rcall	.-1426   	; 0x5ec <navigation_get_sensor>
     b7e:	2f 2d       	mov	r18, r15
     b80:	30 e0       	ldi	r19, 0x00	; 0
     b82:	a9 01       	movw	r20, r18
     b84:	48 1b       	sub	r20, r24
     b86:	51 09       	sbc	r21, r1
     b88:	ca 01       	movw	r24, r20
     b8a:	99 23       	and	r25, r25
     b8c:	1c f4       	brge	.+6      	; 0xb94 <navigation_angle_offset+0x10e>
     b8e:	91 95       	neg	r25
     b90:	81 95       	neg	r24
     b92:	91 09       	sbc	r25, r1
     b94:	0a 97       	sbiw	r24, 0x0a	; 10
     b96:	0c f5       	brge	.+66     	; 0xbda <navigation_angle_offset+0x154>
     b98:	81 e0       	ldi	r24, 0x01	; 1
     b9a:	90 e0       	ldi	r25, 0x00	; 0
     b9c:	27 dd       	rcall	.-1458   	; 0x5ec <navigation_get_sensor>
     b9e:	82 33       	cpi	r24, 0x32	; 50
     ba0:	e0 f4       	brcc	.+56     	; 0xbda <navigation_angle_offset+0x154>
		{
			// Use wall to the right
			angle = atanf((navigation_get_sensor(1) - navigation_get_sensor(3))/DISTANCE_FRONT_TO_BACK);
     ba2:	81 e0       	ldi	r24, 0x01	; 1
     ba4:	90 e0       	ldi	r25, 0x00	; 0
     ba6:	22 dd       	rcall	.-1468   	; 0x5ec <navigation_get_sensor>
     ba8:	f8 2e       	mov	r15, r24
     baa:	83 e0       	ldi	r24, 0x03	; 3
     bac:	90 e0       	ldi	r25, 0x00	; 0
     bae:	1e dd       	rcall	.-1476   	; 0x5ec <navigation_get_sensor>
     bb0:	6f 2d       	mov	r22, r15
     bb2:	70 e0       	ldi	r23, 0x00	; 0
     bb4:	68 1b       	sub	r22, r24
     bb6:	71 09       	sbc	r23, r1
     bb8:	88 27       	eor	r24, r24
     bba:	77 fd       	sbrc	r23, 7
     bbc:	80 95       	com	r24
     bbe:	98 2f       	mov	r25, r24
     bc0:	0e 94 9a 10 	call	0x2134	; 0x2134 <__floatsisf>
     bc4:	20 e0       	ldi	r18, 0x00	; 0
     bc6:	30 e0       	ldi	r19, 0x00	; 0
     bc8:	40 e8       	ldi	r20, 0x80	; 128
     bca:	5d e3       	ldi	r21, 0x3D	; 61
     bcc:	0e 94 b3 11 	call	0x2366	; 0x2366 <__mulsf3>
     bd0:	0e 94 d0 0f 	call	0x1fa0	; 0x1fa0 <atan>
     bd4:	6b 01       	movw	r12, r22
     bd6:	7c 01       	movw	r14, r24
     bd8:	34 c0       	rjmp	.+104    	; 0xc42 <navigation_angle_offset+0x1bc>
		}
		else if(abs(navigation_get_sensor(2) - navigation_get_sensor(0)) < 10 && navigation_get_sensor(0) < (CORRIDOR_WIDTH / 2 + 10))
     bda:	82 e0       	ldi	r24, 0x02	; 2
     bdc:	90 e0       	ldi	r25, 0x00	; 0
     bde:	06 dd       	rcall	.-1524   	; 0x5ec <navigation_get_sensor>
     be0:	f8 2e       	mov	r15, r24
     be2:	80 e0       	ldi	r24, 0x00	; 0
     be4:	90 e0       	ldi	r25, 0x00	; 0
     be6:	02 dd       	rcall	.-1532   	; 0x5ec <navigation_get_sensor>
     be8:	2f 2d       	mov	r18, r15
     bea:	30 e0       	ldi	r19, 0x00	; 0
     bec:	a9 01       	movw	r20, r18
     bee:	48 1b       	sub	r20, r24
     bf0:	51 09       	sbc	r21, r1
     bf2:	ca 01       	movw	r24, r20
     bf4:	99 23       	and	r25, r25
     bf6:	1c f4       	brge	.+6      	; 0xbfe <navigation_angle_offset+0x178>
     bf8:	91 95       	neg	r25
     bfa:	81 95       	neg	r24
     bfc:	91 09       	sbc	r25, r1
     bfe:	0a 97       	sbiw	r24, 0x0a	; 10
     c00:	7c f5       	brge	.+94     	; 0xc60 <navigation_angle_offset+0x1da>
     c02:	80 e0       	ldi	r24, 0x00	; 0
     c04:	90 e0       	ldi	r25, 0x00	; 0
     c06:	f2 dc       	rcall	.-1564   	; 0x5ec <navigation_get_sensor>
     c08:	82 33       	cpi	r24, 0x32	; 50
     c0a:	50 f5       	brcc	.+84     	; 0xc60 <navigation_angle_offset+0x1da>
		{
			// Use wall to the left
			angle = atanf((navigation_get_sensor(2) - navigation_get_sensor(0))/DISTANCE_FRONT_TO_BACK);
     c0c:	82 e0       	ldi	r24, 0x02	; 2
     c0e:	90 e0       	ldi	r25, 0x00	; 0
     c10:	ed dc       	rcall	.-1574   	; 0x5ec <navigation_get_sensor>
     c12:	f8 2e       	mov	r15, r24
     c14:	80 e0       	ldi	r24, 0x00	; 0
     c16:	90 e0       	ldi	r25, 0x00	; 0
     c18:	e9 dc       	rcall	.-1582   	; 0x5ec <navigation_get_sensor>
     c1a:	6f 2d       	mov	r22, r15
     c1c:	70 e0       	ldi	r23, 0x00	; 0
     c1e:	68 1b       	sub	r22, r24
     c20:	71 09       	sbc	r23, r1
     c22:	88 27       	eor	r24, r24
     c24:	77 fd       	sbrc	r23, 7
     c26:	80 95       	com	r24
     c28:	98 2f       	mov	r25, r24
     c2a:	0e 94 9a 10 	call	0x2134	; 0x2134 <__floatsisf>
     c2e:	20 e0       	ldi	r18, 0x00	; 0
     c30:	30 e0       	ldi	r19, 0x00	; 0
     c32:	40 e8       	ldi	r20, 0x80	; 128
     c34:	5d e3       	ldi	r21, 0x3D	; 61
     c36:	0e 94 b3 11 	call	0x2366	; 0x2366 <__mulsf3>
     c3a:	0e 94 d0 0f 	call	0x1fa0	; 0x1fa0 <atan>
     c3e:	6b 01       	movw	r12, r22
     c40:	7c 01       	movw	r14, r24
		}
	}
	
	if(fabs(angle) > ACCEPTABLE_OFFSET_ANGLE)
     c42:	c7 01       	movw	r24, r14
     c44:	b6 01       	movw	r22, r12
     c46:	9f 77       	andi	r25, 0x7F	; 127
     c48:	29 e2       	ldi	r18, 0x29	; 41
     c4a:	3c e5       	ldi	r19, 0x5C	; 92
     c4c:	4f e8       	ldi	r20, 0x8F	; 143
     c4e:	5d e3       	ldi	r21, 0x3D	; 61
     c50:	0e 94 a8 11 	call	0x2350	; 0x2350 <__gesf2>
     c54:	18 16       	cp	r1, r24
     c56:	3c f0       	brlt	.+14     	; 0xc66 <navigation_angle_offset+0x1e0>
	{
		return angle;
	}
	else
	{
		return 0;
     c58:	c1 2c       	mov	r12, r1
     c5a:	d1 2c       	mov	r13, r1
     c5c:	76 01       	movw	r14, r12
     c5e:	03 c0       	rjmp	.+6      	; 0xc66 <navigation_angle_offset+0x1e0>
     c60:	c1 2c       	mov	r12, r1
     c62:	d1 2c       	mov	r13, r1
     c64:	76 01       	movw	r14, r12
     c66:	7c 2d       	mov	r23, r12
	}
}
     c68:	67 2f       	mov	r22, r23
     c6a:	7d 2d       	mov	r23, r13
     c6c:	8e 2d       	mov	r24, r14
     c6e:	9f 2d       	mov	r25, r15
     c70:	ff 90       	pop	r15
     c72:	ef 90       	pop	r14
     c74:	df 90       	pop	r13
     c76:	cf 90       	pop	r12
     c78:	08 95       	ret

00000c7a <__vector_1>:

//-------------------------------Interrupts--------------------------------

//External interrupt INT0, to activate autonomous walk and set left hand navigation
ISR(INT0_vect)
{
     c7a:	1f 92       	push	r1
     c7c:	0f 92       	push	r0
     c7e:	0f b6       	in	r0, 0x3f	; 63
     c80:	0f 92       	push	r0
     c82:	11 24       	eor	r1, r1
     c84:	0b b6       	in	r0, 0x3b	; 59
     c86:	0f 92       	push	r0
     c88:	2f 93       	push	r18
     c8a:	3f 93       	push	r19
     c8c:	4f 93       	push	r20
     c8e:	5f 93       	push	r21
     c90:	6f 93       	push	r22
     c92:	7f 93       	push	r23
     c94:	8f 93       	push	r24
     c96:	9f 93       	push	r25
     c98:	af 93       	push	r26
     c9a:	bf 93       	push	r27
     c9c:	ef 93       	push	r30
     c9e:	ff 93       	push	r31
	navigation_set_algorithm(1); //Left hand
     ca0:	81 e0       	ldi	r24, 0x01	; 1
     ca2:	59 dc       	rcall	.-1870   	; 0x556 <navigation_set_algorithm>
	navigation_set_autonomous_walk(1);
     ca4:	81 e0       	ldi	r24, 0x01	; 1
     ca6:	5d dc       	rcall	.-1862   	; 0x562 <navigation_set_autonomous_walk>
}
     ca8:	ff 91       	pop	r31
     caa:	ef 91       	pop	r30
     cac:	bf 91       	pop	r27
     cae:	af 91       	pop	r26
     cb0:	9f 91       	pop	r25
     cb2:	8f 91       	pop	r24
     cb4:	7f 91       	pop	r23
     cb6:	6f 91       	pop	r22
     cb8:	5f 91       	pop	r21
     cba:	4f 91       	pop	r20
     cbc:	3f 91       	pop	r19
     cbe:	2f 91       	pop	r18
     cc0:	0f 90       	pop	r0
     cc2:	0b be       	out	0x3b, r0	; 59
     cc4:	0f 90       	pop	r0
     cc6:	0f be       	out	0x3f, r0	; 63
     cc8:	0f 90       	pop	r0
     cca:	1f 90       	pop	r1
     ccc:	18 95       	reti

00000cce <__vector_2>:

//External interrupt INT1, to activate autonomous walk and set right hand navigation
ISR(INT1_vect)
{
     cce:	1f 92       	push	r1
     cd0:	0f 92       	push	r0
     cd2:	0f b6       	in	r0, 0x3f	; 63
     cd4:	0f 92       	push	r0
     cd6:	11 24       	eor	r1, r1
     cd8:	0b b6       	in	r0, 0x3b	; 59
     cda:	0f 92       	push	r0
     cdc:	2f 93       	push	r18
     cde:	3f 93       	push	r19
     ce0:	4f 93       	push	r20
     ce2:	5f 93       	push	r21
     ce4:	6f 93       	push	r22
     ce6:	7f 93       	push	r23
     ce8:	8f 93       	push	r24
     cea:	9f 93       	push	r25
     cec:	af 93       	push	r26
     cee:	bf 93       	push	r27
     cf0:	ef 93       	push	r30
     cf2:	ff 93       	push	r31
	navigation_set_algorithm(0); //Right hand
     cf4:	80 e0       	ldi	r24, 0x00	; 0
     cf6:	2f dc       	rcall	.-1954   	; 0x556 <navigation_set_algorithm>
	navigation_set_autonomous_walk(1);
     cf8:	81 e0       	ldi	r24, 0x01	; 1
     cfa:	33 dc       	rcall	.-1946   	; 0x562 <navigation_set_autonomous_walk>
     cfc:	ff 91       	pop	r31
     cfe:	ef 91       	pop	r30
     d00:	bf 91       	pop	r27
     d02:	af 91       	pop	r26
     d04:	9f 91       	pop	r25
     d06:	8f 91       	pop	r24
     d08:	7f 91       	pop	r23
     d0a:	6f 91       	pop	r22
     d0c:	5f 91       	pop	r21
     d0e:	4f 91       	pop	r20
     d10:	3f 91       	pop	r19
     d12:	2f 91       	pop	r18
     d14:	0f 90       	pop	r0
     d16:	0b be       	out	0x3b, r0	; 59
     d18:	0f 90       	pop	r0
     d1a:	0f be       	out	0x3f, r0	; 63
     d1c:	0f 90       	pop	r0
     d1e:	1f 90       	pop	r1
     d20:	18 95       	reti

00000d22 <main>:
     d22:	de d4       	rcall	.+2492   	; 0x16e0 <USART_init>
     d24:	80 e8       	ldi	r24, 0x80	; 128
     d26:	90 e0       	ldi	r25, 0x00	; 0
     d28:	e7 d4       	rcall	.+2510   	; 0x16f8 <USART_set_twi_message_destination>
     d2a:	78 94       	sei
     d2c:	80 e2       	ldi	r24, 0x20	; 32
     d2e:	70 d1       	rcall	.+736    	; 0x1010 <TWI_init>
     d30:	92 db       	rcall	.-2268   	; 0x456 <init_counters>
     d32:	81 b1       	in	r24, 0x01	; 1
     d34:	83 60       	ori	r24, 0x03	; 3
     d36:	81 b9       	out	0x01, r24	; 1
     d38:	87 b1       	in	r24, 0x07	; 7
     d3a:	80 6c       	ori	r24, 0xC0	; 192
     d3c:	87 b9       	out	0x07, r24	; 7
     d3e:	81 b1       	in	r24, 0x01	; 1
     d40:	8f 73       	andi	r24, 0x3F	; 63
     d42:	81 b9       	out	0x01, r24	; 1
     d44:	e8 e6       	ldi	r30, 0x68	; 104
     d46:	f0 e0       	ldi	r31, 0x00	; 0
     d48:	80 81       	ld	r24, Z
     d4a:	81 60       	ori	r24, 0x01	; 1
     d4c:	80 83       	st	Z, r24
     d4e:	eb e6       	ldi	r30, 0x6B	; 107
     d50:	f0 e0       	ldi	r31, 0x00	; 0
     d52:	80 81       	ld	r24, Z
     d54:	80 6c       	ori	r24, 0xC0	; 192
     d56:	80 83       	st	Z, r24
     d58:	2f ef       	ldi	r18, 0xFF	; 255
     d5a:	83 e2       	ldi	r24, 0x23	; 35
     d5c:	94 ef       	ldi	r25, 0xF4	; 244
     d5e:	21 50       	subi	r18, 0x01	; 1
     d60:	80 40       	sbci	r24, 0x00	; 0
     d62:	90 40       	sbci	r25, 0x00	; 0
     d64:	e1 f7       	brne	.-8      	; 0xd5e <main+0x3c>
     d66:	00 c0       	rjmp	.+0      	; 0xd68 <main+0x46>
     d68:	00 00       	nop
     d6a:	80 e0       	ldi	r24, 0x00	; 0
     d6c:	fa db       	rcall	.-2060   	; 0x562 <navigation_set_autonomous_walk>
     d6e:	88 ec       	ldi	r24, 0xC8	; 200
     d70:	90 e0       	ldi	r25, 0x00	; 0
     d72:	5f db       	rcall	.-2370   	; 0x432 <set_counter_2>
     d74:	d1 e0       	ldi	r29, 0x01	; 1
     d76:	c2 e0       	ldi	r28, 0x02	; 2
     d78:	80 91 08 01 	lds	r24, 0x0108
     d7c:	88 23       	and	r24, r24
     d7e:	31 f0       	breq	.+12     	; 0xd8c <main+0x6a>
     d80:	e7 db       	rcall	.-2098   	; 0x550 <navigation_left_algorithm>
     d82:	68 2f       	mov	r22, r24
     d84:	80 e8       	ldi	r24, 0x80	; 128
     d86:	67 d1       	rcall	.+718    	; 0x1056 <TWI_send_autonom_settings>
     d88:	10 92 08 01 	sts	0x0108, r1
     d8c:	e7 db       	rcall	.-2098   	; 0x55c <navigation_autonomous_walk>
     d8e:	81 30       	cpi	r24, 0x01	; 1
     d90:	49 f4       	brne	.+18     	; 0xda4 <main+0x82>
     d92:	c5 d2       	rcall	.+1418   	; 0x131e <TWI_control_settings_flag>
     d94:	88 23       	and	r24, r24
     d96:	21 f0       	breq	.+8      	; 0xda0 <main+0x7e>
     d98:	80 e0       	ldi	r24, 0x00	; 0
     d9a:	90 e0       	ldi	r25, 0x00	; 0
     d9c:	ab d2       	rcall	.+1366   	; 0x12f4 <TWI_get_control_setting>
     d9e:	c9 db       	rcall	.-2158   	; 0x532 <navigation_set_Kp>
     da0:	99 da       	rcall	.-2766   	; 0x2d4 <autonomouswalk_walk>
     da2:	ea cf       	rjmp	.-44     	; 0xd78 <main+0x56>
     da4:	b2 d2       	rcall	.+1380   	; 0x130a <TWI_command_flag>
     da6:	88 23       	and	r24, r24
     da8:	21 f0       	breq	.+8      	; 0xdb2 <main+0x90>
     daa:	82 b1       	in	r24, 0x02	; 2
     dac:	8c 27       	eor	r24, r28
     dae:	82 b9       	out	0x02, r24	; 2
     db0:	6e d5       	rcall	.+2780   	; 0x188e <USART_send_command>
     db2:	c9 d2       	rcall	.+1426   	; 0x1346 <TWI_elevation_flag>
     db4:	88 23       	and	r24, r24
     db6:	21 f0       	breq	.+8      	; 0xdc0 <main+0x9e>
     db8:	82 b1       	in	r24, 0x02	; 2
     dba:	8d 27       	eor	r24, r29
     dbc:	82 b9       	out	0x02, r24	; 2
     dbe:	79 d5       	rcall	.+2802   	; 0x18b2 <USART_send_elevation>
     dc0:	bb d7       	rcall	.+3958   	; 0x1d38 <USART_decode_rx_fifo>
     dc2:	da cf       	rjmp	.-76     	; 0xd78 <main+0x56>

00000dc4 <__vector_13>:
     dc4:	1f 92       	push	r1
     dc6:	0f 92       	push	r0
     dc8:	0f b6       	in	r0, 0x3f	; 63
     dca:	0f 92       	push	r0
     dcc:	11 24       	eor	r1, r1
     dce:	10 92 85 00 	sts	0x0085, r1
     dd2:	10 92 84 00 	sts	0x0084, r1
     dd6:	0f 90       	pop	r0
     dd8:	0f be       	out	0x3f, r0	; 63
     dda:	0f 90       	pop	r0
     ddc:	1f 90       	pop	r1
     dde:	18 95       	reti

00000de0 <__vector_32>:
     de0:	1f 92       	push	r1
     de2:	0f 92       	push	r0
     de4:	0f b6       	in	r0, 0x3f	; 63
     de6:	0f 92       	push	r0
     de8:	11 24       	eor	r1, r1
     dea:	0b b6       	in	r0, 0x3b	; 59
     dec:	0f 92       	push	r0
     dee:	2f 93       	push	r18
     df0:	3f 93       	push	r19
     df2:	4f 93       	push	r20
     df4:	5f 93       	push	r21
     df6:	6f 93       	push	r22
     df8:	7f 93       	push	r23
     dfa:	8f 93       	push	r24
     dfc:	9f 93       	push	r25
     dfe:	af 93       	push	r26
     e00:	bf 93       	push	r27
     e02:	ef 93       	push	r30
     e04:	ff 93       	push	r31
     e06:	95 d2       	rcall	.+1322   	; 0x1332 <TWI_autonom_settings_flag>
     e08:	88 23       	and	r24, r24
     e0a:	91 f0       	breq	.+36     	; 0xe30 <__vector_32+0x50>
     e0c:	78 d2       	rcall	.+1264   	; 0x12fe <TWI_get_autonom_settings>
     e0e:	81 11       	cpse	r24, r1
     e10:	02 c0       	rjmp	.+4      	; 0xe16 <__vector_32+0x36>
     e12:	a7 db       	rcall	.-2226   	; 0x562 <navigation_set_autonomous_walk>
     e14:	0a c0       	rjmp	.+20     	; 0xe2a <__vector_32+0x4a>
     e16:	81 30       	cpi	r24, 0x01	; 1
     e18:	21 f4       	brne	.+8      	; 0xe22 <__vector_32+0x42>
     e1a:	a3 db       	rcall	.-2234   	; 0x562 <navigation_set_autonomous_walk>
     e1c:	81 e0       	ldi	r24, 0x01	; 1
     e1e:	9b db       	rcall	.-2250   	; 0x556 <navigation_set_algorithm>
     e20:	04 c0       	rjmp	.+8      	; 0xe2a <__vector_32+0x4a>
     e22:	81 e0       	ldi	r24, 0x01	; 1
     e24:	9e db       	rcall	.-2244   	; 0x562 <navigation_set_autonomous_walk>
     e26:	80 e0       	ldi	r24, 0x00	; 0
     e28:	96 db       	rcall	.-2260   	; 0x556 <navigation_set_algorithm>
     e2a:	81 e0       	ldi	r24, 0x01	; 1
     e2c:	80 93 08 01 	sts	0x0108, r24
     e30:	10 92 95 00 	sts	0x0095, r1
     e34:	10 92 94 00 	sts	0x0094, r1
     e38:	ff 91       	pop	r31
     e3a:	ef 91       	pop	r30
     e3c:	bf 91       	pop	r27
     e3e:	af 91       	pop	r26
     e40:	9f 91       	pop	r25
     e42:	8f 91       	pop	r24
     e44:	7f 91       	pop	r23
     e46:	6f 91       	pop	r22
     e48:	5f 91       	pop	r21
     e4a:	4f 91       	pop	r20
     e4c:	3f 91       	pop	r19
     e4e:	2f 91       	pop	r18
     e50:	0f 90       	pop	r0
     e52:	0b be       	out	0x3b, r0	; 59
     e54:	0f 90       	pop	r0
     e56:	0f be       	out	0x3f, r0	; 63
     e58:	0f 90       	pop	r0
     e5a:	1f 90       	pop	r1
     e5c:	18 95       	reti

00000e5e <__vector_4>:
     e5e:	1f 92       	push	r1
     e60:	0f 92       	push	r0
     e62:	0f b6       	in	r0, 0x3f	; 63
     e64:	0f 92       	push	r0
     e66:	11 24       	eor	r1, r1
     e68:	0b b6       	in	r0, 0x3b	; 59
     e6a:	0f 92       	push	r0
     e6c:	2f 93       	push	r18
     e6e:	3f 93       	push	r19
     e70:	4f 93       	push	r20
     e72:	5f 93       	push	r21
     e74:	6f 93       	push	r22
     e76:	7f 93       	push	r23
     e78:	8f 93       	push	r24
     e7a:	9f 93       	push	r25
     e7c:	af 93       	push	r26
     e7e:	bf 93       	push	r27
     e80:	ef 93       	push	r30
     e82:	ff 93       	push	r31
     e84:	06 9b       	sbis	0x00, 6	; 0
     e86:	09 c0       	rjmp	.+18     	; 0xe9a <__vector_4+0x3c>
     e88:	81 e0       	ldi	r24, 0x01	; 1
     e8a:	6b db       	rcall	.-2346   	; 0x562 <navigation_set_autonomous_walk>
     e8c:	81 e0       	ldi	r24, 0x01	; 1
     e8e:	63 db       	rcall	.-2362   	; 0x556 <navigation_set_algorithm>
     e90:	98 b1       	in	r25, 0x08	; 8
     e92:	80 e4       	ldi	r24, 0x40	; 64
     e94:	89 27       	eor	r24, r25
     e96:	88 b9       	out	0x08, r24	; 8
     e98:	09 c0       	rjmp	.+18     	; 0xeac <__vector_4+0x4e>
     e9a:	07 9b       	sbis	0x00, 7	; 0
     e9c:	07 c0       	rjmp	.+14     	; 0xeac <__vector_4+0x4e>
     e9e:	81 e0       	ldi	r24, 0x01	; 1
     ea0:	60 db       	rcall	.-2368   	; 0x562 <navigation_set_autonomous_walk>
     ea2:	80 e0       	ldi	r24, 0x00	; 0
     ea4:	58 db       	rcall	.-2384   	; 0x556 <navigation_set_algorithm>
     ea6:	88 b1       	in	r24, 0x08	; 8
     ea8:	80 58       	subi	r24, 0x80	; 128
     eaa:	88 b9       	out	0x08, r24	; 8
     eac:	81 e0       	ldi	r24, 0x01	; 1
     eae:	80 93 08 01 	sts	0x0108, r24
     eb2:	ff 91       	pop	r31
     eb4:	ef 91       	pop	r30
     eb6:	bf 91       	pop	r27
     eb8:	af 91       	pop	r26
     eba:	9f 91       	pop	r25
     ebc:	8f 91       	pop	r24
     ebe:	7f 91       	pop	r23
     ec0:	6f 91       	pop	r22
     ec2:	5f 91       	pop	r21
     ec4:	4f 91       	pop	r20
     ec6:	3f 91       	pop	r19
     ec8:	2f 91       	pop	r18
     eca:	0f 90       	pop	r0
     ecc:	0b be       	out	0x3b, r0	; 59
     ece:	0f 90       	pop	r0
     ed0:	0f be       	out	0x3f, r0	; 63
     ed2:	0f 90       	pop	r0
     ed4:	1f 90       	pop	r1
     ed6:	18 95       	reti

00000ed8 <set_twi_reciever_enable>:
     ed8:	85 e4       	ldi	r24, 0x45	; 69
     eda:	80 93 bc 00 	sts	0x00BC, r24
     ede:	08 95       	ret

00000ee0 <clear_int>:
     ee0:	81 ec       	ldi	r24, 0xC1	; 193
     ee2:	80 93 bc 00 	sts	0x00BC, r24
     ee6:	08 95       	ret

00000ee8 <start_bus>:
     ee8:	84 ea       	ldi	r24, 0xA4	; 164
     eea:	80 93 bc 00 	sts	0x00BC, r24
     eee:	08 95       	ret

00000ef0 <stop_bus>:
     ef0:	85 ed       	ldi	r24, 0xD5	; 213
     ef2:	80 93 bc 00 	sts	0x00BC, r24
     ef6:	08 95       	ret

00000ef8 <Error>:
     ef8:	80 91 b9 00 	lds	r24, 0x00B9
     efc:	88 7f       	andi	r24, 0xF8	; 248
     efe:	88 33       	cpi	r24, 0x38	; 56
     f00:	09 f0       	breq	.+2      	; 0xf04 <Error+0xc>
     f02:	f6 cf       	rjmp	.-20     	; 0xef0 <stop_bus>
     f04:	ed cf       	rjmp	.-38     	; 0xee0 <clear_int>

00000f06 <get_data>:
     f06:	80 91 bb 00 	lds	r24, 0x00BB
     f0a:	08 95       	ret

00000f0c <wait_for_bus>:
     f0c:	ec eb       	ldi	r30, 0xBC	; 188
     f0e:	f0 e0       	ldi	r31, 0x00	; 0
     f10:	80 81       	ld	r24, Z
     f12:	88 23       	and	r24, r24
     f14:	ec f7       	brge	.-6      	; 0xf10 <wait_for_bus+0x4>
     f16:	08 95       	ret

00000f18 <send_data_and_wait>:
     f18:	80 93 bb 00 	sts	0x00BB, r24
     f1c:	84 e8       	ldi	r24, 0x84	; 132
     f1e:	80 93 bc 00 	sts	0x00BC, r24
     f22:	f4 cf       	rjmp	.-24     	; 0xf0c <wait_for_bus>

00000f24 <stop_twi>:
     f24:	10 92 1c 15 	sts	0x151C, r1
     f28:	10 92 1b 15 	sts	0x151B, r1
     f2c:	10 92 26 15 	sts	0x1526, r1
     f30:	10 92 25 15 	sts	0x1525, r1
     f34:	10 92 11 15 	sts	0x1511, r1
     f38:	10 92 10 15 	sts	0x1510, r1
     f3c:	10 92 16 15 	sts	0x1516, r1
     f40:	10 92 15 15 	sts	0x1515, r1
     f44:	10 92 19 15 	sts	0x1519, r1
     f48:	10 92 18 15 	sts	0x1518, r1
     f4c:	08 95       	ret

00000f4e <reset_TWI>:
     f4e:	ec eb       	ldi	r30, 0xBC	; 188
     f50:	f0 e0       	ldi	r31, 0x00	; 0
     f52:	80 81       	ld	r24, Z
     f54:	80 6c       	ori	r24, 0xC0	; 192
     f56:	80 83       	st	Z, r24
     f58:	08 95       	ret

00000f5a <get_control_settings_from_bus>:
     f5a:	cf 93       	push	r28
     f5c:	df 93       	push	r29
     f5e:	c0 91 15 15 	lds	r28, 0x1515
     f62:	d0 91 16 15 	lds	r29, 0x1516
     f66:	cf df       	rcall	.-98     	; 0xf06 <get_data>
     f68:	ce 5e       	subi	r28, 0xEE	; 238
     f6a:	da 4e       	sbci	r29, 0xEA	; 234
     f6c:	88 83       	st	Y, r24
     f6e:	10 92 16 15 	sts	0x1516, r1
     f72:	10 92 15 15 	sts	0x1515, r1
     f76:	df 91       	pop	r29
     f78:	cf 91       	pop	r28
     f7a:	08 95       	ret

00000f7c <get_autonom_settings_from_bus>:
     f7c:	c4 df       	rcall	.-120    	; 0xf06 <get_data>
     f7e:	80 93 10 14 	sts	0x1410, r24
     f82:	08 95       	ret

00000f84 <get_char_from_bus>:
     f84:	cf 93       	push	r28
     f86:	df 93       	push	r29
     f88:	c0 91 10 15 	lds	r28, 0x1510
     f8c:	d0 91 11 15 	lds	r29, 0x1511
     f90:	ba df       	rcall	.-140    	; 0xf06 <get_data>
     f92:	cf 5e       	subi	r28, 0xEF	; 239
     f94:	db 4e       	sbci	r29, 0xEB	; 235
     f96:	88 83       	st	Y, r24
     f98:	80 91 10 15 	lds	r24, 0x1510
     f9c:	90 91 11 15 	lds	r25, 0x1511
     fa0:	01 96       	adiw	r24, 0x01	; 1
     fa2:	90 93 11 15 	sts	0x1511, r25
     fa6:	80 93 10 15 	sts	0x1510, r24
     faa:	90 93 21 15 	sts	0x1521, r25
     fae:	80 93 20 15 	sts	0x1520, r24
     fb2:	df 91       	pop	r29
     fb4:	cf 91       	pop	r28
     fb6:	08 95       	ret

00000fb8 <get_sensor_from_bus>:
     fb8:	cf 93       	push	r28
     fba:	df 93       	push	r29
     fbc:	c0 91 25 15 	lds	r28, 0x1525
     fc0:	d0 91 26 15 	lds	r29, 0x1526
     fc4:	c8 30       	cpi	r28, 0x08	; 8
     fc6:	d1 05       	cpc	r29, r1
     fc8:	99 f4       	brne	.+38     	; 0xff0 <get_sensor_from_bus+0x38>
     fca:	e7 e2       	ldi	r30, 0x27	; 39
     fcc:	f5 e1       	ldi	r31, 0x15	; 21
     fce:	af e2       	ldi	r26, 0x2F	; 47
     fd0:	b5 e1       	ldi	r27, 0x15	; 21
     fd2:	8f e2       	ldi	r24, 0x2F	; 47
     fd4:	95 e1       	ldi	r25, 0x15	; 21
     fd6:	21 91       	ld	r18, Z+
     fd8:	2d 93       	st	X+, r18
     fda:	e8 17       	cp	r30, r24
     fdc:	f9 07       	cpc	r31, r25
     fde:	d9 f7       	brne	.-10     	; 0xfd6 <get_sensor_from_bus+0x1e>
     fe0:	92 df       	rcall	.-220    	; 0xf06 <get_data>
     fe2:	80 93 1f 15 	sts	0x151F, r24
     fe6:	81 e0       	ldi	r24, 0x01	; 1
     fe8:	80 93 c4 13 	sts	0x13C4, r24
     fec:	d4 da       	rcall	.-2648   	; 0x596 <navigation_fill_buffer>
     fee:	0d c0       	rjmp	.+26     	; 0x100a <get_sensor_from_bus+0x52>
     ff0:	8a df       	rcall	.-236    	; 0xf06 <get_data>
     ff2:	c9 5d       	subi	r28, 0xD9	; 217
     ff4:	da 4e       	sbci	r29, 0xEA	; 234
     ff6:	88 83       	st	Y, r24
     ff8:	80 91 25 15 	lds	r24, 0x1525
     ffc:	90 91 26 15 	lds	r25, 0x1526
    1000:	01 96       	adiw	r24, 0x01	; 1
    1002:	90 93 26 15 	sts	0x1526, r25
    1006:	80 93 25 15 	sts	0x1525, r24
    100a:	df 91       	pop	r29
    100c:	cf 91       	pop	r28
    100e:	08 95       	ret

00001010 <TWI_init>:
    1010:	80 93 17 15 	sts	0x1517, r24
    1014:	80 34       	cpi	r24, 0x40	; 64
    1016:	79 f0       	breq	.+30     	; 0x1036 <TWI_init+0x26>
    1018:	80 38       	cpi	r24, 0x80	; 128
    101a:	19 f0       	breq	.+6      	; 0x1022 <TWI_init+0x12>
    101c:	80 32       	cpi	r24, 0x20	; 32
    101e:	d1 f4       	brne	.+52     	; 0x1054 <TWI_init+0x44>
    1020:	12 c0       	rjmp	.+36     	; 0x1046 <TWI_init+0x36>
    1022:	83 e0       	ldi	r24, 0x03	; 3
    1024:	88 b9       	out	0x08, r24	; 8
    1026:	58 df       	rcall	.-336    	; 0xed8 <set_twi_reciever_enable>
    1028:	8f e3       	ldi	r24, 0x3F	; 63
    102a:	80 93 b8 00 	sts	0x00B8, r24
    102e:	81 e8       	ldi	r24, 0x81	; 129
    1030:	80 93 ba 00 	sts	0x00BA, r24
    1034:	08 95       	ret
    1036:	8f e3       	ldi	r24, 0x3F	; 63
    1038:	80 93 b8 00 	sts	0x00B8, r24
    103c:	4d df       	rcall	.-358    	; 0xed8 <set_twi_reciever_enable>
    103e:	80 e4       	ldi	r24, 0x40	; 64
    1040:	80 93 ba 00 	sts	0x00BA, r24
    1044:	08 95       	ret
    1046:	8f e3       	ldi	r24, 0x3F	; 63
    1048:	80 93 b8 00 	sts	0x00B8, r24
    104c:	45 df       	rcall	.-374    	; 0xed8 <set_twi_reciever_enable>
    104e:	81 e2       	ldi	r24, 0x21	; 33
    1050:	80 93 ba 00 	sts	0x00BA, r24
    1054:	08 95       	ret

00001056 <TWI_send_autonom_settings>:
    1056:	cf 93       	push	r28
    1058:	df 93       	push	r29
    105a:	c8 2f       	mov	r28, r24
    105c:	d6 2f       	mov	r29, r22
    105e:	44 df       	rcall	.-376    	; 0xee8 <start_bus>
    1060:	55 df       	rcall	.-342    	; 0xf0c <wait_for_bus>
    1062:	90 91 b9 00 	lds	r25, 0x00B9
    1066:	98 7f       	andi	r25, 0xF8	; 248
    1068:	98 30       	cpi	r25, 0x08	; 8
    106a:	19 f0       	breq	.+6      	; 0x1072 <TWI_send_autonom_settings+0x1c>
    106c:	45 df       	rcall	.-374    	; 0xef8 <Error>
    106e:	80 e0       	ldi	r24, 0x00	; 0
    1070:	20 c0       	rjmp	.+64     	; 0x10b2 <TWI_send_autonom_settings+0x5c>
    1072:	8c 2f       	mov	r24, r28
    1074:	51 df       	rcall	.-350    	; 0xf18 <send_data_and_wait>
    1076:	80 91 b9 00 	lds	r24, 0x00B9
    107a:	88 7f       	andi	r24, 0xF8	; 248
    107c:	88 31       	cpi	r24, 0x18	; 24
    107e:	19 f0       	breq	.+6      	; 0x1086 <TWI_send_autonom_settings+0x30>
    1080:	3b df       	rcall	.-394    	; 0xef8 <Error>
    1082:	80 e0       	ldi	r24, 0x00	; 0
    1084:	16 c0       	rjmp	.+44     	; 0x10b2 <TWI_send_autonom_settings+0x5c>
    1086:	85 e0       	ldi	r24, 0x05	; 5
    1088:	47 df       	rcall	.-370    	; 0xf18 <send_data_and_wait>
    108a:	80 91 b9 00 	lds	r24, 0x00B9
    108e:	88 7f       	andi	r24, 0xF8	; 248
    1090:	88 32       	cpi	r24, 0x28	; 40
    1092:	19 f0       	breq	.+6      	; 0x109a <TWI_send_autonom_settings+0x44>
    1094:	31 df       	rcall	.-414    	; 0xef8 <Error>
    1096:	80 e0       	ldi	r24, 0x00	; 0
    1098:	0c c0       	rjmp	.+24     	; 0x10b2 <TWI_send_autonom_settings+0x5c>
    109a:	8d 2f       	mov	r24, r29
    109c:	3d df       	rcall	.-390    	; 0xf18 <send_data_and_wait>
    109e:	80 91 b9 00 	lds	r24, 0x00B9
    10a2:	88 7f       	andi	r24, 0xF8	; 248
    10a4:	88 32       	cpi	r24, 0x28	; 40
    10a6:	19 f0       	breq	.+6      	; 0x10ae <TWI_send_autonom_settings+0x58>
    10a8:	27 df       	rcall	.-434    	; 0xef8 <Error>
    10aa:	80 e0       	ldi	r24, 0x00	; 0
    10ac:	02 c0       	rjmp	.+4      	; 0x10b2 <TWI_send_autonom_settings+0x5c>
    10ae:	20 df       	rcall	.-448    	; 0xef0 <stop_bus>
    10b0:	81 e0       	ldi	r24, 0x01	; 1
    10b2:	df 91       	pop	r29
    10b4:	cf 91       	pop	r28
    10b6:	08 95       	ret

000010b8 <TWI_send_command>:
    10b8:	1f 93       	push	r17
    10ba:	cf 93       	push	r28
    10bc:	df 93       	push	r29
    10be:	c8 2f       	mov	r28, r24
    10c0:	d6 2f       	mov	r29, r22
    10c2:	14 2f       	mov	r17, r20
    10c4:	11 df       	rcall	.-478    	; 0xee8 <start_bus>
    10c6:	22 df       	rcall	.-444    	; 0xf0c <wait_for_bus>
    10c8:	90 91 b9 00 	lds	r25, 0x00B9
    10cc:	98 7f       	andi	r25, 0xF8	; 248
    10ce:	98 30       	cpi	r25, 0x08	; 8
    10d0:	19 f0       	breq	.+6      	; 0x10d8 <TWI_send_command+0x20>
    10d2:	12 df       	rcall	.-476    	; 0xef8 <Error>
    10d4:	80 e0       	ldi	r24, 0x00	; 0
    10d6:	34 c0       	rjmp	.+104    	; 0x1140 <TWI_send_command+0x88>
    10d8:	80 e2       	ldi	r24, 0x20	; 32
    10da:	1e df       	rcall	.-452    	; 0xf18 <send_data_and_wait>
    10dc:	80 91 b9 00 	lds	r24, 0x00B9
    10e0:	88 7f       	andi	r24, 0xF8	; 248
    10e2:	88 31       	cpi	r24, 0x18	; 24
    10e4:	19 f0       	breq	.+6      	; 0x10ec <TWI_send_command+0x34>
    10e6:	08 df       	rcall	.-496    	; 0xef8 <Error>
    10e8:	80 e0       	ldi	r24, 0x00	; 0
    10ea:	2a c0       	rjmp	.+84     	; 0x1140 <TWI_send_command+0x88>
    10ec:	80 e0       	ldi	r24, 0x00	; 0
    10ee:	14 df       	rcall	.-472    	; 0xf18 <send_data_and_wait>
    10f0:	80 91 b9 00 	lds	r24, 0x00B9
    10f4:	88 7f       	andi	r24, 0xF8	; 248
    10f6:	88 32       	cpi	r24, 0x28	; 40
    10f8:	19 f0       	breq	.+6      	; 0x1100 <TWI_send_command+0x48>
    10fa:	fe de       	rcall	.-516    	; 0xef8 <Error>
    10fc:	80 e0       	ldi	r24, 0x00	; 0
    10fe:	20 c0       	rjmp	.+64     	; 0x1140 <TWI_send_command+0x88>
    1100:	8c 2f       	mov	r24, r28
    1102:	0a df       	rcall	.-492    	; 0xf18 <send_data_and_wait>
    1104:	80 91 b9 00 	lds	r24, 0x00B9
    1108:	88 7f       	andi	r24, 0xF8	; 248
    110a:	88 32       	cpi	r24, 0x28	; 40
    110c:	19 f0       	breq	.+6      	; 0x1114 <TWI_send_command+0x5c>
    110e:	f4 de       	rcall	.-536    	; 0xef8 <Error>
    1110:	80 e0       	ldi	r24, 0x00	; 0
    1112:	16 c0       	rjmp	.+44     	; 0x1140 <TWI_send_command+0x88>
    1114:	8d 2f       	mov	r24, r29
    1116:	00 df       	rcall	.-512    	; 0xf18 <send_data_and_wait>
    1118:	80 91 b9 00 	lds	r24, 0x00B9
    111c:	88 7f       	andi	r24, 0xF8	; 248
    111e:	88 32       	cpi	r24, 0x28	; 40
    1120:	19 f0       	breq	.+6      	; 0x1128 <TWI_send_command+0x70>
    1122:	ea de       	rcall	.-556    	; 0xef8 <Error>
    1124:	80 e0       	ldi	r24, 0x00	; 0
    1126:	0c c0       	rjmp	.+24     	; 0x1140 <TWI_send_command+0x88>
    1128:	81 2f       	mov	r24, r17
    112a:	f6 de       	rcall	.-532    	; 0xf18 <send_data_and_wait>
    112c:	80 91 b9 00 	lds	r24, 0x00B9
    1130:	88 7f       	andi	r24, 0xF8	; 248
    1132:	88 32       	cpi	r24, 0x28	; 40
    1134:	19 f0       	breq	.+6      	; 0x113c <TWI_send_command+0x84>
    1136:	e0 de       	rcall	.-576    	; 0xef8 <Error>
    1138:	80 e0       	ldi	r24, 0x00	; 0
    113a:	02 c0       	rjmp	.+4      	; 0x1140 <TWI_send_command+0x88>
    113c:	d9 de       	rcall	.-590    	; 0xef0 <stop_bus>
    113e:	81 e0       	ldi	r24, 0x01	; 1
    1140:	df 91       	pop	r29
    1142:	cf 91       	pop	r28
    1144:	1f 91       	pop	r17
    1146:	08 95       	ret

00001148 <TWI_send_string>:
    1148:	ef 92       	push	r14
    114a:	ff 92       	push	r15
    114c:	0f 93       	push	r16
    114e:	1f 93       	push	r17
    1150:	cf 93       	push	r28
    1152:	df 93       	push	r29
    1154:	c8 2f       	mov	r28, r24
    1156:	e6 2e       	mov	r14, r22
    1158:	f7 2e       	mov	r15, r23
    115a:	c6 de       	rcall	.-628    	; 0xee8 <start_bus>
    115c:	d7 de       	rcall	.-594    	; 0xf0c <wait_for_bus>
    115e:	90 91 b9 00 	lds	r25, 0x00B9
    1162:	98 7f       	andi	r25, 0xF8	; 248
    1164:	98 30       	cpi	r25, 0x08	; 8
    1166:	19 f0       	breq	.+6      	; 0x116e <TWI_send_string+0x26>
    1168:	c7 de       	rcall	.-626    	; 0xef8 <Error>
    116a:	80 e0       	ldi	r24, 0x00	; 0
    116c:	2c c0       	rjmp	.+88     	; 0x11c6 <TWI_send_string+0x7e>
    116e:	8c 2f       	mov	r24, r28
    1170:	d3 de       	rcall	.-602    	; 0xf18 <send_data_and_wait>
    1172:	80 91 b9 00 	lds	r24, 0x00B9
    1176:	88 7f       	andi	r24, 0xF8	; 248
    1178:	88 31       	cpi	r24, 0x18	; 24
    117a:	19 f0       	breq	.+6      	; 0x1182 <TWI_send_string+0x3a>
    117c:	bd de       	rcall	.-646    	; 0xef8 <Error>
    117e:	80 e0       	ldi	r24, 0x00	; 0
    1180:	22 c0       	rjmp	.+68     	; 0x11c6 <TWI_send_string+0x7e>
    1182:	89 e1       	ldi	r24, 0x19	; 25
    1184:	c9 de       	rcall	.-622    	; 0xf18 <send_data_and_wait>
    1186:	80 91 b9 00 	lds	r24, 0x00B9
    118a:	88 7f       	andi	r24, 0xF8	; 248
    118c:	88 32       	cpi	r24, 0x28	; 40
    118e:	29 f4       	brne	.+10     	; 0x119a <TWI_send_string+0x52>
    1190:	0e 2d       	mov	r16, r14
    1192:	1f 2d       	mov	r17, r15
    1194:	c0 e0       	ldi	r28, 0x00	; 0
    1196:	d0 e0       	ldi	r29, 0x00	; 0
    1198:	08 c0       	rjmp	.+16     	; 0x11aa <TWI_send_string+0x62>
    119a:	ae de       	rcall	.-676    	; 0xef8 <Error>
    119c:	80 e0       	ldi	r24, 0x00	; 0
    119e:	13 c0       	rjmp	.+38     	; 0x11c6 <TWI_send_string+0x7e>
    11a0:	f8 01       	movw	r30, r16
    11a2:	81 91       	ld	r24, Z+
    11a4:	8f 01       	movw	r16, r30
    11a6:	b8 de       	rcall	.-656    	; 0xf18 <send_data_and_wait>
    11a8:	21 96       	adiw	r28, 0x01	; 1
    11aa:	ee 2d       	mov	r30, r14
    11ac:	ff 2d       	mov	r31, r15
    11ae:	df 01       	movw	r26, r30
    11b0:	0d 90       	ld	r0, X+
    11b2:	00 20       	and	r0, r0
    11b4:	e9 f7       	brne	.-6      	; 0x11b0 <TWI_send_string+0x68>
    11b6:	11 97       	sbiw	r26, 0x01	; 1
    11b8:	ae 1b       	sub	r26, r30
    11ba:	bf 0b       	sbc	r27, r31
    11bc:	ca 17       	cp	r28, r26
    11be:	db 07       	cpc	r29, r27
    11c0:	78 f3       	brcs	.-34     	; 0x11a0 <TWI_send_string+0x58>
    11c2:	96 de       	rcall	.-724    	; 0xef0 <stop_bus>
    11c4:	81 e0       	ldi	r24, 0x01	; 1
    11c6:	df 91       	pop	r29
    11c8:	cf 91       	pop	r28
    11ca:	1f 91       	pop	r17
    11cc:	0f 91       	pop	r16
    11ce:	ff 90       	pop	r15
    11d0:	ef 90       	pop	r14
    11d2:	08 95       	ret

000011d4 <TWI_send_string_fixed_length>:
    11d4:	ef 92       	push	r14
    11d6:	ff 92       	push	r15
    11d8:	0f 93       	push	r16
    11da:	1f 93       	push	r17
    11dc:	cf 93       	push	r28
    11de:	df 93       	push	r29
    11e0:	c8 2f       	mov	r28, r24
    11e2:	e6 2e       	mov	r14, r22
    11e4:	f7 2e       	mov	r15, r23
    11e6:	8a 01       	movw	r16, r20
    11e8:	7f de       	rcall	.-770    	; 0xee8 <start_bus>
    11ea:	90 de       	rcall	.-736    	; 0xf0c <wait_for_bus>
    11ec:	90 91 b9 00 	lds	r25, 0x00B9
    11f0:	98 7f       	andi	r25, 0xF8	; 248
    11f2:	98 30       	cpi	r25, 0x08	; 8
    11f4:	19 f0       	breq	.+6      	; 0x11fc <TWI_send_string_fixed_length+0x28>
    11f6:	80 de       	rcall	.-768    	; 0xef8 <Error>
    11f8:	80 e0       	ldi	r24, 0x00	; 0
    11fa:	23 c0       	rjmp	.+70     	; 0x1242 <TWI_send_string_fixed_length+0x6e>
    11fc:	8c 2f       	mov	r24, r28
    11fe:	8c de       	rcall	.-744    	; 0xf18 <send_data_and_wait>
    1200:	80 91 b9 00 	lds	r24, 0x00B9
    1204:	88 7f       	andi	r24, 0xF8	; 248
    1206:	88 31       	cpi	r24, 0x18	; 24
    1208:	19 f0       	breq	.+6      	; 0x1210 <TWI_send_string_fixed_length+0x3c>
    120a:	76 de       	rcall	.-788    	; 0xef8 <Error>
    120c:	80 e0       	ldi	r24, 0x00	; 0
    120e:	19 c0       	rjmp	.+50     	; 0x1242 <TWI_send_string_fixed_length+0x6e>
    1210:	89 e1       	ldi	r24, 0x19	; 25
    1212:	82 de       	rcall	.-764    	; 0xf18 <send_data_and_wait>
    1214:	80 91 b9 00 	lds	r24, 0x00B9
    1218:	88 7f       	andi	r24, 0xF8	; 248
    121a:	88 32       	cpi	r24, 0x28	; 40
    121c:	21 f4       	brne	.+8      	; 0x1226 <TWI_send_string_fixed_length+0x52>
    121e:	10 16       	cp	r1, r16
    1220:	11 06       	cpc	r1, r17
    1222:	24 f0       	brlt	.+8      	; 0x122c <TWI_send_string_fixed_length+0x58>
    1224:	0c c0       	rjmp	.+24     	; 0x123e <TWI_send_string_fixed_length+0x6a>
    1226:	68 de       	rcall	.-816    	; 0xef8 <Error>
    1228:	80 e0       	ldi	r24, 0x00	; 0
    122a:	0b c0       	rjmp	.+22     	; 0x1242 <TWI_send_string_fixed_length+0x6e>
    122c:	ce 2d       	mov	r28, r14
    122e:	df 2d       	mov	r29, r15
    1230:	0c 0f       	add	r16, r28
    1232:	1d 1f       	adc	r17, r29
    1234:	89 91       	ld	r24, Y+
    1236:	70 de       	rcall	.-800    	; 0xf18 <send_data_and_wait>
    1238:	c0 17       	cp	r28, r16
    123a:	d1 07       	cpc	r29, r17
    123c:	d9 f7       	brne	.-10     	; 0x1234 <TWI_send_string_fixed_length+0x60>
    123e:	58 de       	rcall	.-848    	; 0xef0 <stop_bus>
    1240:	81 e0       	ldi	r24, 0x01	; 1
    1242:	df 91       	pop	r29
    1244:	cf 91       	pop	r28
    1246:	1f 91       	pop	r17
    1248:	0f 91       	pop	r16
    124a:	ff 90       	pop	r15
    124c:	ef 90       	pop	r14
    124e:	08 95       	ret

00001250 <TWI_send_float>:
    1250:	ef 92       	push	r14
    1252:	ff 92       	push	r15
    1254:	0f 93       	push	r16
    1256:	1f 93       	push	r17
    1258:	cf 93       	push	r28
    125a:	df 93       	push	r29
    125c:	00 d0       	rcall	.+0      	; 0x125e <TWI_send_float+0xe>
    125e:	00 d0       	rcall	.+0      	; 0x1260 <TWI_send_float+0x10>
    1260:	cd b7       	in	r28, 0x3d	; 61
    1262:	de b7       	in	r29, 0x3e	; 62
    1264:	18 2f       	mov	r17, r24
    1266:	49 83       	std	Y+1, r20	; 0x01
    1268:	5a 83       	std	Y+2, r21	; 0x02
    126a:	6b 83       	std	Y+3, r22	; 0x03
    126c:	7c 83       	std	Y+4, r23	; 0x04
    126e:	3c de       	rcall	.-904    	; 0xee8 <start_bus>
    1270:	4d de       	rcall	.-870    	; 0xf0c <wait_for_bus>
    1272:	90 91 b9 00 	lds	r25, 0x00B9
    1276:	98 7f       	andi	r25, 0xF8	; 248
    1278:	98 30       	cpi	r25, 0x08	; 8
    127a:	19 f0       	breq	.+6      	; 0x1282 <TWI_send_float+0x32>
    127c:	3d de       	rcall	.-902    	; 0xef8 <Error>
    127e:	80 e0       	ldi	r24, 0x00	; 0
    1280:	24 c0       	rjmp	.+72     	; 0x12ca <TWI_send_float+0x7a>
    1282:	81 2f       	mov	r24, r17
    1284:	49 de       	rcall	.-878    	; 0xf18 <send_data_and_wait>
    1286:	80 91 b9 00 	lds	r24, 0x00B9
    128a:	88 7f       	andi	r24, 0xF8	; 248
    128c:	88 31       	cpi	r24, 0x18	; 24
    128e:	19 f0       	breq	.+6      	; 0x1296 <TWI_send_float+0x46>
    1290:	33 de       	rcall	.-922    	; 0xef8 <Error>
    1292:	80 e0       	ldi	r24, 0x00	; 0
    1294:	1a c0       	rjmp	.+52     	; 0x12ca <TWI_send_float+0x7a>
    1296:	86 e0       	ldi	r24, 0x06	; 6
    1298:	3f de       	rcall	.-898    	; 0xf18 <send_data_and_wait>
    129a:	80 91 b9 00 	lds	r24, 0x00B9
    129e:	88 7f       	andi	r24, 0xF8	; 248
    12a0:	88 32       	cpi	r24, 0x28	; 40
    12a2:	19 f0       	breq	.+6      	; 0x12aa <TWI_send_float+0x5a>
    12a4:	29 de       	rcall	.-942    	; 0xef8 <Error>
    12a6:	80 e0       	ldi	r24, 0x00	; 0
    12a8:	10 c0       	rjmp	.+32     	; 0x12ca <TWI_send_float+0x7a>
    12aa:	8e 01       	movw	r16, r28
    12ac:	0f 5f       	subi	r16, 0xFF	; 255
    12ae:	1f 4f       	sbci	r17, 0xFF	; 255
    12b0:	7e 01       	movw	r14, r28
    12b2:	85 e0       	ldi	r24, 0x05	; 5
    12b4:	e8 0e       	add	r14, r24
    12b6:	f1 1c       	adc	r15, r1
    12b8:	f8 01       	movw	r30, r16
    12ba:	81 91       	ld	r24, Z+
    12bc:	8f 01       	movw	r16, r30
    12be:	2c de       	rcall	.-936    	; 0xf18 <send_data_and_wait>
    12c0:	0e 15       	cp	r16, r14
    12c2:	1f 05       	cpc	r17, r15
    12c4:	c9 f7       	brne	.-14     	; 0x12b8 <TWI_send_float+0x68>
    12c6:	14 de       	rcall	.-984    	; 0xef0 <stop_bus>
    12c8:	81 e0       	ldi	r24, 0x01	; 1
    12ca:	0f 90       	pop	r0
    12cc:	0f 90       	pop	r0
    12ce:	0f 90       	pop	r0
    12d0:	0f 90       	pop	r0
    12d2:	df 91       	pop	r29
    12d4:	cf 91       	pop	r28
    12d6:	1f 91       	pop	r17
    12d8:	0f 91       	pop	r16
    12da:	ff 90       	pop	r15
    12dc:	ef 90       	pop	r14
    12de:	08 95       	ret

000012e0 <TWI_get_command>:
    12e0:	83 5f       	subi	r24, 0xF3	; 243
    12e2:	9b 4e       	sbci	r25, 0xEB	; 235
    12e4:	fc 01       	movw	r30, r24
    12e6:	80 81       	ld	r24, Z
    12e8:	08 95       	ret

000012ea <TWI_get_sensor>:
    12ea:	81 5d       	subi	r24, 0xD1	; 209
    12ec:	9a 4e       	sbci	r25, 0xEA	; 234
    12ee:	fc 01       	movw	r30, r24
    12f0:	80 81       	ld	r24, Z
    12f2:	08 95       	ret

000012f4 <TWI_get_control_setting>:
    12f4:	8e 5e       	subi	r24, 0xEE	; 238
    12f6:	9a 4e       	sbci	r25, 0xEA	; 234
    12f8:	fc 01       	movw	r30, r24
    12fa:	80 81       	ld	r24, Z
    12fc:	08 95       	ret

000012fe <TWI_get_autonom_settings>:
    12fe:	80 91 10 14 	lds	r24, 0x1410
    1302:	08 95       	ret

00001304 <TWI_get_elevation>:
    1304:	80 91 1d 15 	lds	r24, 0x151D
    1308:	08 95       	ret

0000130a <TWI_command_flag>:
    130a:	80 91 c3 13 	lds	r24, 0x13C3
    130e:	88 23       	and	r24, r24
    1310:	21 f0       	breq	.+8      	; 0x131a <TWI_command_flag+0x10>
    1312:	10 92 c3 13 	sts	0x13C3, r1
    1316:	81 e0       	ldi	r24, 0x01	; 1
    1318:	08 95       	ret
    131a:	80 e0       	ldi	r24, 0x00	; 0
    131c:	08 95       	ret

0000131e <TWI_control_settings_flag>:
    131e:	80 91 c2 13 	lds	r24, 0x13C2
    1322:	88 23       	and	r24, r24
    1324:	21 f0       	breq	.+8      	; 0x132e <TWI_control_settings_flag+0x10>
    1326:	10 92 c2 13 	sts	0x13C2, r1
    132a:	81 e0       	ldi	r24, 0x01	; 1
    132c:	08 95       	ret
    132e:	80 e0       	ldi	r24, 0x00	; 0
    1330:	08 95       	ret

00001332 <TWI_autonom_settings_flag>:
    1332:	80 91 c1 13 	lds	r24, 0x13C1
    1336:	88 23       	and	r24, r24
    1338:	21 f0       	breq	.+8      	; 0x1342 <TWI_autonom_settings_flag+0x10>
    133a:	10 92 c1 13 	sts	0x13C1, r1
    133e:	81 e0       	ldi	r24, 0x01	; 1
    1340:	08 95       	ret
    1342:	80 e0       	ldi	r24, 0x00	; 0
    1344:	08 95       	ret

00001346 <TWI_elevation_flag>:
    1346:	80 91 c0 13 	lds	r24, 0x13C0
    134a:	88 23       	and	r24, r24
    134c:	21 f0       	breq	.+8      	; 0x1356 <TWI_elevation_flag+0x10>
    134e:	10 92 c0 13 	sts	0x13C0, r1
    1352:	81 e0       	ldi	r24, 0x01	; 1
    1354:	08 95       	ret
    1356:	80 e0       	ldi	r24, 0x00	; 0
    1358:	08 95       	ret

0000135a <write_to_TwiFIFO>:
    135a:	0f 93       	push	r16
    135c:	1f 93       	push	r17
    135e:	cf 93       	push	r28
    1360:	df 93       	push	r29
    1362:	d8 2f       	mov	r29, r24
    1364:	c9 2f       	mov	r28, r25
    1366:	60 91 20 15 	lds	r22, 0x1520
    136a:	80 91 09 01 	lds	r24, 0x0109
    136e:	90 91 0a 01 	lds	r25, 0x010A
    1372:	9c d8       	rcall	.-3784   	; 0x4ac <FifoWrite>
    1374:	81 11       	cpse	r24, r1
    1376:	1f c0       	rjmp	.+62     	; 0x13b6 <write_to_TwiFIFO+0x5c>
    1378:	20 91 20 15 	lds	r18, 0x1520
    137c:	30 91 21 15 	lds	r19, 0x1521
    1380:	12 16       	cp	r1, r18
    1382:	13 06       	cpc	r1, r19
    1384:	d4 f4       	brge	.+52     	; 0x13ba <write_to_TwiFIFO+0x60>
    1386:	0d 2f       	mov	r16, r29
    1388:	1c 2f       	mov	r17, r28
    138a:	c0 e0       	ldi	r28, 0x00	; 0
    138c:	d0 e0       	ldi	r29, 0x00	; 0
    138e:	f8 01       	movw	r30, r16
    1390:	61 91       	ld	r22, Z+
    1392:	8f 01       	movw	r16, r30
    1394:	80 91 09 01 	lds	r24, 0x0109
    1398:	90 91 0a 01 	lds	r25, 0x010A
    139c:	87 d8       	rcall	.-3826   	; 0x4ac <FifoWrite>
    139e:	81 11       	cpse	r24, r1
    13a0:	0e c0       	rjmp	.+28     	; 0x13be <write_to_TwiFIFO+0x64>
    13a2:	21 96       	adiw	r28, 0x01	; 1
    13a4:	80 91 20 15 	lds	r24, 0x1520
    13a8:	90 91 21 15 	lds	r25, 0x1521
    13ac:	c8 17       	cp	r28, r24
    13ae:	d9 07       	cpc	r29, r25
    13b0:	74 f3       	brlt	.-36     	; 0x138e <write_to_TwiFIFO+0x34>
    13b2:	80 e0       	ldi	r24, 0x00	; 0
    13b4:	05 c0       	rjmp	.+10     	; 0x13c0 <write_to_TwiFIFO+0x66>
    13b6:	81 e0       	ldi	r24, 0x01	; 1
    13b8:	03 c0       	rjmp	.+6      	; 0x13c0 <write_to_TwiFIFO+0x66>
    13ba:	80 e0       	ldi	r24, 0x00	; 0
    13bc:	01 c0       	rjmp	.+2      	; 0x13c0 <write_to_TwiFIFO+0x66>
    13be:	81 e0       	ldi	r24, 0x01	; 1
    13c0:	df 91       	pop	r29
    13c2:	cf 91       	pop	r28
    13c4:	1f 91       	pop	r17
    13c6:	0f 91       	pop	r16
    13c8:	08 95       	ret

000013ca <__vector_26>:
    13ca:	1f 92       	push	r1
    13cc:	0f 92       	push	r0
    13ce:	0f b6       	in	r0, 0x3f	; 63
    13d0:	0f 92       	push	r0
    13d2:	11 24       	eor	r1, r1
    13d4:	0b b6       	in	r0, 0x3b	; 59
    13d6:	0f 92       	push	r0
    13d8:	2f 93       	push	r18
    13da:	3f 93       	push	r19
    13dc:	4f 93       	push	r20
    13de:	5f 93       	push	r21
    13e0:	6f 93       	push	r22
    13e2:	7f 93       	push	r23
    13e4:	8f 93       	push	r24
    13e6:	9f 93       	push	r25
    13e8:	af 93       	push	r26
    13ea:	bf 93       	push	r27
    13ec:	cf 93       	push	r28
    13ee:	df 93       	push	r29
    13f0:	ef 93       	push	r30
    13f2:	ff 93       	push	r31
    13f4:	80 91 17 15 	lds	r24, 0x1517
    13f8:	80 34       	cpi	r24, 0x40	; 64
    13fa:	09 f4       	brne	.+2      	; 0x13fe <__vector_26+0x34>
    13fc:	87 c0       	rjmp	.+270    	; 0x150c <__vector_26+0x142>
    13fe:	80 38       	cpi	r24, 0x80	; 128
    1400:	21 f0       	breq	.+8      	; 0x140a <__vector_26+0x40>
    1402:	80 32       	cpi	r24, 0x20	; 32
    1404:	09 f0       	breq	.+2      	; 0x1408 <__vector_26+0x3e>
    1406:	57 c1       	rjmp	.+686    	; 0x16b6 <__vector_26+0x2ec>
    1408:	c9 c0       	rjmp	.+402    	; 0x159c <__vector_26+0x1d2>
    140a:	80 91 b9 00 	lds	r24, 0x00B9
    140e:	88 7f       	andi	r24, 0xF8	; 248
    1410:	80 36       	cpi	r24, 0x60	; 96
    1412:	29 f0       	breq	.+10     	; 0x141e <__vector_26+0x54>
    1414:	80 91 b9 00 	lds	r24, 0x00B9
    1418:	88 7f       	andi	r24, 0xF8	; 248
    141a:	88 36       	cpi	r24, 0x68	; 104
    141c:	21 f4       	brne	.+8      	; 0x1426 <__vector_26+0x5c>
    141e:	81 e0       	ldi	r24, 0x01	; 1
    1420:	80 93 1a 15 	sts	0x151A, r24
    1424:	71 c0       	rjmp	.+226    	; 0x1508 <__vector_26+0x13e>
    1426:	80 91 b9 00 	lds	r24, 0x00B9
    142a:	88 7f       	andi	r24, 0xF8	; 248
    142c:	80 37       	cpi	r24, 0x70	; 112
    142e:	29 f0       	breq	.+10     	; 0x143a <__vector_26+0x70>
    1430:	80 91 b9 00 	lds	r24, 0x00B9
    1434:	88 7f       	andi	r24, 0xF8	; 248
    1436:	88 37       	cpi	r24, 0x78	; 120
    1438:	39 f4       	brne	.+14     	; 0x1448 <__vector_26+0x7e>
    143a:	8f ef       	ldi	r24, 0xFF	; 255
    143c:	90 e0       	ldi	r25, 0x00	; 0
    143e:	90 93 24 15 	sts	0x1524, r25
    1442:	80 93 23 15 	sts	0x1523, r24
    1446:	60 c0       	rjmp	.+192    	; 0x1508 <__vector_26+0x13e>
    1448:	80 91 b9 00 	lds	r24, 0x00B9
    144c:	88 7f       	andi	r24, 0xF8	; 248
    144e:	80 38       	cpi	r24, 0x80	; 128
    1450:	b9 f5       	brne	.+110    	; 0x14c0 <__vector_26+0xf6>
    1452:	80 91 1a 15 	lds	r24, 0x151A
    1456:	88 23       	and	r24, r24
    1458:	41 f0       	breq	.+16     	; 0x146a <__vector_26+0xa0>
    145a:	55 dd       	rcall	.-1366   	; 0xf06 <get_data>
    145c:	80 93 23 15 	sts	0x1523, r24
    1460:	10 92 24 15 	sts	0x1524, r1
    1464:	10 92 1a 15 	sts	0x151A, r1
    1468:	4f c0       	rjmp	.+158    	; 0x1508 <__vector_26+0x13e>
    146a:	80 91 23 15 	lds	r24, 0x1523
    146e:	90 91 24 15 	lds	r25, 0x1524
    1472:	85 30       	cpi	r24, 0x05	; 5
    1474:	91 05       	cpc	r25, r1
    1476:	71 f0       	breq	.+28     	; 0x1494 <__vector_26+0xca>
    1478:	24 f4       	brge	.+8      	; 0x1482 <__vector_26+0xb8>
    147a:	01 97       	sbiw	r24, 0x01	; 1
    147c:	09 f0       	breq	.+2      	; 0x1480 <__vector_26+0xb6>
    147e:	44 c0       	rjmp	.+136    	; 0x1508 <__vector_26+0x13e>
    1480:	07 c0       	rjmp	.+14     	; 0x1490 <__vector_26+0xc6>
    1482:	86 30       	cpi	r24, 0x06	; 6
    1484:	91 05       	cpc	r25, r1
    1486:	51 f0       	breq	.+20     	; 0x149c <__vector_26+0xd2>
    1488:	49 97       	sbiw	r24, 0x19	; 25
    148a:	09 f0       	breq	.+2      	; 0x148e <__vector_26+0xc4>
    148c:	3d c0       	rjmp	.+122    	; 0x1508 <__vector_26+0x13e>
    148e:	04 c0       	rjmp	.+8      	; 0x1498 <__vector_26+0xce>
    1490:	64 dd       	rcall	.-1336   	; 0xf5a <get_control_settings_from_bus>
    1492:	3a c0       	rjmp	.+116    	; 0x1508 <__vector_26+0x13e>
    1494:	73 dd       	rcall	.-1306   	; 0xf7c <get_autonom_settings_from_bus>
    1496:	38 c0       	rjmp	.+112    	; 0x1508 <__vector_26+0x13e>
    1498:	75 dd       	rcall	.-1302   	; 0xf84 <get_char_from_bus>
    149a:	36 c0       	rjmp	.+108    	; 0x1508 <__vector_26+0x13e>
    149c:	c0 91 18 15 	lds	r28, 0x1518
    14a0:	d0 91 19 15 	lds	r29, 0x1519
    14a4:	30 dd       	rcall	.-1440   	; 0xf06 <get_data>
    14a6:	c7 5f       	subi	r28, 0xF7	; 247
    14a8:	db 4e       	sbci	r29, 0xEB	; 235
    14aa:	88 83       	st	Y, r24
    14ac:	80 91 18 15 	lds	r24, 0x1518
    14b0:	90 91 19 15 	lds	r25, 0x1519
    14b4:	01 96       	adiw	r24, 0x01	; 1
    14b6:	90 93 19 15 	sts	0x1519, r25
    14ba:	80 93 18 15 	sts	0x1518, r24
    14be:	24 c0       	rjmp	.+72     	; 0x1508 <__vector_26+0x13e>
    14c0:	80 91 b9 00 	lds	r24, 0x00B9
    14c4:	88 7f       	andi	r24, 0xF8	; 248
    14c6:	80 39       	cpi	r24, 0x90	; 144
    14c8:	11 f4       	brne	.+4      	; 0x14ce <__vector_26+0x104>
    14ca:	76 dd       	rcall	.-1300   	; 0xfb8 <get_sensor_from_bus>
    14cc:	1d c0       	rjmp	.+58     	; 0x1508 <__vector_26+0x13e>
    14ce:	80 91 b9 00 	lds	r24, 0x00B9
    14d2:	88 7f       	andi	r24, 0xF8	; 248
    14d4:	80 3a       	cpi	r24, 0xA0	; 160
    14d6:	c1 f4       	brne	.+48     	; 0x1508 <__vector_26+0x13e>
    14d8:	25 dd       	rcall	.-1462   	; 0xf24 <stop_twi>
    14da:	80 91 23 15 	lds	r24, 0x1523
    14de:	90 91 24 15 	lds	r25, 0x1524
    14e2:	85 30       	cpi	r24, 0x05	; 5
    14e4:	91 05       	cpc	r25, r1
    14e6:	49 f0       	breq	.+18     	; 0x14fa <__vector_26+0x130>
    14e8:	89 31       	cpi	r24, 0x19	; 25
    14ea:	91 05       	cpc	r25, r1
    14ec:	51 f0       	breq	.+20     	; 0x1502 <__vector_26+0x138>
    14ee:	01 97       	sbiw	r24, 0x01	; 1
    14f0:	59 f4       	brne	.+22     	; 0x1508 <__vector_26+0x13e>
    14f2:	81 e0       	ldi	r24, 0x01	; 1
    14f4:	80 93 c2 13 	sts	0x13C2, r24
    14f8:	07 c0       	rjmp	.+14     	; 0x1508 <__vector_26+0x13e>
    14fa:	81 e0       	ldi	r24, 0x01	; 1
    14fc:	80 93 c1 13 	sts	0x13C1, r24
    1500:	03 c0       	rjmp	.+6      	; 0x1508 <__vector_26+0x13e>
    1502:	81 e1       	ldi	r24, 0x11	; 17
    1504:	94 e1       	ldi	r25, 0x14	; 20
    1506:	29 df       	rcall	.-430    	; 0x135a <write_to_TwiFIFO>
    1508:	22 dd       	rcall	.-1468   	; 0xf4e <reset_TWI>
    150a:	d5 c0       	rjmp	.+426    	; 0x16b6 <__vector_26+0x2ec>
    150c:	80 91 b9 00 	lds	r24, 0x00B9
    1510:	88 7f       	andi	r24, 0xF8	; 248
    1512:	80 36       	cpi	r24, 0x60	; 96
    1514:	29 f0       	breq	.+10     	; 0x1520 <__vector_26+0x156>
    1516:	80 91 b9 00 	lds	r24, 0x00B9
    151a:	88 7f       	andi	r24, 0xF8	; 248
    151c:	88 36       	cpi	r24, 0x68	; 104
    151e:	21 f4       	brne	.+8      	; 0x1528 <__vector_26+0x15e>
    1520:	81 e0       	ldi	r24, 0x01	; 1
    1522:	80 93 1a 15 	sts	0x151A, r24
    1526:	38 c0       	rjmp	.+112    	; 0x1598 <__vector_26+0x1ce>
    1528:	80 91 b9 00 	lds	r24, 0x00B9
    152c:	88 7f       	andi	r24, 0xF8	; 248
    152e:	80 38       	cpi	r24, 0x80	; 128
    1530:	e1 f4       	brne	.+56     	; 0x156a <__vector_26+0x1a0>
    1532:	80 91 1a 15 	lds	r24, 0x151A
    1536:	88 23       	and	r24, r24
    1538:	41 f0       	breq	.+16     	; 0x154a <__vector_26+0x180>
    153a:	e5 dc       	rcall	.-1590   	; 0xf06 <get_data>
    153c:	80 93 23 15 	sts	0x1523, r24
    1540:	10 92 24 15 	sts	0x1524, r1
    1544:	10 92 1a 15 	sts	0x151A, r1
    1548:	27 c0       	rjmp	.+78     	; 0x1598 <__vector_26+0x1ce>
    154a:	80 91 23 15 	lds	r24, 0x1523
    154e:	90 91 24 15 	lds	r25, 0x1524
    1552:	82 30       	cpi	r24, 0x02	; 2
    1554:	91 05       	cpc	r25, r1
    1556:	19 f0       	breq	.+6      	; 0x155e <__vector_26+0x194>
    1558:	49 97       	sbiw	r24, 0x19	; 25
    155a:	f1 f4       	brne	.+60     	; 0x1598 <__vector_26+0x1ce>
    155c:	04 c0       	rjmp	.+8      	; 0x1566 <__vector_26+0x19c>
    155e:	d3 dc       	rcall	.-1626   	; 0xf06 <get_data>
    1560:	80 93 22 15 	sts	0x1522, r24
    1564:	19 c0       	rjmp	.+50     	; 0x1598 <__vector_26+0x1ce>
    1566:	0e dd       	rcall	.-1508   	; 0xf84 <get_char_from_bus>
    1568:	17 c0       	rjmp	.+46     	; 0x1598 <__vector_26+0x1ce>
    156a:	80 91 b9 00 	lds	r24, 0x00B9
    156e:	88 7f       	andi	r24, 0xF8	; 248
    1570:	80 3a       	cpi	r24, 0xA0	; 160
    1572:	91 f4       	brne	.+36     	; 0x1598 <__vector_26+0x1ce>
    1574:	d7 dc       	rcall	.-1618   	; 0xf24 <stop_twi>
    1576:	80 91 23 15 	lds	r24, 0x1523
    157a:	90 91 24 15 	lds	r25, 0x1524
    157e:	82 30       	cpi	r24, 0x02	; 2
    1580:	91 05       	cpc	r25, r1
    1582:	19 f0       	breq	.+6      	; 0x158a <__vector_26+0x1c0>
    1584:	49 97       	sbiw	r24, 0x19	; 25
    1586:	41 f4       	brne	.+16     	; 0x1598 <__vector_26+0x1ce>
    1588:	04 c0       	rjmp	.+8      	; 0x1592 <__vector_26+0x1c8>
    158a:	81 e0       	ldi	r24, 0x01	; 1
    158c:	80 93 bf 13 	sts	0x13BF, r24
    1590:	03 c0       	rjmp	.+6      	; 0x1598 <__vector_26+0x1ce>
    1592:	81 e1       	ldi	r24, 0x11	; 17
    1594:	94 e1       	ldi	r25, 0x14	; 20
    1596:	e1 de       	rcall	.-574    	; 0x135a <write_to_TwiFIFO>
    1598:	da dc       	rcall	.-1612   	; 0xf4e <reset_TWI>
    159a:	8d c0       	rjmp	.+282    	; 0x16b6 <__vector_26+0x2ec>
    159c:	80 91 b9 00 	lds	r24, 0x00B9
    15a0:	88 7f       	andi	r24, 0xF8	; 248
    15a2:	80 36       	cpi	r24, 0x60	; 96
    15a4:	29 f0       	breq	.+10     	; 0x15b0 <__vector_26+0x1e6>
    15a6:	80 91 b9 00 	lds	r24, 0x00B9
    15aa:	88 7f       	andi	r24, 0xF8	; 248
    15ac:	88 36       	cpi	r24, 0x68	; 104
    15ae:	21 f4       	brne	.+8      	; 0x15b8 <__vector_26+0x1ee>
    15b0:	81 e0       	ldi	r24, 0x01	; 1
    15b2:	80 93 1a 15 	sts	0x151A, r24
    15b6:	7e c0       	rjmp	.+252    	; 0x16b4 <__vector_26+0x2ea>
    15b8:	80 91 b9 00 	lds	r24, 0x00B9
    15bc:	88 7f       	andi	r24, 0xF8	; 248
    15be:	80 37       	cpi	r24, 0x70	; 112
    15c0:	29 f0       	breq	.+10     	; 0x15cc <__vector_26+0x202>
    15c2:	80 91 b9 00 	lds	r24, 0x00B9
    15c6:	88 7f       	andi	r24, 0xF8	; 248
    15c8:	88 37       	cpi	r24, 0x78	; 120
    15ca:	39 f4       	brne	.+14     	; 0x15da <__vector_26+0x210>
    15cc:	8f ef       	ldi	r24, 0xFF	; 255
    15ce:	90 e0       	ldi	r25, 0x00	; 0
    15d0:	90 93 24 15 	sts	0x1524, r25
    15d4:	80 93 23 15 	sts	0x1523, r24
    15d8:	6d c0       	rjmp	.+218    	; 0x16b4 <__vector_26+0x2ea>
    15da:	80 91 b9 00 	lds	r24, 0x00B9
    15de:	88 7f       	andi	r24, 0xF8	; 248
    15e0:	80 38       	cpi	r24, 0x80	; 128
    15e2:	09 f0       	breq	.+2      	; 0x15e6 <__vector_26+0x21c>
    15e4:	3a c0       	rjmp	.+116    	; 0x165a <__vector_26+0x290>
    15e6:	80 91 1a 15 	lds	r24, 0x151A
    15ea:	88 23       	and	r24, r24
    15ec:	41 f0       	breq	.+16     	; 0x15fe <__vector_26+0x234>
    15ee:	8b dc       	rcall	.-1770   	; 0xf06 <get_data>
    15f0:	80 93 23 15 	sts	0x1523, r24
    15f4:	10 92 24 15 	sts	0x1524, r1
    15f8:	10 92 1a 15 	sts	0x151A, r1
    15fc:	5b c0       	rjmp	.+182    	; 0x16b4 <__vector_26+0x2ea>
    15fe:	80 91 23 15 	lds	r24, 0x1523
    1602:	90 91 24 15 	lds	r25, 0x1524
    1606:	81 30       	cpi	r24, 0x01	; 1
    1608:	91 05       	cpc	r25, r1
    160a:	19 f1       	breq	.+70     	; 0x1652 <__vector_26+0x288>
    160c:	1c f4       	brge	.+6      	; 0x1614 <__vector_26+0x24a>
    160e:	89 2b       	or	r24, r25
    1610:	41 f0       	breq	.+16     	; 0x1622 <__vector_26+0x258>
    1612:	50 c0       	rjmp	.+160    	; 0x16b4 <__vector_26+0x2ea>
    1614:	84 30       	cpi	r24, 0x04	; 4
    1616:	91 05       	cpc	r25, r1
    1618:	b1 f0       	breq	.+44     	; 0x1646 <__vector_26+0x27c>
    161a:	05 97       	sbiw	r24, 0x05	; 5
    161c:	09 f0       	breq	.+2      	; 0x1620 <__vector_26+0x256>
    161e:	4a c0       	rjmp	.+148    	; 0x16b4 <__vector_26+0x2ea>
    1620:	1a c0       	rjmp	.+52     	; 0x1656 <__vector_26+0x28c>
    1622:	c0 91 1b 15 	lds	r28, 0x151B
    1626:	d0 91 1c 15 	lds	r29, 0x151C
    162a:	6d dc       	rcall	.-1830   	; 0xf06 <get_data>
    162c:	c3 5f       	subi	r28, 0xF3	; 243
    162e:	db 4e       	sbci	r29, 0xEB	; 235
    1630:	88 83       	st	Y, r24
    1632:	80 91 1b 15 	lds	r24, 0x151B
    1636:	90 91 1c 15 	lds	r25, 0x151C
    163a:	01 96       	adiw	r24, 0x01	; 1
    163c:	90 93 1c 15 	sts	0x151C, r25
    1640:	80 93 1b 15 	sts	0x151B, r24
    1644:	37 c0       	rjmp	.+110    	; 0x16b4 <__vector_26+0x2ea>
    1646:	5f dc       	rcall	.-1858   	; 0xf06 <get_data>
    1648:	80 93 1d 15 	sts	0x151D, r24
    164c:	10 92 1e 15 	sts	0x151E, r1
    1650:	31 c0       	rjmp	.+98     	; 0x16b4 <__vector_26+0x2ea>
    1652:	83 dc       	rcall	.-1786   	; 0xf5a <get_control_settings_from_bus>
    1654:	2f c0       	rjmp	.+94     	; 0x16b4 <__vector_26+0x2ea>
    1656:	92 dc       	rcall	.-1756   	; 0xf7c <get_autonom_settings_from_bus>
    1658:	2d c0       	rjmp	.+90     	; 0x16b4 <__vector_26+0x2ea>
    165a:	80 91 b9 00 	lds	r24, 0x00B9
    165e:	88 7f       	andi	r24, 0xF8	; 248
    1660:	80 39       	cpi	r24, 0x90	; 144
    1662:	11 f4       	brne	.+4      	; 0x1668 <__vector_26+0x29e>
    1664:	a9 dc       	rcall	.-1710   	; 0xfb8 <get_sensor_from_bus>
    1666:	26 c0       	rjmp	.+76     	; 0x16b4 <__vector_26+0x2ea>
    1668:	80 91 b9 00 	lds	r24, 0x00B9
    166c:	88 7f       	andi	r24, 0xF8	; 248
    166e:	80 3a       	cpi	r24, 0xA0	; 160
    1670:	09 f5       	brne	.+66     	; 0x16b4 <__vector_26+0x2ea>
    1672:	58 dc       	rcall	.-1872   	; 0xf24 <stop_twi>
    1674:	80 91 23 15 	lds	r24, 0x1523
    1678:	90 91 24 15 	lds	r25, 0x1524
    167c:	81 30       	cpi	r24, 0x01	; 1
    167e:	91 05       	cpc	r25, r1
    1680:	91 f0       	breq	.+36     	; 0x16a6 <__vector_26+0x2dc>
    1682:	1c f4       	brge	.+6      	; 0x168a <__vector_26+0x2c0>
    1684:	89 2b       	or	r24, r25
    1686:	39 f0       	breq	.+14     	; 0x1696 <__vector_26+0x2cc>
    1688:	15 c0       	rjmp	.+42     	; 0x16b4 <__vector_26+0x2ea>
    168a:	84 30       	cpi	r24, 0x04	; 4
    168c:	91 05       	cpc	r25, r1
    168e:	39 f0       	breq	.+14     	; 0x169e <__vector_26+0x2d4>
    1690:	05 97       	sbiw	r24, 0x05	; 5
    1692:	81 f4       	brne	.+32     	; 0x16b4 <__vector_26+0x2ea>
    1694:	0c c0       	rjmp	.+24     	; 0x16ae <__vector_26+0x2e4>
    1696:	81 e0       	ldi	r24, 0x01	; 1
    1698:	80 93 c3 13 	sts	0x13C3, r24
    169c:	0b c0       	rjmp	.+22     	; 0x16b4 <__vector_26+0x2ea>
    169e:	81 e0       	ldi	r24, 0x01	; 1
    16a0:	80 93 c0 13 	sts	0x13C0, r24
    16a4:	07 c0       	rjmp	.+14     	; 0x16b4 <__vector_26+0x2ea>
    16a6:	81 e0       	ldi	r24, 0x01	; 1
    16a8:	80 93 c2 13 	sts	0x13C2, r24
    16ac:	03 c0       	rjmp	.+6      	; 0x16b4 <__vector_26+0x2ea>
    16ae:	81 e0       	ldi	r24, 0x01	; 1
    16b0:	80 93 c1 13 	sts	0x13C1, r24
    16b4:	4c dc       	rcall	.-1896   	; 0xf4e <reset_TWI>
    16b6:	ff 91       	pop	r31
    16b8:	ef 91       	pop	r30
    16ba:	df 91       	pop	r29
    16bc:	cf 91       	pop	r28
    16be:	bf 91       	pop	r27
    16c0:	af 91       	pop	r26
    16c2:	9f 91       	pop	r25
    16c4:	8f 91       	pop	r24
    16c6:	7f 91       	pop	r23
    16c8:	6f 91       	pop	r22
    16ca:	5f 91       	pop	r21
    16cc:	4f 91       	pop	r20
    16ce:	3f 91       	pop	r19
    16d0:	2f 91       	pop	r18
    16d2:	0f 90       	pop	r0
    16d4:	0b be       	out	0x3b, r0	; 59
    16d6:	0f 90       	pop	r0
    16d8:	0f be       	out	0x3f, r0	; 63
    16da:	0f 90       	pop	r0
    16dc:	1f 90       	pop	r1
    16de:	18 95       	reti

000016e0 <USART_init>:
    16e0:	10 92 c5 00 	sts	0x00C5, r1
    16e4:	87 e0       	ldi	r24, 0x07	; 7
    16e6:	80 93 c4 00 	sts	0x00C4, r24
    16ea:	88 e9       	ldi	r24, 0x98	; 152
    16ec:	80 93 c1 00 	sts	0x00C1, r24
    16f0:	86 e0       	ldi	r24, 0x06	; 6
    16f2:	80 93 c2 00 	sts	0x00C2, r24
    16f6:	08 95       	ret

000016f8 <USART_set_twi_message_destination>:
    16f8:	90 93 1b 11 	sts	0x111B, r25
    16fc:	80 93 1a 11 	sts	0x111A, r24
    1700:	08 95       	ret

00001702 <USART_check_tx_ready>:
    1702:	80 91 c0 00 	lds	r24, 0x00C0
    1706:	80 72       	andi	r24, 0x20	; 32
    1708:	08 95       	ret

0000170a <USART_write_byte>:
    170a:	cf 93       	push	r28
    170c:	c8 2f       	mov	r28, r24
    170e:	f9 df       	rcall	.-14     	; 0x1702 <USART_check_tx_ready>
    1710:	88 23       	and	r24, r24
    1712:	e9 f3       	breq	.-6      	; 0x170e <USART_write_byte+0x4>
    1714:	c0 93 c6 00 	sts	0x00C6, r28
    1718:	cf 91       	pop	r28
    171a:	08 95       	ret

0000171c <USART_crc16>:
    171c:	cf 92       	push	r12
    171e:	df 92       	push	r13
    1720:	ef 92       	push	r14
    1722:	ff 92       	push	r15
    1724:	0f 93       	push	r16
    1726:	1f 93       	push	r17
    1728:	cf 93       	push	r28
    172a:	df 93       	push	r29
    172c:	66 23       	and	r22, r22
    172e:	09 f4       	brne	.+2      	; 0x1732 <USART_crc16+0x16>
    1730:	3e c0       	rjmp	.+124    	; 0x17ae <USART_crc16+0x92>
    1732:	06 2f       	mov	r16, r22
    1734:	10 e0       	ldi	r17, 0x00	; 0
    1736:	4f ef       	ldi	r20, 0xFF	; 255
    1738:	5f ef       	ldi	r21, 0xFF	; 255
    173a:	ee ef       	ldi	r30, 0xFE	; 254
    173c:	ff ef       	ldi	r31, 0xFF	; 255
    173e:	c6 2e       	mov	r12, r22
    1740:	d1 2c       	mov	r13, r1
    1742:	e8 2e       	mov	r14, r24
    1744:	f1 2c       	mov	r15, r1
    1746:	c8 e0       	ldi	r28, 0x08	; 8
    1748:	d0 e0       	ldi	r29, 0x00	; 0
    174a:	ee 3f       	cpi	r30, 0xFE	; 254
    174c:	6f ef       	ldi	r22, 0xFF	; 255
    174e:	f6 07       	cpc	r31, r22
    1750:	19 f4       	brne	.+6      	; 0x1758 <USART_crc16+0x3c>
    1752:	8e 2d       	mov	r24, r14
    1754:	9f 2d       	mov	r25, r15
    1756:	30 c0       	rjmp	.+96     	; 0x17b8 <USART_crc16+0x9c>
    1758:	ef 3f       	cpi	r30, 0xFF	; 255
    175a:	8f ef       	ldi	r24, 0xFF	; 255
    175c:	f8 07       	cpc	r31, r24
    175e:	19 f4       	brne	.+6      	; 0x1766 <USART_crc16+0x4a>
    1760:	8c 2d       	mov	r24, r12
    1762:	9d 2d       	mov	r25, r13
    1764:	29 c0       	rjmp	.+82     	; 0x17b8 <USART_crc16+0x9c>
    1766:	df 01       	movw	r26, r30
    1768:	a4 5c       	subi	r26, 0xC4	; 196
    176a:	b8 4e       	sbci	r27, 0xE8	; 232
    176c:	8c 91       	ld	r24, X
    176e:	90 e0       	ldi	r25, 0x00	; 0
    1770:	23 c0       	rjmp	.+70     	; 0x17b8 <USART_crc16+0x9c>
    1772:	ba 01       	movw	r22, r20
    1774:	68 27       	eor	r22, r24
    1776:	79 27       	eor	r23, r25
    1778:	60 ff       	sbrs	r22, 0
    177a:	07 c0       	rjmp	.+14     	; 0x178a <USART_crc16+0x6e>
    177c:	56 95       	lsr	r21
    177e:	47 95       	ror	r20
    1780:	68 e0       	ldi	r22, 0x08	; 8
    1782:	46 27       	eor	r20, r22
    1784:	64 e8       	ldi	r22, 0x84	; 132
    1786:	56 27       	eor	r21, r22
    1788:	02 c0       	rjmp	.+4      	; 0x178e <USART_crc16+0x72>
    178a:	56 95       	lsr	r21
    178c:	47 95       	ror	r20
    178e:	96 95       	lsr	r25
    1790:	87 95       	ror	r24
    1792:	21 50       	subi	r18, 0x01	; 1
    1794:	31 09       	sbc	r19, r1
    1796:	69 f7       	brne	.-38     	; 0x1772 <USART_crc16+0x56>
    1798:	31 96       	adiw	r30, 0x01	; 1
    179a:	e0 17       	cp	r30, r16
    179c:	f1 07       	cpc	r31, r17
    179e:	a9 f6       	brne	.-86     	; 0x174a <USART_crc16+0x2e>
    17a0:	9a 01       	movw	r18, r20
    17a2:	20 95       	com	r18
    17a4:	30 95       	com	r19
    17a6:	32 27       	eor	r19, r18
    17a8:	23 27       	eor	r18, r19
    17aa:	32 27       	eor	r19, r18
    17ac:	02 c0       	rjmp	.+4      	; 0x17b2 <USART_crc16+0x96>
    17ae:	20 e0       	ldi	r18, 0x00	; 0
    17b0:	30 e0       	ldi	r19, 0x00	; 0
    17b2:	82 2f       	mov	r24, r18
    17b4:	93 2f       	mov	r25, r19
    17b6:	02 c0       	rjmp	.+4      	; 0x17bc <USART_crc16+0xa0>
    17b8:	9e 01       	movw	r18, r28
    17ba:	db cf       	rjmp	.-74     	; 0x1772 <USART_crc16+0x56>
    17bc:	df 91       	pop	r29
    17be:	cf 91       	pop	r28
    17c0:	1f 91       	pop	r17
    17c2:	0f 91       	pop	r16
    17c4:	ff 90       	pop	r15
    17c6:	ef 90       	pop	r14
    17c8:	df 90       	pop	r13
    17ca:	cf 90       	pop	r12
    17cc:	08 95       	ret

000017ce <USART_send_packet>:
    17ce:	0f 93       	push	r16
    17d0:	1f 93       	push	r17
    17d2:	cf 93       	push	r28
    17d4:	df 93       	push	r29
    17d6:	9e e7       	ldi	r25, 0x7E	; 126
    17d8:	90 93 3b 18 	sts	0x183B, r25
    17dc:	80 93 3c 18 	sts	0x183C, r24
    17e0:	60 93 3d 18 	sts	0x183D, r22
    17e4:	26 2f       	mov	r18, r22
    17e6:	30 e0       	ldi	r19, 0x00	; 0
    17e8:	12 16       	cp	r1, r18
    17ea:	13 06       	cpc	r1, r19
    17ec:	4c f5       	brge	.+82     	; 0x1840 <USART_send_packet+0x72>
    17ee:	ec e3       	ldi	r30, 0x3C	; 60
    17f0:	f7 e1       	ldi	r31, 0x17	; 23
    17f2:	03 e0       	ldi	r16, 0x03	; 3
    17f4:	10 e0       	ldi	r17, 0x00	; 0
    17f6:	c0 e0       	ldi	r28, 0x00	; 0
    17f8:	d0 e0       	ldi	r29, 0x00	; 0
    17fa:	7d e7       	ldi	r23, 0x7D	; 125
    17fc:	50 e2       	ldi	r21, 0x20	; 32
    17fe:	90 81       	ld	r25, Z
    1800:	49 2f       	mov	r20, r25
    1802:	4d 57       	subi	r20, 0x7D	; 125
    1804:	42 30       	cpi	r20, 0x02	; 2
    1806:	80 f4       	brcc	.+32     	; 0x1828 <USART_send_packet+0x5a>
    1808:	d8 01       	movw	r26, r16
    180a:	a5 5c       	subi	r26, 0xC5	; 197
    180c:	b7 4e       	sbci	r27, 0xE7	; 231
    180e:	ac 0f       	add	r26, r28
    1810:	bd 1f       	adc	r27, r29
    1812:	7c 93       	st	X, r23
    1814:	0f 5f       	subi	r16, 0xFF	; 255
    1816:	1f 4f       	sbci	r17, 0xFF	; 255
    1818:	d8 01       	movw	r26, r16
    181a:	a5 5c       	subi	r26, 0xC5	; 197
    181c:	b7 4e       	sbci	r27, 0xE7	; 231
    181e:	ac 0f       	add	r26, r28
    1820:	bd 1f       	adc	r27, r29
    1822:	95 27       	eor	r25, r21
    1824:	9c 93       	st	X, r25
    1826:	06 c0       	rjmp	.+12     	; 0x1834 <USART_send_packet+0x66>
    1828:	d8 01       	movw	r26, r16
    182a:	a5 5c       	subi	r26, 0xC5	; 197
    182c:	b7 4e       	sbci	r27, 0xE7	; 231
    182e:	ac 0f       	add	r26, r28
    1830:	bd 1f       	adc	r27, r29
    1832:	9c 93       	st	X, r25
    1834:	21 96       	adiw	r28, 0x01	; 1
    1836:	31 96       	adiw	r30, 0x01	; 1
    1838:	c2 17       	cp	r28, r18
    183a:	d3 07       	cpc	r29, r19
    183c:	01 f7       	brne	.-64     	; 0x17fe <USART_send_packet+0x30>
    183e:	04 c0       	rjmp	.+8      	; 0x1848 <USART_send_packet+0x7a>
    1840:	03 e0       	ldi	r16, 0x03	; 3
    1842:	10 e0       	ldi	r17, 0x00	; 0
    1844:	c0 e0       	ldi	r28, 0x00	; 0
    1846:	d0 e0       	ldi	r29, 0x00	; 0
    1848:	69 df       	rcall	.-302    	; 0x171c <USART_crc16>
    184a:	f8 01       	movw	r30, r16
    184c:	e5 5c       	subi	r30, 0xC5	; 197
    184e:	f7 4e       	sbci	r31, 0xE7	; 231
    1850:	ec 0f       	add	r30, r28
    1852:	fd 1f       	adc	r31, r29
    1854:	90 83       	st	Z, r25
    1856:	81 83       	std	Z+1, r24	; 0x01
    1858:	22 96       	adiw	r28, 0x02	; 2
    185a:	0c 0f       	add	r16, r28
    185c:	1d 1f       	adc	r17, r29
    185e:	f8 01       	movw	r30, r16
    1860:	e5 5c       	subi	r30, 0xC5	; 197
    1862:	f7 4e       	sbci	r31, 0xE7	; 231
    1864:	8e e7       	ldi	r24, 0x7E	; 126
    1866:	80 83       	st	Z, r24
    1868:	c8 01       	movw	r24, r16
    186a:	01 96       	adiw	r24, 0x01	; 1
    186c:	18 16       	cp	r1, r24
    186e:	19 06       	cpc	r1, r25
    1870:	4c f4       	brge	.+18     	; 0x1884 <USART_send_packet+0xb6>
    1872:	cb e3       	ldi	r28, 0x3B	; 59
    1874:	d8 e1       	ldi	r29, 0x18	; 24
    1876:	04 5c       	subi	r16, 0xC4	; 196
    1878:	17 4e       	sbci	r17, 0xE7	; 231
    187a:	89 91       	ld	r24, Y+
    187c:	46 df       	rcall	.-372    	; 0x170a <USART_write_byte>
    187e:	c0 17       	cp	r28, r16
    1880:	d1 07       	cpc	r29, r17
    1882:	d9 f7       	brne	.-10     	; 0x187a <USART_send_packet+0xac>
    1884:	df 91       	pop	r29
    1886:	cf 91       	pop	r28
    1888:	1f 91       	pop	r17
    188a:	0f 91       	pop	r16
    188c:	08 95       	ret

0000188e <USART_send_command>:
    188e:	80 e0       	ldi	r24, 0x00	; 0
    1890:	90 e0       	ldi	r25, 0x00	; 0
    1892:	26 dd       	rcall	.-1460   	; 0x12e0 <TWI_get_command>
    1894:	80 93 3c 17 	sts	0x173C, r24
    1898:	81 e0       	ldi	r24, 0x01	; 1
    189a:	90 e0       	ldi	r25, 0x00	; 0
    189c:	21 dd       	rcall	.-1470   	; 0x12e0 <TWI_get_command>
    189e:	80 93 3d 17 	sts	0x173D, r24
    18a2:	82 e0       	ldi	r24, 0x02	; 2
    18a4:	90 e0       	ldi	r25, 0x00	; 0
    18a6:	1c dd       	rcall	.-1480   	; 0x12e0 <TWI_get_command>
    18a8:	80 93 3e 17 	sts	0x173E, r24
    18ac:	63 e0       	ldi	r22, 0x03	; 3
    18ae:	83 e4       	ldi	r24, 0x43	; 67
    18b0:	8e cf       	rjmp	.-228    	; 0x17ce <USART_send_packet>

000018b2 <USART_send_elevation>:
    18b2:	28 dd       	rcall	.-1456   	; 0x1304 <TWI_get_elevation>
    18b4:	80 93 3c 17 	sts	0x173C, r24
    18b8:	61 e0       	ldi	r22, 0x01	; 1
    18ba:	85 e4       	ldi	r24, 0x45	; 69
    18bc:	88 cf       	rjmp	.-240    	; 0x17ce <USART_send_packet>

000018be <USART_send_turn>:
    18be:	90 93 3c 17 	sts	0x173C, r25
    18c2:	80 93 3d 17 	sts	0x173D, r24
    18c6:	60 93 3e 17 	sts	0x173E, r22
    18ca:	63 e0       	ldi	r22, 0x03	; 3
    18cc:	84 e5       	ldi	r24, 0x54	; 84
    18ce:	7f cf       	rjmp	.-258    	; 0x17ce <USART_send_packet>

000018d0 <USART_send_climb>:
    18d0:	60 e0       	ldi	r22, 0x00	; 0
    18d2:	88 e4       	ldi	r24, 0x48	; 72
    18d4:	7c cf       	rjmp	.-264    	; 0x17ce <USART_send_packet>

000018d6 <USART_decode_message_rx_fifo>:
    18d6:	8f 92       	push	r8
    18d8:	9f 92       	push	r9
    18da:	af 92       	push	r10
    18dc:	bf 92       	push	r11
    18de:	cf 92       	push	r12
    18e0:	df 92       	push	r13
    18e2:	ef 92       	push	r14
    18e4:	ff 92       	push	r15
    18e6:	0f 93       	push	r16
    18e8:	1f 93       	push	r17
    18ea:	cf 93       	push	r28
    18ec:	df 93       	push	r29
    18ee:	cd b7       	in	r28, 0x3d	; 61
    18f0:	de b7       	in	r29, 0x3e	; 62
    18f2:	ad b6       	in	r10, 0x3d	; 61
    18f4:	be b6       	in	r11, 0x3e	; 62
    18f6:	60 e0       	ldi	r22, 0x00	; 0
    18f8:	70 e0       	ldi	r23, 0x00	; 0
    18fa:	80 91 12 01 	lds	r24, 0x0112
    18fe:	90 91 13 01 	lds	r25, 0x0113
    1902:	0e 94 76 02 	call	0x4ec	; 0x4ec <FifoRead>
    1906:	88 23       	and	r24, r24
    1908:	31 f0       	breq	.+12     	; 0x1916 <USART_decode_message_rx_fifo+0x40>
    190a:	66 e0       	ldi	r22, 0x06	; 6
    190c:	72 e1       	ldi	r23, 0x12	; 18
    190e:	80 e4       	ldi	r24, 0x40	; 64
    1910:	1b dc       	rcall	.-1994   	; 0x1148 <TWI_send_string>
    1912:	81 e0       	ldi	r24, 0x01	; 1
    1914:	45 c0       	rjmp	.+138    	; 0x19a0 <USART_decode_message_rx_fifo+0xca>
    1916:	c0 90 00 00 	lds	r12, 0x0000
    191a:	d1 2c       	mov	r13, r1
    191c:	96 01       	movw	r18, r12
    191e:	21 50       	subi	r18, 0x01	; 1
    1920:	31 09       	sbc	r19, r1
    1922:	81 e0       	ldi	r24, 0x01	; 1
    1924:	90 e0       	ldi	r25, 0x00	; 0
    1926:	c1 14       	cp	r12, r1
    1928:	d1 04       	cpc	r13, r1
    192a:	11 f0       	breq	.+4      	; 0x1930 <USART_decode_message_rx_fifo+0x5a>
    192c:	80 e0       	ldi	r24, 0x00	; 0
    192e:	90 e0       	ldi	r25, 0x00	; 0
    1930:	82 0f       	add	r24, r18
    1932:	93 1f       	adc	r25, r19
    1934:	2d b7       	in	r18, 0x3d	; 61
    1936:	3e b7       	in	r19, 0x3e	; 62
    1938:	28 1b       	sub	r18, r24
    193a:	39 0b       	sbc	r19, r25
    193c:	0f b6       	in	r0, 0x3f	; 63
    193e:	f8 94       	cli
    1940:	3e bf       	out	0x3e, r19	; 62
    1942:	0f be       	out	0x3f, r0	; 63
    1944:	2d bf       	out	0x3d, r18	; 61
    1946:	8d b7       	in	r24, 0x3d	; 61
    1948:	9e b7       	in	r25, 0x3e	; 62
    194a:	01 96       	adiw	r24, 0x01	; 1
    194c:	88 2e       	mov	r8, r24
    194e:	99 2e       	mov	r9, r25
    1950:	1c 14       	cp	r1, r12
    1952:	1d 04       	cpc	r1, r13
    1954:	f4 f4       	brge	.+60     	; 0x1992 <USART_decode_message_rx_fifo+0xbc>
    1956:	e8 2e       	mov	r14, r24
    1958:	f9 2e       	mov	r15, r25
    195a:	00 e0       	ldi	r16, 0x00	; 0
    195c:	10 e0       	ldi	r17, 0x00	; 0
    195e:	60 e0       	ldi	r22, 0x00	; 0
    1960:	70 e0       	ldi	r23, 0x00	; 0
    1962:	80 91 12 01 	lds	r24, 0x0112
    1966:	90 91 13 01 	lds	r25, 0x0113
    196a:	0e 94 76 02 	call	0x4ec	; 0x4ec <FifoRead>
    196e:	88 23       	and	r24, r24
    1970:	31 f0       	breq	.+12     	; 0x197e <USART_decode_message_rx_fifo+0xa8>
    1972:	68 e2       	ldi	r22, 0x28	; 40
    1974:	72 e1       	ldi	r23, 0x12	; 18
    1976:	80 e4       	ldi	r24, 0x40	; 64
    1978:	e7 db       	rcall	.-2098   	; 0x1148 <TWI_send_string>
    197a:	81 e0       	ldi	r24, 0x01	; 1
    197c:	11 c0       	rjmp	.+34     	; 0x19a0 <USART_decode_message_rx_fifo+0xca>
    197e:	80 91 00 00 	lds	r24, 0x0000
    1982:	f7 01       	movw	r30, r14
    1984:	81 93       	st	Z+, r24
    1986:	7f 01       	movw	r14, r30
    1988:	0f 5f       	subi	r16, 0xFF	; 255
    198a:	1f 4f       	sbci	r17, 0xFF	; 255
    198c:	0c 15       	cp	r16, r12
    198e:	1d 05       	cpc	r17, r13
    1990:	34 f3       	brlt	.-52     	; 0x195e <USART_decode_message_rx_fifo+0x88>
    1992:	a6 01       	movw	r20, r12
    1994:	68 2d       	mov	r22, r8
    1996:	79 2d       	mov	r23, r9
    1998:	80 91 1a 11 	lds	r24, 0x111A
    199c:	1b dc       	rcall	.-1994   	; 0x11d4 <TWI_send_string_fixed_length>
    199e:	80 e0       	ldi	r24, 0x00	; 0
    19a0:	0f b6       	in	r0, 0x3f	; 63
    19a2:	f8 94       	cli
    19a4:	be be       	out	0x3e, r11	; 62
    19a6:	0f be       	out	0x3f, r0	; 63
    19a8:	ad be       	out	0x3d, r10	; 61
    19aa:	df 91       	pop	r29
    19ac:	cf 91       	pop	r28
    19ae:	1f 91       	pop	r17
    19b0:	0f 91       	pop	r16
    19b2:	ff 90       	pop	r15
    19b4:	ef 90       	pop	r14
    19b6:	df 90       	pop	r13
    19b8:	cf 90       	pop	r12
    19ba:	bf 90       	pop	r11
    19bc:	af 90       	pop	r10
    19be:	9f 90       	pop	r9
    19c0:	8f 90       	pop	r8
    19c2:	08 95       	ret

000019c4 <USART_decode_gyro_rx_fifo>:
    19c4:	af 92       	push	r10
    19c6:	bf 92       	push	r11
    19c8:	cf 92       	push	r12
    19ca:	df 92       	push	r13
    19cc:	ef 92       	push	r14
    19ce:	ff 92       	push	r15
    19d0:	0f 93       	push	r16
    19d2:	1f 93       	push	r17
    19d4:	cf 93       	push	r28
    19d6:	df 93       	push	r29
    19d8:	00 d0       	rcall	.+0      	; 0x19da <USART_decode_gyro_rx_fifo+0x16>
    19da:	00 d0       	rcall	.+0      	; 0x19dc <USART_decode_gyro_rx_fifo+0x18>
    19dc:	cd b7       	in	r28, 0x3d	; 61
    19de:	de b7       	in	r29, 0x3e	; 62
    19e0:	81 e0       	ldi	r24, 0x01	; 1
    19e2:	80 93 d1 13 	sts	0x13D1, r24
    19e6:	60 e0       	ldi	r22, 0x00	; 0
    19e8:	70 e0       	ldi	r23, 0x00	; 0
    19ea:	80 91 12 01 	lds	r24, 0x0112
    19ee:	90 91 13 01 	lds	r25, 0x0113
    19f2:	0e 94 76 02 	call	0x4ec	; 0x4ec <FifoRead>
    19f6:	88 23       	and	r24, r24
    19f8:	31 f0       	breq	.+12     	; 0x1a06 <USART_decode_gyro_rx_fifo+0x42>
    19fa:	6b e4       	ldi	r22, 0x4B	; 75
    19fc:	72 e1       	ldi	r23, 0x12	; 18
    19fe:	80 e4       	ldi	r24, 0x40	; 64
    1a00:	a3 db       	rcall	.-2234   	; 0x1148 <TWI_send_string>
    1a02:	81 e0       	ldi	r24, 0x01	; 1
    1a04:	73 c0       	rjmp	.+230    	; 0x1aec <USART_decode_gyro_rx_fifo+0x128>
    1a06:	80 91 00 00 	lds	r24, 0x0000
    1a0a:	8c 30       	cpi	r24, 0x0C	; 12
    1a0c:	09 f4       	brne	.+2      	; 0x1a10 <USART_decode_gyro_rx_fifo+0x4c>
    1a0e:	53 c0       	rjmp	.+166    	; 0x1ab6 <USART_decode_gyro_rx_fifo+0xf2>
    1a10:	81 e0       	ldi	r24, 0x01	; 1
    1a12:	6c c0       	rjmp	.+216    	; 0x1aec <USART_decode_gyro_rx_fifo+0x128>
    1a14:	60 e0       	ldi	r22, 0x00	; 0
    1a16:	70 e0       	ldi	r23, 0x00	; 0
    1a18:	80 91 12 01 	lds	r24, 0x0112
    1a1c:	90 91 13 01 	lds	r25, 0x0113
    1a20:	0e 94 76 02 	call	0x4ec	; 0x4ec <FifoRead>
    1a24:	88 23       	and	r24, r24
    1a26:	31 f0       	breq	.+12     	; 0x1a34 <USART_decode_gyro_rx_fifo+0x70>
    1a28:	6a e6       	ldi	r22, 0x6A	; 106
    1a2a:	72 e1       	ldi	r23, 0x12	; 18
    1a2c:	80 e4       	ldi	r24, 0x40	; 64
    1a2e:	8c db       	rcall	.-2280   	; 0x1148 <TWI_send_string>
    1a30:	81 e0       	ldi	r24, 0x01	; 1
    1a32:	5c c0       	rjmp	.+184    	; 0x1aec <USART_decode_gyro_rx_fifo+0x128>
    1a34:	80 91 00 00 	lds	r24, 0x0000
    1a38:	f6 01       	movw	r30, r12
    1a3a:	81 93       	st	Z+, r24
    1a3c:	6f 01       	movw	r12, r30
    1a3e:	e0 17       	cp	r30, r16
    1a40:	f1 07       	cpc	r31, r17
    1a42:	41 f7       	brne	.-48     	; 0x1a14 <USART_decode_gyro_rx_fifo+0x50>
    1a44:	f1 e0       	ldi	r31, 0x01	; 1
    1a46:	af 16       	cp	r10, r31
    1a48:	b1 04       	cpc	r11, r1
    1a4a:	99 f0       	breq	.+38     	; 0x1a72 <USART_decode_gyro_rx_fifo+0xae>
    1a4c:	82 e0       	ldi	r24, 0x02	; 2
    1a4e:	a8 16       	cp	r10, r24
    1a50:	b1 04       	cpc	r11, r1
    1a52:	e1 f0       	breq	.+56     	; 0x1a8c <USART_decode_gyro_rx_fifo+0xc8>
    1a54:	ab 28       	or	r10, r11
    1a56:	39 f5       	brne	.+78     	; 0x1aa6 <USART_decode_gyro_rx_fifo+0xe2>
    1a58:	89 81       	ldd	r24, Y+1	; 0x01
    1a5a:	9a 81       	ldd	r25, Y+2	; 0x02
    1a5c:	ab 81       	ldd	r26, Y+3	; 0x03
    1a5e:	bc 81       	ldd	r27, Y+4	; 0x04
    1a60:	80 93 cd 13 	sts	0x13CD, r24
    1a64:	90 93 ce 13 	sts	0x13CE, r25
    1a68:	a0 93 cf 13 	sts	0x13CF, r26
    1a6c:	b0 93 d0 13 	sts	0x13D0, r27
    1a70:	1e c0       	rjmp	.+60     	; 0x1aae <USART_decode_gyro_rx_fifo+0xea>
    1a72:	89 81       	ldd	r24, Y+1	; 0x01
    1a74:	9a 81       	ldd	r25, Y+2	; 0x02
    1a76:	ab 81       	ldd	r26, Y+3	; 0x03
    1a78:	bc 81       	ldd	r27, Y+4	; 0x04
    1a7a:	80 93 c9 13 	sts	0x13C9, r24
    1a7e:	90 93 ca 13 	sts	0x13CA, r25
    1a82:	a0 93 cb 13 	sts	0x13CB, r26
    1a86:	b0 93 cc 13 	sts	0x13CC, r27
    1a8a:	11 c0       	rjmp	.+34     	; 0x1aae <USART_decode_gyro_rx_fifo+0xea>
    1a8c:	89 81       	ldd	r24, Y+1	; 0x01
    1a8e:	9a 81       	ldd	r25, Y+2	; 0x02
    1a90:	ab 81       	ldd	r26, Y+3	; 0x03
    1a92:	bc 81       	ldd	r27, Y+4	; 0x04
    1a94:	80 93 c5 13 	sts	0x13C5, r24
    1a98:	90 93 c6 13 	sts	0x13C6, r25
    1a9c:	a0 93 c7 13 	sts	0x13C7, r26
    1aa0:	b0 93 c8 13 	sts	0x13C8, r27
    1aa4:	18 c0       	rjmp	.+48     	; 0x1ad6 <USART_decode_gyro_rx_fifo+0x112>
    1aa6:	e3 e0       	ldi	r30, 0x03	; 3
    1aa8:	ee 16       	cp	r14, r30
    1aaa:	f1 04       	cpc	r15, r1
    1aac:	a4 f4       	brge	.+40     	; 0x1ad6 <USART_decode_gyro_rx_fifo+0x112>
    1aae:	ff ef       	ldi	r31, 0xFF	; 255
    1ab0:	ef 1a       	sub	r14, r31
    1ab2:	ff 0a       	sbc	r15, r31
    1ab4:	06 c0       	rjmp	.+12     	; 0x1ac2 <USART_decode_gyro_rx_fifo+0xfe>
    1ab6:	ee 24       	eor	r14, r14
    1ab8:	e3 94       	inc	r14
    1aba:	f1 2c       	mov	r15, r1
    1abc:	8e 01       	movw	r16, r28
    1abe:	0b 5f       	subi	r16, 0xFB	; 251
    1ac0:	1f 4f       	sbci	r17, 0xFF	; 255
    1ac2:	57 01       	movw	r10, r14
    1ac4:	81 e0       	ldi	r24, 0x01	; 1
    1ac6:	a8 1a       	sub	r10, r24
    1ac8:	b1 08       	sbc	r11, r1
    1aca:	cc 24       	eor	r12, r12
    1acc:	c3 94       	inc	r12
    1ace:	d1 2c       	mov	r13, r1
    1ad0:	cc 0e       	add	r12, r28
    1ad2:	dd 1e       	adc	r13, r29
    1ad4:	9f cf       	rjmp	.-194    	; 0x1a14 <USART_decode_gyro_rx_fifo+0x50>
    1ad6:	40 91 c5 13 	lds	r20, 0x13C5
    1ada:	50 91 c6 13 	lds	r21, 0x13C6
    1ade:	60 91 c7 13 	lds	r22, 0x13C7
    1ae2:	70 91 c8 13 	lds	r23, 0x13C8
    1ae6:	80 e8       	ldi	r24, 0x80	; 128
    1ae8:	b3 db       	rcall	.-2202   	; 0x1250 <TWI_send_float>
    1aea:	80 e0       	ldi	r24, 0x00	; 0
    1aec:	0f 90       	pop	r0
    1aee:	0f 90       	pop	r0
    1af0:	0f 90       	pop	r0
    1af2:	0f 90       	pop	r0
    1af4:	df 91       	pop	r29
    1af6:	cf 91       	pop	r28
    1af8:	1f 91       	pop	r17
    1afa:	0f 91       	pop	r16
    1afc:	ff 90       	pop	r15
    1afe:	ef 90       	pop	r14
    1b00:	df 90       	pop	r13
    1b02:	cf 90       	pop	r12
    1b04:	bf 90       	pop	r11
    1b06:	af 90       	pop	r10
    1b08:	08 95       	ret

00001b0a <USART_decode_command_rx_fifo>:
    1b0a:	cf 93       	push	r28
    1b0c:	df 93       	push	r29
    1b0e:	60 e0       	ldi	r22, 0x00	; 0
    1b10:	70 e0       	ldi	r23, 0x00	; 0
    1b12:	80 91 12 01 	lds	r24, 0x0112
    1b16:	90 91 13 01 	lds	r25, 0x0113
    1b1a:	0e 94 76 02 	call	0x4ec	; 0x4ec <FifoRead>
    1b1e:	88 23       	and	r24, r24
    1b20:	31 f0       	breq	.+12     	; 0x1b2e <USART_decode_command_rx_fifo+0x24>
    1b22:	6a e8       	ldi	r22, 0x8A	; 138
    1b24:	72 e1       	ldi	r23, 0x12	; 18
    1b26:	80 e4       	ldi	r24, 0x40	; 64
    1b28:	0f db       	rcall	.-2530   	; 0x1148 <TWI_send_string>
    1b2a:	81 e0       	ldi	r24, 0x01	; 1
    1b2c:	45 c0       	rjmp	.+138    	; 0x1bb8 <USART_decode_command_rx_fifo+0xae>
    1b2e:	80 91 00 00 	lds	r24, 0x0000
    1b32:	83 30       	cpi	r24, 0x03	; 3
    1b34:	09 f0       	breq	.+2      	; 0x1b38 <USART_decode_command_rx_fifo+0x2e>
    1b36:	3b c0       	rjmp	.+118    	; 0x1bae <USART_decode_command_rx_fifo+0xa4>
    1b38:	60 e0       	ldi	r22, 0x00	; 0
    1b3a:	70 e0       	ldi	r23, 0x00	; 0
    1b3c:	80 91 12 01 	lds	r24, 0x0112
    1b40:	90 91 13 01 	lds	r25, 0x0113
    1b44:	0e 94 76 02 	call	0x4ec	; 0x4ec <FifoRead>
    1b48:	88 23       	and	r24, r24
    1b4a:	31 f0       	breq	.+12     	; 0x1b58 <USART_decode_command_rx_fifo+0x4e>
    1b4c:	6c ea       	ldi	r22, 0xAC	; 172
    1b4e:	72 e1       	ldi	r23, 0x12	; 18
    1b50:	80 e4       	ldi	r24, 0x40	; 64
    1b52:	fa da       	rcall	.-2572   	; 0x1148 <TWI_send_string>
    1b54:	81 e0       	ldi	r24, 0x01	; 1
    1b56:	30 c0       	rjmp	.+96     	; 0x1bb8 <USART_decode_command_rx_fifo+0xae>
    1b58:	c0 91 00 00 	lds	r28, 0x0000
    1b5c:	60 e0       	ldi	r22, 0x00	; 0
    1b5e:	70 e0       	ldi	r23, 0x00	; 0
    1b60:	80 91 12 01 	lds	r24, 0x0112
    1b64:	90 91 13 01 	lds	r25, 0x0113
    1b68:	0e 94 76 02 	call	0x4ec	; 0x4ec <FifoRead>
    1b6c:	88 23       	and	r24, r24
    1b6e:	31 f0       	breq	.+12     	; 0x1b7c <USART_decode_command_rx_fifo+0x72>
    1b70:	64 ed       	ldi	r22, 0xD4	; 212
    1b72:	72 e1       	ldi	r23, 0x12	; 18
    1b74:	80 e4       	ldi	r24, 0x40	; 64
    1b76:	e8 da       	rcall	.-2608   	; 0x1148 <TWI_send_string>
    1b78:	81 e0       	ldi	r24, 0x01	; 1
    1b7a:	1e c0       	rjmp	.+60     	; 0x1bb8 <USART_decode_command_rx_fifo+0xae>
    1b7c:	d0 91 00 00 	lds	r29, 0x0000
    1b80:	60 e0       	ldi	r22, 0x00	; 0
    1b82:	70 e0       	ldi	r23, 0x00	; 0
    1b84:	80 91 12 01 	lds	r24, 0x0112
    1b88:	90 91 13 01 	lds	r25, 0x0113
    1b8c:	0e 94 76 02 	call	0x4ec	; 0x4ec <FifoRead>
    1b90:	88 23       	and	r24, r24
    1b92:	31 f0       	breq	.+12     	; 0x1ba0 <USART_decode_command_rx_fifo+0x96>
    1b94:	6b ef       	ldi	r22, 0xFB	; 251
    1b96:	72 e1       	ldi	r23, 0x12	; 18
    1b98:	80 e4       	ldi	r24, 0x40	; 64
    1b9a:	d6 da       	rcall	.-2644   	; 0x1148 <TWI_send_string>
    1b9c:	81 e0       	ldi	r24, 0x01	; 1
    1b9e:	0c c0       	rjmp	.+24     	; 0x1bb8 <USART_decode_command_rx_fifo+0xae>
    1ba0:	40 91 00 00 	lds	r20, 0x0000
    1ba4:	6d 2f       	mov	r22, r29
    1ba6:	8c 2f       	mov	r24, r28
    1ba8:	87 da       	rcall	.-2802   	; 0x10b8 <TWI_send_command>
    1baa:	80 e0       	ldi	r24, 0x00	; 0
    1bac:	05 c0       	rjmp	.+10     	; 0x1bb8 <USART_decode_command_rx_fifo+0xae>
    1bae:	6f e1       	ldi	r22, 0x1F	; 31
    1bb0:	73 e1       	ldi	r23, 0x13	; 19
    1bb2:	80 e4       	ldi	r24, 0x40	; 64
    1bb4:	c9 da       	rcall	.-2670   	; 0x1148 <TWI_send_string>
    1bb6:	81 e0       	ldi	r24, 0x01	; 1
    1bb8:	df 91       	pop	r29
    1bba:	cf 91       	pop	r28
    1bbc:	08 95       	ret

00001bbe <USART_DecodeValueFIFO>:
    1bbe:	ef 92       	push	r14
    1bc0:	ff 92       	push	r15
    1bc2:	0f 93       	push	r16
    1bc4:	1f 93       	push	r17
    1bc6:	cf 93       	push	r28
    1bc8:	df 93       	push	r29
    1bca:	00 d0       	rcall	.+0      	; 0x1bcc <USART_DecodeValueFIFO+0xe>
    1bcc:	00 d0       	rcall	.+0      	; 0x1bce <USART_DecodeValueFIFO+0x10>
    1bce:	cd b7       	in	r28, 0x3d	; 61
    1bd0:	de b7       	in	r29, 0x3e	; 62
    1bd2:	60 e0       	ldi	r22, 0x00	; 0
    1bd4:	70 e0       	ldi	r23, 0x00	; 0
    1bd6:	80 91 12 01 	lds	r24, 0x0112
    1bda:	90 91 13 01 	lds	r25, 0x0113
    1bde:	0e 94 76 02 	call	0x4ec	; 0x4ec <FifoRead>
    1be2:	88 23       	and	r24, r24
    1be4:	31 f0       	breq	.+12     	; 0x1bf2 <USART_DecodeValueFIFO+0x34>
    1be6:	66 e4       	ldi	r22, 0x46	; 70
    1be8:	73 e1       	ldi	r23, 0x13	; 19
    1bea:	80 e4       	ldi	r24, 0x40	; 64
    1bec:	ad da       	rcall	.-2726   	; 0x1148 <TWI_send_string>
    1bee:	81 e0       	ldi	r24, 0x01	; 1
    1bf0:	29 c0       	rjmp	.+82     	; 0x1c44 <USART_DecodeValueFIFO+0x86>
    1bf2:	80 91 00 00 	lds	r24, 0x0000
    1bf6:	84 30       	cpi	r24, 0x04	; 4
    1bf8:	11 f5       	brne	.+68     	; 0x1c3e <USART_DecodeValueFIFO+0x80>
    1bfa:	8e 01       	movw	r16, r28
    1bfc:	0f 5f       	subi	r16, 0xFF	; 255
    1bfe:	1f 4f       	sbci	r17, 0xFF	; 255
    1c00:	7e 01       	movw	r14, r28
    1c02:	85 e0       	ldi	r24, 0x05	; 5
    1c04:	e8 0e       	add	r14, r24
    1c06:	f1 1c       	adc	r15, r1
    1c08:	60 e0       	ldi	r22, 0x00	; 0
    1c0a:	70 e0       	ldi	r23, 0x00	; 0
    1c0c:	80 91 12 01 	lds	r24, 0x0112
    1c10:	90 91 13 01 	lds	r25, 0x0113
    1c14:	0e 94 76 02 	call	0x4ec	; 0x4ec <FifoRead>
    1c18:	81 11       	cpse	r24, r1
    1c1a:	13 c0       	rjmp	.+38     	; 0x1c42 <USART_DecodeValueFIFO+0x84>
    1c1c:	80 91 00 00 	lds	r24, 0x0000
    1c20:	f8 01       	movw	r30, r16
    1c22:	81 93       	st	Z+, r24
    1c24:	8f 01       	movw	r16, r30
    1c26:	ee 15       	cp	r30, r14
    1c28:	ff 05       	cpc	r31, r15
    1c2a:	71 f7       	brne	.-36     	; 0x1c08 <USART_DecodeValueFIFO+0x4a>
    1c2c:	49 81       	ldd	r20, Y+1	; 0x01
    1c2e:	5a 81       	ldd	r21, Y+2	; 0x02
    1c30:	6b 81       	ldd	r22, Y+3	; 0x03
    1c32:	7c 81       	ldd	r23, Y+4	; 0x04
    1c34:	80 91 1a 11 	lds	r24, 0x111A
    1c38:	0b db       	rcall	.-2538   	; 0x1250 <TWI_send_float>
    1c3a:	80 e0       	ldi	r24, 0x00	; 0
    1c3c:	03 c0       	rjmp	.+6      	; 0x1c44 <USART_DecodeValueFIFO+0x86>
    1c3e:	81 e0       	ldi	r24, 0x01	; 1
    1c40:	01 c0       	rjmp	.+2      	; 0x1c44 <USART_DecodeValueFIFO+0x86>
    1c42:	81 e0       	ldi	r24, 0x01	; 1
    1c44:	0f 90       	pop	r0
    1c46:	0f 90       	pop	r0
    1c48:	0f 90       	pop	r0
    1c4a:	0f 90       	pop	r0
    1c4c:	df 91       	pop	r29
    1c4e:	cf 91       	pop	r28
    1c50:	1f 91       	pop	r17
    1c52:	0f 91       	pop	r16
    1c54:	ff 90       	pop	r15
    1c56:	ef 90       	pop	r14
    1c58:	08 95       	ret

00001c5a <USART_DecodeReadyFIFO>:
    1c5a:	60 e0       	ldi	r22, 0x00	; 0
    1c5c:	70 e0       	ldi	r23, 0x00	; 0
    1c5e:	80 91 12 01 	lds	r24, 0x0112
    1c62:	90 91 13 01 	lds	r25, 0x0113
    1c66:	0e 94 76 02 	call	0x4ec	; 0x4ec <FifoRead>
    1c6a:	88 23       	and	r24, r24
    1c6c:	31 f0       	breq	.+12     	; 0x1c7a <USART_DecodeReadyFIFO+0x20>
    1c6e:	6a e8       	ldi	r22, 0x8A	; 138
    1c70:	72 e1       	ldi	r23, 0x12	; 18
    1c72:	80 e4       	ldi	r24, 0x40	; 64
    1c74:	69 da       	rcall	.-2862   	; 0x1148 <TWI_send_string>
    1c76:	81 e0       	ldi	r24, 0x01	; 1
    1c78:	08 95       	ret
    1c7a:	80 91 00 00 	lds	r24, 0x0000
    1c7e:	81 11       	cpse	r24, r1
    1c80:	05 c0       	rjmp	.+10     	; 0x1c8c <USART_DecodeReadyFIFO+0x32>
    1c82:	81 e0       	ldi	r24, 0x01	; 1
    1c84:	80 93 d4 13 	sts	0x13D4, r24
    1c88:	80 e0       	ldi	r24, 0x00	; 0
    1c8a:	08 95       	ret
    1c8c:	81 e0       	ldi	r24, 0x01	; 1
    1c8e:	08 95       	ret

00001c90 <USART_decode_turn_done_rx_fifo>:
    1c90:	60 e0       	ldi	r22, 0x00	; 0
    1c92:	70 e0       	ldi	r23, 0x00	; 0
    1c94:	80 91 12 01 	lds	r24, 0x0112
    1c98:	90 91 13 01 	lds	r25, 0x0113
    1c9c:	0e 94 76 02 	call	0x4ec	; 0x4ec <FifoRead>
    1ca0:	88 23       	and	r24, r24
    1ca2:	31 f0       	breq	.+12     	; 0x1cb0 <USART_decode_turn_done_rx_fifo+0x20>
    1ca4:	66 e6       	ldi	r22, 0x66	; 102
    1ca6:	73 e1       	ldi	r23, 0x13	; 19
    1ca8:	80 e4       	ldi	r24, 0x40	; 64
    1caa:	4e da       	rcall	.-2916   	; 0x1148 <TWI_send_string>
    1cac:	81 e0       	ldi	r24, 0x01	; 1
    1cae:	08 95       	ret
    1cb0:	80 91 00 00 	lds	r24, 0x0000
    1cb4:	81 11       	cpse	r24, r1
    1cb6:	05 c0       	rjmp	.+10     	; 0x1cc2 <USART_decode_turn_done_rx_fifo+0x32>
    1cb8:	81 e0       	ldi	r24, 0x01	; 1
    1cba:	80 93 d3 13 	sts	0x13D3, r24
    1cbe:	80 e0       	ldi	r24, 0x00	; 0
    1cc0:	08 95       	ret
    1cc2:	81 e0       	ldi	r24, 0x01	; 1
    1cc4:	08 95       	ret

00001cc6 <USART_decode_climb_done_rx_fifo>:
    1cc6:	60 e0       	ldi	r22, 0x00	; 0
    1cc8:	70 e0       	ldi	r23, 0x00	; 0
    1cca:	80 91 12 01 	lds	r24, 0x0112
    1cce:	90 91 13 01 	lds	r25, 0x0113
    1cd2:	0e 94 76 02 	call	0x4ec	; 0x4ec <FifoRead>
    1cd6:	88 23       	and	r24, r24
    1cd8:	31 f0       	breq	.+12     	; 0x1ce6 <USART_decode_climb_done_rx_fifo+0x20>
    1cda:	6a e8       	ldi	r22, 0x8A	; 138
    1cdc:	73 e1       	ldi	r23, 0x13	; 19
    1cde:	80 e4       	ldi	r24, 0x40	; 64
    1ce0:	33 da       	rcall	.-2970   	; 0x1148 <TWI_send_string>
    1ce2:	81 e0       	ldi	r24, 0x01	; 1
    1ce4:	08 95       	ret
    1ce6:	80 91 00 00 	lds	r24, 0x0000
    1cea:	81 11       	cpse	r24, r1
    1cec:	05 c0       	rjmp	.+10     	; 0x1cf8 <USART_decode_climb_done_rx_fifo+0x32>
    1cee:	81 e0       	ldi	r24, 0x01	; 1
    1cf0:	80 93 d2 13 	sts	0x13D2, r24
    1cf4:	80 e0       	ldi	r24, 0x00	; 0
    1cf6:	08 95       	ret
    1cf8:	81 e0       	ldi	r24, 0x01	; 1
    1cfa:	08 95       	ret

00001cfc <USART_ready>:
    1cfc:	80 91 d4 13 	lds	r24, 0x13D4
    1d00:	88 23       	and	r24, r24
    1d02:	21 f0       	breq	.+8      	; 0x1d0c <USART_ready+0x10>
    1d04:	10 92 d4 13 	sts	0x13D4, r1
    1d08:	81 e0       	ldi	r24, 0x01	; 1
    1d0a:	08 95       	ret
    1d0c:	80 e0       	ldi	r24, 0x00	; 0
    1d0e:	08 95       	ret

00001d10 <USART_turn_done>:
    1d10:	80 91 d3 13 	lds	r24, 0x13D3
    1d14:	88 23       	and	r24, r24
    1d16:	21 f0       	breq	.+8      	; 0x1d20 <USART_turn_done+0x10>
    1d18:	10 92 d3 13 	sts	0x13D3, r1
    1d1c:	81 e0       	ldi	r24, 0x01	; 1
    1d1e:	08 95       	ret
    1d20:	80 e0       	ldi	r24, 0x00	; 0
    1d22:	08 95       	ret

00001d24 <USART_climb_done>:
    1d24:	80 91 d2 13 	lds	r24, 0x13D2
    1d28:	88 23       	and	r24, r24
    1d2a:	21 f0       	breq	.+8      	; 0x1d34 <USART_climb_done+0x10>
    1d2c:	10 92 d2 13 	sts	0x13D2, r1
    1d30:	81 e0       	ldi	r24, 0x01	; 1
    1d32:	08 95       	ret
    1d34:	80 e0       	ldi	r24, 0x00	; 0
    1d36:	08 95       	ret

00001d38 <USART_decode_rx_fifo>:
    1d38:	2e c0       	rjmp	.+92     	; 0x1d96 <USART_decode_rx_fifo+0x5e>
    1d3a:	80 91 00 00 	lds	r24, 0x0000
    1d3e:	8d 34       	cpi	r24, 0x4D	; 77
    1d40:	79 f0       	breq	.+30     	; 0x1d60 <USART_decode_rx_fifo+0x28>
    1d42:	38 f4       	brcc	.+14     	; 0x1d52 <USART_decode_rx_fifo+0x1a>
    1d44:	87 34       	cpi	r24, 0x47	; 71
    1d46:	e1 f0       	breq	.+56     	; 0x1d80 <USART_decode_rx_fifo+0x48>
    1d48:	88 34       	cpi	r24, 0x48	; 72
    1d4a:	11 f1       	breq	.+68     	; 0x1d90 <USART_decode_rx_fifo+0x58>
    1d4c:	83 34       	cpi	r24, 0x43	; 67
    1d4e:	19 f5       	brne	.+70     	; 0x1d96 <USART_decode_rx_fifo+0x5e>
    1d50:	0b c0       	rjmp	.+22     	; 0x1d68 <USART_decode_rx_fifo+0x30>
    1d52:	84 35       	cpi	r24, 0x54	; 84
    1d54:	c9 f0       	breq	.+50     	; 0x1d88 <USART_decode_rx_fifo+0x50>
    1d56:	86 35       	cpi	r24, 0x56	; 86
    1d58:	59 f0       	breq	.+22     	; 0x1d70 <USART_decode_rx_fifo+0x38>
    1d5a:	82 35       	cpi	r24, 0x52	; 82
    1d5c:	e1 f4       	brne	.+56     	; 0x1d96 <USART_decode_rx_fifo+0x5e>
    1d5e:	0c c0       	rjmp	.+24     	; 0x1d78 <USART_decode_rx_fifo+0x40>
    1d60:	ba dd       	rcall	.-1164   	; 0x18d6 <USART_decode_message_rx_fifo>
    1d62:	88 23       	and	r24, r24
    1d64:	c1 f0       	breq	.+48     	; 0x1d96 <USART_decode_rx_fifo+0x5e>
    1d66:	08 95       	ret
    1d68:	d0 de       	rcall	.-608    	; 0x1b0a <USART_decode_command_rx_fifo>
    1d6a:	88 23       	and	r24, r24
    1d6c:	a1 f0       	breq	.+40     	; 0x1d96 <USART_decode_rx_fifo+0x5e>
    1d6e:	08 95       	ret
    1d70:	26 df       	rcall	.-436    	; 0x1bbe <USART_DecodeValueFIFO>
    1d72:	88 23       	and	r24, r24
    1d74:	81 f0       	breq	.+32     	; 0x1d96 <USART_decode_rx_fifo+0x5e>
    1d76:	08 95       	ret
    1d78:	70 df       	rcall	.-288    	; 0x1c5a <USART_DecodeReadyFIFO>
    1d7a:	88 23       	and	r24, r24
    1d7c:	61 f0       	breq	.+24     	; 0x1d96 <USART_decode_rx_fifo+0x5e>
    1d7e:	08 95       	ret
    1d80:	21 de       	rcall	.-958    	; 0x19c4 <USART_decode_gyro_rx_fifo>
    1d82:	88 23       	and	r24, r24
    1d84:	41 f0       	breq	.+16     	; 0x1d96 <USART_decode_rx_fifo+0x5e>
    1d86:	08 95       	ret
    1d88:	83 df       	rcall	.-250    	; 0x1c90 <USART_decode_turn_done_rx_fifo>
    1d8a:	88 23       	and	r24, r24
    1d8c:	21 f0       	breq	.+8      	; 0x1d96 <USART_decode_rx_fifo+0x5e>
    1d8e:	08 95       	ret
    1d90:	9a df       	rcall	.-204    	; 0x1cc6 <USART_decode_climb_done_rx_fifo>
    1d92:	81 11       	cpse	r24, r1
    1d94:	0a c0       	rjmp	.+20     	; 0x1daa <USART_decode_rx_fifo+0x72>
    1d96:	60 e0       	ldi	r22, 0x00	; 0
    1d98:	70 e0       	ldi	r23, 0x00	; 0
    1d9a:	80 91 12 01 	lds	r24, 0x0112
    1d9e:	90 91 13 01 	lds	r25, 0x0113
    1da2:	0e 94 76 02 	call	0x4ec	; 0x4ec <FifoRead>
    1da6:	88 23       	and	r24, r24
    1da8:	41 f2       	breq	.-112    	; 0x1d3a <USART_decode_rx_fifo+0x2>
    1daa:	08 95       	ret

00001dac <__vector_20>:
    1dac:	1f 92       	push	r1
    1dae:	0f 92       	push	r0
    1db0:	0f b6       	in	r0, 0x3f	; 63
    1db2:	0f 92       	push	r0
    1db4:	11 24       	eor	r1, r1
    1db6:	0b b6       	in	r0, 0x3b	; 59
    1db8:	0f 92       	push	r0
    1dba:	ef 92       	push	r14
    1dbc:	ff 92       	push	r15
    1dbe:	0f 93       	push	r16
    1dc0:	1f 93       	push	r17
    1dc2:	2f 93       	push	r18
    1dc4:	3f 93       	push	r19
    1dc6:	4f 93       	push	r20
    1dc8:	5f 93       	push	r21
    1dca:	6f 93       	push	r22
    1dcc:	7f 93       	push	r23
    1dce:	8f 93       	push	r24
    1dd0:	9f 93       	push	r25
    1dd2:	af 93       	push	r26
    1dd4:	bf 93       	push	r27
    1dd6:	cf 93       	push	r28
    1dd8:	df 93       	push	r29
    1dda:	ef 93       	push	r30
    1ddc:	ff 93       	push	r31
    1dde:	20 91 c6 00 	lds	r18, 0x00C6
    1de2:	2e 37       	cpi	r18, 0x7E	; 126
    1de4:	09 f0       	breq	.+2      	; 0x1de8 <__vector_20+0x3c>
    1de6:	3f c0       	rjmp	.+126    	; 0x1e66 <__vector_20+0xba>
    1de8:	80 91 d7 13 	lds	r24, 0x13D7
    1dec:	90 91 d8 13 	lds	r25, 0x13D8
    1df0:	84 30       	cpi	r24, 0x04	; 4
    1df2:	91 05       	cpc	r25, r1
    1df4:	40 f4       	brcc	.+16     	; 0x1e06 <__vector_20+0x5a>
    1df6:	20 91 38 15 	lds	r18, 0x1538
    1dfa:	30 e0       	ldi	r19, 0x00	; 0
    1dfc:	2c 5f       	subi	r18, 0xFC	; 252
    1dfe:	3f 4f       	sbci	r19, 0xFF	; 255
    1e00:	82 17       	cp	r24, r18
    1e02:	93 07       	cpc	r25, r19
    1e04:	59 f5       	brne	.+86     	; 0x1e5c <__vector_20+0xb0>
    1e06:	80 91 d5 13 	lds	r24, 0x13D5
    1e0a:	90 91 d6 13 	lds	r25, 0x13D6
    1e0e:	89 2b       	or	r24, r25
    1e10:	21 f0       	breq	.+8      	; 0x1e1a <__vector_20+0x6e>
    1e12:	10 92 d6 13 	sts	0x13D6, r1
    1e16:	10 92 d5 13 	sts	0x13D5, r1
    1e1a:	07 e3       	ldi	r16, 0x37	; 55
    1e1c:	15 e1       	ldi	r17, 0x15	; 21
    1e1e:	c0 e0       	ldi	r28, 0x00	; 0
    1e20:	d0 e0       	ldi	r29, 0x00	; 0
    1e22:	0f 2e       	mov	r0, r31
    1e24:	f8 e3       	ldi	r31, 0x38	; 56
    1e26:	ef 2e       	mov	r14, r31
    1e28:	f5 e1       	ldi	r31, 0x15	; 21
    1e2a:	ff 2e       	mov	r15, r31
    1e2c:	f0 2d       	mov	r31, r0
    1e2e:	f8 01       	movw	r30, r16
    1e30:	61 91       	ld	r22, Z+
    1e32:	8f 01       	movw	r16, r30
    1e34:	80 91 12 01 	lds	r24, 0x0112
    1e38:	90 91 13 01 	lds	r25, 0x0113
    1e3c:	0e 94 56 02 	call	0x4ac	; 0x4ac <FifoWrite>
    1e40:	88 23       	and	r24, r24
    1e42:	21 f0       	breq	.+8      	; 0x1e4c <__vector_20+0xa0>
    1e44:	6f ea       	ldi	r22, 0xAF	; 175
    1e46:	73 e1       	ldi	r23, 0x13	; 19
    1e48:	80 e4       	ldi	r24, 0x40	; 64
    1e4a:	7e d9       	rcall	.-3332   	; 0x1148 <TWI_send_string>
    1e4c:	21 96       	adiw	r28, 0x01	; 1
    1e4e:	f7 01       	movw	r30, r14
    1e50:	80 81       	ld	r24, Z
    1e52:	90 e0       	ldi	r25, 0x00	; 0
    1e54:	02 96       	adiw	r24, 0x02	; 2
    1e56:	c8 17       	cp	r28, r24
    1e58:	d9 07       	cpc	r29, r25
    1e5a:	4c f3       	brlt	.-46     	; 0x1e2e <__vector_20+0x82>
    1e5c:	10 92 d8 13 	sts	0x13D8, r1
    1e60:	10 92 d7 13 	sts	0x13D7, r1
    1e64:	16 c0       	rjmp	.+44     	; 0x1e92 <__vector_20+0xe6>
    1e66:	2d 37       	cpi	r18, 0x7D	; 125
    1e68:	39 f4       	brne	.+14     	; 0x1e78 <__vector_20+0xcc>
    1e6a:	81 e0       	ldi	r24, 0x01	; 1
    1e6c:	90 e0       	ldi	r25, 0x00	; 0
    1e6e:	90 93 d6 13 	sts	0x13D6, r25
    1e72:	80 93 d5 13 	sts	0x13D5, r24
    1e76:	0d c0       	rjmp	.+26     	; 0x1e92 <__vector_20+0xe6>
    1e78:	80 91 d7 13 	lds	r24, 0x13D7
    1e7c:	90 91 d8 13 	lds	r25, 0x13D8
    1e80:	fc 01       	movw	r30, r24
    1e82:	e9 5c       	subi	r30, 0xC9	; 201
    1e84:	fa 4e       	sbci	r31, 0xEA	; 234
    1e86:	20 83       	st	Z, r18
    1e88:	01 96       	adiw	r24, 0x01	; 1
    1e8a:	90 93 d8 13 	sts	0x13D8, r25
    1e8e:	80 93 d7 13 	sts	0x13D7, r24
    1e92:	ff 91       	pop	r31
    1e94:	ef 91       	pop	r30
    1e96:	df 91       	pop	r29
    1e98:	cf 91       	pop	r28
    1e9a:	bf 91       	pop	r27
    1e9c:	af 91       	pop	r26
    1e9e:	9f 91       	pop	r25
    1ea0:	8f 91       	pop	r24
    1ea2:	7f 91       	pop	r23
    1ea4:	6f 91       	pop	r22
    1ea6:	5f 91       	pop	r21
    1ea8:	4f 91       	pop	r20
    1eaa:	3f 91       	pop	r19
    1eac:	2f 91       	pop	r18
    1eae:	1f 91       	pop	r17
    1eb0:	0f 91       	pop	r16
    1eb2:	ff 90       	pop	r15
    1eb4:	ef 90       	pop	r14
    1eb6:	0f 90       	pop	r0
    1eb8:	0b be       	out	0x3b, r0	; 59
    1eba:	0f 90       	pop	r0
    1ebc:	0f be       	out	0x3f, r0	; 63
    1ebe:	0f 90       	pop	r0
    1ec0:	1f 90       	pop	r1
    1ec2:	18 95       	reti

00001ec4 <USART_send_command_parameters>:
    1ec4:	80 93 3c 17 	sts	0x173C, r24
    1ec8:	60 93 3d 17 	sts	0x173D, r22
    1ecc:	40 93 3e 17 	sts	0x173E, r20
    1ed0:	63 e0       	ldi	r22, 0x03	; 3
    1ed2:	83 e4       	ldi	r24, 0x43	; 67
    1ed4:	7c cc       	rjmp	.-1800   	; 0x17ce <USART_send_packet>

00001ed6 <__subsf3>:
    1ed6:	50 58       	subi	r21, 0x80	; 128

00001ed8 <__addsf3>:
    1ed8:	bb 27       	eor	r27, r27
    1eda:	aa 27       	eor	r26, r26
    1edc:	0e d0       	rcall	.+28     	; 0x1efa <__addsf3x>
    1ede:	ed c1       	rjmp	.+986    	; 0x22ba <__fp_round>
    1ee0:	b6 d1       	rcall	.+876    	; 0x224e <__fp_pscA>
    1ee2:	30 f0       	brcs	.+12     	; 0x1ef0 <__addsf3+0x18>
    1ee4:	bb d1       	rcall	.+886    	; 0x225c <__fp_pscB>
    1ee6:	20 f0       	brcs	.+8      	; 0x1ef0 <__addsf3+0x18>
    1ee8:	31 f4       	brne	.+12     	; 0x1ef6 <__addsf3+0x1e>
    1eea:	9f 3f       	cpi	r25, 0xFF	; 255
    1eec:	11 f4       	brne	.+4      	; 0x1ef2 <__addsf3+0x1a>
    1eee:	1e f4       	brtc	.+6      	; 0x1ef6 <__addsf3+0x1e>
    1ef0:	86 c1       	rjmp	.+780    	; 0x21fe <__fp_nan>
    1ef2:	0e f4       	brtc	.+2      	; 0x1ef6 <__addsf3+0x1e>
    1ef4:	e0 95       	com	r30
    1ef6:	e7 fb       	bst	r30, 7
    1ef8:	7c c1       	rjmp	.+760    	; 0x21f2 <__fp_inf>

00001efa <__addsf3x>:
    1efa:	e9 2f       	mov	r30, r25
    1efc:	00 d2       	rcall	.+1024   	; 0x22fe <__fp_split3>
    1efe:	80 f3       	brcs	.-32     	; 0x1ee0 <__addsf3+0x8>
    1f00:	ba 17       	cp	r27, r26
    1f02:	62 07       	cpc	r22, r18
    1f04:	73 07       	cpc	r23, r19
    1f06:	84 07       	cpc	r24, r20
    1f08:	95 07       	cpc	r25, r21
    1f0a:	18 f0       	brcs	.+6      	; 0x1f12 <__addsf3x+0x18>
    1f0c:	71 f4       	brne	.+28     	; 0x1f2a <__addsf3x+0x30>
    1f0e:	9e f5       	brtc	.+102    	; 0x1f76 <__addsf3x+0x7c>
    1f10:	18 c2       	rjmp	.+1072   	; 0x2342 <__fp_zero>
    1f12:	0e f4       	brtc	.+2      	; 0x1f16 <__addsf3x+0x1c>
    1f14:	e0 95       	com	r30
    1f16:	0b 2e       	mov	r0, r27
    1f18:	ba 2f       	mov	r27, r26
    1f1a:	a0 2d       	mov	r26, r0
    1f1c:	0b 01       	movw	r0, r22
    1f1e:	b9 01       	movw	r22, r18
    1f20:	90 01       	movw	r18, r0
    1f22:	0c 01       	movw	r0, r24
    1f24:	ca 01       	movw	r24, r20
    1f26:	a0 01       	movw	r20, r0
    1f28:	11 24       	eor	r1, r1
    1f2a:	ff 27       	eor	r31, r31
    1f2c:	59 1b       	sub	r21, r25
    1f2e:	99 f0       	breq	.+38     	; 0x1f56 <__addsf3x+0x5c>
    1f30:	59 3f       	cpi	r21, 0xF9	; 249
    1f32:	50 f4       	brcc	.+20     	; 0x1f48 <__addsf3x+0x4e>
    1f34:	50 3e       	cpi	r21, 0xE0	; 224
    1f36:	68 f1       	brcs	.+90     	; 0x1f92 <__addsf3x+0x98>
    1f38:	1a 16       	cp	r1, r26
    1f3a:	f0 40       	sbci	r31, 0x00	; 0
    1f3c:	a2 2f       	mov	r26, r18
    1f3e:	23 2f       	mov	r18, r19
    1f40:	34 2f       	mov	r19, r20
    1f42:	44 27       	eor	r20, r20
    1f44:	58 5f       	subi	r21, 0xF8	; 248
    1f46:	f3 cf       	rjmp	.-26     	; 0x1f2e <__addsf3x+0x34>
    1f48:	46 95       	lsr	r20
    1f4a:	37 95       	ror	r19
    1f4c:	27 95       	ror	r18
    1f4e:	a7 95       	ror	r26
    1f50:	f0 40       	sbci	r31, 0x00	; 0
    1f52:	53 95       	inc	r21
    1f54:	c9 f7       	brne	.-14     	; 0x1f48 <__addsf3x+0x4e>
    1f56:	7e f4       	brtc	.+30     	; 0x1f76 <__addsf3x+0x7c>
    1f58:	1f 16       	cp	r1, r31
    1f5a:	ba 0b       	sbc	r27, r26
    1f5c:	62 0b       	sbc	r22, r18
    1f5e:	73 0b       	sbc	r23, r19
    1f60:	84 0b       	sbc	r24, r20
    1f62:	ba f0       	brmi	.+46     	; 0x1f92 <__addsf3x+0x98>
    1f64:	91 50       	subi	r25, 0x01	; 1
    1f66:	a1 f0       	breq	.+40     	; 0x1f90 <__addsf3x+0x96>
    1f68:	ff 0f       	add	r31, r31
    1f6a:	bb 1f       	adc	r27, r27
    1f6c:	66 1f       	adc	r22, r22
    1f6e:	77 1f       	adc	r23, r23
    1f70:	88 1f       	adc	r24, r24
    1f72:	c2 f7       	brpl	.-16     	; 0x1f64 <__addsf3x+0x6a>
    1f74:	0e c0       	rjmp	.+28     	; 0x1f92 <__addsf3x+0x98>
    1f76:	ba 0f       	add	r27, r26
    1f78:	62 1f       	adc	r22, r18
    1f7a:	73 1f       	adc	r23, r19
    1f7c:	84 1f       	adc	r24, r20
    1f7e:	48 f4       	brcc	.+18     	; 0x1f92 <__addsf3x+0x98>
    1f80:	87 95       	ror	r24
    1f82:	77 95       	ror	r23
    1f84:	67 95       	ror	r22
    1f86:	b7 95       	ror	r27
    1f88:	f7 95       	ror	r31
    1f8a:	9e 3f       	cpi	r25, 0xFE	; 254
    1f8c:	08 f0       	brcs	.+2      	; 0x1f90 <__addsf3x+0x96>
    1f8e:	b3 cf       	rjmp	.-154    	; 0x1ef6 <__addsf3+0x1e>
    1f90:	93 95       	inc	r25
    1f92:	88 0f       	add	r24, r24
    1f94:	08 f0       	brcs	.+2      	; 0x1f98 <__addsf3x+0x9e>
    1f96:	99 27       	eor	r25, r25
    1f98:	ee 0f       	add	r30, r30
    1f9a:	97 95       	ror	r25
    1f9c:	87 95       	ror	r24
    1f9e:	08 95       	ret

00001fa0 <atan>:
    1fa0:	df 93       	push	r29
    1fa2:	dd 27       	eor	r29, r29
    1fa4:	b9 2f       	mov	r27, r25
    1fa6:	bf 77       	andi	r27, 0x7F	; 127
    1fa8:	40 e8       	ldi	r20, 0x80	; 128
    1faa:	5f e3       	ldi	r21, 0x3F	; 63
    1fac:	16 16       	cp	r1, r22
    1fae:	17 06       	cpc	r1, r23
    1fb0:	48 07       	cpc	r20, r24
    1fb2:	5b 07       	cpc	r21, r27
    1fb4:	10 f4       	brcc	.+4      	; 0x1fba <atan+0x1a>
    1fb6:	d9 2f       	mov	r29, r25
    1fb8:	cf d1       	rcall	.+926    	; 0x2358 <inverse>
    1fba:	9f 93       	push	r25
    1fbc:	8f 93       	push	r24
    1fbe:	7f 93       	push	r23
    1fc0:	6f 93       	push	r22
    1fc2:	34 d2       	rcall	.+1128   	; 0x242c <square>
    1fc4:	ec e8       	ldi	r30, 0x8C	; 140
    1fc6:	f0 e0       	ldi	r31, 0x00	; 0
    1fc8:	1d d1       	rcall	.+570    	; 0x2204 <__fp_powser>
    1fca:	77 d1       	rcall	.+750    	; 0x22ba <__fp_round>
    1fcc:	2f 91       	pop	r18
    1fce:	3f 91       	pop	r19
    1fd0:	4f 91       	pop	r20
    1fd2:	5f 91       	pop	r21
    1fd4:	d4 d1       	rcall	.+936    	; 0x237e <__mulsf3x>
    1fd6:	dd 23       	and	r29, r29
    1fd8:	49 f0       	breq	.+18     	; 0x1fec <atan+0x4c>
    1fda:	90 58       	subi	r25, 0x80	; 128
    1fdc:	a2 ea       	ldi	r26, 0xA2	; 162
    1fde:	2a ed       	ldi	r18, 0xDA	; 218
    1fe0:	3f e0       	ldi	r19, 0x0F	; 15
    1fe2:	49 ec       	ldi	r20, 0xC9	; 201
    1fe4:	5f e3       	ldi	r21, 0x3F	; 63
    1fe6:	d0 78       	andi	r29, 0x80	; 128
    1fe8:	5d 27       	eor	r21, r29
    1fea:	87 df       	rcall	.-242    	; 0x1efa <__addsf3x>
    1fec:	df 91       	pop	r29
    1fee:	65 c1       	rjmp	.+714    	; 0x22ba <__fp_round>

00001ff0 <__cmpsf2>:
    1ff0:	dc d0       	rcall	.+440    	; 0x21aa <__fp_cmp>
    1ff2:	08 f4       	brcc	.+2      	; 0x1ff6 <__cmpsf2+0x6>
    1ff4:	81 e0       	ldi	r24, 0x01	; 1
    1ff6:	08 95       	ret

00001ff8 <cos>:
    1ff8:	39 d1       	rcall	.+626    	; 0x226c <__fp_rempio2>
    1ffa:	e3 95       	inc	r30
    1ffc:	6f c1       	rjmp	.+734    	; 0x22dc <__fp_sinus>

00001ffe <__divsf3>:
    1ffe:	0c d0       	rcall	.+24     	; 0x2018 <__divsf3x>
    2000:	5c c1       	rjmp	.+696    	; 0x22ba <__fp_round>
    2002:	2c d1       	rcall	.+600    	; 0x225c <__fp_pscB>
    2004:	40 f0       	brcs	.+16     	; 0x2016 <__divsf3+0x18>
    2006:	23 d1       	rcall	.+582    	; 0x224e <__fp_pscA>
    2008:	30 f0       	brcs	.+12     	; 0x2016 <__divsf3+0x18>
    200a:	21 f4       	brne	.+8      	; 0x2014 <__divsf3+0x16>
    200c:	5f 3f       	cpi	r21, 0xFF	; 255
    200e:	19 f0       	breq	.+6      	; 0x2016 <__divsf3+0x18>
    2010:	f0 c0       	rjmp	.+480    	; 0x21f2 <__fp_inf>
    2012:	51 11       	cpse	r21, r1
    2014:	97 c1       	rjmp	.+814    	; 0x2344 <__fp_szero>
    2016:	f3 c0       	rjmp	.+486    	; 0x21fe <__fp_nan>

00002018 <__divsf3x>:
    2018:	72 d1       	rcall	.+740    	; 0x22fe <__fp_split3>
    201a:	98 f3       	brcs	.-26     	; 0x2002 <__divsf3+0x4>

0000201c <__divsf3_pse>:
    201c:	99 23       	and	r25, r25
    201e:	c9 f3       	breq	.-14     	; 0x2012 <__divsf3+0x14>
    2020:	55 23       	and	r21, r21
    2022:	b1 f3       	breq	.-20     	; 0x2010 <__divsf3+0x12>
    2024:	95 1b       	sub	r25, r21
    2026:	55 0b       	sbc	r21, r21
    2028:	bb 27       	eor	r27, r27
    202a:	aa 27       	eor	r26, r26
    202c:	62 17       	cp	r22, r18
    202e:	73 07       	cpc	r23, r19
    2030:	84 07       	cpc	r24, r20
    2032:	38 f0       	brcs	.+14     	; 0x2042 <__divsf3_pse+0x26>
    2034:	9f 5f       	subi	r25, 0xFF	; 255
    2036:	5f 4f       	sbci	r21, 0xFF	; 255
    2038:	22 0f       	add	r18, r18
    203a:	33 1f       	adc	r19, r19
    203c:	44 1f       	adc	r20, r20
    203e:	aa 1f       	adc	r26, r26
    2040:	a9 f3       	breq	.-22     	; 0x202c <__divsf3_pse+0x10>
    2042:	33 d0       	rcall	.+102    	; 0x20aa <__divsf3_pse+0x8e>
    2044:	0e 2e       	mov	r0, r30
    2046:	3a f0       	brmi	.+14     	; 0x2056 <__divsf3_pse+0x3a>
    2048:	e0 e8       	ldi	r30, 0x80	; 128
    204a:	30 d0       	rcall	.+96     	; 0x20ac <__divsf3_pse+0x90>
    204c:	91 50       	subi	r25, 0x01	; 1
    204e:	50 40       	sbci	r21, 0x00	; 0
    2050:	e6 95       	lsr	r30
    2052:	00 1c       	adc	r0, r0
    2054:	ca f7       	brpl	.-14     	; 0x2048 <__divsf3_pse+0x2c>
    2056:	29 d0       	rcall	.+82     	; 0x20aa <__divsf3_pse+0x8e>
    2058:	fe 2f       	mov	r31, r30
    205a:	27 d0       	rcall	.+78     	; 0x20aa <__divsf3_pse+0x8e>
    205c:	66 0f       	add	r22, r22
    205e:	77 1f       	adc	r23, r23
    2060:	88 1f       	adc	r24, r24
    2062:	bb 1f       	adc	r27, r27
    2064:	26 17       	cp	r18, r22
    2066:	37 07       	cpc	r19, r23
    2068:	48 07       	cpc	r20, r24
    206a:	ab 07       	cpc	r26, r27
    206c:	b0 e8       	ldi	r27, 0x80	; 128
    206e:	09 f0       	breq	.+2      	; 0x2072 <__divsf3_pse+0x56>
    2070:	bb 0b       	sbc	r27, r27
    2072:	80 2d       	mov	r24, r0
    2074:	bf 01       	movw	r22, r30
    2076:	ff 27       	eor	r31, r31
    2078:	93 58       	subi	r25, 0x83	; 131
    207a:	5f 4f       	sbci	r21, 0xFF	; 255
    207c:	2a f0       	brmi	.+10     	; 0x2088 <__divsf3_pse+0x6c>
    207e:	9e 3f       	cpi	r25, 0xFE	; 254
    2080:	51 05       	cpc	r21, r1
    2082:	68 f0       	brcs	.+26     	; 0x209e <__divsf3_pse+0x82>
    2084:	b6 c0       	rjmp	.+364    	; 0x21f2 <__fp_inf>
    2086:	5e c1       	rjmp	.+700    	; 0x2344 <__fp_szero>
    2088:	5f 3f       	cpi	r21, 0xFF	; 255
    208a:	ec f3       	brlt	.-6      	; 0x2086 <__divsf3_pse+0x6a>
    208c:	98 3e       	cpi	r25, 0xE8	; 232
    208e:	dc f3       	brlt	.-10     	; 0x2086 <__divsf3_pse+0x6a>
    2090:	86 95       	lsr	r24
    2092:	77 95       	ror	r23
    2094:	67 95       	ror	r22
    2096:	b7 95       	ror	r27
    2098:	f7 95       	ror	r31
    209a:	9f 5f       	subi	r25, 0xFF	; 255
    209c:	c9 f7       	brne	.-14     	; 0x2090 <__divsf3_pse+0x74>
    209e:	88 0f       	add	r24, r24
    20a0:	91 1d       	adc	r25, r1
    20a2:	96 95       	lsr	r25
    20a4:	87 95       	ror	r24
    20a6:	97 f9       	bld	r25, 7
    20a8:	08 95       	ret
    20aa:	e1 e0       	ldi	r30, 0x01	; 1
    20ac:	66 0f       	add	r22, r22
    20ae:	77 1f       	adc	r23, r23
    20b0:	88 1f       	adc	r24, r24
    20b2:	bb 1f       	adc	r27, r27
    20b4:	62 17       	cp	r22, r18
    20b6:	73 07       	cpc	r23, r19
    20b8:	84 07       	cpc	r24, r20
    20ba:	ba 07       	cpc	r27, r26
    20bc:	20 f0       	brcs	.+8      	; 0x20c6 <__divsf3_pse+0xaa>
    20be:	62 1b       	sub	r22, r18
    20c0:	73 0b       	sbc	r23, r19
    20c2:	84 0b       	sbc	r24, r20
    20c4:	ba 0b       	sbc	r27, r26
    20c6:	ee 1f       	adc	r30, r30
    20c8:	88 f7       	brcc	.-30     	; 0x20ac <__divsf3_pse+0x90>
    20ca:	e0 95       	com	r30
    20cc:	08 95       	ret

000020ce <__fixsfsi>:
    20ce:	04 d0       	rcall	.+8      	; 0x20d8 <__fixunssfsi>
    20d0:	68 94       	set
    20d2:	b1 11       	cpse	r27, r1
    20d4:	37 c1       	rjmp	.+622    	; 0x2344 <__fp_szero>
    20d6:	08 95       	ret

000020d8 <__fixunssfsi>:
    20d8:	1a d1       	rcall	.+564    	; 0x230e <__fp_splitA>
    20da:	88 f0       	brcs	.+34     	; 0x20fe <__fixunssfsi+0x26>
    20dc:	9f 57       	subi	r25, 0x7F	; 127
    20de:	90 f0       	brcs	.+36     	; 0x2104 <__fixunssfsi+0x2c>
    20e0:	b9 2f       	mov	r27, r25
    20e2:	99 27       	eor	r25, r25
    20e4:	b7 51       	subi	r27, 0x17	; 23
    20e6:	a0 f0       	brcs	.+40     	; 0x2110 <__fixunssfsi+0x38>
    20e8:	d1 f0       	breq	.+52     	; 0x211e <__fixunssfsi+0x46>
    20ea:	66 0f       	add	r22, r22
    20ec:	77 1f       	adc	r23, r23
    20ee:	88 1f       	adc	r24, r24
    20f0:	99 1f       	adc	r25, r25
    20f2:	1a f0       	brmi	.+6      	; 0x20fa <__fixunssfsi+0x22>
    20f4:	ba 95       	dec	r27
    20f6:	c9 f7       	brne	.-14     	; 0x20ea <__fixunssfsi+0x12>
    20f8:	12 c0       	rjmp	.+36     	; 0x211e <__fixunssfsi+0x46>
    20fa:	b1 30       	cpi	r27, 0x01	; 1
    20fc:	81 f0       	breq	.+32     	; 0x211e <__fixunssfsi+0x46>
    20fe:	21 d1       	rcall	.+578    	; 0x2342 <__fp_zero>
    2100:	b1 e0       	ldi	r27, 0x01	; 1
    2102:	08 95       	ret
    2104:	1e c1       	rjmp	.+572    	; 0x2342 <__fp_zero>
    2106:	67 2f       	mov	r22, r23
    2108:	78 2f       	mov	r23, r24
    210a:	88 27       	eor	r24, r24
    210c:	b8 5f       	subi	r27, 0xF8	; 248
    210e:	39 f0       	breq	.+14     	; 0x211e <__fixunssfsi+0x46>
    2110:	b9 3f       	cpi	r27, 0xF9	; 249
    2112:	cc f3       	brlt	.-14     	; 0x2106 <__fixunssfsi+0x2e>
    2114:	86 95       	lsr	r24
    2116:	77 95       	ror	r23
    2118:	67 95       	ror	r22
    211a:	b3 95       	inc	r27
    211c:	d9 f7       	brne	.-10     	; 0x2114 <__fixunssfsi+0x3c>
    211e:	3e f4       	brtc	.+14     	; 0x212e <__fixunssfsi+0x56>
    2120:	90 95       	com	r25
    2122:	80 95       	com	r24
    2124:	70 95       	com	r23
    2126:	61 95       	neg	r22
    2128:	7f 4f       	sbci	r23, 0xFF	; 255
    212a:	8f 4f       	sbci	r24, 0xFF	; 255
    212c:	9f 4f       	sbci	r25, 0xFF	; 255
    212e:	08 95       	ret

00002130 <__floatunsisf>:
    2130:	e8 94       	clt
    2132:	09 c0       	rjmp	.+18     	; 0x2146 <__floatsisf+0x12>

00002134 <__floatsisf>:
    2134:	97 fb       	bst	r25, 7
    2136:	3e f4       	brtc	.+14     	; 0x2146 <__floatsisf+0x12>
    2138:	90 95       	com	r25
    213a:	80 95       	com	r24
    213c:	70 95       	com	r23
    213e:	61 95       	neg	r22
    2140:	7f 4f       	sbci	r23, 0xFF	; 255
    2142:	8f 4f       	sbci	r24, 0xFF	; 255
    2144:	9f 4f       	sbci	r25, 0xFF	; 255
    2146:	99 23       	and	r25, r25
    2148:	a9 f0       	breq	.+42     	; 0x2174 <__floatsisf+0x40>
    214a:	f9 2f       	mov	r31, r25
    214c:	96 e9       	ldi	r25, 0x96	; 150
    214e:	bb 27       	eor	r27, r27
    2150:	93 95       	inc	r25
    2152:	f6 95       	lsr	r31
    2154:	87 95       	ror	r24
    2156:	77 95       	ror	r23
    2158:	67 95       	ror	r22
    215a:	b7 95       	ror	r27
    215c:	f1 11       	cpse	r31, r1
    215e:	f8 cf       	rjmp	.-16     	; 0x2150 <__floatsisf+0x1c>
    2160:	fa f4       	brpl	.+62     	; 0x21a0 <__floatsisf+0x6c>
    2162:	bb 0f       	add	r27, r27
    2164:	11 f4       	brne	.+4      	; 0x216a <__floatsisf+0x36>
    2166:	60 ff       	sbrs	r22, 0
    2168:	1b c0       	rjmp	.+54     	; 0x21a0 <__floatsisf+0x6c>
    216a:	6f 5f       	subi	r22, 0xFF	; 255
    216c:	7f 4f       	sbci	r23, 0xFF	; 255
    216e:	8f 4f       	sbci	r24, 0xFF	; 255
    2170:	9f 4f       	sbci	r25, 0xFF	; 255
    2172:	16 c0       	rjmp	.+44     	; 0x21a0 <__floatsisf+0x6c>
    2174:	88 23       	and	r24, r24
    2176:	11 f0       	breq	.+4      	; 0x217c <__floatsisf+0x48>
    2178:	96 e9       	ldi	r25, 0x96	; 150
    217a:	11 c0       	rjmp	.+34     	; 0x219e <__floatsisf+0x6a>
    217c:	77 23       	and	r23, r23
    217e:	21 f0       	breq	.+8      	; 0x2188 <__floatsisf+0x54>
    2180:	9e e8       	ldi	r25, 0x8E	; 142
    2182:	87 2f       	mov	r24, r23
    2184:	76 2f       	mov	r23, r22
    2186:	05 c0       	rjmp	.+10     	; 0x2192 <__floatsisf+0x5e>
    2188:	66 23       	and	r22, r22
    218a:	71 f0       	breq	.+28     	; 0x21a8 <__floatsisf+0x74>
    218c:	96 e8       	ldi	r25, 0x86	; 134
    218e:	86 2f       	mov	r24, r22
    2190:	70 e0       	ldi	r23, 0x00	; 0
    2192:	60 e0       	ldi	r22, 0x00	; 0
    2194:	2a f0       	brmi	.+10     	; 0x21a0 <__floatsisf+0x6c>
    2196:	9a 95       	dec	r25
    2198:	66 0f       	add	r22, r22
    219a:	77 1f       	adc	r23, r23
    219c:	88 1f       	adc	r24, r24
    219e:	da f7       	brpl	.-10     	; 0x2196 <__floatsisf+0x62>
    21a0:	88 0f       	add	r24, r24
    21a2:	96 95       	lsr	r25
    21a4:	87 95       	ror	r24
    21a6:	97 f9       	bld	r25, 7
    21a8:	08 95       	ret

000021aa <__fp_cmp>:
    21aa:	99 0f       	add	r25, r25
    21ac:	00 08       	sbc	r0, r0
    21ae:	55 0f       	add	r21, r21
    21b0:	aa 0b       	sbc	r26, r26
    21b2:	e0 e8       	ldi	r30, 0x80	; 128
    21b4:	fe ef       	ldi	r31, 0xFE	; 254
    21b6:	16 16       	cp	r1, r22
    21b8:	17 06       	cpc	r1, r23
    21ba:	e8 07       	cpc	r30, r24
    21bc:	f9 07       	cpc	r31, r25
    21be:	c0 f0       	brcs	.+48     	; 0x21f0 <__fp_cmp+0x46>
    21c0:	12 16       	cp	r1, r18
    21c2:	13 06       	cpc	r1, r19
    21c4:	e4 07       	cpc	r30, r20
    21c6:	f5 07       	cpc	r31, r21
    21c8:	98 f0       	brcs	.+38     	; 0x21f0 <__fp_cmp+0x46>
    21ca:	62 1b       	sub	r22, r18
    21cc:	73 0b       	sbc	r23, r19
    21ce:	84 0b       	sbc	r24, r20
    21d0:	95 0b       	sbc	r25, r21
    21d2:	39 f4       	brne	.+14     	; 0x21e2 <__fp_cmp+0x38>
    21d4:	0a 26       	eor	r0, r26
    21d6:	61 f0       	breq	.+24     	; 0x21f0 <__fp_cmp+0x46>
    21d8:	23 2b       	or	r18, r19
    21da:	24 2b       	or	r18, r20
    21dc:	25 2b       	or	r18, r21
    21de:	21 f4       	brne	.+8      	; 0x21e8 <__fp_cmp+0x3e>
    21e0:	08 95       	ret
    21e2:	0a 26       	eor	r0, r26
    21e4:	09 f4       	brne	.+2      	; 0x21e8 <__fp_cmp+0x3e>
    21e6:	a1 40       	sbci	r26, 0x01	; 1
    21e8:	a6 95       	lsr	r26
    21ea:	8f ef       	ldi	r24, 0xFF	; 255
    21ec:	81 1d       	adc	r24, r1
    21ee:	81 1d       	adc	r24, r1
    21f0:	08 95       	ret

000021f2 <__fp_inf>:
    21f2:	97 f9       	bld	r25, 7
    21f4:	9f 67       	ori	r25, 0x7F	; 127
    21f6:	80 e8       	ldi	r24, 0x80	; 128
    21f8:	70 e0       	ldi	r23, 0x00	; 0
    21fa:	60 e0       	ldi	r22, 0x00	; 0
    21fc:	08 95       	ret

000021fe <__fp_nan>:
    21fe:	9f ef       	ldi	r25, 0xFF	; 255
    2200:	80 ec       	ldi	r24, 0xC0	; 192
    2202:	08 95       	ret

00002204 <__fp_powser>:
    2204:	df 93       	push	r29
    2206:	cf 93       	push	r28
    2208:	1f 93       	push	r17
    220a:	0f 93       	push	r16
    220c:	ff 92       	push	r15
    220e:	ef 92       	push	r14
    2210:	df 92       	push	r13
    2212:	7b 01       	movw	r14, r22
    2214:	8c 01       	movw	r16, r24
    2216:	68 94       	set
    2218:	05 c0       	rjmp	.+10     	; 0x2224 <__fp_powser+0x20>
    221a:	da 2e       	mov	r13, r26
    221c:	ef 01       	movw	r28, r30
    221e:	af d0       	rcall	.+350    	; 0x237e <__mulsf3x>
    2220:	fe 01       	movw	r30, r28
    2222:	e8 94       	clt
    2224:	a5 91       	lpm	r26, Z+
    2226:	25 91       	lpm	r18, Z+
    2228:	35 91       	lpm	r19, Z+
    222a:	45 91       	lpm	r20, Z+
    222c:	55 91       	lpm	r21, Z+
    222e:	ae f3       	brts	.-22     	; 0x221a <__fp_powser+0x16>
    2230:	ef 01       	movw	r28, r30
    2232:	63 de       	rcall	.-826    	; 0x1efa <__addsf3x>
    2234:	fe 01       	movw	r30, r28
    2236:	97 01       	movw	r18, r14
    2238:	a8 01       	movw	r20, r16
    223a:	da 94       	dec	r13
    223c:	79 f7       	brne	.-34     	; 0x221c <__fp_powser+0x18>
    223e:	df 90       	pop	r13
    2240:	ef 90       	pop	r14
    2242:	ff 90       	pop	r15
    2244:	0f 91       	pop	r16
    2246:	1f 91       	pop	r17
    2248:	cf 91       	pop	r28
    224a:	df 91       	pop	r29
    224c:	08 95       	ret

0000224e <__fp_pscA>:
    224e:	00 24       	eor	r0, r0
    2250:	0a 94       	dec	r0
    2252:	16 16       	cp	r1, r22
    2254:	17 06       	cpc	r1, r23
    2256:	18 06       	cpc	r1, r24
    2258:	09 06       	cpc	r0, r25
    225a:	08 95       	ret

0000225c <__fp_pscB>:
    225c:	00 24       	eor	r0, r0
    225e:	0a 94       	dec	r0
    2260:	12 16       	cp	r1, r18
    2262:	13 06       	cpc	r1, r19
    2264:	14 06       	cpc	r1, r20
    2266:	05 06       	cpc	r0, r21
    2268:	08 95       	ret
    226a:	c9 cf       	rjmp	.-110    	; 0x21fe <__fp_nan>

0000226c <__fp_rempio2>:
    226c:	50 d0       	rcall	.+160    	; 0x230e <__fp_splitA>
    226e:	e8 f3       	brcs	.-6      	; 0x226a <__fp_pscB+0xe>
    2270:	e8 94       	clt
    2272:	e0 e0       	ldi	r30, 0x00	; 0
    2274:	bb 27       	eor	r27, r27
    2276:	9f 57       	subi	r25, 0x7F	; 127
    2278:	f0 f0       	brcs	.+60     	; 0x22b6 <__fp_rempio2+0x4a>
    227a:	2a ed       	ldi	r18, 0xDA	; 218
    227c:	3f e0       	ldi	r19, 0x0F	; 15
    227e:	49 ec       	ldi	r20, 0xC9	; 201
    2280:	06 c0       	rjmp	.+12     	; 0x228e <__fp_rempio2+0x22>
    2282:	ee 0f       	add	r30, r30
    2284:	bb 0f       	add	r27, r27
    2286:	66 1f       	adc	r22, r22
    2288:	77 1f       	adc	r23, r23
    228a:	88 1f       	adc	r24, r24
    228c:	28 f0       	brcs	.+10     	; 0x2298 <__fp_rempio2+0x2c>
    228e:	b2 3a       	cpi	r27, 0xA2	; 162
    2290:	62 07       	cpc	r22, r18
    2292:	73 07       	cpc	r23, r19
    2294:	84 07       	cpc	r24, r20
    2296:	28 f0       	brcs	.+10     	; 0x22a2 <__fp_rempio2+0x36>
    2298:	b2 5a       	subi	r27, 0xA2	; 162
    229a:	62 0b       	sbc	r22, r18
    229c:	73 0b       	sbc	r23, r19
    229e:	84 0b       	sbc	r24, r20
    22a0:	e3 95       	inc	r30
    22a2:	9a 95       	dec	r25
    22a4:	72 f7       	brpl	.-36     	; 0x2282 <__fp_rempio2+0x16>
    22a6:	80 38       	cpi	r24, 0x80	; 128
    22a8:	30 f4       	brcc	.+12     	; 0x22b6 <__fp_rempio2+0x4a>
    22aa:	9a 95       	dec	r25
    22ac:	bb 0f       	add	r27, r27
    22ae:	66 1f       	adc	r22, r22
    22b0:	77 1f       	adc	r23, r23
    22b2:	88 1f       	adc	r24, r24
    22b4:	d2 f7       	brpl	.-12     	; 0x22aa <__fp_rempio2+0x3e>
    22b6:	90 48       	sbci	r25, 0x80	; 128
    22b8:	be c0       	rjmp	.+380    	; 0x2436 <__fp_mpack_finite>

000022ba <__fp_round>:
    22ba:	09 2e       	mov	r0, r25
    22bc:	03 94       	inc	r0
    22be:	00 0c       	add	r0, r0
    22c0:	11 f4       	brne	.+4      	; 0x22c6 <__fp_round+0xc>
    22c2:	88 23       	and	r24, r24
    22c4:	52 f0       	brmi	.+20     	; 0x22da <__fp_round+0x20>
    22c6:	bb 0f       	add	r27, r27
    22c8:	40 f4       	brcc	.+16     	; 0x22da <__fp_round+0x20>
    22ca:	bf 2b       	or	r27, r31
    22cc:	11 f4       	brne	.+4      	; 0x22d2 <__fp_round+0x18>
    22ce:	60 ff       	sbrs	r22, 0
    22d0:	04 c0       	rjmp	.+8      	; 0x22da <__fp_round+0x20>
    22d2:	6f 5f       	subi	r22, 0xFF	; 255
    22d4:	7f 4f       	sbci	r23, 0xFF	; 255
    22d6:	8f 4f       	sbci	r24, 0xFF	; 255
    22d8:	9f 4f       	sbci	r25, 0xFF	; 255
    22da:	08 95       	ret

000022dc <__fp_sinus>:
    22dc:	ef 93       	push	r30
    22de:	e0 ff       	sbrs	r30, 0
    22e0:	06 c0       	rjmp	.+12     	; 0x22ee <__fp_sinus+0x12>
    22e2:	a2 ea       	ldi	r26, 0xA2	; 162
    22e4:	2a ed       	ldi	r18, 0xDA	; 218
    22e6:	3f e0       	ldi	r19, 0x0F	; 15
    22e8:	49 ec       	ldi	r20, 0xC9	; 201
    22ea:	5f eb       	ldi	r21, 0xBF	; 191
    22ec:	06 de       	rcall	.-1012   	; 0x1efa <__addsf3x>
    22ee:	e5 df       	rcall	.-54     	; 0x22ba <__fp_round>
    22f0:	0f 90       	pop	r0
    22f2:	03 94       	inc	r0
    22f4:	01 fc       	sbrc	r0, 1
    22f6:	90 58       	subi	r25, 0x80	; 128
    22f8:	e9 eb       	ldi	r30, 0xB9	; 185
    22fa:	f0 e0       	ldi	r31, 0x00	; 0
    22fc:	a8 c0       	rjmp	.+336    	; 0x244e <__fp_powsodd>

000022fe <__fp_split3>:
    22fe:	57 fd       	sbrc	r21, 7
    2300:	90 58       	subi	r25, 0x80	; 128
    2302:	44 0f       	add	r20, r20
    2304:	55 1f       	adc	r21, r21
    2306:	59 f0       	breq	.+22     	; 0x231e <__fp_splitA+0x10>
    2308:	5f 3f       	cpi	r21, 0xFF	; 255
    230a:	71 f0       	breq	.+28     	; 0x2328 <__fp_splitA+0x1a>
    230c:	47 95       	ror	r20

0000230e <__fp_splitA>:
    230e:	88 0f       	add	r24, r24
    2310:	97 fb       	bst	r25, 7
    2312:	99 1f       	adc	r25, r25
    2314:	61 f0       	breq	.+24     	; 0x232e <__fp_splitA+0x20>
    2316:	9f 3f       	cpi	r25, 0xFF	; 255
    2318:	79 f0       	breq	.+30     	; 0x2338 <__fp_splitA+0x2a>
    231a:	87 95       	ror	r24
    231c:	08 95       	ret
    231e:	12 16       	cp	r1, r18
    2320:	13 06       	cpc	r1, r19
    2322:	14 06       	cpc	r1, r20
    2324:	55 1f       	adc	r21, r21
    2326:	f2 cf       	rjmp	.-28     	; 0x230c <__fp_split3+0xe>
    2328:	46 95       	lsr	r20
    232a:	f1 df       	rcall	.-30     	; 0x230e <__fp_splitA>
    232c:	08 c0       	rjmp	.+16     	; 0x233e <__fp_splitA+0x30>
    232e:	16 16       	cp	r1, r22
    2330:	17 06       	cpc	r1, r23
    2332:	18 06       	cpc	r1, r24
    2334:	99 1f       	adc	r25, r25
    2336:	f1 cf       	rjmp	.-30     	; 0x231a <__fp_splitA+0xc>
    2338:	86 95       	lsr	r24
    233a:	71 05       	cpc	r23, r1
    233c:	61 05       	cpc	r22, r1
    233e:	08 94       	sec
    2340:	08 95       	ret

00002342 <__fp_zero>:
    2342:	e8 94       	clt

00002344 <__fp_szero>:
    2344:	bb 27       	eor	r27, r27
    2346:	66 27       	eor	r22, r22
    2348:	77 27       	eor	r23, r23
    234a:	cb 01       	movw	r24, r22
    234c:	97 f9       	bld	r25, 7
    234e:	08 95       	ret

00002350 <__gesf2>:
    2350:	2c df       	rcall	.-424    	; 0x21aa <__fp_cmp>
    2352:	08 f4       	brcc	.+2      	; 0x2356 <__gesf2+0x6>
    2354:	8f ef       	ldi	r24, 0xFF	; 255
    2356:	08 95       	ret

00002358 <inverse>:
    2358:	9b 01       	movw	r18, r22
    235a:	ac 01       	movw	r20, r24
    235c:	60 e0       	ldi	r22, 0x00	; 0
    235e:	70 e0       	ldi	r23, 0x00	; 0
    2360:	80 e8       	ldi	r24, 0x80	; 128
    2362:	9f e3       	ldi	r25, 0x3F	; 63
    2364:	4c ce       	rjmp	.-872    	; 0x1ffe <__divsf3>

00002366 <__mulsf3>:
    2366:	0b d0       	rcall	.+22     	; 0x237e <__mulsf3x>
    2368:	a8 cf       	rjmp	.-176    	; 0x22ba <__fp_round>
    236a:	71 df       	rcall	.-286    	; 0x224e <__fp_pscA>
    236c:	28 f0       	brcs	.+10     	; 0x2378 <__mulsf3+0x12>
    236e:	76 df       	rcall	.-276    	; 0x225c <__fp_pscB>
    2370:	18 f0       	brcs	.+6      	; 0x2378 <__mulsf3+0x12>
    2372:	95 23       	and	r25, r21
    2374:	09 f0       	breq	.+2      	; 0x2378 <__mulsf3+0x12>
    2376:	3d cf       	rjmp	.-390    	; 0x21f2 <__fp_inf>
    2378:	42 cf       	rjmp	.-380    	; 0x21fe <__fp_nan>
    237a:	11 24       	eor	r1, r1
    237c:	e3 cf       	rjmp	.-58     	; 0x2344 <__fp_szero>

0000237e <__mulsf3x>:
    237e:	bf df       	rcall	.-130    	; 0x22fe <__fp_split3>
    2380:	a0 f3       	brcs	.-24     	; 0x236a <__mulsf3+0x4>

00002382 <__mulsf3_pse>:
    2382:	95 9f       	mul	r25, r21
    2384:	d1 f3       	breq	.-12     	; 0x237a <__mulsf3+0x14>
    2386:	95 0f       	add	r25, r21
    2388:	50 e0       	ldi	r21, 0x00	; 0
    238a:	55 1f       	adc	r21, r21
    238c:	62 9f       	mul	r22, r18
    238e:	f0 01       	movw	r30, r0
    2390:	72 9f       	mul	r23, r18
    2392:	bb 27       	eor	r27, r27
    2394:	f0 0d       	add	r31, r0
    2396:	b1 1d       	adc	r27, r1
    2398:	63 9f       	mul	r22, r19
    239a:	aa 27       	eor	r26, r26
    239c:	f0 0d       	add	r31, r0
    239e:	b1 1d       	adc	r27, r1
    23a0:	aa 1f       	adc	r26, r26
    23a2:	64 9f       	mul	r22, r20
    23a4:	66 27       	eor	r22, r22
    23a6:	b0 0d       	add	r27, r0
    23a8:	a1 1d       	adc	r26, r1
    23aa:	66 1f       	adc	r22, r22
    23ac:	82 9f       	mul	r24, r18
    23ae:	22 27       	eor	r18, r18
    23b0:	b0 0d       	add	r27, r0
    23b2:	a1 1d       	adc	r26, r1
    23b4:	62 1f       	adc	r22, r18
    23b6:	73 9f       	mul	r23, r19
    23b8:	b0 0d       	add	r27, r0
    23ba:	a1 1d       	adc	r26, r1
    23bc:	62 1f       	adc	r22, r18
    23be:	83 9f       	mul	r24, r19
    23c0:	a0 0d       	add	r26, r0
    23c2:	61 1d       	adc	r22, r1
    23c4:	22 1f       	adc	r18, r18
    23c6:	74 9f       	mul	r23, r20
    23c8:	33 27       	eor	r19, r19
    23ca:	a0 0d       	add	r26, r0
    23cc:	61 1d       	adc	r22, r1
    23ce:	23 1f       	adc	r18, r19
    23d0:	84 9f       	mul	r24, r20
    23d2:	60 0d       	add	r22, r0
    23d4:	21 1d       	adc	r18, r1
    23d6:	82 2f       	mov	r24, r18
    23d8:	76 2f       	mov	r23, r22
    23da:	6a 2f       	mov	r22, r26
    23dc:	11 24       	eor	r1, r1
    23de:	9f 57       	subi	r25, 0x7F	; 127
    23e0:	50 40       	sbci	r21, 0x00	; 0
    23e2:	8a f0       	brmi	.+34     	; 0x2406 <__mulsf3_pse+0x84>
    23e4:	e1 f0       	breq	.+56     	; 0x241e <__mulsf3_pse+0x9c>
    23e6:	88 23       	and	r24, r24
    23e8:	4a f0       	brmi	.+18     	; 0x23fc <__mulsf3_pse+0x7a>
    23ea:	ee 0f       	add	r30, r30
    23ec:	ff 1f       	adc	r31, r31
    23ee:	bb 1f       	adc	r27, r27
    23f0:	66 1f       	adc	r22, r22
    23f2:	77 1f       	adc	r23, r23
    23f4:	88 1f       	adc	r24, r24
    23f6:	91 50       	subi	r25, 0x01	; 1
    23f8:	50 40       	sbci	r21, 0x00	; 0
    23fa:	a9 f7       	brne	.-22     	; 0x23e6 <__mulsf3_pse+0x64>
    23fc:	9e 3f       	cpi	r25, 0xFE	; 254
    23fe:	51 05       	cpc	r21, r1
    2400:	70 f0       	brcs	.+28     	; 0x241e <__mulsf3_pse+0x9c>
    2402:	f7 ce       	rjmp	.-530    	; 0x21f2 <__fp_inf>
    2404:	9f cf       	rjmp	.-194    	; 0x2344 <__fp_szero>
    2406:	5f 3f       	cpi	r21, 0xFF	; 255
    2408:	ec f3       	brlt	.-6      	; 0x2404 <__mulsf3_pse+0x82>
    240a:	98 3e       	cpi	r25, 0xE8	; 232
    240c:	dc f3       	brlt	.-10     	; 0x2404 <__mulsf3_pse+0x82>
    240e:	86 95       	lsr	r24
    2410:	77 95       	ror	r23
    2412:	67 95       	ror	r22
    2414:	b7 95       	ror	r27
    2416:	f7 95       	ror	r31
    2418:	e7 95       	ror	r30
    241a:	9f 5f       	subi	r25, 0xFF	; 255
    241c:	c1 f7       	brne	.-16     	; 0x240e <__mulsf3_pse+0x8c>
    241e:	fe 2b       	or	r31, r30
    2420:	88 0f       	add	r24, r24
    2422:	91 1d       	adc	r25, r1
    2424:	96 95       	lsr	r25
    2426:	87 95       	ror	r24
    2428:	97 f9       	bld	r25, 7
    242a:	08 95       	ret

0000242c <square>:
    242c:	9b 01       	movw	r18, r22
    242e:	ac 01       	movw	r20, r24
    2430:	9a cf       	rjmp	.-204    	; 0x2366 <__mulsf3>

00002432 <__fp_mpack>:
    2432:	9f 3f       	cpi	r25, 0xFF	; 255
    2434:	31 f0       	breq	.+12     	; 0x2442 <__fp_mpack_finite+0xc>

00002436 <__fp_mpack_finite>:
    2436:	91 50       	subi	r25, 0x01	; 1
    2438:	20 f4       	brcc	.+8      	; 0x2442 <__fp_mpack_finite+0xc>
    243a:	87 95       	ror	r24
    243c:	77 95       	ror	r23
    243e:	67 95       	ror	r22
    2440:	b7 95       	ror	r27
    2442:	88 0f       	add	r24, r24
    2444:	91 1d       	adc	r25, r1
    2446:	96 95       	lsr	r25
    2448:	87 95       	ror	r24
    244a:	97 f9       	bld	r25, 7
    244c:	08 95       	ret

0000244e <__fp_powsodd>:
    244e:	9f 93       	push	r25
    2450:	8f 93       	push	r24
    2452:	7f 93       	push	r23
    2454:	6f 93       	push	r22
    2456:	ff 93       	push	r31
    2458:	ef 93       	push	r30
    245a:	9b 01       	movw	r18, r22
    245c:	ac 01       	movw	r20, r24
    245e:	83 df       	rcall	.-250    	; 0x2366 <__mulsf3>
    2460:	ef 91       	pop	r30
    2462:	ff 91       	pop	r31
    2464:	cf de       	rcall	.-610    	; 0x2204 <__fp_powser>
    2466:	2f 91       	pop	r18
    2468:	3f 91       	pop	r19
    246a:	4f 91       	pop	r20
    246c:	5f 91       	pop	r21
    246e:	7b cf       	rjmp	.-266    	; 0x2366 <__mulsf3>

00002470 <_exit>:
    2470:	f8 94       	cli

00002472 <__stop_program>:
    2472:	ff cf       	rjmp	.-2      	; 0x2472 <__stop_program>
