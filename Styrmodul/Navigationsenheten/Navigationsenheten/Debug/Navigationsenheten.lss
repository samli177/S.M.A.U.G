
Navigationsenheten.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00001200  00800100  00001f28  00001fbc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001f28  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000664  00801300  00801300  000031bc  2**0
                  ALLOC
  3 .stab         00002dfc  00000000  00000000  000031bc  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000cd6  00000000  00000000  00005fb8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00006c8e  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000003a8  00000000  00000000  00006cbd  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00003689  00000000  00000000  00007065  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000ee7  00000000  00000000  0000a6ee  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000213d  00000000  00000000  0000b5d5  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000ab0  00000000  00000000  0000d714  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000c86  00000000  00000000  0000e1c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000247b  00000000  00000000  0000ee4a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000370  00000000  00000000  000112c5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	6b c0       	rjmp	.+214    	; 0xd8 <__ctors_end>
       2:	00 00       	nop
       4:	87 c0       	rjmp	.+270    	; 0x114 <__bad_interrupt>
       6:	00 00       	nop
       8:	85 c0       	rjmp	.+266    	; 0x114 <__bad_interrupt>
       a:	00 00       	nop
       c:	83 c0       	rjmp	.+262    	; 0x114 <__bad_interrupt>
       e:	00 00       	nop
      10:	81 c0       	rjmp	.+258    	; 0x114 <__bad_interrupt>
      12:	00 00       	nop
      14:	7f c0       	rjmp	.+254    	; 0x114 <__bad_interrupt>
      16:	00 00       	nop
      18:	7d c0       	rjmp	.+250    	; 0x114 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	7b c0       	rjmp	.+246    	; 0x114 <__bad_interrupt>
      1e:	00 00       	nop
      20:	79 c0       	rjmp	.+242    	; 0x114 <__bad_interrupt>
      22:	00 00       	nop
      24:	77 c0       	rjmp	.+238    	; 0x114 <__bad_interrupt>
      26:	00 00       	nop
      28:	75 c0       	rjmp	.+234    	; 0x114 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	73 c0       	rjmp	.+230    	; 0x114 <__bad_interrupt>
      2e:	00 00       	nop
      30:	71 c0       	rjmp	.+226    	; 0x114 <__bad_interrupt>
      32:	00 00       	nop
      34:	39 c4       	rjmp	.+2162   	; 0x8a8 <__vector_13>
      36:	00 00       	nop
      38:	6d c0       	rjmp	.+218    	; 0x114 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	6b c0       	rjmp	.+214    	; 0x114 <__bad_interrupt>
      3e:	00 00       	nop
      40:	69 c0       	rjmp	.+210    	; 0x114 <__bad_interrupt>
      42:	00 00       	nop
      44:	67 c0       	rjmp	.+206    	; 0x114 <__bad_interrupt>
      46:	00 00       	nop
      48:	65 c0       	rjmp	.+202    	; 0x114 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	63 c0       	rjmp	.+198    	; 0x114 <__bad_interrupt>
      4e:	00 00       	nop
      50:	0c 94 39 0a 	jmp	0x1472	; 0x1472 <__vector_20>
      54:	5f c0       	rjmp	.+190    	; 0x114 <__bad_interrupt>
      56:	00 00       	nop
      58:	5d c0       	rjmp	.+186    	; 0x114 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	5b c0       	rjmp	.+182    	; 0x114 <__bad_interrupt>
      5e:	00 00       	nop
      60:	59 c0       	rjmp	.+178    	; 0x114 <__bad_interrupt>
      62:	00 00       	nop
      64:	57 c0       	rjmp	.+174    	; 0x114 <__bad_interrupt>
      66:	00 00       	nop
      68:	68 c6       	rjmp	.+3280   	; 0xd3a <__vector_26>
      6a:	00 00       	nop
      6c:	53 c0       	rjmp	.+166    	; 0x114 <__bad_interrupt>
      6e:	00 00       	nop
      70:	51 c0       	rjmp	.+162    	; 0x114 <__bad_interrupt>
      72:	00 00       	nop
      74:	4f c0       	rjmp	.+158    	; 0x114 <__bad_interrupt>
      76:	00 00       	nop
      78:	4d c0       	rjmp	.+154    	; 0x114 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	4b c0       	rjmp	.+150    	; 0x114 <__bad_interrupt>
      7e:	00 00       	nop
      80:	40 c4       	rjmp	.+2176   	; 0x902 <__vector_32>
      82:	00 00       	nop
      84:	47 c0       	rjmp	.+142    	; 0x114 <__bad_interrupt>
      86:	00 00       	nop
      88:	45 c0       	rjmp	.+138    	; 0x114 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	08 4a       	sbci	r16, 0xA8	; 168
      8e:	d7 3b       	cpi	r29, 0xB7	; 183
      90:	3b ce       	rjmp	.-906    	; 0xfffffd08 <__eeprom_end+0xff7efd08>
      92:	01 6e       	ori	r16, 0xE1	; 225
      94:	84 bc       	out	0x24, r8	; 36
      96:	bf fd       	.word	0xfdbf	; ????
      98:	c1 2f       	mov	r28, r17
      9a:	3d 6c       	ori	r19, 0xCD	; 205
      9c:	74 31       	cpi	r23, 0x14	; 20
      9e:	9a bd       	out	0x2a, r25	; 42
      a0:	56 83       	std	Z+6, r21	; 0x06
      a2:	3d da       	rcall	.-2950   	; 0xfffff51e <__eeprom_end+0xff7ef51e>
      a4:	3d 00       	.word	0x003d	; ????
      a6:	c7 7f       	andi	r28, 0xF7	; 247
      a8:	11 be       	out	0x31, r1	; 49
      aa:	d9 e4       	ldi	r29, 0x49	; 73
      ac:	bb 4c       	sbci	r27, 0xCB	; 203
      ae:	3e 91       	ld	r19, -X
      b0:	6b aa       	std	Y+51, r6	; 0x33
      b2:	aa be       	out	0x3a, r10	; 58
      b4:	00 00       	nop
      b6:	00 80       	ld	r0, Z
      b8:	3f 05       	cpc	r19, r15
      ba:	a8 4c       	sbci	r26, 0xC8	; 200
      bc:	cd b2       	in	r12, 0x1d	; 29
      be:	d4 4e       	sbci	r29, 0xE4	; 228
      c0:	b9 38       	cpi	r27, 0x89	; 137
      c2:	36 a9       	ldd	r19, Z+54	; 0x36
      c4:	02 0c       	add	r0, r2
      c6:	50 b9       	out	0x00, r21	; 0
      c8:	91 86       	std	Z+9, r9	; 0x09
      ca:	88 08       	sbc	r8, r8
      cc:	3c a6       	std	Y+44, r3	; 0x2c
      ce:	aa aa       	std	Y+50, r10	; 0x32
      d0:	2a be       	out	0x3a, r2	; 58
      d2:	00 00       	nop
      d4:	00 80       	ld	r0, Z
      d6:	3f 00       	.word	0x003f	; ????

000000d8 <__ctors_end>:
      d8:	11 24       	eor	r1, r1
      da:	1f be       	out	0x3f, r1	; 63
      dc:	cf ef       	ldi	r28, 0xFF	; 255
      de:	d0 e4       	ldi	r29, 0x40	; 64
      e0:	de bf       	out	0x3e, r29	; 62
      e2:	cd bf       	out	0x3d, r28	; 61

000000e4 <__do_copy_data>:
      e4:	13 e1       	ldi	r17, 0x13	; 19
      e6:	a0 e0       	ldi	r26, 0x00	; 0
      e8:	b1 e0       	ldi	r27, 0x01	; 1
      ea:	e8 e2       	ldi	r30, 0x28	; 40
      ec:	ff e1       	ldi	r31, 0x1F	; 31
      ee:	00 e0       	ldi	r16, 0x00	; 0
      f0:	0b bf       	out	0x3b, r16	; 59
      f2:	02 c0       	rjmp	.+4      	; 0xf8 <__do_copy_data+0x14>
      f4:	07 90       	elpm	r0, Z+
      f6:	0d 92       	st	X+, r0
      f8:	a0 30       	cpi	r26, 0x00	; 0
      fa:	b1 07       	cpc	r27, r17
      fc:	d9 f7       	brne	.-10     	; 0xf4 <__do_copy_data+0x10>

000000fe <__do_clear_bss>:
      fe:	29 e1       	ldi	r18, 0x19	; 25
     100:	a0 e0       	ldi	r26, 0x00	; 0
     102:	b3 e1       	ldi	r27, 0x13	; 19
     104:	01 c0       	rjmp	.+2      	; 0x108 <.do_clear_bss_start>

00000106 <.do_clear_bss_loop>:
     106:	1d 92       	st	X+, r1

00000108 <.do_clear_bss_start>:
     108:	a4 36       	cpi	r26, 0x64	; 100
     10a:	b2 07       	cpc	r27, r18
     10c:	e1 f7       	brne	.-8      	; 0x106 <.do_clear_bss_loop>
     10e:	07 d4       	rcall	.+2062   	; 0x91e <main>
     110:	0c 94 92 0f 	jmp	0x1f24	; 0x1f24 <_exit>

00000114 <__bad_interrupt>:
     114:	75 cf       	rjmp	.-278    	; 0x0 <__vectors>

00000116 <turn_around>:
	}
}

void turn_around()
{
	if(gStatus)
     116:	80 91 00 13 	lds	r24, 0x1300
     11a:	88 23       	and	r24, r24
     11c:	e1 f0       	breq	.+56     	; 0x156 <turn_around+0x40>
	{
		TWI_send_string(C_ADDRESS, "Starting to turn around.");
     11e:	6b e0       	ldi	r22, 0x0B	; 11
     120:	71 e1       	ldi	r23, 0x11	; 17
     122:	80 e8       	ldi	r24, 0x80	; 128
     124:	20 d5       	rcall	.+2624   	; 0xb66 <TWI_send_string>
     126:	17 c0       	rjmp	.+46     	; 0x156 <turn_around+0x40>
	}
	while (navigation_get_sensor(4) < CORRIDOR_WIDTH)
	{
		if(gStatus)
     128:	80 91 00 13 	lds	r24, 0x1300
     12c:	88 23       	and	r24, r24
     12e:	21 f0       	breq	.+8      	; 0x138 <turn_around+0x22>
		{
			TWI_send_string(C_ADDRESS, "Turning around.");
     130:	64 e2       	ldi	r22, 0x24	; 36
     132:	71 e1       	ldi	r23, 0x11	; 17
     134:	80 e8       	ldi	r24, 0x80	; 128
     136:	17 d5       	rcall	.+2606   	; 0xb66 <TWI_send_string>
		}
		USART_send_command_parameters(0, MAX_ROTATION_COUNTER_CLOCKWISE, gSpeed);
     138:	40 91 00 01 	lds	r20, 0x0100
     13c:	6a e0       	ldi	r22, 0x0A	; 10
     13e:	80 e0       	ldi	r24, 0x00	; 0
     140:	0e 94 c5 0a 	call	0x158a	; 0x158a <USART_send_command_parameters>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     144:	2f ef       	ldi	r18, 0xFF	; 255
     146:	87 ea       	ldi	r24, 0xA7	; 167
     148:	91 e6       	ldi	r25, 0x61	; 97
     14a:	21 50       	subi	r18, 0x01	; 1
     14c:	80 40       	sbci	r24, 0x00	; 0
     14e:	90 40       	sbci	r25, 0x00	; 0
     150:	e1 f7       	brne	.-8      	; 0x14a <turn_around+0x34>
     152:	00 c0       	rjmp	.+0      	; 0x154 <turn_around+0x3e>
     154:	00 00       	nop
{
	if(gStatus)
	{
		TWI_send_string(C_ADDRESS, "Starting to turn around.");
	}
	while (navigation_get_sensor(4) < CORRIDOR_WIDTH)
     156:	84 e0       	ldi	r24, 0x04	; 4
     158:	90 e0       	ldi	r25, 0x00	; 0
     15a:	58 d2       	rcall	.+1200   	; 0x60c <navigation_get_sensor>
     15c:	80 35       	cpi	r24, 0x50	; 80
     15e:	20 f3       	brcs	.-56     	; 0x128 <turn_around+0x12>
			TWI_send_string(C_ADDRESS, "Turning around.");
		}
		USART_send_command_parameters(0, MAX_ROTATION_COUNTER_CLOCKWISE, gSpeed);
		_delay_ms(STEPPING_TIME);
	}
	if(gStatus)
     160:	80 91 00 13 	lds	r24, 0x1300
     164:	88 23       	and	r24, r24
     166:	21 f0       	breq	.+8      	; 0x170 <turn_around+0x5a>
	{
		TWI_send_string(C_ADDRESS, "Corridor ahead, done turning around.");
     168:	64 e3       	ldi	r22, 0x34	; 52
     16a:	71 e1       	ldi	r23, 0x11	; 17
     16c:	80 e8       	ldi	r24, 0x80	; 128
     16e:	fb c4       	rjmp	.+2550   	; 0xb66 <TWI_send_string>
     170:	08 95       	ret

00000172 <walk_forward>:
	}
}

void walk_forward()
{
     172:	8f 92       	push	r8
     174:	9f 92       	push	r9
     176:	af 92       	push	r10
     178:	bf 92       	push	r11
     17a:	cf 92       	push	r12
     17c:	df 92       	push	r13
     17e:	ef 92       	push	r14
     180:	ff 92       	push	r15
     182:	cf 93       	push	r28
     184:	df 93       	push	r29
	if(gStatus)
     186:	80 91 00 13 	lds	r24, 0x1300
     18a:	88 23       	and	r24, r24
     18c:	21 f0       	breq	.+8      	; 0x196 <walk_forward+0x24>
	{
		TWI_send_string(C_ADDRESS, "Finding regulation parameters.");
     18e:	69 e5       	ldi	r22, 0x59	; 89
     190:	71 e1       	ldi	r23, 0x11	; 17
     192:	80 e8       	ldi	r24, 0x80	; 128
     194:	e8 d4       	rcall	.+2512   	; 0xb66 <TWI_send_string>
	}
	float angleOffset = navigation_angle_offset();
     196:	03 d3       	rcall	.+1542   	; 0x79e <navigation_angle_offset>
     198:	6b 01       	movw	r12, r22
     19a:	7c 01       	movw	r14, r24
	float directionCompensationAngle = navigation_direction_regulation(angleOffset);
     19c:	64 d2       	rcall	.+1224   	; 0x666 <navigation_direction_regulation>
     19e:	4b 01       	movw	r8, r22
     1a0:	5c 01       	movw	r10, r24
	if(gStatus)
     1a2:	80 91 00 13 	lds	r24, 0x1300
     1a6:	88 23       	and	r24, r24
     1a8:	21 f0       	breq	.+8      	; 0x1b2 <walk_forward+0x40>
	{
		TWI_send_string(C_ADDRESS, "Found regulation parameters.");
     1aa:	68 e7       	ldi	r22, 0x78	; 120
     1ac:	71 e1       	ldi	r23, 0x11	; 17
     1ae:	80 e8       	ldi	r24, 0x80	; 128
     1b0:	da d4       	rcall	.+2484   	; 0xb66 <TWI_send_string>
	}
	int adjustmentRotation = (50 + 50 * angleOffset/MAX_ROTATION_RADIANS);
     1b2:	20 e0       	ldi	r18, 0x00	; 0
     1b4:	30 e0       	ldi	r19, 0x00	; 0
     1b6:	48 e4       	ldi	r20, 0x48	; 72
     1b8:	52 e4       	ldi	r21, 0x42	; 66
     1ba:	c7 01       	movw	r24, r14
     1bc:	b6 01       	movw	r22, r12
     1be:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <__mulsf3>
     1c2:	26 e5       	ldi	r18, 0x56	; 86
     1c4:	3e e0       	ldi	r19, 0x0E	; 14
     1c6:	49 e4       	ldi	r20, 0x49	; 73
     1c8:	50 e4       	ldi	r21, 0x40	; 64
     1ca:	0e 94 5e 0b 	call	0x16bc	; 0x16bc <__divsf3>
     1ce:	20 e0       	ldi	r18, 0x00	; 0
     1d0:	30 e0       	ldi	r19, 0x00	; 0
     1d2:	40 ec       	ldi	r20, 0xC0	; 192
     1d4:	50 e4       	ldi	r21, 0x40	; 64
     1d6:	0e 94 5e 0b 	call	0x16bc	; 0x16bc <__divsf3>
     1da:	20 e0       	ldi	r18, 0x00	; 0
     1dc:	30 e0       	ldi	r19, 0x00	; 0
     1de:	48 e4       	ldi	r20, 0x48	; 72
     1e0:	52 e4       	ldi	r21, 0x42	; 66
     1e2:	0e 94 cf 0a 	call	0x159e	; 0x159e <__addsf3>
     1e6:	0e 94 c6 0b 	call	0x178c	; 0x178c <__fixsfsi>
	if (adjustmentRotation >= 100)
     1ea:	64 36       	cpi	r22, 0x64	; 100
     1ec:	71 05       	cpc	r23, r1
     1ee:	34 f4       	brge	.+12     	; 0x1fc <walk_forward+0x8a>
     1f0:	eb 01       	movw	r28, r22
     1f2:	dd 23       	and	r29, r29
     1f4:	2c f4       	brge	.+10     	; 0x200 <walk_forward+0x8e>
     1f6:	c0 e0       	ldi	r28, 0x00	; 0
     1f8:	d0 e0       	ldi	r29, 0x00	; 0
     1fa:	02 c0       	rjmp	.+4      	; 0x200 <walk_forward+0x8e>
	{
		adjustmentRotation = 100;
     1fc:	c4 e6       	ldi	r28, 0x64	; 100
     1fe:	d0 e0       	ldi	r29, 0x00	; 0
	}
	else if(adjustmentRotation <= 0)
	{
		adjustmentRotation = 0;
	}
	int adjustmentDirection = 90 * directionCompensationAngle/(2*PI);
     200:	20 e0       	ldi	r18, 0x00	; 0
     202:	30 e0       	ldi	r19, 0x00	; 0
     204:	44 eb       	ldi	r20, 0xB4	; 180
     206:	52 e4       	ldi	r21, 0x42	; 66
     208:	c5 01       	movw	r24, r10
     20a:	b4 01       	movw	r22, r8
     20c:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <__mulsf3>
     210:	2b ed       	ldi	r18, 0xDB	; 219
     212:	3f e0       	ldi	r19, 0x0F	; 15
     214:	49 ec       	ldi	r20, 0xC9	; 201
     216:	50 e4       	ldi	r21, 0x40	; 64
     218:	0e 94 5e 0b 	call	0x16bc	; 0x16bc <__divsf3>
     21c:	0e 94 c6 0b 	call	0x178c	; 0x178c <__fixsfsi>
     220:	7b 01       	movw	r14, r22
	if(adjustmentDirection < 0)
     222:	77 23       	and	r23, r23
     224:	1c f4       	brge	.+6      	; 0x22c <walk_forward+0xba>
	{
		adjustmentDirection = 90 + adjustmentDirection;
     226:	2a e5       	ldi	r18, 0x5A	; 90
     228:	e2 0e       	add	r14, r18
     22a:	f1 1c       	adc	r15, r1
	}
	if(gStatus)
     22c:	80 91 00 13 	lds	r24, 0x1300
     230:	88 23       	and	r24, r24
     232:	21 f0       	breq	.+8      	; 0x23c <walk_forward+0xca>
	{
		TWI_send_string(C_ADDRESS, "Taking a step.");
     234:	65 e9       	ldi	r22, 0x95	; 149
     236:	71 e1       	ldi	r23, 0x11	; 17
     238:	80 e8       	ldi	r24, 0x80	; 128
     23a:	95 d4       	rcall	.+2346   	; 0xb66 <TWI_send_string>
	}
	USART_send_command_parameters((uint8_t)adjustmentDirection, (uint8_t)adjustmentRotation, gSpeed);
     23c:	40 91 00 01 	lds	r20, 0x0100
     240:	6c 2f       	mov	r22, r28
     242:	8e 2d       	mov	r24, r14
     244:	0e 94 c5 0a 	call	0x158a	; 0x158a <USART_send_command_parameters>
     248:	8f ef       	ldi	r24, 0xFF	; 255
     24a:	97 ea       	ldi	r25, 0xA7	; 167
     24c:	21 e6       	ldi	r18, 0x61	; 97
     24e:	81 50       	subi	r24, 0x01	; 1
     250:	90 40       	sbci	r25, 0x00	; 0
     252:	20 40       	sbci	r18, 0x00	; 0
     254:	e1 f7       	brne	.-8      	; 0x24e <walk_forward+0xdc>
     256:	00 c0       	rjmp	.+0      	; 0x258 <walk_forward+0xe6>
     258:	00 00       	nop
	_delay_ms(STEPPING_TIME);
}
     25a:	df 91       	pop	r29
     25c:	cf 91       	pop	r28
     25e:	ff 90       	pop	r15
     260:	ef 90       	pop	r14
     262:	df 90       	pop	r13
     264:	cf 90       	pop	r12
     266:	bf 90       	pop	r11
     268:	af 90       	pop	r10
     26a:	9f 90       	pop	r9
     26c:	8f 90       	pop	r8
     26e:	08 95       	ret

00000270 <turn_right>:
	}
}

void turn_right()
{
	if(gStatus)
     270:	80 91 00 13 	lds	r24, 0x1300
     274:	88 23       	and	r24, r24
     276:	21 f0       	breq	.+8      	; 0x280 <turn_right+0x10>
	{
		TWI_send_string(C_ADDRESS, "Starting turning right.");
     278:	64 ea       	ldi	r22, 0xA4	; 164
     27a:	71 e1       	ldi	r23, 0x11	; 17
     27c:	80 e8       	ldi	r24, 0x80	; 128
     27e:	73 d4       	rcall	.+2278   	; 0xb66 <TWI_send_string>
	}
	walk_forward();
     280:	78 df       	rcall	.-272    	; 0x172 <walk_forward>
     282:	2f ef       	ldi	r18, 0xFF	; 255
     284:	87 ea       	ldi	r24, 0xA7	; 167
     286:	91 e6       	ldi	r25, 0x61	; 97
     288:	21 50       	subi	r18, 0x01	; 1
     28a:	80 40       	sbci	r24, 0x00	; 0
     28c:	90 40       	sbci	r25, 0x00	; 0
     28e:	e1 f7       	brne	.-8      	; 0x288 <turn_right+0x18>
     290:	00 c0       	rjmp	.+0      	; 0x292 <turn_right+0x22>
     292:	00 00       	nop
     294:	17 c0       	rjmp	.+46     	; 0x2c4 <turn_right+0x54>
	_delay_ms(STEPPING_TIME);
	while(navigation_get_sensor(4) < CORRIDOR_WIDTH && navigation_get_sensor(5) > (CORRIDOR_WIDTH/2))
	{
		if(gStatus)
     296:	80 91 00 13 	lds	r24, 0x1300
     29a:	88 23       	and	r24, r24
     29c:	21 f0       	breq	.+8      	; 0x2a6 <turn_right+0x36>
		{
			TWI_send_string(C_ADDRESS, "Rotating right.");
     29e:	6c eb       	ldi	r22, 0xBC	; 188
     2a0:	71 e1       	ldi	r23, 0x11	; 17
     2a2:	80 e8       	ldi	r24, 0x80	; 128
     2a4:	60 d4       	rcall	.+2240   	; 0xb66 <TWI_send_string>
		}
		USART_send_command_parameters(0, MAX_ROTATION_CLOCKWISE, gSpeed);
     2a6:	40 91 00 01 	lds	r20, 0x0100
     2aa:	6a e5       	ldi	r22, 0x5A	; 90
     2ac:	80 e0       	ldi	r24, 0x00	; 0
     2ae:	0e 94 c5 0a 	call	0x158a	; 0x158a <USART_send_command_parameters>
     2b2:	2f ef       	ldi	r18, 0xFF	; 255
     2b4:	87 ea       	ldi	r24, 0xA7	; 167
     2b6:	91 e6       	ldi	r25, 0x61	; 97
     2b8:	21 50       	subi	r18, 0x01	; 1
     2ba:	80 40       	sbci	r24, 0x00	; 0
     2bc:	90 40       	sbci	r25, 0x00	; 0
     2be:	e1 f7       	brne	.-8      	; 0x2b8 <turn_right+0x48>
     2c0:	00 c0       	rjmp	.+0      	; 0x2c2 <turn_right+0x52>
     2c2:	00 00       	nop
	{
		TWI_send_string(C_ADDRESS, "Starting turning right.");
	}
	walk_forward();
	_delay_ms(STEPPING_TIME);
	while(navigation_get_sensor(4) < CORRIDOR_WIDTH && navigation_get_sensor(5) > (CORRIDOR_WIDTH/2))
     2c4:	84 e0       	ldi	r24, 0x04	; 4
     2c6:	90 e0       	ldi	r25, 0x00	; 0
     2c8:	a1 d1       	rcall	.+834    	; 0x60c <navigation_get_sensor>
     2ca:	80 35       	cpi	r24, 0x50	; 80
     2cc:	28 f4       	brcc	.+10     	; 0x2d8 <turn_right+0x68>
     2ce:	85 e0       	ldi	r24, 0x05	; 5
     2d0:	90 e0       	ldi	r25, 0x00	; 0
     2d2:	9c d1       	rcall	.+824    	; 0x60c <navigation_get_sensor>
     2d4:	89 32       	cpi	r24, 0x29	; 41
     2d6:	f8 f6       	brcc	.-66     	; 0x296 <turn_right+0x26>
		USART_send_command_parameters(0, MAX_ROTATION_CLOCKWISE, gSpeed);
		_delay_ms(STEPPING_TIME);
	}
	for(int i = 0; i < 3; ++i)
	{
		walk_forward();
     2d8:	4c df       	rcall	.-360    	; 0x172 <walk_forward>
     2da:	4b df       	rcall	.-362    	; 0x172 <walk_forward>
     2dc:	4a cf       	rjmp	.-364    	; 0x172 <walk_forward>

000002de <turn_left>:
	return gStatus;
}

void turn_left()
{
	if(gStatus)
     2de:	80 91 00 13 	lds	r24, 0x1300
     2e2:	88 23       	and	r24, r24
     2e4:	21 f0       	breq	.+8      	; 0x2ee <turn_left+0x10>
	{
		TWI_send_string(C_ADDRESS, "Starting turning left.");
     2e6:	6c ec       	ldi	r22, 0xCC	; 204
     2e8:	71 e1       	ldi	r23, 0x11	; 17
     2ea:	80 e8       	ldi	r24, 0x80	; 128
     2ec:	3c d4       	rcall	.+2168   	; 0xb66 <TWI_send_string>
	}
	walk_forward();
     2ee:	41 df       	rcall	.-382    	; 0x172 <walk_forward>
     2f0:	2f ef       	ldi	r18, 0xFF	; 255
     2f2:	87 ea       	ldi	r24, 0xA7	; 167
     2f4:	91 e6       	ldi	r25, 0x61	; 97
     2f6:	21 50       	subi	r18, 0x01	; 1
     2f8:	80 40       	sbci	r24, 0x00	; 0
     2fa:	90 40       	sbci	r25, 0x00	; 0
     2fc:	e1 f7       	brne	.-8      	; 0x2f6 <turn_left+0x18>
     2fe:	00 c0       	rjmp	.+0      	; 0x300 <turn_left+0x22>
     300:	00 00       	nop
     302:	17 c0       	rjmp	.+46     	; 0x332 <turn_left+0x54>
	_delay_ms(STEPPING_TIME);
	while(navigation_get_sensor(4) < CORRIDOR_WIDTH && navigation_get_sensor(5) > (CORRIDOR_WIDTH/2))
	{
		if(gStatus)
     304:	80 91 00 13 	lds	r24, 0x1300
     308:	88 23       	and	r24, r24
     30a:	21 f0       	breq	.+8      	; 0x314 <turn_left+0x36>
		{
			TWI_send_string(C_ADDRESS, "Rotating left.");
     30c:	63 ee       	ldi	r22, 0xE3	; 227
     30e:	71 e1       	ldi	r23, 0x11	; 17
     310:	80 e8       	ldi	r24, 0x80	; 128
     312:	29 d4       	rcall	.+2130   	; 0xb66 <TWI_send_string>
		}
		USART_send_command_parameters(0, MAX_ROTATION_COUNTER_CLOCKWISE, gSpeed);
     314:	40 91 00 01 	lds	r20, 0x0100
     318:	6a e0       	ldi	r22, 0x0A	; 10
     31a:	80 e0       	ldi	r24, 0x00	; 0
     31c:	0e 94 c5 0a 	call	0x158a	; 0x158a <USART_send_command_parameters>
     320:	2f ef       	ldi	r18, 0xFF	; 255
     322:	87 ea       	ldi	r24, 0xA7	; 167
     324:	91 e6       	ldi	r25, 0x61	; 97
     326:	21 50       	subi	r18, 0x01	; 1
     328:	80 40       	sbci	r24, 0x00	; 0
     32a:	90 40       	sbci	r25, 0x00	; 0
     32c:	e1 f7       	brne	.-8      	; 0x326 <turn_left+0x48>
     32e:	00 c0       	rjmp	.+0      	; 0x330 <turn_left+0x52>
     330:	00 00       	nop
	{
		TWI_send_string(C_ADDRESS, "Starting turning left.");
	}
	walk_forward();
	_delay_ms(STEPPING_TIME);
	while(navigation_get_sensor(4) < CORRIDOR_WIDTH && navigation_get_sensor(5) > (CORRIDOR_WIDTH/2))
     332:	84 e0       	ldi	r24, 0x04	; 4
     334:	90 e0       	ldi	r25, 0x00	; 0
     336:	6a d1       	rcall	.+724    	; 0x60c <navigation_get_sensor>
     338:	80 35       	cpi	r24, 0x50	; 80
     33a:	28 f4       	brcc	.+10     	; 0x346 <turn_left+0x68>
     33c:	85 e0       	ldi	r24, 0x05	; 5
     33e:	90 e0       	ldi	r25, 0x00	; 0
     340:	65 d1       	rcall	.+714    	; 0x60c <navigation_get_sensor>
     342:	89 32       	cpi	r24, 0x29	; 41
     344:	f8 f6       	brcc	.-66     	; 0x304 <turn_left+0x26>
		USART_send_command_parameters(0, MAX_ROTATION_COUNTER_CLOCKWISE, gSpeed);
		_delay_ms(STEPPING_TIME);
	}
	for(int i = 0; i < 3; ++i)
	{
		walk_forward();
     346:	15 df       	rcall	.-470    	; 0x172 <walk_forward>
     348:	14 df       	rcall	.-472    	; 0x172 <walk_forward>
     34a:	13 cf       	rjmp	.-474    	; 0x172 <walk_forward>

0000034c <autonomouswalk_walk>:
	USART_send_command_parameters((uint8_t)adjustmentDirection, (uint8_t)adjustmentRotation, gSpeed);
	_delay_ms(STEPPING_TIME);
}

void autonomouswalk_walk()
{
     34c:	cf 93       	push	r28
	uint8_t leftSideAlgorithm = navigation_left_algorithm();
     34e:	f1 d0       	rcall	.+482    	; 0x532 <navigation_left_algorithm>
	if(leftSideAlgorithm)
     350:	88 23       	and	r24, r24
     352:	59 f1       	breq	.+86     	; 0x3aa <autonomouswalk_walk+0x5e>
	{
		if(navigation_check_left_turn(navigation_get_sensor(0), navigation_get_sensor(2)) == 2)
     354:	82 e0       	ldi	r24, 0x02	; 2
     356:	90 e0       	ldi	r25, 0x00	; 0
     358:	59 d1       	rcall	.+690    	; 0x60c <navigation_get_sensor>
     35a:	c8 2f       	mov	r28, r24
     35c:	80 e0       	ldi	r24, 0x00	; 0
     35e:	90 e0       	ldi	r25, 0x00	; 0
     360:	55 d1       	rcall	.+682    	; 0x60c <navigation_get_sensor>
     362:	6c 2f       	mov	r22, r28
     364:	70 e0       	ldi	r23, 0x00	; 0
     366:	90 e0       	ldi	r25, 0x00	; 0
     368:	6a d1       	rcall	.+724    	; 0x63e <navigation_check_left_turn>
     36a:	82 30       	cpi	r24, 0x02	; 2
     36c:	11 f4       	brne	.+4      	; 0x372 <autonomouswalk_walk+0x26>
		{
			turn_left();
     36e:	b7 df       	rcall	.-146    	; 0x2de <turn_left>
     370:	42 c0       	rjmp	.+132    	; 0x3f6 <autonomouswalk_walk+0xaa>
		}
		else if(navigation_get_sensor(4) > CORRIDOR_WIDTH)
     372:	84 e0       	ldi	r24, 0x04	; 4
     374:	90 e0       	ldi	r25, 0x00	; 0
     376:	4a d1       	rcall	.+660    	; 0x60c <navigation_get_sensor>
     378:	81 35       	cpi	r24, 0x51	; 81
     37a:	10 f0       	brcs	.+4      	; 0x380 <autonomouswalk_walk+0x34>
		{
			walk_forward();
     37c:	fa de       	rcall	.-524    	; 0x172 <walk_forward>
     37e:	3b c0       	rjmp	.+118    	; 0x3f6 <autonomouswalk_walk+0xaa>
		}
		else if(navigation_check_right_turn(navigation_get_sensor(1), navigation_get_sensor(3)) == 2)
     380:	83 e0       	ldi	r24, 0x03	; 3
     382:	90 e0       	ldi	r25, 0x00	; 0
     384:	43 d1       	rcall	.+646    	; 0x60c <navigation_get_sensor>
     386:	c8 2f       	mov	r28, r24
     388:	81 e0       	ldi	r24, 0x01	; 1
     38a:	90 e0       	ldi	r25, 0x00	; 0
     38c:	3f d1       	rcall	.+638    	; 0x60c <navigation_get_sensor>
     38e:	6c 2f       	mov	r22, r28
     390:	70 e0       	ldi	r23, 0x00	; 0
     392:	90 e0       	ldi	r25, 0x00	; 0
     394:	40 d1       	rcall	.+640    	; 0x616 <navigation_check_right_turn>
     396:	82 30       	cpi	r24, 0x02	; 2
     398:	11 f4       	brne	.+4      	; 0x39e <autonomouswalk_walk+0x52>
		{
			turn_right();
     39a:	6a df       	rcall	.-300    	; 0x270 <turn_right>
     39c:	2c c0       	rjmp	.+88     	; 0x3f6 <autonomouswalk_walk+0xaa>
		}
		else
		{
			turn_around(navigation_get_sensor(4));
     39e:	84 e0       	ldi	r24, 0x04	; 4
     3a0:	90 e0       	ldi	r25, 0x00	; 0
     3a2:	34 d1       	rcall	.+616    	; 0x60c <navigation_get_sensor>
     3a4:	90 e0       	ldi	r25, 0x00	; 0
     3a6:	b7 de       	rcall	.-658    	; 0x116 <turn_around>
     3a8:	26 c0       	rjmp	.+76     	; 0x3f6 <autonomouswalk_walk+0xaa>
		}
	}
	else
	{
		if(navigation_check_right_turn(navigation_get_sensor(1), navigation_get_sensor(3)) == 2)
     3aa:	83 e0       	ldi	r24, 0x03	; 3
     3ac:	90 e0       	ldi	r25, 0x00	; 0
     3ae:	2e d1       	rcall	.+604    	; 0x60c <navigation_get_sensor>
     3b0:	c8 2f       	mov	r28, r24
     3b2:	81 e0       	ldi	r24, 0x01	; 1
     3b4:	90 e0       	ldi	r25, 0x00	; 0
     3b6:	2a d1       	rcall	.+596    	; 0x60c <navigation_get_sensor>
     3b8:	6c 2f       	mov	r22, r28
     3ba:	70 e0       	ldi	r23, 0x00	; 0
     3bc:	90 e0       	ldi	r25, 0x00	; 0
     3be:	2b d1       	rcall	.+598    	; 0x616 <navigation_check_right_turn>
     3c0:	82 30       	cpi	r24, 0x02	; 2
     3c2:	11 f4       	brne	.+4      	; 0x3c8 <autonomouswalk_walk+0x7c>
		{
			turn_left();
     3c4:	8c df       	rcall	.-232    	; 0x2de <turn_left>
     3c6:	17 c0       	rjmp	.+46     	; 0x3f6 <autonomouswalk_walk+0xaa>
		}
		else if(navigation_get_sensor(4) > CORRIDOR_WIDTH)
     3c8:	84 e0       	ldi	r24, 0x04	; 4
     3ca:	90 e0       	ldi	r25, 0x00	; 0
     3cc:	1f d1       	rcall	.+574    	; 0x60c <navigation_get_sensor>
     3ce:	81 35       	cpi	r24, 0x51	; 81
     3d0:	10 f0       	brcs	.+4      	; 0x3d6 <autonomouswalk_walk+0x8a>
		{
			walk_forward();
     3d2:	cf de       	rcall	.-610    	; 0x172 <walk_forward>
     3d4:	10 c0       	rjmp	.+32     	; 0x3f6 <autonomouswalk_walk+0xaa>
		}
		else if(navigation_check_left_turn(navigation_get_sensor(0), navigation_get_sensor(2)) == 2)
     3d6:	82 e0       	ldi	r24, 0x02	; 2
     3d8:	90 e0       	ldi	r25, 0x00	; 0
     3da:	18 d1       	rcall	.+560    	; 0x60c <navigation_get_sensor>
     3dc:	c8 2f       	mov	r28, r24
     3de:	80 e0       	ldi	r24, 0x00	; 0
     3e0:	90 e0       	ldi	r25, 0x00	; 0
     3e2:	14 d1       	rcall	.+552    	; 0x60c <navigation_get_sensor>
     3e4:	6c 2f       	mov	r22, r28
     3e6:	70 e0       	ldi	r23, 0x00	; 0
     3e8:	90 e0       	ldi	r25, 0x00	; 0
     3ea:	29 d1       	rcall	.+594    	; 0x63e <navigation_check_left_turn>
     3ec:	82 30       	cpi	r24, 0x02	; 2
     3ee:	11 f4       	brne	.+4      	; 0x3f4 <autonomouswalk_walk+0xa8>
		{
			turn_right();
     3f0:	3f df       	rcall	.-386    	; 0x270 <turn_right>
     3f2:	01 c0       	rjmp	.+2      	; 0x3f6 <autonomouswalk_walk+0xaa>
		}
		else
		{
			turn_around();
     3f4:	90 de       	rcall	.-736    	; 0x116 <turn_around>
		}
	}
     3f6:	cf 91       	pop	r28
     3f8:	08 95       	ret

000003fa <set_counter_1>:
     3fa:	bc 01       	movw	r22, r24
     3fc:	80 e0       	ldi	r24, 0x00	; 0
     3fe:	90 e0       	ldi	r25, 0x00	; 0
     400:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <__floatunsisf>
     404:	20 e0       	ldi	r18, 0x00	; 0
     406:	30 e0       	ldi	r19, 0x00	; 0
     408:	4a e7       	ldi	r20, 0x7A	; 122
     40a:	51 e4       	ldi	r21, 0x41	; 65
     40c:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <__mulsf3>
     410:	0e 94 cb 0b 	call	0x1796	; 0x1796 <__fixunssfsi>
     414:	70 93 89 00 	sts	0x0089, r23
     418:	60 93 88 00 	sts	0x0088, r22
     41c:	08 95       	ret

0000041e <set_counter_2>:
     41e:	bc 01       	movw	r22, r24
     420:	80 e0       	ldi	r24, 0x00	; 0
     422:	90 e0       	ldi	r25, 0x00	; 0
     424:	0e 94 f7 0b 	call	0x17ee	; 0x17ee <__floatunsisf>
     428:	20 e0       	ldi	r18, 0x00	; 0
     42a:	30 e0       	ldi	r19, 0x00	; 0
     42c:	4a e7       	ldi	r20, 0x7A	; 122
     42e:	51 e4       	ldi	r21, 0x41	; 65
     430:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <__mulsf3>
     434:	0e 94 cb 0b 	call	0x1796	; 0x1796 <__fixunssfsi>
     438:	70 93 99 00 	sts	0x0099, r23
     43c:	60 93 98 00 	sts	0x0098, r22
     440:	08 95       	ret

00000442 <init_counters>:
     442:	e1 e8       	ldi	r30, 0x81	; 129
     444:	f0 e0       	ldi	r31, 0x00	; 0
     446:	80 81       	ld	r24, Z
     448:	85 60       	ori	r24, 0x05	; 5
     44a:	80 83       	st	Z, r24
     44c:	e1 e9       	ldi	r30, 0x91	; 145
     44e:	f0 e0       	ldi	r31, 0x00	; 0
     450:	80 81       	ld	r24, Z
     452:	85 60       	ori	r24, 0x05	; 5
     454:	80 83       	st	Z, r24
     456:	88 ee       	ldi	r24, 0xE8	; 232
     458:	93 e0       	ldi	r25, 0x03	; 3
     45a:	cf df       	rcall	.-98     	; 0x3fa <set_counter_1>
     45c:	88 ee       	ldi	r24, 0xE8	; 232
     45e:	93 e0       	ldi	r25, 0x03	; 3
     460:	de df       	rcall	.-68     	; 0x41e <set_counter_2>
     462:	ef e6       	ldi	r30, 0x6F	; 111
     464:	f0 e0       	ldi	r31, 0x00	; 0
     466:	80 81       	ld	r24, Z
     468:	82 60       	ori	r24, 0x02	; 2
     46a:	80 83       	st	Z, r24
     46c:	e1 e7       	ldi	r30, 0x71	; 113
     46e:	f0 e0       	ldi	r31, 0x00	; 0
     470:	80 81       	ld	r24, Z
     472:	82 60       	ori	r24, 0x02	; 2
     474:	80 83       	st	Z, r24
     476:	10 92 85 00 	sts	0x0085, r1
     47a:	10 92 84 00 	sts	0x0084, r1
     47e:	10 92 95 00 	sts	0x0095, r1
     482:	10 92 94 00 	sts	0x0094, r1
     486:	08 95       	ret

00000488 <FifoDataLength>:
     488:	fc 01       	movw	r30, r24
     48a:	90 81       	ld	r25, Z
     48c:	91 50       	subi	r25, 0x01	; 1
     48e:	84 81       	ldd	r24, Z+4	; 0x04
     490:	22 81       	ldd	r18, Z+2	; 0x02
     492:	82 1b       	sub	r24, r18
     494:	89 23       	and	r24, r25
     496:	08 95       	ret

00000498 <FifoWrite>:
     498:	1f 93       	push	r17
     49a:	cf 93       	push	r28
     49c:	df 93       	push	r29
     49e:	ec 01       	movw	r28, r24
     4a0:	16 2f       	mov	r17, r22
     4a2:	f2 df       	rcall	.-28     	; 0x488 <FifoDataLength>
     4a4:	28 81       	ld	r18, Y
     4a6:	39 81       	ldd	r19, Y+1	; 0x01
     4a8:	21 50       	subi	r18, 0x01	; 1
     4aa:	31 09       	sbc	r19, r1
     4ac:	90 e0       	ldi	r25, 0x00	; 0
     4ae:	82 17       	cp	r24, r18
     4b0:	93 07       	cpc	r25, r19
     4b2:	69 f0       	breq	.+26     	; 0x4ce <FifoWrite+0x36>
     4b4:	8c 81       	ldd	r24, Y+4	; 0x04
     4b6:	9d 81       	ldd	r25, Y+5	; 0x05
     4b8:	fe 01       	movw	r30, r28
     4ba:	e8 0f       	add	r30, r24
     4bc:	f9 1f       	adc	r31, r25
     4be:	16 83       	std	Z+6, r17	; 0x06
     4c0:	01 96       	adiw	r24, 0x01	; 1
     4c2:	28 23       	and	r18, r24
     4c4:	39 23       	and	r19, r25
     4c6:	3d 83       	std	Y+5, r19	; 0x05
     4c8:	2c 83       	std	Y+4, r18	; 0x04
     4ca:	80 e0       	ldi	r24, 0x00	; 0
     4cc:	01 c0       	rjmp	.+2      	; 0x4d0 <FifoWrite+0x38>
     4ce:	81 e0       	ldi	r24, 0x01	; 1
     4d0:	df 91       	pop	r29
     4d2:	cf 91       	pop	r28
     4d4:	1f 91       	pop	r17
     4d6:	08 95       	ret

000004d8 <FifoRead>:
     4d8:	0f 93       	push	r16
     4da:	1f 93       	push	r17
     4dc:	cf 93       	push	r28
     4de:	df 93       	push	r29
     4e0:	ec 01       	movw	r28, r24
     4e2:	8b 01       	movw	r16, r22
     4e4:	d1 df       	rcall	.-94     	; 0x488 <FifoDataLength>
     4e6:	88 23       	and	r24, r24
     4e8:	a1 f0       	breq	.+40     	; 0x512 <FifoRead+0x3a>
     4ea:	ea 81       	ldd	r30, Y+2	; 0x02
     4ec:	fb 81       	ldd	r31, Y+3	; 0x03
     4ee:	ec 0f       	add	r30, r28
     4f0:	fd 1f       	adc	r31, r29
     4f2:	86 81       	ldd	r24, Z+6	; 0x06
     4f4:	f8 01       	movw	r30, r16
     4f6:	80 83       	st	Z, r24
     4f8:	28 81       	ld	r18, Y
     4fa:	39 81       	ldd	r19, Y+1	; 0x01
     4fc:	21 50       	subi	r18, 0x01	; 1
     4fe:	31 09       	sbc	r19, r1
     500:	8a 81       	ldd	r24, Y+2	; 0x02
     502:	9b 81       	ldd	r25, Y+3	; 0x03
     504:	01 96       	adiw	r24, 0x01	; 1
     506:	82 23       	and	r24, r18
     508:	93 23       	and	r25, r19
     50a:	9b 83       	std	Y+3, r25	; 0x03
     50c:	8a 83       	std	Y+2, r24	; 0x02
     50e:	80 e0       	ldi	r24, 0x00	; 0
     510:	01 c0       	rjmp	.+2      	; 0x514 <FifoRead+0x3c>
     512:	81 e0       	ldi	r24, 0x01	; 1
     514:	df 91       	pop	r29
     516:	cf 91       	pop	r28
     518:	1f 91       	pop	r17
     51a:	0f 91       	pop	r16
     51c:	08 95       	ret

0000051e <compare>:
	}
	else
	{
		return 0;
	}
}
     51e:	fc 01       	movw	r30, r24
     520:	20 81       	ld	r18, Z
     522:	30 e0       	ldi	r19, 0x00	; 0
     524:	fb 01       	movw	r30, r22
     526:	80 81       	ld	r24, Z
     528:	28 1b       	sub	r18, r24
     52a:	31 09       	sbc	r19, r1
     52c:	82 2f       	mov	r24, r18
     52e:	93 2f       	mov	r25, r19
     530:	08 95       	ret

00000532 <navigation_left_algorithm>:
     532:	80 91 02 01 	lds	r24, 0x0102
     536:	08 95       	ret

00000538 <navigation_autonomous_walk>:
     538:	80 91 01 13 	lds	r24, 0x1301
     53c:	08 95       	ret

0000053e <navigation_fill_buffer>:
     53e:	cf 92       	push	r12
     540:	df 92       	push	r13
     542:	ef 92       	push	r14
     544:	ff 92       	push	r15
     546:	0f 93       	push	r16
     548:	1f 93       	push	r17
     54a:	cf 93       	push	r28
     54c:	df 93       	push	r29
     54e:	00 d0       	rcall	.+0      	; 0x550 <navigation_fill_buffer+0x12>
     550:	1f 92       	push	r1
     552:	cd b7       	in	r28, 0x3d	; 61
     554:	de b7       	in	r29, 0x3e	; 62
     556:	00 e0       	ldi	r16, 0x00	; 0
     558:	10 e0       	ldi	r17, 0x00	; 0
     55a:	e0 90 02 13 	lds	r14, 0x1302
     55e:	f1 2c       	mov	r15, r1
     560:	c8 01       	movw	r24, r16
     562:	d2 d3       	rcall	.+1956   	; 0xd08 <TWI_get_sensor>
     564:	f8 01       	movw	r30, r16
     566:	ee 0f       	add	r30, r30
     568:	ff 1f       	adc	r31, r31
     56a:	e0 0f       	add	r30, r16
     56c:	f1 1f       	adc	r31, r17
     56e:	ee 0d       	add	r30, r14
     570:	ff 1d       	adc	r31, r15
     572:	ed 5f       	subi	r30, 0xFD	; 253
     574:	fc 4e       	sbci	r31, 0xEC	; 236
     576:	80 83       	st	Z, r24
     578:	0f 5f       	subi	r16, 0xFF	; 255
     57a:	1f 4f       	sbci	r17, 0xFF	; 255
     57c:	08 30       	cpi	r16, 0x08	; 8
     57e:	11 05       	cpc	r17, r1
     580:	61 f7       	brne	.-40     	; 0x55a <navigation_fill_buffer+0x1c>
     582:	80 91 02 13 	lds	r24, 0x1302
     586:	82 30       	cpi	r24, 0x02	; 2
     588:	19 f4       	brne	.+6      	; 0x590 <navigation_fill_buffer+0x52>
     58a:	10 92 02 13 	sts	0x1302, r1
     58e:	23 c0       	rjmp	.+70     	; 0x5d6 <navigation_fill_buffer+0x98>
     590:	8f 5f       	subi	r24, 0xFF	; 255
     592:	80 93 02 13 	sts	0x1302, r24
     596:	1f c0       	rjmp	.+62     	; 0x5d6 <navigation_fill_buffer+0x98>
     598:	f8 01       	movw	r30, r16
     59a:	32 97       	sbiw	r30, 0x02	; 2
     59c:	80 81       	ld	r24, Z
     59e:	89 83       	std	Y+1, r24	; 0x01
     5a0:	f8 01       	movw	r30, r16
     5a2:	31 97       	sbiw	r30, 0x01	; 1
     5a4:	80 81       	ld	r24, Z
     5a6:	8a 83       	std	Y+2, r24	; 0x02
     5a8:	f8 01       	movw	r30, r16
     5aa:	80 81       	ld	r24, Z
     5ac:	8b 83       	std	Y+3, r24	; 0x03
     5ae:	2f e8       	ldi	r18, 0x8F	; 143
     5b0:	32 e0       	ldi	r19, 0x02	; 2
     5b2:	41 e0       	ldi	r20, 0x01	; 1
     5b4:	50 e0       	ldi	r21, 0x00	; 0
     5b6:	63 e0       	ldi	r22, 0x03	; 3
     5b8:	70 e0       	ldi	r23, 0x00	; 0
     5ba:	ce 01       	movw	r24, r28
     5bc:	01 96       	adiw	r24, 0x01	; 1
     5be:	0e 94 d8 0d 	call	0x1bb0	; 0x1bb0 <qsort>
     5c2:	8a 81       	ldd	r24, Y+2	; 0x02
     5c4:	f7 01       	movw	r30, r14
     5c6:	81 93       	st	Z+, r24
     5c8:	7f 01       	movw	r14, r30
     5ca:	0d 5f       	subi	r16, 0xFD	; 253
     5cc:	1f 4f       	sbci	r17, 0xFF	; 255
     5ce:	0c 15       	cp	r16, r12
     5d0:	1d 05       	cpc	r17, r13
     5d2:	11 f7       	brne	.-60     	; 0x598 <navigation_fill_buffer+0x5a>
     5d4:	0f c0       	rjmp	.+30     	; 0x5f4 <navigation_fill_buffer+0xb6>
     5d6:	05 e0       	ldi	r16, 0x05	; 5
     5d8:	13 e1       	ldi	r17, 0x13	; 19
     5da:	0f 2e       	mov	r0, r31
     5dc:	fb e1       	ldi	r31, 0x1B	; 27
     5de:	ef 2e       	mov	r14, r31
     5e0:	f3 e1       	ldi	r31, 0x13	; 19
     5e2:	ff 2e       	mov	r15, r31
     5e4:	f0 2d       	mov	r31, r0
     5e6:	0f 2e       	mov	r0, r31
     5e8:	fd e1       	ldi	r31, 0x1D	; 29
     5ea:	cf 2e       	mov	r12, r31
     5ec:	f3 e1       	ldi	r31, 0x13	; 19
     5ee:	df 2e       	mov	r13, r31
     5f0:	f0 2d       	mov	r31, r0
     5f2:	d2 cf       	rjmp	.-92     	; 0x598 <navigation_fill_buffer+0x5a>
     5f4:	0f 90       	pop	r0
     5f6:	0f 90       	pop	r0
     5f8:	0f 90       	pop	r0
     5fa:	df 91       	pop	r29
     5fc:	cf 91       	pop	r28
     5fe:	1f 91       	pop	r17
     600:	0f 91       	pop	r16
     602:	ff 90       	pop	r15
     604:	ef 90       	pop	r14
     606:	df 90       	pop	r13
     608:	cf 90       	pop	r12
     60a:	08 95       	ret

0000060c <navigation_get_sensor>:
     60c:	85 5e       	subi	r24, 0xE5	; 229
     60e:	9c 4e       	sbci	r25, 0xEC	; 236
     610:	fc 01       	movw	r30, r24
     612:	80 81       	ld	r24, Z
     614:	08 95       	ret

00000616 <navigation_check_right_turn>:
		return 0;
	}
}

uint8_t navigation_check_right_turn()
{
     616:	cf 93       	push	r28
	if(navigation_get_sensor(1) > CORRIDOR_WIDTH && navigation_get_sensor(3) > CORRIDOR_WIDTH)
     618:	81 e0       	ldi	r24, 0x01	; 1
     61a:	90 e0       	ldi	r25, 0x00	; 0
     61c:	f7 df       	rcall	.-18     	; 0x60c <navigation_get_sensor>
     61e:	c8 2f       	mov	r28, r24
     620:	81 35       	cpi	r24, 0x51	; 81
     622:	28 f0       	brcs	.+10     	; 0x62e <navigation_check_right_turn+0x18>
     624:	83 e0       	ldi	r24, 0x03	; 3
     626:	90 e0       	ldi	r25, 0x00	; 0
     628:	f1 df       	rcall	.-30     	; 0x60c <navigation_get_sensor>
     62a:	81 35       	cpi	r24, 0x51	; 81
     62c:	28 f4       	brcc	.+10     	; 0x638 <navigation_check_right_turn+0x22>
	{
		return 2;
	}
	else if(navigation_get_sensor(1) > CORRIDOR_WIDTH)
     62e:	81 e0       	ldi	r24, 0x01	; 1
     630:	c1 35       	cpi	r28, 0x51	; 81
     632:	18 f4       	brcc	.+6      	; 0x63a <navigation_check_right_turn+0x24>
     634:	80 e0       	ldi	r24, 0x00	; 0
     636:	01 c0       	rjmp	.+2      	; 0x63a <navigation_check_right_turn+0x24>

uint8_t navigation_check_right_turn()
{
	if(navigation_get_sensor(1) > CORRIDOR_WIDTH && navigation_get_sensor(3) > CORRIDOR_WIDTH)
	{
		return 2;
     638:	82 e0       	ldi	r24, 0x02	; 2
	}
	else
	{
		return 0;
	}
}
     63a:	cf 91       	pop	r28
     63c:	08 95       	ret

0000063e <navigation_check_left_turn>:
		return atanf((CORRIDOR_WIDTH / 2 - d) * gKp);
	}
}

uint8_t navigation_check_left_turn()
{
     63e:	cf 93       	push	r28
	if(navigation_get_sensor(0) > CORRIDOR_WIDTH && navigation_get_sensor(2) > CORRIDOR_WIDTH)
     640:	80 e0       	ldi	r24, 0x00	; 0
     642:	90 e0       	ldi	r25, 0x00	; 0
     644:	e3 df       	rcall	.-58     	; 0x60c <navigation_get_sensor>
     646:	c8 2f       	mov	r28, r24
     648:	81 35       	cpi	r24, 0x51	; 81
     64a:	28 f0       	brcs	.+10     	; 0x656 <navigation_check_left_turn+0x18>
     64c:	82 e0       	ldi	r24, 0x02	; 2
     64e:	90 e0       	ldi	r25, 0x00	; 0
     650:	dd df       	rcall	.-70     	; 0x60c <navigation_get_sensor>
     652:	81 35       	cpi	r24, 0x51	; 81
     654:	28 f4       	brcc	.+10     	; 0x660 <navigation_check_left_turn+0x22>
	{
		return 2;
	}
	else if(navigation_get_sensor(0) > CORRIDOR_WIDTH)
     656:	81 e0       	ldi	r24, 0x01	; 1
     658:	c1 35       	cpi	r28, 0x51	; 81
     65a:	18 f4       	brcc	.+6      	; 0x662 <navigation_check_left_turn+0x24>
     65c:	80 e0       	ldi	r24, 0x00	; 0
     65e:	01 c0       	rjmp	.+2      	; 0x662 <navigation_check_left_turn+0x24>

uint8_t navigation_check_left_turn()
{
	if(navigation_get_sensor(0) > CORRIDOR_WIDTH && navigation_get_sensor(2) > CORRIDOR_WIDTH)
	{
		return 2;
     660:	82 e0       	ldi	r24, 0x02	; 2
	}
	else
	{
		return 0;
	}
}
     662:	cf 91       	pop	r28
     664:	08 95       	ret

00000666 <navigation_direction_regulation>:
		return 0;
	}
}

float navigation_direction_regulation(float angleOffset)
{
     666:	cf 92       	push	r12
     668:	df 92       	push	r13
     66a:	ef 92       	push	r14
     66c:	ff 92       	push	r15
     66e:	cf 93       	push	r28
     670:	df 93       	push	r29
     672:	6b 01       	movw	r12, r22
     674:	7c 01       	movw	r14, r24
	int d;
	if(gAlgorithm && navigation_get_sensor(4) > CORRIDOR_WIDTH)
     676:	80 91 02 01 	lds	r24, 0x0102
     67a:	88 23       	and	r24, r24
     67c:	81 f1       	breq	.+96     	; 0x6de <navigation_direction_regulation+0x78>
     67e:	84 e0       	ldi	r24, 0x04	; 4
     680:	90 e0       	ldi	r25, 0x00	; 0
     682:	c4 df       	rcall	.-120    	; 0x60c <navigation_get_sensor>
     684:	81 35       	cpi	r24, 0x51	; 81
     686:	08 f4       	brcc	.+2      	; 0x68a <navigation_direction_regulation+0x24>
     688:	75 c0       	rjmp	.+234    	; 0x774 <navigation_direction_regulation+0x10e>
	{
		d = ((navigation_get_sensor(2) + navigation_get_sensor(0)) / 2.0 + DISTANCE_MIDDLE_TO_SIDE) * cosf(angleOffset);
     68a:	82 e0       	ldi	r24, 0x02	; 2
     68c:	90 e0       	ldi	r25, 0x00	; 0
     68e:	be df       	rcall	.-132    	; 0x60c <navigation_get_sensor>
     690:	c8 2f       	mov	r28, r24
     692:	80 e0       	ldi	r24, 0x00	; 0
     694:	90 e0       	ldi	r25, 0x00	; 0
     696:	ba df       	rcall	.-140    	; 0x60c <navigation_get_sensor>
     698:	d8 2f       	mov	r29, r24
     69a:	c7 01       	movw	r24, r14
     69c:	b6 01       	movw	r22, r12
     69e:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <cos>
     6a2:	6b 01       	movw	r12, r22
     6a4:	7c 01       	movw	r14, r24
     6a6:	6d 2f       	mov	r22, r29
     6a8:	70 e0       	ldi	r23, 0x00	; 0
     6aa:	6c 0f       	add	r22, r28
     6ac:	71 1d       	adc	r23, r1
     6ae:	88 27       	eor	r24, r24
     6b0:	77 fd       	sbrc	r23, 7
     6b2:	80 95       	com	r24
     6b4:	98 2f       	mov	r25, r24
     6b6:	0e 94 f9 0b 	call	0x17f2	; 0x17f2 <__floatsisf>
     6ba:	20 e0       	ldi	r18, 0x00	; 0
     6bc:	30 e0       	ldi	r19, 0x00	; 0
     6be:	40 e0       	ldi	r20, 0x00	; 0
     6c0:	5f e3       	ldi	r21, 0x3F	; 63
     6c2:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <__mulsf3>
     6c6:	20 e0       	ldi	r18, 0x00	; 0
     6c8:	30 e0       	ldi	r19, 0x00	; 0
     6ca:	48 e4       	ldi	r20, 0x48	; 72
     6cc:	53 e4       	ldi	r21, 0x43	; 67
     6ce:	67 d7       	rcall	.+3790   	; 0x159e <__addsf3>
     6d0:	a7 01       	movw	r20, r14
     6d2:	96 01       	movw	r18, r12
     6d4:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <__mulsf3>
     6d8:	0e 94 c6 0b 	call	0x178c	; 0x178c <__fixsfsi>
     6dc:	35 c0       	rjmp	.+106    	; 0x748 <navigation_direction_regulation+0xe2>
	}
	else if (navigation_get_sensor(4) > CORRIDOR_WIDTH)
     6de:	84 e0       	ldi	r24, 0x04	; 4
     6e0:	90 e0       	ldi	r25, 0x00	; 0
     6e2:	94 df       	rcall	.-216    	; 0x60c <navigation_get_sensor>
     6e4:	81 35       	cpi	r24, 0x51	; 81
     6e6:	08 f4       	brcc	.+2      	; 0x6ea <navigation_direction_regulation+0x84>
     6e8:	4a c0       	rjmp	.+148    	; 0x77e <navigation_direction_regulation+0x118>
	{
		d = (CORRIDOR_WIDTH - ((navigation_get_sensor(1) + navigation_get_sensor(3)) / 2.0 + DISTANCE_MIDDLE_TO_SIDE) * cosf(angleOffset));
     6ea:	81 e0       	ldi	r24, 0x01	; 1
     6ec:	90 e0       	ldi	r25, 0x00	; 0
     6ee:	8e df       	rcall	.-228    	; 0x60c <navigation_get_sensor>
     6f0:	c8 2f       	mov	r28, r24
     6f2:	83 e0       	ldi	r24, 0x03	; 3
     6f4:	90 e0       	ldi	r25, 0x00	; 0
     6f6:	8a df       	rcall	.-236    	; 0x60c <navigation_get_sensor>
     6f8:	d8 2f       	mov	r29, r24
     6fa:	c7 01       	movw	r24, r14
     6fc:	b6 01       	movw	r22, r12
     6fe:	db d7       	rcall	.+4022   	; 0x16b6 <cos>
     700:	6b 01       	movw	r12, r22
     702:	7c 01       	movw	r14, r24
     704:	6d 2f       	mov	r22, r29
     706:	70 e0       	ldi	r23, 0x00	; 0
     708:	6c 0f       	add	r22, r28
     70a:	71 1d       	adc	r23, r1
     70c:	88 27       	eor	r24, r24
     70e:	77 fd       	sbrc	r23, 7
     710:	80 95       	com	r24
     712:	98 2f       	mov	r25, r24
     714:	0e 94 f9 0b 	call	0x17f2	; 0x17f2 <__floatsisf>
     718:	20 e0       	ldi	r18, 0x00	; 0
     71a:	30 e0       	ldi	r19, 0x00	; 0
     71c:	40 e0       	ldi	r20, 0x00	; 0
     71e:	5f e3       	ldi	r21, 0x3F	; 63
     720:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <__mulsf3>
     724:	20 e0       	ldi	r18, 0x00	; 0
     726:	30 e0       	ldi	r19, 0x00	; 0
     728:	48 e4       	ldi	r20, 0x48	; 72
     72a:	53 e4       	ldi	r21, 0x43	; 67
     72c:	38 d7       	rcall	.+3696   	; 0x159e <__addsf3>
     72e:	a7 01       	movw	r20, r14
     730:	96 01       	movw	r18, r12
     732:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <__mulsf3>
     736:	9b 01       	movw	r18, r22
     738:	ac 01       	movw	r20, r24
     73a:	60 e0       	ldi	r22, 0x00	; 0
     73c:	70 e0       	ldi	r23, 0x00	; 0
     73e:	80 ea       	ldi	r24, 0xA0	; 160
     740:	92 e4       	ldi	r25, 0x42	; 66
     742:	2c d7       	rcall	.+3672   	; 0x159c <__subsf3>
     744:	0e 94 c6 0b 	call	0x178c	; 0x178c <__fixsfsi>
	}
	else
	{
		return 0;
	}
	if((CORRIDOR_WIDTH / 2 - d) < ACCEPTABLE_DISTANCE_OFFSET)
     748:	88 e2       	ldi	r24, 0x28	; 40
     74a:	90 e0       	ldi	r25, 0x00	; 0
     74c:	86 1b       	sub	r24, r22
     74e:	97 0b       	sbc	r25, r23
     750:	85 30       	cpi	r24, 0x05	; 5
     752:	91 05       	cpc	r25, r1
     754:	cc f0       	brlt	.+50     	; 0x788 <navigation_direction_regulation+0x122>
	{
		return 0;
	}
	else
	{
		return atanf((CORRIDOR_WIDTH / 2 - d) * gKp);
     756:	20 91 01 01 	lds	r18, 0x0101
     75a:	28 9f       	mul	r18, r24
     75c:	b0 01       	movw	r22, r0
     75e:	29 9f       	mul	r18, r25
     760:	70 0d       	add	r23, r0
     762:	11 24       	eor	r1, r1
     764:	88 27       	eor	r24, r24
     766:	77 fd       	sbrc	r23, 7
     768:	80 95       	com	r24
     76a:	98 2f       	mov	r25, r24
     76c:	0e 94 f9 0b 	call	0x17f2	; 0x17f2 <__floatsisf>
     770:	7a d7       	rcall	.+3828   	; 0x1666 <atan>
     772:	0e c0       	rjmp	.+28     	; 0x790 <navigation_direction_regulation+0x12a>
	{
		d = (CORRIDOR_WIDTH - ((navigation_get_sensor(1) + navigation_get_sensor(3)) / 2.0 + DISTANCE_MIDDLE_TO_SIDE) * cosf(angleOffset));
	}
	else
	{
		return 0;
     774:	60 e0       	ldi	r22, 0x00	; 0
     776:	70 e0       	ldi	r23, 0x00	; 0
     778:	80 e0       	ldi	r24, 0x00	; 0
     77a:	90 e0       	ldi	r25, 0x00	; 0
     77c:	09 c0       	rjmp	.+18     	; 0x790 <navigation_direction_regulation+0x12a>
     77e:	60 e0       	ldi	r22, 0x00	; 0
     780:	70 e0       	ldi	r23, 0x00	; 0
     782:	80 e0       	ldi	r24, 0x00	; 0
     784:	90 e0       	ldi	r25, 0x00	; 0
     786:	04 c0       	rjmp	.+8      	; 0x790 <navigation_direction_regulation+0x12a>
	}
	if((CORRIDOR_WIDTH / 2 - d) < ACCEPTABLE_DISTANCE_OFFSET)
	{
		return 0;
     788:	60 e0       	ldi	r22, 0x00	; 0
     78a:	70 e0       	ldi	r23, 0x00	; 0
     78c:	80 e0       	ldi	r24, 0x00	; 0
     78e:	90 e0       	ldi	r25, 0x00	; 0
	}
	else
	{
		return atanf((CORRIDOR_WIDTH / 2 - d) * gKp);
	}
}
     790:	df 91       	pop	r29
     792:	cf 91       	pop	r28
     794:	ff 90       	pop	r15
     796:	ef 90       	pop	r14
     798:	df 90       	pop	r13
     79a:	cf 90       	pop	r12
     79c:	08 95       	ret

0000079e <navigation_angle_offset>:
{
	gAutonomousWalk = walk;
}

float navigation_angle_offset()
{
     79e:	cf 93       	push	r28
     7a0:	df 93       	push	r29
	if (gAlgorithm && (navigation_get_sensor(2) + navigation_get_sensor(0)) < (CORRIDOR_WIDTH + 20))
     7a2:	80 91 02 01 	lds	r24, 0x0102
     7a6:	88 23       	and	r24, r24
     7a8:	09 f4       	brne	.+2      	; 0x7ac <navigation_angle_offset+0xe>
     7aa:	3c c0       	rjmp	.+120    	; 0x824 <navigation_angle_offset+0x86>
     7ac:	82 e0       	ldi	r24, 0x02	; 2
     7ae:	90 e0       	ldi	r25, 0x00	; 0
     7b0:	2d df       	rcall	.-422    	; 0x60c <navigation_get_sensor>
     7b2:	c8 2f       	mov	r28, r24
     7b4:	d0 e0       	ldi	r29, 0x00	; 0
     7b6:	80 e0       	ldi	r24, 0x00	; 0
     7b8:	90 e0       	ldi	r25, 0x00	; 0
     7ba:	28 df       	rcall	.-432    	; 0x60c <navigation_get_sensor>
     7bc:	90 e0       	ldi	r25, 0x00	; 0
     7be:	9e 01       	movw	r18, r28
     7c0:	28 0f       	add	r18, r24
     7c2:	39 1f       	adc	r19, r25
     7c4:	24 36       	cpi	r18, 0x64	; 100
     7c6:	31 05       	cpc	r19, r1
     7c8:	84 f4       	brge	.+32     	; 0x7ea <navigation_angle_offset+0x4c>
	{
		return atanf((navigation_get_sensor(2) - navigation_get_sensor(0))/DISTANCE_FRONT_TO_BACK);
     7ca:	9e 01       	movw	r18, r28
     7cc:	28 1b       	sub	r18, r24
     7ce:	39 0b       	sbc	r19, r25
     7d0:	c9 01       	movw	r24, r18
     7d2:	60 e9       	ldi	r22, 0x90	; 144
     7d4:	71 e0       	ldi	r23, 0x01	; 1
     7d6:	0e 94 6f 0d 	call	0x1ade	; 0x1ade <__divmodhi4>
     7da:	88 27       	eor	r24, r24
     7dc:	77 fd       	sbrc	r23, 7
     7de:	80 95       	com	r24
     7e0:	98 2f       	mov	r25, r24
     7e2:	0e 94 f9 0b 	call	0x17f2	; 0x17f2 <__floatsisf>
     7e6:	3f d7       	rcall	.+3710   	; 0x1666 <atan>
     7e8:	5c c0       	rjmp	.+184    	; 0x8a2 <navigation_angle_offset+0x104>
	}
	else if(gAlgorithm && navigation_get_sensor(4) > CORRIDOR_WIDTH)
     7ea:	84 e0       	ldi	r24, 0x04	; 4
     7ec:	90 e0       	ldi	r25, 0x00	; 0
     7ee:	0e df       	rcall	.-484    	; 0x60c <navigation_get_sensor>
     7f0:	81 35       	cpi	r24, 0x51	; 81
     7f2:	c0 f0       	brcs	.+48     	; 0x824 <navigation_angle_offset+0x86>
	{
		return atanf((navigation_get_sensor(1) - navigation_get_sensor(3))/DISTANCE_FRONT_TO_BACK);
     7f4:	81 e0       	ldi	r24, 0x01	; 1
     7f6:	90 e0       	ldi	r25, 0x00	; 0
     7f8:	09 df       	rcall	.-494    	; 0x60c <navigation_get_sensor>
     7fa:	c8 2f       	mov	r28, r24
     7fc:	83 e0       	ldi	r24, 0x03	; 3
     7fe:	90 e0       	ldi	r25, 0x00	; 0
     800:	05 df       	rcall	.-502    	; 0x60c <navigation_get_sensor>
     802:	2c 2f       	mov	r18, r28
     804:	30 e0       	ldi	r19, 0x00	; 0
     806:	a9 01       	movw	r20, r18
     808:	48 1b       	sub	r20, r24
     80a:	51 09       	sbc	r21, r1
     80c:	ca 01       	movw	r24, r20
     80e:	60 e9       	ldi	r22, 0x90	; 144
     810:	71 e0       	ldi	r23, 0x01	; 1
     812:	0e 94 6f 0d 	call	0x1ade	; 0x1ade <__divmodhi4>
     816:	88 27       	eor	r24, r24
     818:	77 fd       	sbrc	r23, 7
     81a:	80 95       	com	r24
     81c:	98 2f       	mov	r25, r24
     81e:	e9 d7       	rcall	.+4050   	; 0x17f2 <__floatsisf>
     820:	22 d7       	rcall	.+3652   	; 0x1666 <atan>
     822:	3f c0       	rjmp	.+126    	; 0x8a2 <navigation_angle_offset+0x104>
	}
	else if((navigation_get_sensor(1) + navigation_get_sensor(3)) < (CORRIDOR_WIDTH + 20))
     824:	81 e0       	ldi	r24, 0x01	; 1
     826:	90 e0       	ldi	r25, 0x00	; 0
     828:	f1 de       	rcall	.-542    	; 0x60c <navigation_get_sensor>
     82a:	c8 2f       	mov	r28, r24
     82c:	d0 e0       	ldi	r29, 0x00	; 0
     82e:	83 e0       	ldi	r24, 0x03	; 3
     830:	90 e0       	ldi	r25, 0x00	; 0
     832:	ec de       	rcall	.-552    	; 0x60c <navigation_get_sensor>
     834:	90 e0       	ldi	r25, 0x00	; 0
     836:	9e 01       	movw	r18, r28
     838:	28 0f       	add	r18, r24
     83a:	39 1f       	adc	r19, r25
     83c:	24 36       	cpi	r18, 0x64	; 100
     83e:	31 05       	cpc	r19, r1
     840:	7c f4       	brge	.+30     	; 0x860 <navigation_angle_offset+0xc2>
	{
		return atanf((navigation_get_sensor(1) - navigation_get_sensor(3))/DISTANCE_FRONT_TO_BACK);
     842:	9e 01       	movw	r18, r28
     844:	28 1b       	sub	r18, r24
     846:	39 0b       	sbc	r19, r25
     848:	c9 01       	movw	r24, r18
     84a:	60 e9       	ldi	r22, 0x90	; 144
     84c:	71 e0       	ldi	r23, 0x01	; 1
     84e:	0e 94 6f 0d 	call	0x1ade	; 0x1ade <__divmodhi4>
     852:	88 27       	eor	r24, r24
     854:	77 fd       	sbrc	r23, 7
     856:	80 95       	com	r24
     858:	98 2f       	mov	r25, r24
     85a:	cb d7       	rcall	.+3990   	; 0x17f2 <__floatsisf>
     85c:	04 d7       	rcall	.+3592   	; 0x1666 <atan>
     85e:	21 c0       	rjmp	.+66     	; 0x8a2 <navigation_angle_offset+0x104>
	}
	else if(navigation_get_sensor(4) > CORRIDOR_WIDTH)
     860:	84 e0       	ldi	r24, 0x04	; 4
     862:	90 e0       	ldi	r25, 0x00	; 0
     864:	d3 de       	rcall	.-602    	; 0x60c <navigation_get_sensor>
     866:	81 35       	cpi	r24, 0x51	; 81
     868:	c0 f0       	brcs	.+48     	; 0x89a <navigation_angle_offset+0xfc>
	{
		return atanf((navigation_get_sensor(2) - navigation_get_sensor(0))/DISTANCE_FRONT_TO_BACK);
     86a:	82 e0       	ldi	r24, 0x02	; 2
     86c:	90 e0       	ldi	r25, 0x00	; 0
     86e:	ce de       	rcall	.-612    	; 0x60c <navigation_get_sensor>
     870:	c8 2f       	mov	r28, r24
     872:	80 e0       	ldi	r24, 0x00	; 0
     874:	90 e0       	ldi	r25, 0x00	; 0
     876:	ca de       	rcall	.-620    	; 0x60c <navigation_get_sensor>
     878:	2c 2f       	mov	r18, r28
     87a:	30 e0       	ldi	r19, 0x00	; 0
     87c:	a9 01       	movw	r20, r18
     87e:	48 1b       	sub	r20, r24
     880:	51 09       	sbc	r21, r1
     882:	ca 01       	movw	r24, r20
     884:	60 e9       	ldi	r22, 0x90	; 144
     886:	71 e0       	ldi	r23, 0x01	; 1
     888:	0e 94 6f 0d 	call	0x1ade	; 0x1ade <__divmodhi4>
     88c:	88 27       	eor	r24, r24
     88e:	77 fd       	sbrc	r23, 7
     890:	80 95       	com	r24
     892:	98 2f       	mov	r25, r24
     894:	ae d7       	rcall	.+3932   	; 0x17f2 <__floatsisf>
     896:	e7 d6       	rcall	.+3534   	; 0x1666 <atan>
     898:	04 c0       	rjmp	.+8      	; 0x8a2 <navigation_angle_offset+0x104>
	}
	else
	{
		return 0;
     89a:	60 e0       	ldi	r22, 0x00	; 0
     89c:	70 e0       	ldi	r23, 0x00	; 0
     89e:	80 e0       	ldi	r24, 0x00	; 0
     8a0:	90 e0       	ldi	r25, 0x00	; 0
	}
}
     8a2:	df 91       	pop	r29
     8a4:	cf 91       	pop	r28
     8a6:	08 95       	ret

000008a8 <__vector_13>:
}

// -------------- COUNTERS/TIMERS interrupt vectors ----------------

ISR(TIMER1_COMPA_vect)
{
     8a8:	1f 92       	push	r1
     8aa:	0f 92       	push	r0
     8ac:	0f b6       	in	r0, 0x3f	; 63
     8ae:	0f 92       	push	r0
     8b0:	11 24       	eor	r1, r1
     8b2:	0b b6       	in	r0, 0x3b	; 59
     8b4:	0f 92       	push	r0
     8b6:	2f 93       	push	r18
     8b8:	3f 93       	push	r19
     8ba:	4f 93       	push	r20
     8bc:	5f 93       	push	r21
     8be:	6f 93       	push	r22
     8c0:	7f 93       	push	r23
     8c2:	8f 93       	push	r24
     8c4:	9f 93       	push	r25
     8c6:	af 93       	push	r26
     8c8:	bf 93       	push	r27
     8ca:	ef 93       	push	r30
     8cc:	ff 93       	push	r31
	if(TWI_sensor_flag())
     8ce:	21 d2       	rcall	.+1090   	; 0xd12 <TWI_sensor_flag>
     8d0:	81 11       	cpse	r24, r1
	navigation_fill_buffer();
     8d2:	35 de       	rcall	.-918    	; 0x53e <navigation_fill_buffer>
	TCNT1 = 0;
     8d4:	10 92 85 00 	sts	0x0085, r1
     8d8:	10 92 84 00 	sts	0x0084, r1
}
     8dc:	ff 91       	pop	r31
     8de:	ef 91       	pop	r30
     8e0:	bf 91       	pop	r27
     8e2:	af 91       	pop	r26
     8e4:	9f 91       	pop	r25
     8e6:	8f 91       	pop	r24
     8e8:	7f 91       	pop	r23
     8ea:	6f 91       	pop	r22
     8ec:	5f 91       	pop	r21
     8ee:	4f 91       	pop	r20
     8f0:	3f 91       	pop	r19
     8f2:	2f 91       	pop	r18
     8f4:	0f 90       	pop	r0
     8f6:	0b be       	out	0x3b, r0	; 59
     8f8:	0f 90       	pop	r0
     8fa:	0f be       	out	0x3f, r0	; 63
     8fc:	0f 90       	pop	r0
     8fe:	1f 90       	pop	r1
     900:	18 95       	reti

00000902 <__vector_32>:

ISR(TIMER3_COMPA_vect)
{
     902:	1f 92       	push	r1
     904:	0f 92       	push	r0
     906:	0f b6       	in	r0, 0x3f	; 63
     908:	0f 92       	push	r0
     90a:	11 24       	eor	r1, r1
	TCNT3 = 0;
     90c:	10 92 95 00 	sts	0x0095, r1
     910:	10 92 94 00 	sts	0x0094, r1
     914:	0f 90       	pop	r0
     916:	0f be       	out	0x3f, r0	; 63
     918:	0f 90       	pop	r0
     91a:	1f 90       	pop	r1
     91c:	18 95       	reti

0000091e <main>:
#include "Navigation.h"
#include "autonomouswalk.h"

int main(void)
{
	USART_init();
     91e:	84 d3       	rcall	.+1800   	; 0x1028 <USART_init>
	sei();
     920:	78 94       	sei
	TWI_init(ST_ADDRESS);
     922:	80 e2       	ldi	r24, 0x20	; 32
     924:	ae d0       	rcall	.+348    	; 0xa82 <TWI_init>
	init_counters();
     926:	8d dd       	rcall	.-1254   	; 0x442 <init_counters>
	DDRA |= (1<<PORTA0 | 1<<PORTA1);
     928:	81 b1       	in	r24, 0x01	; 1
     92a:	83 60       	ori	r24, 0x03	; 3
     92c:	81 b9       	out	0x01, r24	; 1
		//_delay_ms(1000);
		
		if(navigation_autonomous_walk() == 1)
		{
			autonomouswalk_walk();
		}
     92e:	c2 e0       	ldi	r28, 0x02	; 2
		PORTA &= ~(1<<PORTA0);
		_delay_ms(1000);
		USART_SendMessage("apa");
		TWI_send_string(S_ADRESS, "Hue");
		*/
		
     930:	03 de       	rcall	.-1018   	; 0x538 <navigation_autonomous_walk>
     932:	81 30       	cpi	r24, 0x01	; 1
     934:	11 f4       	brne	.+4      	; 0x93a <main+0x1c>
		//USART_send_command_parameters(0,50,100);
		//_delay_ms(1000);
     936:	0a dd       	rcall	.-1516   	; 0x34c <autonomouswalk_walk>
     938:	07 c0       	rjmp	.+14     	; 0x948 <main+0x2a>
		
		if(navigation_autonomous_walk() == 1)
		{
			autonomouswalk_walk();
     93a:	f5 d1       	rcall	.+1002   	; 0xd26 <TWI_command_flag>
     93c:	88 23       	and	r24, r24
     93e:	21 f0       	breq	.+8      	; 0x948 <main+0x2a>
		}
     940:	82 b1       	in	r24, 0x02	; 2
     942:	8c 27       	eor	r24, r28
     944:	82 b9       	out	0x02, r24	; 2
		else
     946:	42 d4       	rcall	.+2180   	; 0x11cc <USART_SendCommand>
		{
			if(TWI_command_flag()){
				PORTA ^= (1<<PORTA1);
     948:	76 d5       	rcall	.+2796   	; 0x1436 <USART_DecodeRxFIFO>
				USART_SendCommand();
     94a:	f2 cf       	rjmp	.-28     	; 0x930 <main+0x12>

0000094c <set_twi_reciever_enable>:
     94c:	85 e4       	ldi	r24, 0x45	; 69
     94e:	80 93 bc 00 	sts	0x00BC, r24
     952:	08 95       	ret

00000954 <clear_int>:
     954:	81 ec       	ldi	r24, 0xC1	; 193
     956:	80 93 bc 00 	sts	0x00BC, r24
     95a:	08 95       	ret

0000095c <start_bus>:
     95c:	84 ea       	ldi	r24, 0xA4	; 164
     95e:	80 93 bc 00 	sts	0x00BC, r24
     962:	08 95       	ret

00000964 <stop_bus>:
     964:	85 ed       	ldi	r24, 0xD5	; 213
     966:	80 93 bc 00 	sts	0x00BC, r24
     96a:	08 95       	ret

0000096c <Error>:
     96c:	80 91 b9 00 	lds	r24, 0x00B9
     970:	88 7f       	andi	r24, 0xF8	; 248
     972:	88 33       	cpi	r24, 0x38	; 56
     974:	09 f0       	breq	.+2      	; 0x978 <Error+0xc>
     976:	f6 cf       	rjmp	.-20     	; 0x964 <stop_bus>
     978:	ed cf       	rjmp	.-38     	; 0x954 <clear_int>

0000097a <get_data>:
     97a:	80 91 bb 00 	lds	r24, 0x00BB
     97e:	08 95       	ret

00000980 <wait_for_bus>:
     980:	ec eb       	ldi	r30, 0xBC	; 188
     982:	f0 e0       	ldi	r31, 0x00	; 0
     984:	80 81       	ld	r24, Z
     986:	88 23       	and	r24, r24
     988:	ec f7       	brge	.-6      	; 0x984 <wait_for_bus+0x4>
     98a:	08 95       	ret

0000098c <send_data_and_wait>:
     98c:	80 93 bb 00 	sts	0x00BB, r24
     990:	84 e8       	ldi	r24, 0x84	; 132
     992:	80 93 bc 00 	sts	0x00BC, r24
     996:	f4 cf       	rjmp	.-24     	; 0x980 <wait_for_bus>

00000998 <stop_twi>:
     998:	10 92 40 14 	sts	0x1440, r1
     99c:	10 92 3f 14 	sts	0x143F, r1
     9a0:	10 92 4a 14 	sts	0x144A, r1
     9a4:	10 92 49 14 	sts	0x1449, r1
     9a8:	10 92 35 14 	sts	0x1435, r1
     9ac:	10 92 34 14 	sts	0x1434, r1
     9b0:	10 92 3a 14 	sts	0x143A, r1
     9b4:	10 92 39 14 	sts	0x1439, r1
     9b8:	10 92 3d 14 	sts	0x143D, r1
     9bc:	10 92 3c 14 	sts	0x143C, r1
     9c0:	08 95       	ret

000009c2 <reset_TWI>:
     9c2:	ec eb       	ldi	r30, 0xBC	; 188
     9c4:	f0 e0       	ldi	r31, 0x00	; 0
     9c6:	80 81       	ld	r24, Z
     9c8:	80 6c       	ori	r24, 0xC0	; 192
     9ca:	80 83       	st	Z, r24
     9cc:	08 95       	ret

000009ce <get_sensor_from_bus>:
     9ce:	cf 93       	push	r28
     9d0:	df 93       	push	r29
     9d2:	c0 91 49 14 	lds	r28, 0x1449
     9d6:	d0 91 4a 14 	lds	r29, 0x144A
     9da:	c8 30       	cpi	r28, 0x08	; 8
     9dc:	d1 05       	cpc	r29, r1
     9de:	91 f4       	brne	.+36     	; 0xa04 <get_sensor_from_bus+0x36>
     9e0:	eb e4       	ldi	r30, 0x4B	; 75
     9e2:	f4 e1       	ldi	r31, 0x14	; 20
     9e4:	a3 e5       	ldi	r26, 0x53	; 83
     9e6:	b4 e1       	ldi	r27, 0x14	; 20
     9e8:	83 e5       	ldi	r24, 0x53	; 83
     9ea:	94 e1       	ldi	r25, 0x14	; 20
     9ec:	21 91       	ld	r18, Z+
     9ee:	2d 93       	st	X+, r18
     9f0:	e8 17       	cp	r30, r24
     9f2:	f9 07       	cpc	r31, r25
     9f4:	d9 f7       	brne	.-10     	; 0x9ec <get_sensor_from_bus+0x1e>
     9f6:	c1 df       	rcall	.-126    	; 0x97a <get_data>
     9f8:	80 93 43 14 	sts	0x1443, r24
     9fc:	81 e0       	ldi	r24, 0x01	; 1
     9fe:	80 93 28 13 	sts	0x1328, r24
     a02:	0d c0       	rjmp	.+26     	; 0xa1e <get_sensor_from_bus+0x50>
     a04:	ba df       	rcall	.-140    	; 0x97a <get_data>
     a06:	c5 5b       	subi	r28, 0xB5	; 181
     a08:	db 4e       	sbci	r29, 0xEB	; 235
     a0a:	88 83       	st	Y, r24
     a0c:	80 91 49 14 	lds	r24, 0x1449
     a10:	90 91 4a 14 	lds	r25, 0x144A
     a14:	01 96       	adiw	r24, 0x01	; 1
     a16:	90 93 4a 14 	sts	0x144A, r25
     a1a:	80 93 49 14 	sts	0x1449, r24
     a1e:	df 91       	pop	r29
     a20:	cf 91       	pop	r28
     a22:	08 95       	ret

00000a24 <get_control_settings_from_bus>:
     a24:	cf 93       	push	r28
     a26:	df 93       	push	r29
     a28:	c0 91 39 14 	lds	r28, 0x1439
     a2c:	d0 91 3a 14 	lds	r29, 0x143A
     a30:	a4 df       	rcall	.-184    	; 0x97a <get_data>
     a32:	ca 5c       	subi	r28, 0xCA	; 202
     a34:	db 4e       	sbci	r29, 0xEB	; 235
     a36:	88 83       	st	Y, r24
     a38:	10 92 3a 14 	sts	0x143A, r1
     a3c:	10 92 39 14 	sts	0x1439, r1
     a40:	df 91       	pop	r29
     a42:	cf 91       	pop	r28
     a44:	08 95       	ret

00000a46 <get_autonom_settings_from_bus>:
     a46:	99 df       	rcall	.-206    	; 0x97a <get_data>
     a48:	80 93 34 13 	sts	0x1334, r24
     a4c:	08 95       	ret

00000a4e <get_char_from_bus>:
     a4e:	cf 93       	push	r28
     a50:	df 93       	push	r29
     a52:	c0 91 34 14 	lds	r28, 0x1434
     a56:	d0 91 35 14 	lds	r29, 0x1435
     a5a:	8f df       	rcall	.-226    	; 0x97a <get_data>
     a5c:	cb 5c       	subi	r28, 0xCB	; 203
     a5e:	dc 4e       	sbci	r29, 0xEC	; 236
     a60:	88 83       	st	Y, r24
     a62:	80 91 34 14 	lds	r24, 0x1434
     a66:	90 91 35 14 	lds	r25, 0x1435
     a6a:	01 96       	adiw	r24, 0x01	; 1
     a6c:	90 93 35 14 	sts	0x1435, r25
     a70:	80 93 34 14 	sts	0x1434, r24
     a74:	90 93 45 14 	sts	0x1445, r25
     a78:	80 93 44 14 	sts	0x1444, r24
     a7c:	df 91       	pop	r29
     a7e:	cf 91       	pop	r28
     a80:	08 95       	ret

00000a82 <TWI_init>:
     a82:	80 93 3b 14 	sts	0x143B, r24
     a86:	80 34       	cpi	r24, 0x40	; 64
     a88:	79 f0       	breq	.+30     	; 0xaa8 <TWI_init+0x26>
     a8a:	80 38       	cpi	r24, 0x80	; 128
     a8c:	19 f0       	breq	.+6      	; 0xa94 <TWI_init+0x12>
     a8e:	80 32       	cpi	r24, 0x20	; 32
     a90:	d1 f4       	brne	.+52     	; 0xac6 <TWI_init+0x44>
     a92:	12 c0       	rjmp	.+36     	; 0xab8 <TWI_init+0x36>
     a94:	83 e0       	ldi	r24, 0x03	; 3
     a96:	88 b9       	out	0x08, r24	; 8
     a98:	59 df       	rcall	.-334    	; 0x94c <set_twi_reciever_enable>
     a9a:	8f e3       	ldi	r24, 0x3F	; 63
     a9c:	80 93 b8 00 	sts	0x00B8, r24
     aa0:	81 e8       	ldi	r24, 0x81	; 129
     aa2:	80 93 ba 00 	sts	0x00BA, r24
     aa6:	0f c0       	rjmp	.+30     	; 0xac6 <TWI_init+0x44>
     aa8:	8f e3       	ldi	r24, 0x3F	; 63
     aaa:	80 93 b8 00 	sts	0x00B8, r24
     aae:	4e df       	rcall	.-356    	; 0x94c <set_twi_reciever_enable>
     ab0:	80 e4       	ldi	r24, 0x40	; 64
     ab2:	80 93 ba 00 	sts	0x00BA, r24
     ab6:	07 c0       	rjmp	.+14     	; 0xac6 <TWI_init+0x44>
     ab8:	8f e3       	ldi	r24, 0x3F	; 63
     aba:	80 93 b8 00 	sts	0x00B8, r24
     abe:	46 df       	rcall	.-372    	; 0x94c <set_twi_reciever_enable>
     ac0:	81 e2       	ldi	r24, 0x21	; 33
     ac2:	80 93 ba 00 	sts	0x00BA, r24
     ac6:	10 92 31 13 	sts	0x1331, r1
     aca:	82 e3       	ldi	r24, 0x32	; 50
     acc:	80 93 32 13 	sts	0x1332, r24
     ad0:	10 92 33 13 	sts	0x1333, r1
     ad4:	08 95       	ret

00000ad6 <TWI_send_command>:
     ad6:	1f 93       	push	r17
     ad8:	cf 93       	push	r28
     ada:	df 93       	push	r29
     adc:	c8 2f       	mov	r28, r24
     ade:	d6 2f       	mov	r29, r22
     ae0:	14 2f       	mov	r17, r20
     ae2:	3c df       	rcall	.-392    	; 0x95c <start_bus>
     ae4:	4d df       	rcall	.-358    	; 0x980 <wait_for_bus>
     ae6:	90 91 b9 00 	lds	r25, 0x00B9
     aea:	98 7f       	andi	r25, 0xF8	; 248
     aec:	98 30       	cpi	r25, 0x08	; 8
     aee:	19 f0       	breq	.+6      	; 0xaf6 <TWI_send_command+0x20>
     af0:	3d df       	rcall	.-390    	; 0x96c <Error>
     af2:	80 e0       	ldi	r24, 0x00	; 0
     af4:	34 c0       	rjmp	.+104    	; 0xb5e <TWI_send_command+0x88>
     af6:	80 e2       	ldi	r24, 0x20	; 32
     af8:	49 df       	rcall	.-366    	; 0x98c <send_data_and_wait>
     afa:	80 91 b9 00 	lds	r24, 0x00B9
     afe:	88 7f       	andi	r24, 0xF8	; 248
     b00:	88 31       	cpi	r24, 0x18	; 24
     b02:	19 f0       	breq	.+6      	; 0xb0a <TWI_send_command+0x34>
     b04:	33 df       	rcall	.-410    	; 0x96c <Error>
     b06:	80 e0       	ldi	r24, 0x00	; 0
     b08:	2a c0       	rjmp	.+84     	; 0xb5e <TWI_send_command+0x88>
     b0a:	80 e0       	ldi	r24, 0x00	; 0
     b0c:	3f df       	rcall	.-386    	; 0x98c <send_data_and_wait>
     b0e:	80 91 b9 00 	lds	r24, 0x00B9
     b12:	88 7f       	andi	r24, 0xF8	; 248
     b14:	88 32       	cpi	r24, 0x28	; 40
     b16:	19 f0       	breq	.+6      	; 0xb1e <TWI_send_command+0x48>
     b18:	29 df       	rcall	.-430    	; 0x96c <Error>
     b1a:	80 e0       	ldi	r24, 0x00	; 0
     b1c:	20 c0       	rjmp	.+64     	; 0xb5e <TWI_send_command+0x88>
     b1e:	8c 2f       	mov	r24, r28
     b20:	35 df       	rcall	.-406    	; 0x98c <send_data_and_wait>
     b22:	80 91 b9 00 	lds	r24, 0x00B9
     b26:	88 7f       	andi	r24, 0xF8	; 248
     b28:	88 32       	cpi	r24, 0x28	; 40
     b2a:	19 f0       	breq	.+6      	; 0xb32 <TWI_send_command+0x5c>
     b2c:	1f df       	rcall	.-450    	; 0x96c <Error>
     b2e:	80 e0       	ldi	r24, 0x00	; 0
     b30:	16 c0       	rjmp	.+44     	; 0xb5e <TWI_send_command+0x88>
     b32:	8d 2f       	mov	r24, r29
     b34:	2b df       	rcall	.-426    	; 0x98c <send_data_and_wait>
     b36:	80 91 b9 00 	lds	r24, 0x00B9
     b3a:	88 7f       	andi	r24, 0xF8	; 248
     b3c:	88 32       	cpi	r24, 0x28	; 40
     b3e:	19 f0       	breq	.+6      	; 0xb46 <TWI_send_command+0x70>
     b40:	15 df       	rcall	.-470    	; 0x96c <Error>
     b42:	80 e0       	ldi	r24, 0x00	; 0
     b44:	0c c0       	rjmp	.+24     	; 0xb5e <TWI_send_command+0x88>
     b46:	81 2f       	mov	r24, r17
     b48:	21 df       	rcall	.-446    	; 0x98c <send_data_and_wait>
     b4a:	80 91 b9 00 	lds	r24, 0x00B9
     b4e:	88 7f       	andi	r24, 0xF8	; 248
     b50:	88 32       	cpi	r24, 0x28	; 40
     b52:	19 f0       	breq	.+6      	; 0xb5a <TWI_send_command+0x84>
     b54:	0b df       	rcall	.-490    	; 0x96c <Error>
     b56:	80 e0       	ldi	r24, 0x00	; 0
     b58:	02 c0       	rjmp	.+4      	; 0xb5e <TWI_send_command+0x88>
     b5a:	04 df       	rcall	.-504    	; 0x964 <stop_bus>
     b5c:	81 e0       	ldi	r24, 0x01	; 1
     b5e:	df 91       	pop	r29
     b60:	cf 91       	pop	r28
     b62:	1f 91       	pop	r17
     b64:	08 95       	ret

00000b66 <TWI_send_string>:
     b66:	ef 92       	push	r14
     b68:	ff 92       	push	r15
     b6a:	0f 93       	push	r16
     b6c:	1f 93       	push	r17
     b6e:	cf 93       	push	r28
     b70:	df 93       	push	r29
     b72:	c8 2f       	mov	r28, r24
     b74:	e6 2e       	mov	r14, r22
     b76:	f7 2e       	mov	r15, r23
     b78:	f1 de       	rcall	.-542    	; 0x95c <start_bus>
     b7a:	02 df       	rcall	.-508    	; 0x980 <wait_for_bus>
     b7c:	90 91 b9 00 	lds	r25, 0x00B9
     b80:	98 7f       	andi	r25, 0xF8	; 248
     b82:	98 30       	cpi	r25, 0x08	; 8
     b84:	19 f0       	breq	.+6      	; 0xb8c <TWI_send_string+0x26>
     b86:	f2 de       	rcall	.-540    	; 0x96c <Error>
     b88:	80 e0       	ldi	r24, 0x00	; 0
     b8a:	2c c0       	rjmp	.+88     	; 0xbe4 <TWI_send_string+0x7e>
     b8c:	8c 2f       	mov	r24, r28
     b8e:	fe de       	rcall	.-516    	; 0x98c <send_data_and_wait>
     b90:	80 91 b9 00 	lds	r24, 0x00B9
     b94:	88 7f       	andi	r24, 0xF8	; 248
     b96:	88 31       	cpi	r24, 0x18	; 24
     b98:	19 f0       	breq	.+6      	; 0xba0 <TWI_send_string+0x3a>
     b9a:	e8 de       	rcall	.-560    	; 0x96c <Error>
     b9c:	80 e0       	ldi	r24, 0x00	; 0
     b9e:	22 c0       	rjmp	.+68     	; 0xbe4 <TWI_send_string+0x7e>
     ba0:	89 e1       	ldi	r24, 0x19	; 25
     ba2:	f4 de       	rcall	.-536    	; 0x98c <send_data_and_wait>
     ba4:	80 91 b9 00 	lds	r24, 0x00B9
     ba8:	88 7f       	andi	r24, 0xF8	; 248
     baa:	88 32       	cpi	r24, 0x28	; 40
     bac:	29 f4       	brne	.+10     	; 0xbb8 <TWI_send_string+0x52>
     bae:	0e 2d       	mov	r16, r14
     bb0:	1f 2d       	mov	r17, r15
     bb2:	c0 e0       	ldi	r28, 0x00	; 0
     bb4:	d0 e0       	ldi	r29, 0x00	; 0
     bb6:	08 c0       	rjmp	.+16     	; 0xbc8 <TWI_send_string+0x62>
     bb8:	d9 de       	rcall	.-590    	; 0x96c <Error>
     bba:	80 e0       	ldi	r24, 0x00	; 0
     bbc:	13 c0       	rjmp	.+38     	; 0xbe4 <TWI_send_string+0x7e>
     bbe:	f8 01       	movw	r30, r16
     bc0:	81 91       	ld	r24, Z+
     bc2:	8f 01       	movw	r16, r30
     bc4:	e3 de       	rcall	.-570    	; 0x98c <send_data_and_wait>
     bc6:	21 96       	adiw	r28, 0x01	; 1
     bc8:	ee 2d       	mov	r30, r14
     bca:	ff 2d       	mov	r31, r15
     bcc:	df 01       	movw	r26, r30
     bce:	0d 90       	ld	r0, X+
     bd0:	00 20       	and	r0, r0
     bd2:	e9 f7       	brne	.-6      	; 0xbce <TWI_send_string+0x68>
     bd4:	11 97       	sbiw	r26, 0x01	; 1
     bd6:	ae 1b       	sub	r26, r30
     bd8:	bf 0b       	sbc	r27, r31
     bda:	ca 17       	cp	r28, r26
     bdc:	db 07       	cpc	r29, r27
     bde:	78 f3       	brcs	.-34     	; 0xbbe <TWI_send_string+0x58>
     be0:	c1 de       	rcall	.-638    	; 0x964 <stop_bus>
     be2:	81 e0       	ldi	r24, 0x01	; 1
     be4:	df 91       	pop	r29
     be6:	cf 91       	pop	r28
     be8:	1f 91       	pop	r17
     bea:	0f 91       	pop	r16
     bec:	ff 90       	pop	r15
     bee:	ef 90       	pop	r14
     bf0:	08 95       	ret

00000bf2 <TWI_send_string_fixed_length>:
     bf2:	ef 92       	push	r14
     bf4:	ff 92       	push	r15
     bf6:	0f 93       	push	r16
     bf8:	1f 93       	push	r17
     bfa:	cf 93       	push	r28
     bfc:	df 93       	push	r29
     bfe:	c8 2f       	mov	r28, r24
     c00:	e6 2e       	mov	r14, r22
     c02:	f7 2e       	mov	r15, r23
     c04:	8a 01       	movw	r16, r20
     c06:	aa de       	rcall	.-684    	; 0x95c <start_bus>
     c08:	bb de       	rcall	.-650    	; 0x980 <wait_for_bus>
     c0a:	90 91 b9 00 	lds	r25, 0x00B9
     c0e:	98 7f       	andi	r25, 0xF8	; 248
     c10:	98 30       	cpi	r25, 0x08	; 8
     c12:	19 f0       	breq	.+6      	; 0xc1a <TWI_send_string_fixed_length+0x28>
     c14:	ab de       	rcall	.-682    	; 0x96c <Error>
     c16:	80 e0       	ldi	r24, 0x00	; 0
     c18:	23 c0       	rjmp	.+70     	; 0xc60 <TWI_send_string_fixed_length+0x6e>
     c1a:	8c 2f       	mov	r24, r28
     c1c:	b7 de       	rcall	.-658    	; 0x98c <send_data_and_wait>
     c1e:	80 91 b9 00 	lds	r24, 0x00B9
     c22:	88 7f       	andi	r24, 0xF8	; 248
     c24:	88 31       	cpi	r24, 0x18	; 24
     c26:	19 f0       	breq	.+6      	; 0xc2e <TWI_send_string_fixed_length+0x3c>
     c28:	a1 de       	rcall	.-702    	; 0x96c <Error>
     c2a:	80 e0       	ldi	r24, 0x00	; 0
     c2c:	19 c0       	rjmp	.+50     	; 0xc60 <TWI_send_string_fixed_length+0x6e>
     c2e:	89 e1       	ldi	r24, 0x19	; 25
     c30:	ad de       	rcall	.-678    	; 0x98c <send_data_and_wait>
     c32:	80 91 b9 00 	lds	r24, 0x00B9
     c36:	88 7f       	andi	r24, 0xF8	; 248
     c38:	88 32       	cpi	r24, 0x28	; 40
     c3a:	21 f4       	brne	.+8      	; 0xc44 <TWI_send_string_fixed_length+0x52>
     c3c:	10 16       	cp	r1, r16
     c3e:	11 06       	cpc	r1, r17
     c40:	24 f0       	brlt	.+8      	; 0xc4a <TWI_send_string_fixed_length+0x58>
     c42:	0c c0       	rjmp	.+24     	; 0xc5c <TWI_send_string_fixed_length+0x6a>
     c44:	93 de       	rcall	.-730    	; 0x96c <Error>
     c46:	80 e0       	ldi	r24, 0x00	; 0
     c48:	0b c0       	rjmp	.+22     	; 0xc60 <TWI_send_string_fixed_length+0x6e>
     c4a:	ce 2d       	mov	r28, r14
     c4c:	df 2d       	mov	r29, r15
     c4e:	0c 0f       	add	r16, r28
     c50:	1d 1f       	adc	r17, r29
     c52:	89 91       	ld	r24, Y+
     c54:	9b de       	rcall	.-714    	; 0x98c <send_data_and_wait>
     c56:	c0 17       	cp	r28, r16
     c58:	d1 07       	cpc	r29, r17
     c5a:	d9 f7       	brne	.-10     	; 0xc52 <TWI_send_string_fixed_length+0x60>
     c5c:	83 de       	rcall	.-762    	; 0x964 <stop_bus>
     c5e:	81 e0       	ldi	r24, 0x01	; 1
     c60:	df 91       	pop	r29
     c62:	cf 91       	pop	r28
     c64:	1f 91       	pop	r17
     c66:	0f 91       	pop	r16
     c68:	ff 90       	pop	r15
     c6a:	ef 90       	pop	r14
     c6c:	08 95       	ret

00000c6e <TWI_send_float>:
     c6e:	ef 92       	push	r14
     c70:	ff 92       	push	r15
     c72:	0f 93       	push	r16
     c74:	1f 93       	push	r17
     c76:	cf 93       	push	r28
     c78:	df 93       	push	r29
     c7a:	00 d0       	rcall	.+0      	; 0xc7c <TWI_send_float+0xe>
     c7c:	00 d0       	rcall	.+0      	; 0xc7e <TWI_send_float+0x10>
     c7e:	cd b7       	in	r28, 0x3d	; 61
     c80:	de b7       	in	r29, 0x3e	; 62
     c82:	18 2f       	mov	r17, r24
     c84:	49 83       	std	Y+1, r20	; 0x01
     c86:	5a 83       	std	Y+2, r21	; 0x02
     c88:	6b 83       	std	Y+3, r22	; 0x03
     c8a:	7c 83       	std	Y+4, r23	; 0x04
     c8c:	67 de       	rcall	.-818    	; 0x95c <start_bus>
     c8e:	78 de       	rcall	.-784    	; 0x980 <wait_for_bus>
     c90:	90 91 b9 00 	lds	r25, 0x00B9
     c94:	98 7f       	andi	r25, 0xF8	; 248
     c96:	98 30       	cpi	r25, 0x08	; 8
     c98:	19 f0       	breq	.+6      	; 0xca0 <TWI_send_float+0x32>
     c9a:	68 de       	rcall	.-816    	; 0x96c <Error>
     c9c:	80 e0       	ldi	r24, 0x00	; 0
     c9e:	24 c0       	rjmp	.+72     	; 0xce8 <TWI_send_float+0x7a>
     ca0:	81 2f       	mov	r24, r17
     ca2:	74 de       	rcall	.-792    	; 0x98c <send_data_and_wait>
     ca4:	80 91 b9 00 	lds	r24, 0x00B9
     ca8:	88 7f       	andi	r24, 0xF8	; 248
     caa:	88 31       	cpi	r24, 0x18	; 24
     cac:	19 f0       	breq	.+6      	; 0xcb4 <TWI_send_float+0x46>
     cae:	5e de       	rcall	.-836    	; 0x96c <Error>
     cb0:	80 e0       	ldi	r24, 0x00	; 0
     cb2:	1a c0       	rjmp	.+52     	; 0xce8 <TWI_send_float+0x7a>
     cb4:	86 e0       	ldi	r24, 0x06	; 6
     cb6:	6a de       	rcall	.-812    	; 0x98c <send_data_and_wait>
     cb8:	80 91 b9 00 	lds	r24, 0x00B9
     cbc:	88 7f       	andi	r24, 0xF8	; 248
     cbe:	88 32       	cpi	r24, 0x28	; 40
     cc0:	19 f0       	breq	.+6      	; 0xcc8 <TWI_send_float+0x5a>
     cc2:	54 de       	rcall	.-856    	; 0x96c <Error>
     cc4:	80 e0       	ldi	r24, 0x00	; 0
     cc6:	10 c0       	rjmp	.+32     	; 0xce8 <TWI_send_float+0x7a>
     cc8:	8e 01       	movw	r16, r28
     cca:	0f 5f       	subi	r16, 0xFF	; 255
     ccc:	1f 4f       	sbci	r17, 0xFF	; 255
     cce:	7e 01       	movw	r14, r28
     cd0:	85 e0       	ldi	r24, 0x05	; 5
     cd2:	e8 0e       	add	r14, r24
     cd4:	f1 1c       	adc	r15, r1
     cd6:	f8 01       	movw	r30, r16
     cd8:	81 91       	ld	r24, Z+
     cda:	8f 01       	movw	r16, r30
     cdc:	57 de       	rcall	.-850    	; 0x98c <send_data_and_wait>
     cde:	0e 15       	cp	r16, r14
     ce0:	1f 05       	cpc	r17, r15
     ce2:	c9 f7       	brne	.-14     	; 0xcd6 <TWI_send_float+0x68>
     ce4:	3f de       	rcall	.-898    	; 0x964 <stop_bus>
     ce6:	81 e0       	ldi	r24, 0x01	; 1
     ce8:	0f 90       	pop	r0
     cea:	0f 90       	pop	r0
     cec:	0f 90       	pop	r0
     cee:	0f 90       	pop	r0
     cf0:	df 91       	pop	r29
     cf2:	cf 91       	pop	r28
     cf4:	1f 91       	pop	r17
     cf6:	0f 91       	pop	r16
     cf8:	ff 90       	pop	r15
     cfa:	ef 90       	pop	r14
     cfc:	08 95       	ret

00000cfe <TWI_get_command>:
     cfe:	8f 5c       	subi	r24, 0xCF	; 207
     d00:	9c 4e       	sbci	r25, 0xEC	; 236
     d02:	fc 01       	movw	r30, r24
     d04:	80 81       	ld	r24, Z
     d06:	08 95       	ret

00000d08 <TWI_get_sensor>:
     d08:	8d 5a       	subi	r24, 0xAD	; 173
     d0a:	9b 4e       	sbci	r25, 0xEB	; 235
     d0c:	fc 01       	movw	r30, r24
     d0e:	80 81       	ld	r24, Z
     d10:	08 95       	ret

00000d12 <TWI_sensor_flag>:
     d12:	80 91 28 13 	lds	r24, 0x1328
     d16:	88 23       	and	r24, r24
     d18:	21 f0       	breq	.+8      	; 0xd22 <TWI_sensor_flag+0x10>
     d1a:	10 92 28 13 	sts	0x1328, r1
     d1e:	81 e0       	ldi	r24, 0x01	; 1
     d20:	08 95       	ret
     d22:	80 e0       	ldi	r24, 0x00	; 0
     d24:	08 95       	ret

00000d26 <TWI_command_flag>:
     d26:	80 91 27 13 	lds	r24, 0x1327
     d2a:	88 23       	and	r24, r24
     d2c:	21 f0       	breq	.+8      	; 0xd36 <TWI_command_flag+0x10>
     d2e:	10 92 27 13 	sts	0x1327, r1
     d32:	81 e0       	ldi	r24, 0x01	; 1
     d34:	08 95       	ret
     d36:	80 e0       	ldi	r24, 0x00	; 0
     d38:	08 95       	ret

00000d3a <__vector_26>:
     d3a:	1f 92       	push	r1
     d3c:	0f 92       	push	r0
     d3e:	0f b6       	in	r0, 0x3f	; 63
     d40:	0f 92       	push	r0
     d42:	11 24       	eor	r1, r1
     d44:	0b b6       	in	r0, 0x3b	; 59
     d46:	0f 92       	push	r0
     d48:	2f 93       	push	r18
     d4a:	3f 93       	push	r19
     d4c:	4f 93       	push	r20
     d4e:	5f 93       	push	r21
     d50:	6f 93       	push	r22
     d52:	7f 93       	push	r23
     d54:	8f 93       	push	r24
     d56:	9f 93       	push	r25
     d58:	af 93       	push	r26
     d5a:	bf 93       	push	r27
     d5c:	cf 93       	push	r28
     d5e:	df 93       	push	r29
     d60:	ef 93       	push	r30
     d62:	ff 93       	push	r31
     d64:	80 91 3b 14 	lds	r24, 0x143B
     d68:	80 34       	cpi	r24, 0x40	; 64
     d6a:	09 f4       	brne	.+2      	; 0xd6e <__vector_26+0x34>
     d6c:	6f c0       	rjmp	.+222    	; 0xe4c <__vector_26+0x112>
     d6e:	80 38       	cpi	r24, 0x80	; 128
     d70:	21 f0       	breq	.+8      	; 0xd7a <__vector_26+0x40>
     d72:	80 32       	cpi	r24, 0x20	; 32
     d74:	09 f0       	breq	.+2      	; 0xd78 <__vector_26+0x3e>
     d76:	43 c1       	rjmp	.+646    	; 0xffe <__vector_26+0x2c4>
     d78:	a9 c0       	rjmp	.+338    	; 0xecc <__vector_26+0x192>
     d7a:	80 91 b9 00 	lds	r24, 0x00B9
     d7e:	88 7f       	andi	r24, 0xF8	; 248
     d80:	80 36       	cpi	r24, 0x60	; 96
     d82:	29 f0       	breq	.+10     	; 0xd8e <__vector_26+0x54>
     d84:	80 91 b9 00 	lds	r24, 0x00B9
     d88:	88 7f       	andi	r24, 0xF8	; 248
     d8a:	88 36       	cpi	r24, 0x68	; 104
     d8c:	21 f4       	brne	.+8      	; 0xd96 <__vector_26+0x5c>
     d8e:	81 e0       	ldi	r24, 0x01	; 1
     d90:	80 93 3e 14 	sts	0x143E, r24
     d94:	59 c0       	rjmp	.+178    	; 0xe48 <__vector_26+0x10e>
     d96:	80 91 b9 00 	lds	r24, 0x00B9
     d9a:	88 7f       	andi	r24, 0xF8	; 248
     d9c:	80 38       	cpi	r24, 0x80	; 128
     d9e:	b1 f5       	brne	.+108    	; 0xe0c <__vector_26+0xd2>
     da0:	80 91 3e 14 	lds	r24, 0x143E
     da4:	88 23       	and	r24, r24
     da6:	41 f0       	breq	.+16     	; 0xdb8 <__vector_26+0x7e>
     da8:	e8 dd       	rcall	.-1072   	; 0x97a <get_data>
     daa:	80 93 47 14 	sts	0x1447, r24
     dae:	10 92 48 14 	sts	0x1448, r1
     db2:	10 92 3e 14 	sts	0x143E, r1
     db6:	48 c0       	rjmp	.+144    	; 0xe48 <__vector_26+0x10e>
     db8:	80 91 47 14 	lds	r24, 0x1447
     dbc:	90 91 48 14 	lds	r25, 0x1448
     dc0:	85 30       	cpi	r24, 0x05	; 5
     dc2:	91 05       	cpc	r25, r1
     dc4:	69 f0       	breq	.+26     	; 0xde0 <__vector_26+0xa6>
     dc6:	24 f4       	brge	.+8      	; 0xdd0 <__vector_26+0x96>
     dc8:	01 97       	sbiw	r24, 0x01	; 1
     dca:	09 f0       	breq	.+2      	; 0xdce <__vector_26+0x94>
     dcc:	3d c0       	rjmp	.+122    	; 0xe48 <__vector_26+0x10e>
     dce:	06 c0       	rjmp	.+12     	; 0xddc <__vector_26+0xa2>
     dd0:	86 30       	cpi	r24, 0x06	; 6
     dd2:	91 05       	cpc	r25, r1
     dd4:	49 f0       	breq	.+18     	; 0xde8 <__vector_26+0xae>
     dd6:	49 97       	sbiw	r24, 0x19	; 25
     dd8:	b9 f5       	brne	.+110    	; 0xe48 <__vector_26+0x10e>
     dda:	04 c0       	rjmp	.+8      	; 0xde4 <__vector_26+0xaa>
     ddc:	23 de       	rcall	.-954    	; 0xa24 <get_control_settings_from_bus>
     dde:	34 c0       	rjmp	.+104    	; 0xe48 <__vector_26+0x10e>
     de0:	32 de       	rcall	.-924    	; 0xa46 <get_autonom_settings_from_bus>
     de2:	32 c0       	rjmp	.+100    	; 0xe48 <__vector_26+0x10e>
     de4:	34 de       	rcall	.-920    	; 0xa4e <get_char_from_bus>
     de6:	30 c0       	rjmp	.+96     	; 0xe48 <__vector_26+0x10e>
     de8:	c0 91 3c 14 	lds	r28, 0x143C
     dec:	d0 91 3d 14 	lds	r29, 0x143D
     df0:	c4 dd       	rcall	.-1144   	; 0x97a <get_data>
     df2:	c3 5d       	subi	r28, 0xD3	; 211
     df4:	dc 4e       	sbci	r29, 0xEC	; 236
     df6:	88 83       	st	Y, r24
     df8:	80 91 3c 14 	lds	r24, 0x143C
     dfc:	90 91 3d 14 	lds	r25, 0x143D
     e00:	01 96       	adiw	r24, 0x01	; 1
     e02:	90 93 3d 14 	sts	0x143D, r25
     e06:	80 93 3c 14 	sts	0x143C, r24
     e0a:	1e c0       	rjmp	.+60     	; 0xe48 <__vector_26+0x10e>
     e0c:	80 91 b9 00 	lds	r24, 0x00B9
     e10:	88 7f       	andi	r24, 0xF8	; 248
     e12:	80 39       	cpi	r24, 0x90	; 144
     e14:	11 f4       	brne	.+4      	; 0xe1a <__vector_26+0xe0>
     e16:	db dd       	rcall	.-1098   	; 0x9ce <get_sensor_from_bus>
     e18:	17 c0       	rjmp	.+46     	; 0xe48 <__vector_26+0x10e>
     e1a:	80 91 b9 00 	lds	r24, 0x00B9
     e1e:	88 7f       	andi	r24, 0xF8	; 248
     e20:	80 3a       	cpi	r24, 0xA0	; 160
     e22:	91 f4       	brne	.+36     	; 0xe48 <__vector_26+0x10e>
     e24:	b9 dd       	rcall	.-1166   	; 0x998 <stop_twi>
     e26:	80 91 47 14 	lds	r24, 0x1447
     e2a:	90 91 48 14 	lds	r25, 0x1448
     e2e:	81 30       	cpi	r24, 0x01	; 1
     e30:	91 05       	cpc	r25, r1
     e32:	19 f0       	breq	.+6      	; 0xe3a <__vector_26+0x100>
     e34:	05 97       	sbiw	r24, 0x05	; 5
     e36:	41 f4       	brne	.+16     	; 0xe48 <__vector_26+0x10e>
     e38:	04 c0       	rjmp	.+8      	; 0xe42 <__vector_26+0x108>
     e3a:	81 e0       	ldi	r24, 0x01	; 1
     e3c:	80 93 26 13 	sts	0x1326, r24
     e40:	03 c0       	rjmp	.+6      	; 0xe48 <__vector_26+0x10e>
     e42:	81 e0       	ldi	r24, 0x01	; 1
     e44:	80 93 25 13 	sts	0x1325, r24
     e48:	bc dd       	rcall	.-1160   	; 0x9c2 <reset_TWI>
     e4a:	d9 c0       	rjmp	.+434    	; 0xffe <__vector_26+0x2c4>
     e4c:	80 91 b9 00 	lds	r24, 0x00B9
     e50:	88 7f       	andi	r24, 0xF8	; 248
     e52:	80 36       	cpi	r24, 0x60	; 96
     e54:	29 f0       	breq	.+10     	; 0xe60 <__vector_26+0x126>
     e56:	80 91 b9 00 	lds	r24, 0x00B9
     e5a:	88 7f       	andi	r24, 0xF8	; 248
     e5c:	88 36       	cpi	r24, 0x68	; 104
     e5e:	21 f4       	brne	.+8      	; 0xe68 <__vector_26+0x12e>
     e60:	81 e0       	ldi	r24, 0x01	; 1
     e62:	80 93 3e 14 	sts	0x143E, r24
     e66:	30 c0       	rjmp	.+96     	; 0xec8 <__vector_26+0x18e>
     e68:	80 91 b9 00 	lds	r24, 0x00B9
     e6c:	88 7f       	andi	r24, 0xF8	; 248
     e6e:	80 38       	cpi	r24, 0x80	; 128
     e70:	e1 f4       	brne	.+56     	; 0xeaa <__vector_26+0x170>
     e72:	80 91 3e 14 	lds	r24, 0x143E
     e76:	88 23       	and	r24, r24
     e78:	41 f0       	breq	.+16     	; 0xe8a <__vector_26+0x150>
     e7a:	7f dd       	rcall	.-1282   	; 0x97a <get_data>
     e7c:	80 93 47 14 	sts	0x1447, r24
     e80:	10 92 48 14 	sts	0x1448, r1
     e84:	10 92 3e 14 	sts	0x143E, r1
     e88:	1f c0       	rjmp	.+62     	; 0xec8 <__vector_26+0x18e>
     e8a:	80 91 47 14 	lds	r24, 0x1447
     e8e:	90 91 48 14 	lds	r25, 0x1448
     e92:	82 30       	cpi	r24, 0x02	; 2
     e94:	91 05       	cpc	r25, r1
     e96:	19 f0       	breq	.+6      	; 0xe9e <__vector_26+0x164>
     e98:	49 97       	sbiw	r24, 0x19	; 25
     e9a:	b1 f4       	brne	.+44     	; 0xec8 <__vector_26+0x18e>
     e9c:	04 c0       	rjmp	.+8      	; 0xea6 <__vector_26+0x16c>
     e9e:	6d dd       	rcall	.-1318   	; 0x97a <get_data>
     ea0:	80 93 46 14 	sts	0x1446, r24
     ea4:	11 c0       	rjmp	.+34     	; 0xec8 <__vector_26+0x18e>
     ea6:	d3 dd       	rcall	.-1114   	; 0xa4e <get_char_from_bus>
     ea8:	0f c0       	rjmp	.+30     	; 0xec8 <__vector_26+0x18e>
     eaa:	80 91 b9 00 	lds	r24, 0x00B9
     eae:	88 7f       	andi	r24, 0xF8	; 248
     eb0:	80 3a       	cpi	r24, 0xA0	; 160
     eb2:	51 f4       	brne	.+20     	; 0xec8 <__vector_26+0x18e>
     eb4:	71 dd       	rcall	.-1310   	; 0x998 <stop_twi>
     eb6:	80 91 47 14 	lds	r24, 0x1447
     eba:	90 91 48 14 	lds	r25, 0x1448
     ebe:	02 97       	sbiw	r24, 0x02	; 2
     ec0:	19 f4       	brne	.+6      	; 0xec8 <__vector_26+0x18e>
     ec2:	81 e0       	ldi	r24, 0x01	; 1
     ec4:	80 93 23 13 	sts	0x1323, r24
     ec8:	7c dd       	rcall	.-1288   	; 0x9c2 <reset_TWI>
     eca:	99 c0       	rjmp	.+306    	; 0xffe <__vector_26+0x2c4>
     ecc:	80 91 b9 00 	lds	r24, 0x00B9
     ed0:	88 7f       	andi	r24, 0xF8	; 248
     ed2:	80 36       	cpi	r24, 0x60	; 96
     ed4:	29 f0       	breq	.+10     	; 0xee0 <__vector_26+0x1a6>
     ed6:	80 91 b9 00 	lds	r24, 0x00B9
     eda:	88 7f       	andi	r24, 0xF8	; 248
     edc:	88 36       	cpi	r24, 0x68	; 104
     ede:	21 f4       	brne	.+8      	; 0xee8 <__vector_26+0x1ae>
     ee0:	81 e0       	ldi	r24, 0x01	; 1
     ee2:	80 93 3e 14 	sts	0x143E, r24
     ee6:	8a c0       	rjmp	.+276    	; 0xffc <__vector_26+0x2c2>
     ee8:	80 91 b9 00 	lds	r24, 0x00B9
     eec:	88 7f       	andi	r24, 0xF8	; 248
     eee:	80 38       	cpi	r24, 0x80	; 128
     ef0:	09 f0       	breq	.+2      	; 0xef4 <__vector_26+0x1ba>
     ef2:	57 c0       	rjmp	.+174    	; 0xfa2 <__vector_26+0x268>
     ef4:	80 91 3e 14 	lds	r24, 0x143E
     ef8:	88 23       	and	r24, r24
     efa:	41 f0       	breq	.+16     	; 0xf0c <__vector_26+0x1d2>
     efc:	3e dd       	rcall	.-1412   	; 0x97a <get_data>
     efe:	80 93 47 14 	sts	0x1447, r24
     f02:	10 92 48 14 	sts	0x1448, r1
     f06:	10 92 3e 14 	sts	0x143E, r1
     f0a:	78 c0       	rjmp	.+240    	; 0xffc <__vector_26+0x2c2>
     f0c:	80 91 47 14 	lds	r24, 0x1447
     f10:	90 91 48 14 	lds	r25, 0x1448
     f14:	81 30       	cpi	r24, 0x01	; 1
     f16:	91 05       	cpc	r25, r1
     f18:	09 f4       	brne	.+2      	; 0xf1c <__vector_26+0x1e2>
     f1a:	3f c0       	rjmp	.+126    	; 0xf9a <__vector_26+0x260>
     f1c:	1c f4       	brge	.+6      	; 0xf24 <__vector_26+0x1ea>
     f1e:	89 2b       	or	r24, r25
     f20:	41 f0       	breq	.+16     	; 0xf32 <__vector_26+0x1f8>
     f22:	6c c0       	rjmp	.+216    	; 0xffc <__vector_26+0x2c2>
     f24:	84 30       	cpi	r24, 0x04	; 4
     f26:	91 05       	cpc	r25, r1
     f28:	b1 f0       	breq	.+44     	; 0xf56 <__vector_26+0x21c>
     f2a:	05 97       	sbiw	r24, 0x05	; 5
     f2c:	09 f0       	breq	.+2      	; 0xf30 <__vector_26+0x1f6>
     f2e:	66 c0       	rjmp	.+204    	; 0xffc <__vector_26+0x2c2>
     f30:	36 c0       	rjmp	.+108    	; 0xf9e <__vector_26+0x264>
     f32:	c0 91 3f 14 	lds	r28, 0x143F
     f36:	d0 91 40 14 	lds	r29, 0x1440
     f3a:	1f dd       	rcall	.-1474   	; 0x97a <get_data>
     f3c:	cf 5c       	subi	r28, 0xCF	; 207
     f3e:	dc 4e       	sbci	r29, 0xEC	; 236
     f40:	88 83       	st	Y, r24
     f42:	80 91 3f 14 	lds	r24, 0x143F
     f46:	90 91 40 14 	lds	r25, 0x1440
     f4a:	01 96       	adiw	r24, 0x01	; 1
     f4c:	90 93 40 14 	sts	0x1440, r25
     f50:	80 93 3f 14 	sts	0x143F, r24
     f54:	53 c0       	rjmp	.+166    	; 0xffc <__vector_26+0x2c2>
     f56:	11 dd       	rcall	.-1502   	; 0x97a <get_data>
     f58:	20 91 41 14 	lds	r18, 0x1441
     f5c:	30 91 42 14 	lds	r19, 0x1442
     f60:	a9 01       	movw	r20, r18
     f62:	48 0f       	add	r20, r24
     f64:	51 1d       	adc	r21, r1
     f66:	ca 01       	movw	r24, r20
     f68:	18 16       	cp	r1, r24
     f6a:	19 06       	cpc	r1, r25
     f6c:	3c f0       	brlt	.+14     	; 0xf7c <__vector_26+0x242>
     f6e:	81 e0       	ldi	r24, 0x01	; 1
     f70:	90 e0       	ldi	r25, 0x00	; 0
     f72:	90 93 42 14 	sts	0x1442, r25
     f76:	80 93 41 14 	sts	0x1441, r24
     f7a:	40 c0       	rjmp	.+128    	; 0xffc <__vector_26+0x2c2>
     f7c:	48 30       	cpi	r20, 0x08	; 8
     f7e:	51 05       	cpc	r21, r1
     f80:	2c f4       	brge	.+10     	; 0xf8c <__vector_26+0x252>
     f82:	50 93 42 14 	sts	0x1442, r21
     f86:	40 93 41 14 	sts	0x1441, r20
     f8a:	38 c0       	rjmp	.+112    	; 0xffc <__vector_26+0x2c2>
     f8c:	87 e0       	ldi	r24, 0x07	; 7
     f8e:	90 e0       	ldi	r25, 0x00	; 0
     f90:	90 93 42 14 	sts	0x1442, r25
     f94:	80 93 41 14 	sts	0x1441, r24
     f98:	31 c0       	rjmp	.+98     	; 0xffc <__vector_26+0x2c2>
     f9a:	44 dd       	rcall	.-1400   	; 0xa24 <get_control_settings_from_bus>
     f9c:	2f c0       	rjmp	.+94     	; 0xffc <__vector_26+0x2c2>
     f9e:	53 dd       	rcall	.-1370   	; 0xa46 <get_autonom_settings_from_bus>
     fa0:	2d c0       	rjmp	.+90     	; 0xffc <__vector_26+0x2c2>
     fa2:	80 91 b9 00 	lds	r24, 0x00B9
     fa6:	88 7f       	andi	r24, 0xF8	; 248
     fa8:	80 39       	cpi	r24, 0x90	; 144
     faa:	11 f4       	brne	.+4      	; 0xfb0 <__vector_26+0x276>
     fac:	10 dd       	rcall	.-1504   	; 0x9ce <get_sensor_from_bus>
     fae:	26 c0       	rjmp	.+76     	; 0xffc <__vector_26+0x2c2>
     fb0:	80 91 b9 00 	lds	r24, 0x00B9
     fb4:	88 7f       	andi	r24, 0xF8	; 248
     fb6:	80 3a       	cpi	r24, 0xA0	; 160
     fb8:	09 f5       	brne	.+66     	; 0xffc <__vector_26+0x2c2>
     fba:	ee dc       	rcall	.-1572   	; 0x998 <stop_twi>
     fbc:	80 91 47 14 	lds	r24, 0x1447
     fc0:	90 91 48 14 	lds	r25, 0x1448
     fc4:	81 30       	cpi	r24, 0x01	; 1
     fc6:	91 05       	cpc	r25, r1
     fc8:	91 f0       	breq	.+36     	; 0xfee <__vector_26+0x2b4>
     fca:	1c f4       	brge	.+6      	; 0xfd2 <__vector_26+0x298>
     fcc:	89 2b       	or	r24, r25
     fce:	39 f0       	breq	.+14     	; 0xfde <__vector_26+0x2a4>
     fd0:	15 c0       	rjmp	.+42     	; 0xffc <__vector_26+0x2c2>
     fd2:	84 30       	cpi	r24, 0x04	; 4
     fd4:	91 05       	cpc	r25, r1
     fd6:	39 f0       	breq	.+14     	; 0xfe6 <__vector_26+0x2ac>
     fd8:	05 97       	sbiw	r24, 0x05	; 5
     fda:	81 f4       	brne	.+32     	; 0xffc <__vector_26+0x2c2>
     fdc:	0c c0       	rjmp	.+24     	; 0xff6 <__vector_26+0x2bc>
     fde:	81 e0       	ldi	r24, 0x01	; 1
     fe0:	80 93 27 13 	sts	0x1327, r24
     fe4:	0b c0       	rjmp	.+22     	; 0xffc <__vector_26+0x2c2>
     fe6:	81 e0       	ldi	r24, 0x01	; 1
     fe8:	80 93 24 13 	sts	0x1324, r24
     fec:	07 c0       	rjmp	.+14     	; 0xffc <__vector_26+0x2c2>
     fee:	81 e0       	ldi	r24, 0x01	; 1
     ff0:	80 93 26 13 	sts	0x1326, r24
     ff4:	03 c0       	rjmp	.+6      	; 0xffc <__vector_26+0x2c2>
     ff6:	81 e0       	ldi	r24, 0x01	; 1
     ff8:	80 93 25 13 	sts	0x1325, r24
     ffc:	e2 dc       	rcall	.-1596   	; 0x9c2 <reset_TWI>
     ffe:	ff 91       	pop	r31
    1000:	ef 91       	pop	r30
    1002:	df 91       	pop	r29
    1004:	cf 91       	pop	r28
    1006:	bf 91       	pop	r27
    1008:	af 91       	pop	r26
    100a:	9f 91       	pop	r25
    100c:	8f 91       	pop	r24
    100e:	7f 91       	pop	r23
    1010:	6f 91       	pop	r22
    1012:	5f 91       	pop	r21
    1014:	4f 91       	pop	r20
    1016:	3f 91       	pop	r19
    1018:	2f 91       	pop	r18
    101a:	0f 90       	pop	r0
    101c:	0b be       	out	0x3b, r0	; 59
    101e:	0f 90       	pop	r0
    1020:	0f be       	out	0x3f, r0	; 63
    1022:	0f 90       	pop	r0
    1024:	1f 90       	pop	r1
    1026:	18 95       	reti

00001028 <USART_init>:
    1028:	10 92 c5 00 	sts	0x00C5, r1
    102c:	87 e0       	ldi	r24, 0x07	; 7
    102e:	80 93 c4 00 	sts	0x00C4, r24
    1032:	88 e9       	ldi	r24, 0x98	; 152
    1034:	80 93 c1 00 	sts	0x00C1, r24
    1038:	86 e0       	ldi	r24, 0x06	; 6
    103a:	80 93 c2 00 	sts	0x00C2, r24
    103e:	08 95       	ret

00001040 <USART_CheckTxReady>:
    1040:	80 91 c0 00 	lds	r24, 0x00C0
    1044:	80 72       	andi	r24, 0x20	; 32
    1046:	08 95       	ret

00001048 <USART_WriteByte>:
    1048:	cf 93       	push	r28
    104a:	c8 2f       	mov	r28, r24
    104c:	f9 df       	rcall	.-14     	; 0x1040 <USART_CheckTxReady>
    104e:	88 23       	and	r24, r24
    1050:	e9 f3       	breq	.-6      	; 0x104c <USART_WriteByte+0x4>
    1052:	c0 93 c6 00 	sts	0x00C6, r28
    1056:	cf 91       	pop	r28
    1058:	08 95       	ret

0000105a <USART_crc16>:
    105a:	cf 92       	push	r12
    105c:	df 92       	push	r13
    105e:	ef 92       	push	r14
    1060:	ff 92       	push	r15
    1062:	0f 93       	push	r16
    1064:	1f 93       	push	r17
    1066:	cf 93       	push	r28
    1068:	df 93       	push	r29
    106a:	66 23       	and	r22, r22
    106c:	09 f4       	brne	.+2      	; 0x1070 <USART_crc16+0x16>
    106e:	3e c0       	rjmp	.+124    	; 0x10ec <USART_crc16+0x92>
    1070:	06 2f       	mov	r16, r22
    1072:	10 e0       	ldi	r17, 0x00	; 0
    1074:	4f ef       	ldi	r20, 0xFF	; 255
    1076:	5f ef       	ldi	r21, 0xFF	; 255
    1078:	ee ef       	ldi	r30, 0xFE	; 254
    107a:	ff ef       	ldi	r31, 0xFF	; 255
    107c:	c6 2e       	mov	r12, r22
    107e:	d1 2c       	mov	r13, r1
    1080:	e8 2e       	mov	r14, r24
    1082:	f1 2c       	mov	r15, r1
    1084:	c8 e0       	ldi	r28, 0x08	; 8
    1086:	d0 e0       	ldi	r29, 0x00	; 0
    1088:	ee 3f       	cpi	r30, 0xFE	; 254
    108a:	6f ef       	ldi	r22, 0xFF	; 255
    108c:	f6 07       	cpc	r31, r22
    108e:	19 f4       	brne	.+6      	; 0x1096 <USART_crc16+0x3c>
    1090:	8e 2d       	mov	r24, r14
    1092:	9f 2d       	mov	r25, r15
    1094:	30 c0       	rjmp	.+96     	; 0x10f6 <USART_crc16+0x9c>
    1096:	ef 3f       	cpi	r30, 0xFF	; 255
    1098:	8f ef       	ldi	r24, 0xFF	; 255
    109a:	f8 07       	cpc	r31, r24
    109c:	19 f4       	brne	.+6      	; 0x10a4 <USART_crc16+0x4a>
    109e:	8c 2d       	mov	r24, r12
    10a0:	9d 2d       	mov	r25, r13
    10a2:	29 c0       	rjmp	.+82     	; 0x10f6 <USART_crc16+0x9c>
    10a4:	df 01       	movw	r26, r30
    10a6:	a0 5a       	subi	r26, 0xA0	; 160
    10a8:	b9 4e       	sbci	r27, 0xE9	; 233
    10aa:	8c 91       	ld	r24, X
    10ac:	90 e0       	ldi	r25, 0x00	; 0
    10ae:	23 c0       	rjmp	.+70     	; 0x10f6 <USART_crc16+0x9c>
    10b0:	ba 01       	movw	r22, r20
    10b2:	68 27       	eor	r22, r24
    10b4:	79 27       	eor	r23, r25
    10b6:	60 ff       	sbrs	r22, 0
    10b8:	07 c0       	rjmp	.+14     	; 0x10c8 <USART_crc16+0x6e>
    10ba:	56 95       	lsr	r21
    10bc:	47 95       	ror	r20
    10be:	68 e0       	ldi	r22, 0x08	; 8
    10c0:	46 27       	eor	r20, r22
    10c2:	64 e8       	ldi	r22, 0x84	; 132
    10c4:	56 27       	eor	r21, r22
    10c6:	02 c0       	rjmp	.+4      	; 0x10cc <USART_crc16+0x72>
    10c8:	56 95       	lsr	r21
    10ca:	47 95       	ror	r20
    10cc:	96 95       	lsr	r25
    10ce:	87 95       	ror	r24
    10d0:	21 50       	subi	r18, 0x01	; 1
    10d2:	31 09       	sbc	r19, r1
    10d4:	69 f7       	brne	.-38     	; 0x10b0 <USART_crc16+0x56>
    10d6:	31 96       	adiw	r30, 0x01	; 1
    10d8:	e0 17       	cp	r30, r16
    10da:	f1 07       	cpc	r31, r17
    10dc:	a9 f6       	brne	.-86     	; 0x1088 <USART_crc16+0x2e>
    10de:	9a 01       	movw	r18, r20
    10e0:	20 95       	com	r18
    10e2:	30 95       	com	r19
    10e4:	32 27       	eor	r19, r18
    10e6:	23 27       	eor	r18, r19
    10e8:	32 27       	eor	r19, r18
    10ea:	02 c0       	rjmp	.+4      	; 0x10f0 <USART_crc16+0x96>
    10ec:	20 e0       	ldi	r18, 0x00	; 0
    10ee:	30 e0       	ldi	r19, 0x00	; 0
    10f0:	82 2f       	mov	r24, r18
    10f2:	93 2f       	mov	r25, r19
    10f4:	02 c0       	rjmp	.+4      	; 0x10fa <USART_crc16+0xa0>
    10f6:	9e 01       	movw	r18, r28
    10f8:	db cf       	rjmp	.-74     	; 0x10b0 <USART_crc16+0x56>
    10fa:	df 91       	pop	r29
    10fc:	cf 91       	pop	r28
    10fe:	1f 91       	pop	r17
    1100:	0f 91       	pop	r16
    1102:	ff 90       	pop	r15
    1104:	ef 90       	pop	r14
    1106:	df 90       	pop	r13
    1108:	cf 90       	pop	r12
    110a:	08 95       	ret

0000110c <USART_SendPacket>:
    110c:	0f 93       	push	r16
    110e:	1f 93       	push	r17
    1110:	cf 93       	push	r28
    1112:	df 93       	push	r29
    1114:	9e e7       	ldi	r25, 0x7E	; 126
    1116:	90 93 5f 17 	sts	0x175F, r25
    111a:	80 93 60 17 	sts	0x1760, r24
    111e:	60 93 61 17 	sts	0x1761, r22
    1122:	26 2f       	mov	r18, r22
    1124:	30 e0       	ldi	r19, 0x00	; 0
    1126:	12 16       	cp	r1, r18
    1128:	13 06       	cpc	r1, r19
    112a:	4c f5       	brge	.+82     	; 0x117e <USART_SendPacket+0x72>
    112c:	e0 e6       	ldi	r30, 0x60	; 96
    112e:	f6 e1       	ldi	r31, 0x16	; 22
    1130:	03 e0       	ldi	r16, 0x03	; 3
    1132:	10 e0       	ldi	r17, 0x00	; 0
    1134:	c0 e0       	ldi	r28, 0x00	; 0
    1136:	d0 e0       	ldi	r29, 0x00	; 0
    1138:	7d e7       	ldi	r23, 0x7D	; 125
    113a:	50 e2       	ldi	r21, 0x20	; 32
    113c:	90 81       	ld	r25, Z
    113e:	49 2f       	mov	r20, r25
    1140:	4d 57       	subi	r20, 0x7D	; 125
    1142:	42 30       	cpi	r20, 0x02	; 2
    1144:	80 f4       	brcc	.+32     	; 0x1166 <USART_SendPacket+0x5a>
    1146:	d8 01       	movw	r26, r16
    1148:	a1 5a       	subi	r26, 0xA1	; 161
    114a:	b8 4e       	sbci	r27, 0xE8	; 232
    114c:	ac 0f       	add	r26, r28
    114e:	bd 1f       	adc	r27, r29
    1150:	7c 93       	st	X, r23
    1152:	0f 5f       	subi	r16, 0xFF	; 255
    1154:	1f 4f       	sbci	r17, 0xFF	; 255
    1156:	d8 01       	movw	r26, r16
    1158:	a1 5a       	subi	r26, 0xA1	; 161
    115a:	b8 4e       	sbci	r27, 0xE8	; 232
    115c:	ac 0f       	add	r26, r28
    115e:	bd 1f       	adc	r27, r29
    1160:	95 27       	eor	r25, r21
    1162:	9c 93       	st	X, r25
    1164:	06 c0       	rjmp	.+12     	; 0x1172 <USART_SendPacket+0x66>
    1166:	d8 01       	movw	r26, r16
    1168:	a1 5a       	subi	r26, 0xA1	; 161
    116a:	b8 4e       	sbci	r27, 0xE8	; 232
    116c:	ac 0f       	add	r26, r28
    116e:	bd 1f       	adc	r27, r29
    1170:	9c 93       	st	X, r25
    1172:	21 96       	adiw	r28, 0x01	; 1
    1174:	31 96       	adiw	r30, 0x01	; 1
    1176:	c2 17       	cp	r28, r18
    1178:	d3 07       	cpc	r29, r19
    117a:	01 f7       	brne	.-64     	; 0x113c <USART_SendPacket+0x30>
    117c:	04 c0       	rjmp	.+8      	; 0x1186 <USART_SendPacket+0x7a>
    117e:	03 e0       	ldi	r16, 0x03	; 3
    1180:	10 e0       	ldi	r17, 0x00	; 0
    1182:	c0 e0       	ldi	r28, 0x00	; 0
    1184:	d0 e0       	ldi	r29, 0x00	; 0
    1186:	69 df       	rcall	.-302    	; 0x105a <USART_crc16>
    1188:	f8 01       	movw	r30, r16
    118a:	e1 5a       	subi	r30, 0xA1	; 161
    118c:	f8 4e       	sbci	r31, 0xE8	; 232
    118e:	ec 0f       	add	r30, r28
    1190:	fd 1f       	adc	r31, r29
    1192:	90 83       	st	Z, r25
    1194:	81 83       	std	Z+1, r24	; 0x01
    1196:	22 96       	adiw	r28, 0x02	; 2
    1198:	0c 0f       	add	r16, r28
    119a:	1d 1f       	adc	r17, r29
    119c:	f8 01       	movw	r30, r16
    119e:	e1 5a       	subi	r30, 0xA1	; 161
    11a0:	f8 4e       	sbci	r31, 0xE8	; 232
    11a2:	8e e7       	ldi	r24, 0x7E	; 126
    11a4:	80 83       	st	Z, r24
    11a6:	c8 01       	movw	r24, r16
    11a8:	01 96       	adiw	r24, 0x01	; 1
    11aa:	18 16       	cp	r1, r24
    11ac:	19 06       	cpc	r1, r25
    11ae:	4c f4       	brge	.+18     	; 0x11c2 <USART_SendPacket+0xb6>
    11b0:	cf e5       	ldi	r28, 0x5F	; 95
    11b2:	d7 e1       	ldi	r29, 0x17	; 23
    11b4:	00 5a       	subi	r16, 0xA0	; 160
    11b6:	18 4e       	sbci	r17, 0xE8	; 232
    11b8:	89 91       	ld	r24, Y+
    11ba:	46 df       	rcall	.-372    	; 0x1048 <USART_WriteByte>
    11bc:	c0 17       	cp	r28, r16
    11be:	d1 07       	cpc	r29, r17
    11c0:	d9 f7       	brne	.-10     	; 0x11b8 <USART_SendPacket+0xac>
    11c2:	df 91       	pop	r29
    11c4:	cf 91       	pop	r28
    11c6:	1f 91       	pop	r17
    11c8:	0f 91       	pop	r16
    11ca:	08 95       	ret

000011cc <USART_SendCommand>:
    11cc:	80 e0       	ldi	r24, 0x00	; 0
    11ce:	90 e0       	ldi	r25, 0x00	; 0
    11d0:	96 dd       	rcall	.-1236   	; 0xcfe <TWI_get_command>
    11d2:	80 93 60 16 	sts	0x1660, r24
    11d6:	81 e0       	ldi	r24, 0x01	; 1
    11d8:	90 e0       	ldi	r25, 0x00	; 0
    11da:	91 dd       	rcall	.-1246   	; 0xcfe <TWI_get_command>
    11dc:	80 93 61 16 	sts	0x1661, r24
    11e0:	82 e0       	ldi	r24, 0x02	; 2
    11e2:	90 e0       	ldi	r25, 0x00	; 0
    11e4:	8c dd       	rcall	.-1256   	; 0xcfe <TWI_get_command>
    11e6:	80 93 62 16 	sts	0x1662, r24
    11ea:	63 e0       	ldi	r22, 0x03	; 3
    11ec:	83 e4       	ldi	r24, 0x43	; 67
    11ee:	8e cf       	rjmp	.-228    	; 0x110c <USART_SendPacket>

000011f0 <USART_DecodeMessageRxFIFO>:
    11f0:	8f 92       	push	r8
    11f2:	9f 92       	push	r9
    11f4:	af 92       	push	r10
    11f6:	bf 92       	push	r11
    11f8:	cf 92       	push	r12
    11fa:	df 92       	push	r13
    11fc:	ef 92       	push	r14
    11fe:	ff 92       	push	r15
    1200:	0f 93       	push	r16
    1202:	1f 93       	push	r17
    1204:	cf 93       	push	r28
    1206:	df 93       	push	r29
    1208:	cd b7       	in	r28, 0x3d	; 61
    120a:	de b7       	in	r29, 0x3e	; 62
    120c:	ad b6       	in	r10, 0x3d	; 61
    120e:	be b6       	in	r11, 0x3e	; 62
    1210:	60 e0       	ldi	r22, 0x00	; 0
    1212:	70 e0       	ldi	r23, 0x00	; 0
    1214:	80 91 03 01 	lds	r24, 0x0103
    1218:	90 91 04 01 	lds	r25, 0x0104
    121c:	5d d9       	rcall	.-3398   	; 0x4d8 <FifoRead>
    121e:	88 23       	and	r24, r24
    1220:	31 f0       	breq	.+12     	; 0x122e <USART_DecodeMessageRxFIFO+0x3e>
    1222:	62 ef       	ldi	r22, 0xF2	; 242
    1224:	71 e1       	ldi	r23, 0x11	; 17
    1226:	80 e4       	ldi	r24, 0x40	; 64
    1228:	9e dc       	rcall	.-1732   	; 0xb66 <TWI_send_string>
    122a:	81 e0       	ldi	r24, 0x01	; 1
    122c:	43 c0       	rjmp	.+134    	; 0x12b4 <USART_DecodeMessageRxFIFO+0xc4>
    122e:	c0 90 00 00 	lds	r12, 0x0000
    1232:	d1 2c       	mov	r13, r1
    1234:	96 01       	movw	r18, r12
    1236:	21 50       	subi	r18, 0x01	; 1
    1238:	31 09       	sbc	r19, r1
    123a:	81 e0       	ldi	r24, 0x01	; 1
    123c:	90 e0       	ldi	r25, 0x00	; 0
    123e:	c1 14       	cp	r12, r1
    1240:	d1 04       	cpc	r13, r1
    1242:	11 f0       	breq	.+4      	; 0x1248 <USART_DecodeMessageRxFIFO+0x58>
    1244:	80 e0       	ldi	r24, 0x00	; 0
    1246:	90 e0       	ldi	r25, 0x00	; 0
    1248:	82 0f       	add	r24, r18
    124a:	93 1f       	adc	r25, r19
    124c:	2d b7       	in	r18, 0x3d	; 61
    124e:	3e b7       	in	r19, 0x3e	; 62
    1250:	28 1b       	sub	r18, r24
    1252:	39 0b       	sbc	r19, r25
    1254:	0f b6       	in	r0, 0x3f	; 63
    1256:	f8 94       	cli
    1258:	3e bf       	out	0x3e, r19	; 62
    125a:	0f be       	out	0x3f, r0	; 63
    125c:	2d bf       	out	0x3d, r18	; 61
    125e:	8d b7       	in	r24, 0x3d	; 61
    1260:	9e b7       	in	r25, 0x3e	; 62
    1262:	01 96       	adiw	r24, 0x01	; 1
    1264:	88 2e       	mov	r8, r24
    1266:	99 2e       	mov	r9, r25
    1268:	1c 14       	cp	r1, r12
    126a:	1d 04       	cpc	r1, r13
    126c:	ec f4       	brge	.+58     	; 0x12a8 <USART_DecodeMessageRxFIFO+0xb8>
    126e:	e8 2e       	mov	r14, r24
    1270:	f9 2e       	mov	r15, r25
    1272:	00 e0       	ldi	r16, 0x00	; 0
    1274:	10 e0       	ldi	r17, 0x00	; 0
    1276:	60 e0       	ldi	r22, 0x00	; 0
    1278:	70 e0       	ldi	r23, 0x00	; 0
    127a:	80 91 03 01 	lds	r24, 0x0103
    127e:	90 91 04 01 	lds	r25, 0x0104
    1282:	2a d9       	rcall	.-3500   	; 0x4d8 <FifoRead>
    1284:	88 23       	and	r24, r24
    1286:	31 f0       	breq	.+12     	; 0x1294 <USART_DecodeMessageRxFIFO+0xa4>
    1288:	64 e1       	ldi	r22, 0x14	; 20
    128a:	72 e1       	ldi	r23, 0x12	; 18
    128c:	80 e4       	ldi	r24, 0x40	; 64
    128e:	6b dc       	rcall	.-1834   	; 0xb66 <TWI_send_string>
    1290:	81 e0       	ldi	r24, 0x01	; 1
    1292:	10 c0       	rjmp	.+32     	; 0x12b4 <USART_DecodeMessageRxFIFO+0xc4>
    1294:	80 91 00 00 	lds	r24, 0x0000
    1298:	f7 01       	movw	r30, r14
    129a:	81 93       	st	Z+, r24
    129c:	7f 01       	movw	r14, r30
    129e:	0f 5f       	subi	r16, 0xFF	; 255
    12a0:	1f 4f       	sbci	r17, 0xFF	; 255
    12a2:	0c 15       	cp	r16, r12
    12a4:	1d 05       	cpc	r17, r13
    12a6:	3c f3       	brlt	.-50     	; 0x1276 <USART_DecodeMessageRxFIFO+0x86>
    12a8:	a6 01       	movw	r20, r12
    12aa:	68 2d       	mov	r22, r8
    12ac:	79 2d       	mov	r23, r9
    12ae:	80 e8       	ldi	r24, 0x80	; 128
    12b0:	a0 dc       	rcall	.-1728   	; 0xbf2 <TWI_send_string_fixed_length>
    12b2:	80 e0       	ldi	r24, 0x00	; 0
    12b4:	0f b6       	in	r0, 0x3f	; 63
    12b6:	f8 94       	cli
    12b8:	be be       	out	0x3e, r11	; 62
    12ba:	0f be       	out	0x3f, r0	; 63
    12bc:	ad be       	out	0x3d, r10	; 61
    12be:	df 91       	pop	r29
    12c0:	cf 91       	pop	r28
    12c2:	1f 91       	pop	r17
    12c4:	0f 91       	pop	r16
    12c6:	ff 90       	pop	r15
    12c8:	ef 90       	pop	r14
    12ca:	df 90       	pop	r13
    12cc:	cf 90       	pop	r12
    12ce:	bf 90       	pop	r11
    12d0:	af 90       	pop	r10
    12d2:	9f 90       	pop	r9
    12d4:	8f 90       	pop	r8
    12d6:	08 95       	ret

000012d8 <USART_DecodeCommandRxFIFO>:
    12d8:	cf 93       	push	r28
    12da:	df 93       	push	r29
    12dc:	60 e0       	ldi	r22, 0x00	; 0
    12de:	70 e0       	ldi	r23, 0x00	; 0
    12e0:	80 91 03 01 	lds	r24, 0x0103
    12e4:	90 91 04 01 	lds	r25, 0x0104
    12e8:	f7 d8       	rcall	.-3602   	; 0x4d8 <FifoRead>
    12ea:	88 23       	and	r24, r24
    12ec:	31 f0       	breq	.+12     	; 0x12fa <USART_DecodeCommandRxFIFO+0x22>
    12ee:	67 e3       	ldi	r22, 0x37	; 55
    12f0:	72 e1       	ldi	r23, 0x12	; 18
    12f2:	80 e4       	ldi	r24, 0x40	; 64
    12f4:	38 dc       	rcall	.-1936   	; 0xb66 <TWI_send_string>
    12f6:	81 e0       	ldi	r24, 0x01	; 1
    12f8:	42 c0       	rjmp	.+132    	; 0x137e <USART_DecodeCommandRxFIFO+0xa6>
    12fa:	80 91 00 00 	lds	r24, 0x0000
    12fe:	83 30       	cpi	r24, 0x03	; 3
    1300:	09 f0       	breq	.+2      	; 0x1304 <USART_DecodeCommandRxFIFO+0x2c>
    1302:	38 c0       	rjmp	.+112    	; 0x1374 <USART_DecodeCommandRxFIFO+0x9c>
    1304:	60 e0       	ldi	r22, 0x00	; 0
    1306:	70 e0       	ldi	r23, 0x00	; 0
    1308:	80 91 03 01 	lds	r24, 0x0103
    130c:	90 91 04 01 	lds	r25, 0x0104
    1310:	e3 d8       	rcall	.-3642   	; 0x4d8 <FifoRead>
    1312:	88 23       	and	r24, r24
    1314:	31 f0       	breq	.+12     	; 0x1322 <USART_DecodeCommandRxFIFO+0x4a>
    1316:	69 e5       	ldi	r22, 0x59	; 89
    1318:	72 e1       	ldi	r23, 0x12	; 18
    131a:	80 e4       	ldi	r24, 0x40	; 64
    131c:	24 dc       	rcall	.-1976   	; 0xb66 <TWI_send_string>
    131e:	81 e0       	ldi	r24, 0x01	; 1
    1320:	2e c0       	rjmp	.+92     	; 0x137e <USART_DecodeCommandRxFIFO+0xa6>
    1322:	c0 91 00 00 	lds	r28, 0x0000
    1326:	60 e0       	ldi	r22, 0x00	; 0
    1328:	70 e0       	ldi	r23, 0x00	; 0
    132a:	80 91 03 01 	lds	r24, 0x0103
    132e:	90 91 04 01 	lds	r25, 0x0104
    1332:	d2 d8       	rcall	.-3676   	; 0x4d8 <FifoRead>
    1334:	88 23       	and	r24, r24
    1336:	31 f0       	breq	.+12     	; 0x1344 <USART_DecodeCommandRxFIFO+0x6c>
    1338:	61 e8       	ldi	r22, 0x81	; 129
    133a:	72 e1       	ldi	r23, 0x12	; 18
    133c:	80 e4       	ldi	r24, 0x40	; 64
    133e:	13 dc       	rcall	.-2010   	; 0xb66 <TWI_send_string>
    1340:	81 e0       	ldi	r24, 0x01	; 1
    1342:	1d c0       	rjmp	.+58     	; 0x137e <USART_DecodeCommandRxFIFO+0xa6>
    1344:	d0 91 00 00 	lds	r29, 0x0000
    1348:	60 e0       	ldi	r22, 0x00	; 0
    134a:	70 e0       	ldi	r23, 0x00	; 0
    134c:	80 91 03 01 	lds	r24, 0x0103
    1350:	90 91 04 01 	lds	r25, 0x0104
    1354:	c1 d8       	rcall	.-3710   	; 0x4d8 <FifoRead>
    1356:	88 23       	and	r24, r24
    1358:	31 f0       	breq	.+12     	; 0x1366 <USART_DecodeCommandRxFIFO+0x8e>
    135a:	68 ea       	ldi	r22, 0xA8	; 168
    135c:	72 e1       	ldi	r23, 0x12	; 18
    135e:	80 e4       	ldi	r24, 0x40	; 64
    1360:	02 dc       	rcall	.-2044   	; 0xb66 <TWI_send_string>
    1362:	81 e0       	ldi	r24, 0x01	; 1
    1364:	0c c0       	rjmp	.+24     	; 0x137e <USART_DecodeCommandRxFIFO+0xa6>
    1366:	40 91 00 00 	lds	r20, 0x0000
    136a:	6d 2f       	mov	r22, r29
    136c:	8c 2f       	mov	r24, r28
    136e:	b3 db       	rcall	.-2202   	; 0xad6 <TWI_send_command>
    1370:	80 e0       	ldi	r24, 0x00	; 0
    1372:	05 c0       	rjmp	.+10     	; 0x137e <USART_DecodeCommandRxFIFO+0xa6>
    1374:	6c ec       	ldi	r22, 0xCC	; 204
    1376:	72 e1       	ldi	r23, 0x12	; 18
    1378:	80 e4       	ldi	r24, 0x40	; 64
    137a:	f5 db       	rcall	.-2070   	; 0xb66 <TWI_send_string>
    137c:	81 e0       	ldi	r24, 0x01	; 1
    137e:	df 91       	pop	r29
    1380:	cf 91       	pop	r28
    1382:	08 95       	ret

00001384 <USART_DecodeValueFIFO>:
    1384:	ef 92       	push	r14
    1386:	ff 92       	push	r15
    1388:	0f 93       	push	r16
    138a:	1f 93       	push	r17
    138c:	cf 93       	push	r28
    138e:	df 93       	push	r29
    1390:	00 d0       	rcall	.+0      	; 0x1392 <USART_DecodeValueFIFO+0xe>
    1392:	00 d0       	rcall	.+0      	; 0x1394 <USART_DecodeValueFIFO+0x10>
    1394:	cd b7       	in	r28, 0x3d	; 61
    1396:	de b7       	in	r29, 0x3e	; 62
    1398:	60 e0       	ldi	r22, 0x00	; 0
    139a:	70 e0       	ldi	r23, 0x00	; 0
    139c:	80 91 03 01 	lds	r24, 0x0103
    13a0:	90 91 04 01 	lds	r25, 0x0104
    13a4:	99 d8       	rcall	.-3790   	; 0x4d8 <FifoRead>
    13a6:	88 23       	and	r24, r24
    13a8:	31 f0       	breq	.+12     	; 0x13b6 <USART_DecodeValueFIFO+0x32>
    13aa:	67 e3       	ldi	r22, 0x37	; 55
    13ac:	72 e1       	ldi	r23, 0x12	; 18
    13ae:	80 e4       	ldi	r24, 0x40	; 64
    13b0:	da db       	rcall	.-2124   	; 0xb66 <TWI_send_string>
    13b2:	81 e0       	ldi	r24, 0x01	; 1
    13b4:	35 c0       	rjmp	.+106    	; 0x1420 <USART_DecodeValueFIFO+0x9c>
    13b6:	80 91 00 00 	lds	r24, 0x0000
    13ba:	84 30       	cpi	r24, 0x04	; 4
    13bc:	71 f5       	brne	.+92     	; 0x141a <USART_DecodeValueFIFO+0x96>
    13be:	8e 01       	movw	r16, r28
    13c0:	0f 5f       	subi	r16, 0xFF	; 255
    13c2:	1f 4f       	sbci	r17, 0xFF	; 255
    13c4:	7e 01       	movw	r14, r28
    13c6:	85 e0       	ldi	r24, 0x05	; 5
    13c8:	e8 0e       	add	r14, r24
    13ca:	f1 1c       	adc	r15, r1
    13cc:	60 e0       	ldi	r22, 0x00	; 0
    13ce:	70 e0       	ldi	r23, 0x00	; 0
    13d0:	80 91 03 01 	lds	r24, 0x0103
    13d4:	90 91 04 01 	lds	r25, 0x0104
    13d8:	7f d8       	rcall	.-3842   	; 0x4d8 <FifoRead>
    13da:	81 11       	cpse	r24, r1
    13dc:	20 c0       	rjmp	.+64     	; 0x141e <USART_DecodeValueFIFO+0x9a>
    13de:	e0 e0       	ldi	r30, 0x00	; 0
    13e0:	f0 e0       	ldi	r31, 0x00	; 0
    13e2:	80 81       	ld	r24, Z
    13e4:	d8 01       	movw	r26, r16
    13e6:	8d 93       	st	X+, r24
    13e8:	8d 01       	movw	r16, r26
    13ea:	60 81       	ld	r22, Z
    13ec:	70 e0       	ldi	r23, 0x00	; 0
    13ee:	80 e0       	ldi	r24, 0x00	; 0
    13f0:	90 e0       	ldi	r25, 0x00	; 0
    13f2:	fd d1       	rcall	.+1018   	; 0x17ee <__floatunsisf>
    13f4:	ab 01       	movw	r20, r22
    13f6:	bc 01       	movw	r22, r24
    13f8:	80 e8       	ldi	r24, 0x80	; 128
    13fa:	39 dc       	rcall	.-1934   	; 0xc6e <TWI_send_float>
    13fc:	0e 15       	cp	r16, r14
    13fe:	1f 05       	cpc	r17, r15
    1400:	29 f7       	brne	.-54     	; 0x13cc <USART_DecodeValueFIFO+0x48>
    1402:	49 81       	ldd	r20, Y+1	; 0x01
    1404:	5a 81       	ldd	r21, Y+2	; 0x02
    1406:	6b 81       	ldd	r22, Y+3	; 0x03
    1408:	7c 81       	ldd	r23, Y+4	; 0x04
    140a:	80 e8       	ldi	r24, 0x80	; 128
    140c:	30 dc       	rcall	.-1952   	; 0xc6e <TWI_send_float>
    140e:	92 b1       	in	r25, 0x02	; 2
    1410:	81 e0       	ldi	r24, 0x01	; 1
    1412:	89 27       	eor	r24, r25
    1414:	82 b9       	out	0x02, r24	; 2
    1416:	80 e0       	ldi	r24, 0x00	; 0
    1418:	03 c0       	rjmp	.+6      	; 0x1420 <USART_DecodeValueFIFO+0x9c>
    141a:	81 e0       	ldi	r24, 0x01	; 1
    141c:	01 c0       	rjmp	.+2      	; 0x1420 <USART_DecodeValueFIFO+0x9c>
    141e:	81 e0       	ldi	r24, 0x01	; 1
    1420:	0f 90       	pop	r0
    1422:	0f 90       	pop	r0
    1424:	0f 90       	pop	r0
    1426:	0f 90       	pop	r0
    1428:	df 91       	pop	r29
    142a:	cf 91       	pop	r28
    142c:	1f 91       	pop	r17
    142e:	0f 91       	pop	r16
    1430:	ff 90       	pop	r15
    1432:	ef 90       	pop	r14
    1434:	08 95       	ret

00001436 <USART_DecodeRxFIFO>:
    1436:	13 c0       	rjmp	.+38     	; 0x145e <USART_DecodeRxFIFO+0x28>
    1438:	80 91 00 00 	lds	r24, 0x0000
    143c:	8d 34       	cpi	r24, 0x4D	; 77
    143e:	29 f0       	breq	.+10     	; 0x144a <USART_DecodeRxFIFO+0x14>
    1440:	86 35       	cpi	r24, 0x56	; 86
    1442:	51 f0       	breq	.+20     	; 0x1458 <USART_DecodeRxFIFO+0x22>
    1444:	83 34       	cpi	r24, 0x43	; 67
    1446:	59 f4       	brne	.+22     	; 0x145e <USART_DecodeRxFIFO+0x28>
    1448:	04 c0       	rjmp	.+8      	; 0x1452 <USART_DecodeRxFIFO+0x1c>
    144a:	d2 de       	rcall	.-604    	; 0x11f0 <USART_DecodeMessageRxFIFO>
    144c:	88 23       	and	r24, r24
    144e:	39 f0       	breq	.+14     	; 0x145e <USART_DecodeRxFIFO+0x28>
    1450:	08 95       	ret
    1452:	42 df       	rcall	.-380    	; 0x12d8 <USART_DecodeCommandRxFIFO>
    1454:	81 11       	cpse	r24, r1
    1456:	0c c0       	rjmp	.+24     	; 0x1470 <USART_DecodeRxFIFO+0x3a>
    1458:	95 df       	rcall	.-214    	; 0x1384 <USART_DecodeValueFIFO>
    145a:	81 11       	cpse	r24, r1
    145c:	09 c0       	rjmp	.+18     	; 0x1470 <USART_DecodeRxFIFO+0x3a>
    145e:	60 e0       	ldi	r22, 0x00	; 0
    1460:	70 e0       	ldi	r23, 0x00	; 0
    1462:	80 91 03 01 	lds	r24, 0x0103
    1466:	90 91 04 01 	lds	r25, 0x0104
    146a:	36 d8       	rcall	.-3988   	; 0x4d8 <FifoRead>
    146c:	88 23       	and	r24, r24
    146e:	21 f3       	breq	.-56     	; 0x1438 <USART_DecodeRxFIFO+0x2>
    1470:	08 95       	ret

00001472 <__vector_20>:
    1472:	1f 92       	push	r1
    1474:	0f 92       	push	r0
    1476:	0f b6       	in	r0, 0x3f	; 63
    1478:	0f 92       	push	r0
    147a:	11 24       	eor	r1, r1
    147c:	0b b6       	in	r0, 0x3b	; 59
    147e:	0f 92       	push	r0
    1480:	ef 92       	push	r14
    1482:	ff 92       	push	r15
    1484:	0f 93       	push	r16
    1486:	1f 93       	push	r17
    1488:	2f 93       	push	r18
    148a:	3f 93       	push	r19
    148c:	4f 93       	push	r20
    148e:	5f 93       	push	r21
    1490:	6f 93       	push	r22
    1492:	7f 93       	push	r23
    1494:	8f 93       	push	r24
    1496:	9f 93       	push	r25
    1498:	af 93       	push	r26
    149a:	bf 93       	push	r27
    149c:	cf 93       	push	r28
    149e:	df 93       	push	r29
    14a0:	ef 93       	push	r30
    14a2:	ff 93       	push	r31
    14a4:	20 91 c6 00 	lds	r18, 0x00C6
    14a8:	2e 37       	cpi	r18, 0x7E	; 126
    14aa:	09 f0       	breq	.+2      	; 0x14ae <__vector_20+0x3c>
    14ac:	3f c0       	rjmp	.+126    	; 0x152c <__vector_20+0xba>
    14ae:	80 91 2b 13 	lds	r24, 0x132B
    14b2:	90 91 2c 13 	lds	r25, 0x132C
    14b6:	84 30       	cpi	r24, 0x04	; 4
    14b8:	91 05       	cpc	r25, r1
    14ba:	40 f4       	brcc	.+16     	; 0x14cc <__vector_20+0x5a>
    14bc:	20 91 5c 14 	lds	r18, 0x145C
    14c0:	30 e0       	ldi	r19, 0x00	; 0
    14c2:	2c 5f       	subi	r18, 0xFC	; 252
    14c4:	3f 4f       	sbci	r19, 0xFF	; 255
    14c6:	82 17       	cp	r24, r18
    14c8:	93 07       	cpc	r25, r19
    14ca:	59 f5       	brne	.+86     	; 0x1522 <__vector_20+0xb0>
    14cc:	80 91 29 13 	lds	r24, 0x1329
    14d0:	90 91 2a 13 	lds	r25, 0x132A
    14d4:	89 2b       	or	r24, r25
    14d6:	21 f0       	breq	.+8      	; 0x14e0 <__vector_20+0x6e>
    14d8:	10 92 2a 13 	sts	0x132A, r1
    14dc:	10 92 29 13 	sts	0x1329, r1
    14e0:	0b e5       	ldi	r16, 0x5B	; 91
    14e2:	14 e1       	ldi	r17, 0x14	; 20
    14e4:	c0 e0       	ldi	r28, 0x00	; 0
    14e6:	d0 e0       	ldi	r29, 0x00	; 0
    14e8:	0f 2e       	mov	r0, r31
    14ea:	fc e5       	ldi	r31, 0x5C	; 92
    14ec:	ef 2e       	mov	r14, r31
    14ee:	f4 e1       	ldi	r31, 0x14	; 20
    14f0:	ff 2e       	mov	r15, r31
    14f2:	f0 2d       	mov	r31, r0
    14f4:	f8 01       	movw	r30, r16
    14f6:	61 91       	ld	r22, Z+
    14f8:	8f 01       	movw	r16, r30
    14fa:	80 91 03 01 	lds	r24, 0x0103
    14fe:	90 91 04 01 	lds	r25, 0x0104
    1502:	0e 94 4c 02 	call	0x498	; 0x498 <FifoWrite>
    1506:	88 23       	and	r24, r24
    1508:	21 f0       	breq	.+8      	; 0x1512 <__vector_20+0xa0>
    150a:	63 ef       	ldi	r22, 0xF3	; 243
    150c:	72 e1       	ldi	r23, 0x12	; 18
    150e:	80 e4       	ldi	r24, 0x40	; 64
    1510:	2a db       	rcall	.-2476   	; 0xb66 <TWI_send_string>
    1512:	21 96       	adiw	r28, 0x01	; 1
    1514:	f7 01       	movw	r30, r14
    1516:	80 81       	ld	r24, Z
    1518:	90 e0       	ldi	r25, 0x00	; 0
    151a:	02 96       	adiw	r24, 0x02	; 2
    151c:	c8 17       	cp	r28, r24
    151e:	d9 07       	cpc	r29, r25
    1520:	4c f3       	brlt	.-46     	; 0x14f4 <__vector_20+0x82>
    1522:	10 92 2c 13 	sts	0x132C, r1
    1526:	10 92 2b 13 	sts	0x132B, r1
    152a:	16 c0       	rjmp	.+44     	; 0x1558 <__vector_20+0xe6>
    152c:	2d 37       	cpi	r18, 0x7D	; 125
    152e:	39 f4       	brne	.+14     	; 0x153e <__vector_20+0xcc>
    1530:	81 e0       	ldi	r24, 0x01	; 1
    1532:	90 e0       	ldi	r25, 0x00	; 0
    1534:	90 93 2a 13 	sts	0x132A, r25
    1538:	80 93 29 13 	sts	0x1329, r24
    153c:	0d c0       	rjmp	.+26     	; 0x1558 <__vector_20+0xe6>
    153e:	80 91 2b 13 	lds	r24, 0x132B
    1542:	90 91 2c 13 	lds	r25, 0x132C
    1546:	fc 01       	movw	r30, r24
    1548:	e5 5a       	subi	r30, 0xA5	; 165
    154a:	fb 4e       	sbci	r31, 0xEB	; 235
    154c:	20 83       	st	Z, r18
    154e:	01 96       	adiw	r24, 0x01	; 1
    1550:	90 93 2c 13 	sts	0x132C, r25
    1554:	80 93 2b 13 	sts	0x132B, r24
    1558:	ff 91       	pop	r31
    155a:	ef 91       	pop	r30
    155c:	df 91       	pop	r29
    155e:	cf 91       	pop	r28
    1560:	bf 91       	pop	r27
    1562:	af 91       	pop	r26
    1564:	9f 91       	pop	r25
    1566:	8f 91       	pop	r24
    1568:	7f 91       	pop	r23
    156a:	6f 91       	pop	r22
    156c:	5f 91       	pop	r21
    156e:	4f 91       	pop	r20
    1570:	3f 91       	pop	r19
    1572:	2f 91       	pop	r18
    1574:	1f 91       	pop	r17
    1576:	0f 91       	pop	r16
    1578:	ff 90       	pop	r15
    157a:	ef 90       	pop	r14
    157c:	0f 90       	pop	r0
    157e:	0b be       	out	0x3b, r0	; 59
    1580:	0f 90       	pop	r0
    1582:	0f be       	out	0x3f, r0	; 63
    1584:	0f 90       	pop	r0
    1586:	1f 90       	pop	r1
    1588:	18 95       	reti

0000158a <USART_send_command_parameters>:
    158a:	80 93 60 16 	sts	0x1660, r24
    158e:	60 93 61 16 	sts	0x1661, r22
    1592:	40 93 62 16 	sts	0x1662, r20
    1596:	63 e0       	ldi	r22, 0x03	; 3
    1598:	83 e4       	ldi	r24, 0x43	; 67
    159a:	b8 cd       	rjmp	.-1168   	; 0x110c <USART_SendPacket>

0000159c <__subsf3>:
    159c:	50 58       	subi	r21, 0x80	; 128

0000159e <__addsf3>:
    159e:	bb 27       	eor	r27, r27
    15a0:	aa 27       	eor	r26, r26
    15a2:	0e d0       	rcall	.+28     	; 0x15c0 <__addsf3x>
    15a4:	c5 c1       	rjmp	.+906    	; 0x1930 <__fp_round>
    15a6:	8e d1       	rcall	.+796    	; 0x18c4 <__fp_pscA>
    15a8:	30 f0       	brcs	.+12     	; 0x15b6 <__addsf3+0x18>
    15aa:	93 d1       	rcall	.+806    	; 0x18d2 <__fp_pscB>
    15ac:	20 f0       	brcs	.+8      	; 0x15b6 <__addsf3+0x18>
    15ae:	31 f4       	brne	.+12     	; 0x15bc <__addsf3+0x1e>
    15b0:	9f 3f       	cpi	r25, 0xFF	; 255
    15b2:	11 f4       	brne	.+4      	; 0x15b8 <__addsf3+0x1a>
    15b4:	1e f4       	brtc	.+6      	; 0x15bc <__addsf3+0x1e>
    15b6:	5e c1       	rjmp	.+700    	; 0x1874 <__fp_nan>
    15b8:	0e f4       	brtc	.+2      	; 0x15bc <__addsf3+0x1e>
    15ba:	e0 95       	com	r30
    15bc:	e7 fb       	bst	r30, 7
    15be:	54 c1       	rjmp	.+680    	; 0x1868 <__fp_inf>

000015c0 <__addsf3x>:
    15c0:	e9 2f       	mov	r30, r25
    15c2:	d8 d1       	rcall	.+944    	; 0x1974 <__fp_split3>
    15c4:	80 f3       	brcs	.-32     	; 0x15a6 <__addsf3+0x8>
    15c6:	ba 17       	cp	r27, r26
    15c8:	62 07       	cpc	r22, r18
    15ca:	73 07       	cpc	r23, r19
    15cc:	84 07       	cpc	r24, r20
    15ce:	95 07       	cpc	r25, r21
    15d0:	18 f0       	brcs	.+6      	; 0x15d8 <__addsf3x+0x18>
    15d2:	71 f4       	brne	.+28     	; 0x15f0 <__addsf3x+0x30>
    15d4:	9e f5       	brtc	.+102    	; 0x163c <__addsf3x+0x7c>
    15d6:	f0 c1       	rjmp	.+992    	; 0x19b8 <__fp_zero>
    15d8:	0e f4       	brtc	.+2      	; 0x15dc <__addsf3x+0x1c>
    15da:	e0 95       	com	r30
    15dc:	0b 2e       	mov	r0, r27
    15de:	ba 2f       	mov	r27, r26
    15e0:	a0 2d       	mov	r26, r0
    15e2:	0b 01       	movw	r0, r22
    15e4:	b9 01       	movw	r22, r18
    15e6:	90 01       	movw	r18, r0
    15e8:	0c 01       	movw	r0, r24
    15ea:	ca 01       	movw	r24, r20
    15ec:	a0 01       	movw	r20, r0
    15ee:	11 24       	eor	r1, r1
    15f0:	ff 27       	eor	r31, r31
    15f2:	59 1b       	sub	r21, r25
    15f4:	99 f0       	breq	.+38     	; 0x161c <__addsf3x+0x5c>
    15f6:	59 3f       	cpi	r21, 0xF9	; 249
    15f8:	50 f4       	brcc	.+20     	; 0x160e <__addsf3x+0x4e>
    15fa:	50 3e       	cpi	r21, 0xE0	; 224
    15fc:	68 f1       	brcs	.+90     	; 0x1658 <__addsf3x+0x98>
    15fe:	1a 16       	cp	r1, r26
    1600:	f0 40       	sbci	r31, 0x00	; 0
    1602:	a2 2f       	mov	r26, r18
    1604:	23 2f       	mov	r18, r19
    1606:	34 2f       	mov	r19, r20
    1608:	44 27       	eor	r20, r20
    160a:	58 5f       	subi	r21, 0xF8	; 248
    160c:	f3 cf       	rjmp	.-26     	; 0x15f4 <__addsf3x+0x34>
    160e:	46 95       	lsr	r20
    1610:	37 95       	ror	r19
    1612:	27 95       	ror	r18
    1614:	a7 95       	ror	r26
    1616:	f0 40       	sbci	r31, 0x00	; 0
    1618:	53 95       	inc	r21
    161a:	c9 f7       	brne	.-14     	; 0x160e <__addsf3x+0x4e>
    161c:	7e f4       	brtc	.+30     	; 0x163c <__addsf3x+0x7c>
    161e:	1f 16       	cp	r1, r31
    1620:	ba 0b       	sbc	r27, r26
    1622:	62 0b       	sbc	r22, r18
    1624:	73 0b       	sbc	r23, r19
    1626:	84 0b       	sbc	r24, r20
    1628:	ba f0       	brmi	.+46     	; 0x1658 <__addsf3x+0x98>
    162a:	91 50       	subi	r25, 0x01	; 1
    162c:	a1 f0       	breq	.+40     	; 0x1656 <__addsf3x+0x96>
    162e:	ff 0f       	add	r31, r31
    1630:	bb 1f       	adc	r27, r27
    1632:	66 1f       	adc	r22, r22
    1634:	77 1f       	adc	r23, r23
    1636:	88 1f       	adc	r24, r24
    1638:	c2 f7       	brpl	.-16     	; 0x162a <__addsf3x+0x6a>
    163a:	0e c0       	rjmp	.+28     	; 0x1658 <__addsf3x+0x98>
    163c:	ba 0f       	add	r27, r26
    163e:	62 1f       	adc	r22, r18
    1640:	73 1f       	adc	r23, r19
    1642:	84 1f       	adc	r24, r20
    1644:	48 f4       	brcc	.+18     	; 0x1658 <__addsf3x+0x98>
    1646:	87 95       	ror	r24
    1648:	77 95       	ror	r23
    164a:	67 95       	ror	r22
    164c:	b7 95       	ror	r27
    164e:	f7 95       	ror	r31
    1650:	9e 3f       	cpi	r25, 0xFE	; 254
    1652:	08 f0       	brcs	.+2      	; 0x1656 <__addsf3x+0x96>
    1654:	b3 cf       	rjmp	.-154    	; 0x15bc <__addsf3+0x1e>
    1656:	93 95       	inc	r25
    1658:	88 0f       	add	r24, r24
    165a:	08 f0       	brcs	.+2      	; 0x165e <__addsf3x+0x9e>
    165c:	99 27       	eor	r25, r25
    165e:	ee 0f       	add	r30, r30
    1660:	97 95       	ror	r25
    1662:	87 95       	ror	r24
    1664:	08 95       	ret

00001666 <atan>:
    1666:	df 93       	push	r29
    1668:	dd 27       	eor	r29, r29
    166a:	b9 2f       	mov	r27, r25
    166c:	bf 77       	andi	r27, 0x7F	; 127
    166e:	40 e8       	ldi	r20, 0x80	; 128
    1670:	5f e3       	ldi	r21, 0x3F	; 63
    1672:	16 16       	cp	r1, r22
    1674:	17 06       	cpc	r1, r23
    1676:	48 07       	cpc	r20, r24
    1678:	5b 07       	cpc	r21, r27
    167a:	10 f4       	brcc	.+4      	; 0x1680 <atan+0x1a>
    167c:	d9 2f       	mov	r29, r25
    167e:	a3 d1       	rcall	.+838    	; 0x19c6 <inverse>
    1680:	9f 93       	push	r25
    1682:	8f 93       	push	r24
    1684:	7f 93       	push	r23
    1686:	6f 93       	push	r22
    1688:	08 d2       	rcall	.+1040   	; 0x1a9a <square>
    168a:	ec e8       	ldi	r30, 0x8C	; 140
    168c:	f0 e0       	ldi	r31, 0x00	; 0
    168e:	f5 d0       	rcall	.+490    	; 0x187a <__fp_powser>
    1690:	4f d1       	rcall	.+670    	; 0x1930 <__fp_round>
    1692:	2f 91       	pop	r18
    1694:	3f 91       	pop	r19
    1696:	4f 91       	pop	r20
    1698:	5f 91       	pop	r21
    169a:	a8 d1       	rcall	.+848    	; 0x19ec <__mulsf3x>
    169c:	dd 23       	and	r29, r29
    169e:	49 f0       	breq	.+18     	; 0x16b2 <atan+0x4c>
    16a0:	90 58       	subi	r25, 0x80	; 128
    16a2:	a2 ea       	ldi	r26, 0xA2	; 162
    16a4:	2a ed       	ldi	r18, 0xDA	; 218
    16a6:	3f e0       	ldi	r19, 0x0F	; 15
    16a8:	49 ec       	ldi	r20, 0xC9	; 201
    16aa:	5f e3       	ldi	r21, 0x3F	; 63
    16ac:	d0 78       	andi	r29, 0x80	; 128
    16ae:	5d 27       	eor	r21, r29
    16b0:	87 df       	rcall	.-242    	; 0x15c0 <__addsf3x>
    16b2:	df 91       	pop	r29
    16b4:	3d c1       	rjmp	.+634    	; 0x1930 <__fp_round>

000016b6 <cos>:
    16b6:	15 d1       	rcall	.+554    	; 0x18e2 <__fp_rempio2>
    16b8:	e3 95       	inc	r30
    16ba:	4b c1       	rjmp	.+662    	; 0x1952 <__fp_sinus>

000016bc <__divsf3>:
    16bc:	0c d0       	rcall	.+24     	; 0x16d6 <__divsf3x>
    16be:	38 c1       	rjmp	.+624    	; 0x1930 <__fp_round>
    16c0:	08 d1       	rcall	.+528    	; 0x18d2 <__fp_pscB>
    16c2:	40 f0       	brcs	.+16     	; 0x16d4 <__divsf3+0x18>
    16c4:	ff d0       	rcall	.+510    	; 0x18c4 <__fp_pscA>
    16c6:	30 f0       	brcs	.+12     	; 0x16d4 <__divsf3+0x18>
    16c8:	21 f4       	brne	.+8      	; 0x16d2 <__divsf3+0x16>
    16ca:	5f 3f       	cpi	r21, 0xFF	; 255
    16cc:	19 f0       	breq	.+6      	; 0x16d4 <__divsf3+0x18>
    16ce:	cc c0       	rjmp	.+408    	; 0x1868 <__fp_inf>
    16d0:	51 11       	cpse	r21, r1
    16d2:	73 c1       	rjmp	.+742    	; 0x19ba <__fp_szero>
    16d4:	cf c0       	rjmp	.+414    	; 0x1874 <__fp_nan>

000016d6 <__divsf3x>:
    16d6:	4e d1       	rcall	.+668    	; 0x1974 <__fp_split3>
    16d8:	98 f3       	brcs	.-26     	; 0x16c0 <__divsf3+0x4>

000016da <__divsf3_pse>:
    16da:	99 23       	and	r25, r25
    16dc:	c9 f3       	breq	.-14     	; 0x16d0 <__divsf3+0x14>
    16de:	55 23       	and	r21, r21
    16e0:	b1 f3       	breq	.-20     	; 0x16ce <__divsf3+0x12>
    16e2:	95 1b       	sub	r25, r21
    16e4:	55 0b       	sbc	r21, r21
    16e6:	bb 27       	eor	r27, r27
    16e8:	aa 27       	eor	r26, r26
    16ea:	62 17       	cp	r22, r18
    16ec:	73 07       	cpc	r23, r19
    16ee:	84 07       	cpc	r24, r20
    16f0:	38 f0       	brcs	.+14     	; 0x1700 <__divsf3_pse+0x26>
    16f2:	9f 5f       	subi	r25, 0xFF	; 255
    16f4:	5f 4f       	sbci	r21, 0xFF	; 255
    16f6:	22 0f       	add	r18, r18
    16f8:	33 1f       	adc	r19, r19
    16fa:	44 1f       	adc	r20, r20
    16fc:	aa 1f       	adc	r26, r26
    16fe:	a9 f3       	breq	.-22     	; 0x16ea <__divsf3_pse+0x10>
    1700:	33 d0       	rcall	.+102    	; 0x1768 <__divsf3_pse+0x8e>
    1702:	0e 2e       	mov	r0, r30
    1704:	3a f0       	brmi	.+14     	; 0x1714 <__divsf3_pse+0x3a>
    1706:	e0 e8       	ldi	r30, 0x80	; 128
    1708:	30 d0       	rcall	.+96     	; 0x176a <__divsf3_pse+0x90>
    170a:	91 50       	subi	r25, 0x01	; 1
    170c:	50 40       	sbci	r21, 0x00	; 0
    170e:	e6 95       	lsr	r30
    1710:	00 1c       	adc	r0, r0
    1712:	ca f7       	brpl	.-14     	; 0x1706 <__divsf3_pse+0x2c>
    1714:	29 d0       	rcall	.+82     	; 0x1768 <__divsf3_pse+0x8e>
    1716:	fe 2f       	mov	r31, r30
    1718:	27 d0       	rcall	.+78     	; 0x1768 <__divsf3_pse+0x8e>
    171a:	66 0f       	add	r22, r22
    171c:	77 1f       	adc	r23, r23
    171e:	88 1f       	adc	r24, r24
    1720:	bb 1f       	adc	r27, r27
    1722:	26 17       	cp	r18, r22
    1724:	37 07       	cpc	r19, r23
    1726:	48 07       	cpc	r20, r24
    1728:	ab 07       	cpc	r26, r27
    172a:	b0 e8       	ldi	r27, 0x80	; 128
    172c:	09 f0       	breq	.+2      	; 0x1730 <__divsf3_pse+0x56>
    172e:	bb 0b       	sbc	r27, r27
    1730:	80 2d       	mov	r24, r0
    1732:	bf 01       	movw	r22, r30
    1734:	ff 27       	eor	r31, r31
    1736:	93 58       	subi	r25, 0x83	; 131
    1738:	5f 4f       	sbci	r21, 0xFF	; 255
    173a:	2a f0       	brmi	.+10     	; 0x1746 <__divsf3_pse+0x6c>
    173c:	9e 3f       	cpi	r25, 0xFE	; 254
    173e:	51 05       	cpc	r21, r1
    1740:	68 f0       	brcs	.+26     	; 0x175c <__divsf3_pse+0x82>
    1742:	92 c0       	rjmp	.+292    	; 0x1868 <__fp_inf>
    1744:	3a c1       	rjmp	.+628    	; 0x19ba <__fp_szero>
    1746:	5f 3f       	cpi	r21, 0xFF	; 255
    1748:	ec f3       	brlt	.-6      	; 0x1744 <__divsf3_pse+0x6a>
    174a:	98 3e       	cpi	r25, 0xE8	; 232
    174c:	dc f3       	brlt	.-10     	; 0x1744 <__divsf3_pse+0x6a>
    174e:	86 95       	lsr	r24
    1750:	77 95       	ror	r23
    1752:	67 95       	ror	r22
    1754:	b7 95       	ror	r27
    1756:	f7 95       	ror	r31
    1758:	9f 5f       	subi	r25, 0xFF	; 255
    175a:	c9 f7       	brne	.-14     	; 0x174e <__divsf3_pse+0x74>
    175c:	88 0f       	add	r24, r24
    175e:	91 1d       	adc	r25, r1
    1760:	96 95       	lsr	r25
    1762:	87 95       	ror	r24
    1764:	97 f9       	bld	r25, 7
    1766:	08 95       	ret
    1768:	e1 e0       	ldi	r30, 0x01	; 1
    176a:	66 0f       	add	r22, r22
    176c:	77 1f       	adc	r23, r23
    176e:	88 1f       	adc	r24, r24
    1770:	bb 1f       	adc	r27, r27
    1772:	62 17       	cp	r22, r18
    1774:	73 07       	cpc	r23, r19
    1776:	84 07       	cpc	r24, r20
    1778:	ba 07       	cpc	r27, r26
    177a:	20 f0       	brcs	.+8      	; 0x1784 <__divsf3_pse+0xaa>
    177c:	62 1b       	sub	r22, r18
    177e:	73 0b       	sbc	r23, r19
    1780:	84 0b       	sbc	r24, r20
    1782:	ba 0b       	sbc	r27, r26
    1784:	ee 1f       	adc	r30, r30
    1786:	88 f7       	brcc	.-30     	; 0x176a <__divsf3_pse+0x90>
    1788:	e0 95       	com	r30
    178a:	08 95       	ret

0000178c <__fixsfsi>:
    178c:	04 d0       	rcall	.+8      	; 0x1796 <__fixunssfsi>
    178e:	68 94       	set
    1790:	b1 11       	cpse	r27, r1
    1792:	13 c1       	rjmp	.+550    	; 0x19ba <__fp_szero>
    1794:	08 95       	ret

00001796 <__fixunssfsi>:
    1796:	f6 d0       	rcall	.+492    	; 0x1984 <__fp_splitA>
    1798:	88 f0       	brcs	.+34     	; 0x17bc <__fixunssfsi+0x26>
    179a:	9f 57       	subi	r25, 0x7F	; 127
    179c:	90 f0       	brcs	.+36     	; 0x17c2 <__fixunssfsi+0x2c>
    179e:	b9 2f       	mov	r27, r25
    17a0:	99 27       	eor	r25, r25
    17a2:	b7 51       	subi	r27, 0x17	; 23
    17a4:	a0 f0       	brcs	.+40     	; 0x17ce <__fixunssfsi+0x38>
    17a6:	d1 f0       	breq	.+52     	; 0x17dc <__fixunssfsi+0x46>
    17a8:	66 0f       	add	r22, r22
    17aa:	77 1f       	adc	r23, r23
    17ac:	88 1f       	adc	r24, r24
    17ae:	99 1f       	adc	r25, r25
    17b0:	1a f0       	brmi	.+6      	; 0x17b8 <__fixunssfsi+0x22>
    17b2:	ba 95       	dec	r27
    17b4:	c9 f7       	brne	.-14     	; 0x17a8 <__fixunssfsi+0x12>
    17b6:	12 c0       	rjmp	.+36     	; 0x17dc <__fixunssfsi+0x46>
    17b8:	b1 30       	cpi	r27, 0x01	; 1
    17ba:	81 f0       	breq	.+32     	; 0x17dc <__fixunssfsi+0x46>
    17bc:	fd d0       	rcall	.+506    	; 0x19b8 <__fp_zero>
    17be:	b1 e0       	ldi	r27, 0x01	; 1
    17c0:	08 95       	ret
    17c2:	fa c0       	rjmp	.+500    	; 0x19b8 <__fp_zero>
    17c4:	67 2f       	mov	r22, r23
    17c6:	78 2f       	mov	r23, r24
    17c8:	88 27       	eor	r24, r24
    17ca:	b8 5f       	subi	r27, 0xF8	; 248
    17cc:	39 f0       	breq	.+14     	; 0x17dc <__fixunssfsi+0x46>
    17ce:	b9 3f       	cpi	r27, 0xF9	; 249
    17d0:	cc f3       	brlt	.-14     	; 0x17c4 <__fixunssfsi+0x2e>
    17d2:	86 95       	lsr	r24
    17d4:	77 95       	ror	r23
    17d6:	67 95       	ror	r22
    17d8:	b3 95       	inc	r27
    17da:	d9 f7       	brne	.-10     	; 0x17d2 <__fixunssfsi+0x3c>
    17dc:	3e f4       	brtc	.+14     	; 0x17ec <__fixunssfsi+0x56>
    17de:	90 95       	com	r25
    17e0:	80 95       	com	r24
    17e2:	70 95       	com	r23
    17e4:	61 95       	neg	r22
    17e6:	7f 4f       	sbci	r23, 0xFF	; 255
    17e8:	8f 4f       	sbci	r24, 0xFF	; 255
    17ea:	9f 4f       	sbci	r25, 0xFF	; 255
    17ec:	08 95       	ret

000017ee <__floatunsisf>:
    17ee:	e8 94       	clt
    17f0:	09 c0       	rjmp	.+18     	; 0x1804 <__floatsisf+0x12>

000017f2 <__floatsisf>:
    17f2:	97 fb       	bst	r25, 7
    17f4:	3e f4       	brtc	.+14     	; 0x1804 <__floatsisf+0x12>
    17f6:	90 95       	com	r25
    17f8:	80 95       	com	r24
    17fa:	70 95       	com	r23
    17fc:	61 95       	neg	r22
    17fe:	7f 4f       	sbci	r23, 0xFF	; 255
    1800:	8f 4f       	sbci	r24, 0xFF	; 255
    1802:	9f 4f       	sbci	r25, 0xFF	; 255
    1804:	99 23       	and	r25, r25
    1806:	a9 f0       	breq	.+42     	; 0x1832 <__floatsisf+0x40>
    1808:	f9 2f       	mov	r31, r25
    180a:	96 e9       	ldi	r25, 0x96	; 150
    180c:	bb 27       	eor	r27, r27
    180e:	93 95       	inc	r25
    1810:	f6 95       	lsr	r31
    1812:	87 95       	ror	r24
    1814:	77 95       	ror	r23
    1816:	67 95       	ror	r22
    1818:	b7 95       	ror	r27
    181a:	f1 11       	cpse	r31, r1
    181c:	f8 cf       	rjmp	.-16     	; 0x180e <__floatsisf+0x1c>
    181e:	fa f4       	brpl	.+62     	; 0x185e <__floatsisf+0x6c>
    1820:	bb 0f       	add	r27, r27
    1822:	11 f4       	brne	.+4      	; 0x1828 <__floatsisf+0x36>
    1824:	60 ff       	sbrs	r22, 0
    1826:	1b c0       	rjmp	.+54     	; 0x185e <__floatsisf+0x6c>
    1828:	6f 5f       	subi	r22, 0xFF	; 255
    182a:	7f 4f       	sbci	r23, 0xFF	; 255
    182c:	8f 4f       	sbci	r24, 0xFF	; 255
    182e:	9f 4f       	sbci	r25, 0xFF	; 255
    1830:	16 c0       	rjmp	.+44     	; 0x185e <__floatsisf+0x6c>
    1832:	88 23       	and	r24, r24
    1834:	11 f0       	breq	.+4      	; 0x183a <__floatsisf+0x48>
    1836:	96 e9       	ldi	r25, 0x96	; 150
    1838:	11 c0       	rjmp	.+34     	; 0x185c <__floatsisf+0x6a>
    183a:	77 23       	and	r23, r23
    183c:	21 f0       	breq	.+8      	; 0x1846 <__floatsisf+0x54>
    183e:	9e e8       	ldi	r25, 0x8E	; 142
    1840:	87 2f       	mov	r24, r23
    1842:	76 2f       	mov	r23, r22
    1844:	05 c0       	rjmp	.+10     	; 0x1850 <__floatsisf+0x5e>
    1846:	66 23       	and	r22, r22
    1848:	71 f0       	breq	.+28     	; 0x1866 <__floatsisf+0x74>
    184a:	96 e8       	ldi	r25, 0x86	; 134
    184c:	86 2f       	mov	r24, r22
    184e:	70 e0       	ldi	r23, 0x00	; 0
    1850:	60 e0       	ldi	r22, 0x00	; 0
    1852:	2a f0       	brmi	.+10     	; 0x185e <__floatsisf+0x6c>
    1854:	9a 95       	dec	r25
    1856:	66 0f       	add	r22, r22
    1858:	77 1f       	adc	r23, r23
    185a:	88 1f       	adc	r24, r24
    185c:	da f7       	brpl	.-10     	; 0x1854 <__floatsisf+0x62>
    185e:	88 0f       	add	r24, r24
    1860:	96 95       	lsr	r25
    1862:	87 95       	ror	r24
    1864:	97 f9       	bld	r25, 7
    1866:	08 95       	ret

00001868 <__fp_inf>:
    1868:	97 f9       	bld	r25, 7
    186a:	9f 67       	ori	r25, 0x7F	; 127
    186c:	80 e8       	ldi	r24, 0x80	; 128
    186e:	70 e0       	ldi	r23, 0x00	; 0
    1870:	60 e0       	ldi	r22, 0x00	; 0
    1872:	08 95       	ret

00001874 <__fp_nan>:
    1874:	9f ef       	ldi	r25, 0xFF	; 255
    1876:	80 ec       	ldi	r24, 0xC0	; 192
    1878:	08 95       	ret

0000187a <__fp_powser>:
    187a:	df 93       	push	r29
    187c:	cf 93       	push	r28
    187e:	1f 93       	push	r17
    1880:	0f 93       	push	r16
    1882:	ff 92       	push	r15
    1884:	ef 92       	push	r14
    1886:	df 92       	push	r13
    1888:	7b 01       	movw	r14, r22
    188a:	8c 01       	movw	r16, r24
    188c:	68 94       	set
    188e:	05 c0       	rjmp	.+10     	; 0x189a <__fp_powser+0x20>
    1890:	da 2e       	mov	r13, r26
    1892:	ef 01       	movw	r28, r30
    1894:	ab d0       	rcall	.+342    	; 0x19ec <__mulsf3x>
    1896:	fe 01       	movw	r30, r28
    1898:	e8 94       	clt
    189a:	a5 91       	lpm	r26, Z+
    189c:	25 91       	lpm	r18, Z+
    189e:	35 91       	lpm	r19, Z+
    18a0:	45 91       	lpm	r20, Z+
    18a2:	55 91       	lpm	r21, Z+
    18a4:	ae f3       	brts	.-22     	; 0x1890 <__fp_powser+0x16>
    18a6:	ef 01       	movw	r28, r30
    18a8:	8b de       	rcall	.-746    	; 0x15c0 <__addsf3x>
    18aa:	fe 01       	movw	r30, r28
    18ac:	97 01       	movw	r18, r14
    18ae:	a8 01       	movw	r20, r16
    18b0:	da 94       	dec	r13
    18b2:	79 f7       	brne	.-34     	; 0x1892 <__fp_powser+0x18>
    18b4:	df 90       	pop	r13
    18b6:	ef 90       	pop	r14
    18b8:	ff 90       	pop	r15
    18ba:	0f 91       	pop	r16
    18bc:	1f 91       	pop	r17
    18be:	cf 91       	pop	r28
    18c0:	df 91       	pop	r29
    18c2:	08 95       	ret

000018c4 <__fp_pscA>:
    18c4:	00 24       	eor	r0, r0
    18c6:	0a 94       	dec	r0
    18c8:	16 16       	cp	r1, r22
    18ca:	17 06       	cpc	r1, r23
    18cc:	18 06       	cpc	r1, r24
    18ce:	09 06       	cpc	r0, r25
    18d0:	08 95       	ret

000018d2 <__fp_pscB>:
    18d2:	00 24       	eor	r0, r0
    18d4:	0a 94       	dec	r0
    18d6:	12 16       	cp	r1, r18
    18d8:	13 06       	cpc	r1, r19
    18da:	14 06       	cpc	r1, r20
    18dc:	05 06       	cpc	r0, r21
    18de:	08 95       	ret
    18e0:	c9 cf       	rjmp	.-110    	; 0x1874 <__fp_nan>

000018e2 <__fp_rempio2>:
    18e2:	50 d0       	rcall	.+160    	; 0x1984 <__fp_splitA>
    18e4:	e8 f3       	brcs	.-6      	; 0x18e0 <__fp_pscB+0xe>
    18e6:	e8 94       	clt
    18e8:	e0 e0       	ldi	r30, 0x00	; 0
    18ea:	bb 27       	eor	r27, r27
    18ec:	9f 57       	subi	r25, 0x7F	; 127
    18ee:	f0 f0       	brcs	.+60     	; 0x192c <__fp_rempio2+0x4a>
    18f0:	2a ed       	ldi	r18, 0xDA	; 218
    18f2:	3f e0       	ldi	r19, 0x0F	; 15
    18f4:	49 ec       	ldi	r20, 0xC9	; 201
    18f6:	06 c0       	rjmp	.+12     	; 0x1904 <__fp_rempio2+0x22>
    18f8:	ee 0f       	add	r30, r30
    18fa:	bb 0f       	add	r27, r27
    18fc:	66 1f       	adc	r22, r22
    18fe:	77 1f       	adc	r23, r23
    1900:	88 1f       	adc	r24, r24
    1902:	28 f0       	brcs	.+10     	; 0x190e <__fp_rempio2+0x2c>
    1904:	b2 3a       	cpi	r27, 0xA2	; 162
    1906:	62 07       	cpc	r22, r18
    1908:	73 07       	cpc	r23, r19
    190a:	84 07       	cpc	r24, r20
    190c:	28 f0       	brcs	.+10     	; 0x1918 <__fp_rempio2+0x36>
    190e:	b2 5a       	subi	r27, 0xA2	; 162
    1910:	62 0b       	sbc	r22, r18
    1912:	73 0b       	sbc	r23, r19
    1914:	84 0b       	sbc	r24, r20
    1916:	e3 95       	inc	r30
    1918:	9a 95       	dec	r25
    191a:	72 f7       	brpl	.-36     	; 0x18f8 <__fp_rempio2+0x16>
    191c:	80 38       	cpi	r24, 0x80	; 128
    191e:	30 f4       	brcc	.+12     	; 0x192c <__fp_rempio2+0x4a>
    1920:	9a 95       	dec	r25
    1922:	bb 0f       	add	r27, r27
    1924:	66 1f       	adc	r22, r22
    1926:	77 1f       	adc	r23, r23
    1928:	88 1f       	adc	r24, r24
    192a:	d2 f7       	brpl	.-12     	; 0x1920 <__fp_rempio2+0x3e>
    192c:	90 48       	sbci	r25, 0x80	; 128
    192e:	ba c0       	rjmp	.+372    	; 0x1aa4 <__fp_mpack_finite>

00001930 <__fp_round>:
    1930:	09 2e       	mov	r0, r25
    1932:	03 94       	inc	r0
    1934:	00 0c       	add	r0, r0
    1936:	11 f4       	brne	.+4      	; 0x193c <__fp_round+0xc>
    1938:	88 23       	and	r24, r24
    193a:	52 f0       	brmi	.+20     	; 0x1950 <__fp_round+0x20>
    193c:	bb 0f       	add	r27, r27
    193e:	40 f4       	brcc	.+16     	; 0x1950 <__fp_round+0x20>
    1940:	bf 2b       	or	r27, r31
    1942:	11 f4       	brne	.+4      	; 0x1948 <__fp_round+0x18>
    1944:	60 ff       	sbrs	r22, 0
    1946:	04 c0       	rjmp	.+8      	; 0x1950 <__fp_round+0x20>
    1948:	6f 5f       	subi	r22, 0xFF	; 255
    194a:	7f 4f       	sbci	r23, 0xFF	; 255
    194c:	8f 4f       	sbci	r24, 0xFF	; 255
    194e:	9f 4f       	sbci	r25, 0xFF	; 255
    1950:	08 95       	ret

00001952 <__fp_sinus>:
    1952:	ef 93       	push	r30
    1954:	e0 ff       	sbrs	r30, 0
    1956:	06 c0       	rjmp	.+12     	; 0x1964 <__fp_sinus+0x12>
    1958:	a2 ea       	ldi	r26, 0xA2	; 162
    195a:	2a ed       	ldi	r18, 0xDA	; 218
    195c:	3f e0       	ldi	r19, 0x0F	; 15
    195e:	49 ec       	ldi	r20, 0xC9	; 201
    1960:	5f eb       	ldi	r21, 0xBF	; 191
    1962:	2e de       	rcall	.-932    	; 0x15c0 <__addsf3x>
    1964:	e5 df       	rcall	.-54     	; 0x1930 <__fp_round>
    1966:	0f 90       	pop	r0
    1968:	03 94       	inc	r0
    196a:	01 fc       	sbrc	r0, 1
    196c:	90 58       	subi	r25, 0x80	; 128
    196e:	e9 eb       	ldi	r30, 0xB9	; 185
    1970:	f0 e0       	ldi	r31, 0x00	; 0
    1972:	a4 c0       	rjmp	.+328    	; 0x1abc <__fp_powsodd>

00001974 <__fp_split3>:
    1974:	57 fd       	sbrc	r21, 7
    1976:	90 58       	subi	r25, 0x80	; 128
    1978:	44 0f       	add	r20, r20
    197a:	55 1f       	adc	r21, r21
    197c:	59 f0       	breq	.+22     	; 0x1994 <__fp_splitA+0x10>
    197e:	5f 3f       	cpi	r21, 0xFF	; 255
    1980:	71 f0       	breq	.+28     	; 0x199e <__fp_splitA+0x1a>
    1982:	47 95       	ror	r20

00001984 <__fp_splitA>:
    1984:	88 0f       	add	r24, r24
    1986:	97 fb       	bst	r25, 7
    1988:	99 1f       	adc	r25, r25
    198a:	61 f0       	breq	.+24     	; 0x19a4 <__fp_splitA+0x20>
    198c:	9f 3f       	cpi	r25, 0xFF	; 255
    198e:	79 f0       	breq	.+30     	; 0x19ae <__fp_splitA+0x2a>
    1990:	87 95       	ror	r24
    1992:	08 95       	ret
    1994:	12 16       	cp	r1, r18
    1996:	13 06       	cpc	r1, r19
    1998:	14 06       	cpc	r1, r20
    199a:	55 1f       	adc	r21, r21
    199c:	f2 cf       	rjmp	.-28     	; 0x1982 <__fp_split3+0xe>
    199e:	46 95       	lsr	r20
    19a0:	f1 df       	rcall	.-30     	; 0x1984 <__fp_splitA>
    19a2:	08 c0       	rjmp	.+16     	; 0x19b4 <__fp_splitA+0x30>
    19a4:	16 16       	cp	r1, r22
    19a6:	17 06       	cpc	r1, r23
    19a8:	18 06       	cpc	r1, r24
    19aa:	99 1f       	adc	r25, r25
    19ac:	f1 cf       	rjmp	.-30     	; 0x1990 <__fp_splitA+0xc>
    19ae:	86 95       	lsr	r24
    19b0:	71 05       	cpc	r23, r1
    19b2:	61 05       	cpc	r22, r1
    19b4:	08 94       	sec
    19b6:	08 95       	ret

000019b8 <__fp_zero>:
    19b8:	e8 94       	clt

000019ba <__fp_szero>:
    19ba:	bb 27       	eor	r27, r27
    19bc:	66 27       	eor	r22, r22
    19be:	77 27       	eor	r23, r23
    19c0:	cb 01       	movw	r24, r22
    19c2:	97 f9       	bld	r25, 7
    19c4:	08 95       	ret

000019c6 <inverse>:
    19c6:	9b 01       	movw	r18, r22
    19c8:	ac 01       	movw	r20, r24
    19ca:	60 e0       	ldi	r22, 0x00	; 0
    19cc:	70 e0       	ldi	r23, 0x00	; 0
    19ce:	80 e8       	ldi	r24, 0x80	; 128
    19d0:	9f e3       	ldi	r25, 0x3F	; 63
    19d2:	74 ce       	rjmp	.-792    	; 0x16bc <__divsf3>

000019d4 <__mulsf3>:
    19d4:	0b d0       	rcall	.+22     	; 0x19ec <__mulsf3x>
    19d6:	ac cf       	rjmp	.-168    	; 0x1930 <__fp_round>
    19d8:	75 df       	rcall	.-278    	; 0x18c4 <__fp_pscA>
    19da:	28 f0       	brcs	.+10     	; 0x19e6 <__mulsf3+0x12>
    19dc:	7a df       	rcall	.-268    	; 0x18d2 <__fp_pscB>
    19de:	18 f0       	brcs	.+6      	; 0x19e6 <__mulsf3+0x12>
    19e0:	95 23       	and	r25, r21
    19e2:	09 f0       	breq	.+2      	; 0x19e6 <__mulsf3+0x12>
    19e4:	41 cf       	rjmp	.-382    	; 0x1868 <__fp_inf>
    19e6:	46 cf       	rjmp	.-372    	; 0x1874 <__fp_nan>
    19e8:	11 24       	eor	r1, r1
    19ea:	e7 cf       	rjmp	.-50     	; 0x19ba <__fp_szero>

000019ec <__mulsf3x>:
    19ec:	c3 df       	rcall	.-122    	; 0x1974 <__fp_split3>
    19ee:	a0 f3       	brcs	.-24     	; 0x19d8 <__mulsf3+0x4>

000019f0 <__mulsf3_pse>:
    19f0:	95 9f       	mul	r25, r21
    19f2:	d1 f3       	breq	.-12     	; 0x19e8 <__mulsf3+0x14>
    19f4:	95 0f       	add	r25, r21
    19f6:	50 e0       	ldi	r21, 0x00	; 0
    19f8:	55 1f       	adc	r21, r21
    19fa:	62 9f       	mul	r22, r18
    19fc:	f0 01       	movw	r30, r0
    19fe:	72 9f       	mul	r23, r18
    1a00:	bb 27       	eor	r27, r27
    1a02:	f0 0d       	add	r31, r0
    1a04:	b1 1d       	adc	r27, r1
    1a06:	63 9f       	mul	r22, r19
    1a08:	aa 27       	eor	r26, r26
    1a0a:	f0 0d       	add	r31, r0
    1a0c:	b1 1d       	adc	r27, r1
    1a0e:	aa 1f       	adc	r26, r26
    1a10:	64 9f       	mul	r22, r20
    1a12:	66 27       	eor	r22, r22
    1a14:	b0 0d       	add	r27, r0
    1a16:	a1 1d       	adc	r26, r1
    1a18:	66 1f       	adc	r22, r22
    1a1a:	82 9f       	mul	r24, r18
    1a1c:	22 27       	eor	r18, r18
    1a1e:	b0 0d       	add	r27, r0
    1a20:	a1 1d       	adc	r26, r1
    1a22:	62 1f       	adc	r22, r18
    1a24:	73 9f       	mul	r23, r19
    1a26:	b0 0d       	add	r27, r0
    1a28:	a1 1d       	adc	r26, r1
    1a2a:	62 1f       	adc	r22, r18
    1a2c:	83 9f       	mul	r24, r19
    1a2e:	a0 0d       	add	r26, r0
    1a30:	61 1d       	adc	r22, r1
    1a32:	22 1f       	adc	r18, r18
    1a34:	74 9f       	mul	r23, r20
    1a36:	33 27       	eor	r19, r19
    1a38:	a0 0d       	add	r26, r0
    1a3a:	61 1d       	adc	r22, r1
    1a3c:	23 1f       	adc	r18, r19
    1a3e:	84 9f       	mul	r24, r20
    1a40:	60 0d       	add	r22, r0
    1a42:	21 1d       	adc	r18, r1
    1a44:	82 2f       	mov	r24, r18
    1a46:	76 2f       	mov	r23, r22
    1a48:	6a 2f       	mov	r22, r26
    1a4a:	11 24       	eor	r1, r1
    1a4c:	9f 57       	subi	r25, 0x7F	; 127
    1a4e:	50 40       	sbci	r21, 0x00	; 0
    1a50:	8a f0       	brmi	.+34     	; 0x1a74 <__mulsf3_pse+0x84>
    1a52:	e1 f0       	breq	.+56     	; 0x1a8c <__mulsf3_pse+0x9c>
    1a54:	88 23       	and	r24, r24
    1a56:	4a f0       	brmi	.+18     	; 0x1a6a <__mulsf3_pse+0x7a>
    1a58:	ee 0f       	add	r30, r30
    1a5a:	ff 1f       	adc	r31, r31
    1a5c:	bb 1f       	adc	r27, r27
    1a5e:	66 1f       	adc	r22, r22
    1a60:	77 1f       	adc	r23, r23
    1a62:	88 1f       	adc	r24, r24
    1a64:	91 50       	subi	r25, 0x01	; 1
    1a66:	50 40       	sbci	r21, 0x00	; 0
    1a68:	a9 f7       	brne	.-22     	; 0x1a54 <__mulsf3_pse+0x64>
    1a6a:	9e 3f       	cpi	r25, 0xFE	; 254
    1a6c:	51 05       	cpc	r21, r1
    1a6e:	70 f0       	brcs	.+28     	; 0x1a8c <__mulsf3_pse+0x9c>
    1a70:	fb ce       	rjmp	.-522    	; 0x1868 <__fp_inf>
    1a72:	a3 cf       	rjmp	.-186    	; 0x19ba <__fp_szero>
    1a74:	5f 3f       	cpi	r21, 0xFF	; 255
    1a76:	ec f3       	brlt	.-6      	; 0x1a72 <__mulsf3_pse+0x82>
    1a78:	98 3e       	cpi	r25, 0xE8	; 232
    1a7a:	dc f3       	brlt	.-10     	; 0x1a72 <__mulsf3_pse+0x82>
    1a7c:	86 95       	lsr	r24
    1a7e:	77 95       	ror	r23
    1a80:	67 95       	ror	r22
    1a82:	b7 95       	ror	r27
    1a84:	f7 95       	ror	r31
    1a86:	e7 95       	ror	r30
    1a88:	9f 5f       	subi	r25, 0xFF	; 255
    1a8a:	c1 f7       	brne	.-16     	; 0x1a7c <__mulsf3_pse+0x8c>
    1a8c:	fe 2b       	or	r31, r30
    1a8e:	88 0f       	add	r24, r24
    1a90:	91 1d       	adc	r25, r1
    1a92:	96 95       	lsr	r25
    1a94:	87 95       	ror	r24
    1a96:	97 f9       	bld	r25, 7
    1a98:	08 95       	ret

00001a9a <square>:
    1a9a:	9b 01       	movw	r18, r22
    1a9c:	ac 01       	movw	r20, r24
    1a9e:	9a cf       	rjmp	.-204    	; 0x19d4 <__mulsf3>

00001aa0 <__fp_mpack>:
    1aa0:	9f 3f       	cpi	r25, 0xFF	; 255
    1aa2:	31 f0       	breq	.+12     	; 0x1ab0 <__fp_mpack_finite+0xc>

00001aa4 <__fp_mpack_finite>:
    1aa4:	91 50       	subi	r25, 0x01	; 1
    1aa6:	20 f4       	brcc	.+8      	; 0x1ab0 <__fp_mpack_finite+0xc>
    1aa8:	87 95       	ror	r24
    1aaa:	77 95       	ror	r23
    1aac:	67 95       	ror	r22
    1aae:	b7 95       	ror	r27
    1ab0:	88 0f       	add	r24, r24
    1ab2:	91 1d       	adc	r25, r1
    1ab4:	96 95       	lsr	r25
    1ab6:	87 95       	ror	r24
    1ab8:	97 f9       	bld	r25, 7
    1aba:	08 95       	ret

00001abc <__fp_powsodd>:
    1abc:	9f 93       	push	r25
    1abe:	8f 93       	push	r24
    1ac0:	7f 93       	push	r23
    1ac2:	6f 93       	push	r22
    1ac4:	ff 93       	push	r31
    1ac6:	ef 93       	push	r30
    1ac8:	9b 01       	movw	r18, r22
    1aca:	ac 01       	movw	r20, r24
    1acc:	83 df       	rcall	.-250    	; 0x19d4 <__mulsf3>
    1ace:	ef 91       	pop	r30
    1ad0:	ff 91       	pop	r31
    1ad2:	d3 de       	rcall	.-602    	; 0x187a <__fp_powser>
    1ad4:	2f 91       	pop	r18
    1ad6:	3f 91       	pop	r19
    1ad8:	4f 91       	pop	r20
    1ada:	5f 91       	pop	r21
    1adc:	7b cf       	rjmp	.-266    	; 0x19d4 <__mulsf3>

00001ade <__divmodhi4>:
    1ade:	97 fb       	bst	r25, 7
    1ae0:	07 2e       	mov	r0, r23
    1ae2:	16 f4       	brtc	.+4      	; 0x1ae8 <__divmodhi4+0xa>
    1ae4:	00 94       	com	r0
    1ae6:	06 d0       	rcall	.+12     	; 0x1af4 <__divmodhi4_neg1>
    1ae8:	77 fd       	sbrc	r23, 7
    1aea:	08 d0       	rcall	.+16     	; 0x1afc <__divmodhi4_neg2>
    1aec:	0b d0       	rcall	.+22     	; 0x1b04 <__udivmodhi4>
    1aee:	07 fc       	sbrc	r0, 7
    1af0:	05 d0       	rcall	.+10     	; 0x1afc <__divmodhi4_neg2>
    1af2:	3e f4       	brtc	.+14     	; 0x1b02 <__divmodhi4_exit>

00001af4 <__divmodhi4_neg1>:
    1af4:	90 95       	com	r25
    1af6:	81 95       	neg	r24
    1af8:	9f 4f       	sbci	r25, 0xFF	; 255
    1afa:	08 95       	ret

00001afc <__divmodhi4_neg2>:
    1afc:	70 95       	com	r23
    1afe:	61 95       	neg	r22
    1b00:	7f 4f       	sbci	r23, 0xFF	; 255

00001b02 <__divmodhi4_exit>:
    1b02:	08 95       	ret

00001b04 <__udivmodhi4>:
    1b04:	aa 1b       	sub	r26, r26
    1b06:	bb 1b       	sub	r27, r27
    1b08:	51 e1       	ldi	r21, 0x11	; 17
    1b0a:	07 c0       	rjmp	.+14     	; 0x1b1a <__udivmodhi4_ep>

00001b0c <__udivmodhi4_loop>:
    1b0c:	aa 1f       	adc	r26, r26
    1b0e:	bb 1f       	adc	r27, r27
    1b10:	a6 17       	cp	r26, r22
    1b12:	b7 07       	cpc	r27, r23
    1b14:	10 f0       	brcs	.+4      	; 0x1b1a <__udivmodhi4_ep>
    1b16:	a6 1b       	sub	r26, r22
    1b18:	b7 0b       	sbc	r27, r23

00001b1a <__udivmodhi4_ep>:
    1b1a:	88 1f       	adc	r24, r24
    1b1c:	99 1f       	adc	r25, r25
    1b1e:	5a 95       	dec	r21
    1b20:	a9 f7       	brne	.-22     	; 0x1b0c <__udivmodhi4_loop>
    1b22:	80 95       	com	r24
    1b24:	90 95       	com	r25
    1b26:	bc 01       	movw	r22, r24
    1b28:	cd 01       	movw	r24, r26
    1b2a:	08 95       	ret

00001b2c <swapfunc>:
    1b2c:	fb 01       	movw	r30, r22
    1b2e:	dc 01       	movw	r26, r24
    1b30:	ca 01       	movw	r24, r20
    1b32:	2c 91       	ld	r18, X
    1b34:	30 81       	ld	r19, Z
    1b36:	3d 93       	st	X+, r19
    1b38:	21 93       	st	Z+, r18
    1b3a:	01 97       	sbiw	r24, 0x01	; 1
    1b3c:	18 16       	cp	r1, r24
    1b3e:	19 06       	cpc	r1, r25
    1b40:	c4 f3       	brlt	.-16     	; 0x1b32 <swapfunc+0x6>
    1b42:	08 95       	ret

00001b44 <med3>:
    1b44:	cf 92       	push	r12
    1b46:	df 92       	push	r13
    1b48:	ef 92       	push	r14
    1b4a:	ff 92       	push	r15
    1b4c:	0f 93       	push	r16
    1b4e:	1f 93       	push	r17
    1b50:	cf 93       	push	r28
    1b52:	df 93       	push	r29
    1b54:	6c 01       	movw	r12, r24
    1b56:	8b 01       	movw	r16, r22
    1b58:	7a 01       	movw	r14, r20
    1b5a:	e9 01       	movw	r28, r18
    1b5c:	f9 01       	movw	r30, r18
    1b5e:	09 95       	icall
    1b60:	b7 01       	movw	r22, r14
    1b62:	97 ff       	sbrs	r25, 7
    1b64:	0c c0       	rjmp	.+24     	; 0x1b7e <med3+0x3a>
    1b66:	c8 01       	movw	r24, r16
    1b68:	fe 01       	movw	r30, r28
    1b6a:	09 95       	icall
    1b6c:	97 fd       	sbrc	r25, 7
    1b6e:	16 c0       	rjmp	.+44     	; 0x1b9c <med3+0x58>
    1b70:	b7 01       	movw	r22, r14
    1b72:	c6 01       	movw	r24, r12
    1b74:	fe 01       	movw	r30, r28
    1b76:	09 95       	icall
    1b78:	97 ff       	sbrs	r25, 7
    1b7a:	0d c0       	rjmp	.+26     	; 0x1b96 <med3+0x52>
    1b7c:	0e c0       	rjmp	.+28     	; 0x1b9a <med3+0x56>
    1b7e:	c8 01       	movw	r24, r16
    1b80:	fe 01       	movw	r30, r28
    1b82:	09 95       	icall
    1b84:	18 16       	cp	r1, r24
    1b86:	19 06       	cpc	r1, r25
    1b88:	4c f0       	brlt	.+18     	; 0x1b9c <med3+0x58>
    1b8a:	b7 01       	movw	r22, r14
    1b8c:	c6 01       	movw	r24, r12
    1b8e:	fe 01       	movw	r30, r28
    1b90:	09 95       	icall
    1b92:	97 ff       	sbrs	r25, 7
    1b94:	02 c0       	rjmp	.+4      	; 0x1b9a <med3+0x56>
    1b96:	86 01       	movw	r16, r12
    1b98:	01 c0       	rjmp	.+2      	; 0x1b9c <med3+0x58>
    1b9a:	87 01       	movw	r16, r14
    1b9c:	c8 01       	movw	r24, r16
    1b9e:	df 91       	pop	r29
    1ba0:	cf 91       	pop	r28
    1ba2:	1f 91       	pop	r17
    1ba4:	0f 91       	pop	r16
    1ba6:	ff 90       	pop	r15
    1ba8:	ef 90       	pop	r14
    1baa:	df 90       	pop	r13
    1bac:	cf 90       	pop	r12
    1bae:	08 95       	ret

00001bb0 <qsort>:
    1bb0:	2f 92       	push	r2
    1bb2:	3f 92       	push	r3
    1bb4:	4f 92       	push	r4
    1bb6:	5f 92       	push	r5
    1bb8:	6f 92       	push	r6
    1bba:	7f 92       	push	r7
    1bbc:	8f 92       	push	r8
    1bbe:	9f 92       	push	r9
    1bc0:	af 92       	push	r10
    1bc2:	bf 92       	push	r11
    1bc4:	cf 92       	push	r12
    1bc6:	df 92       	push	r13
    1bc8:	ef 92       	push	r14
    1bca:	ff 92       	push	r15
    1bcc:	0f 93       	push	r16
    1bce:	1f 93       	push	r17
    1bd0:	cf 93       	push	r28
    1bd2:	df 93       	push	r29
    1bd4:	cd b7       	in	r28, 0x3d	; 61
    1bd6:	de b7       	in	r29, 0x3e	; 62
    1bd8:	28 97       	sbiw	r28, 0x08	; 8
    1bda:	0f b6       	in	r0, 0x3f	; 63
    1bdc:	f8 94       	cli
    1bde:	de bf       	out	0x3e, r29	; 62
    1be0:	0f be       	out	0x3f, r0	; 63
    1be2:	cd bf       	out	0x3d, r28	; 61
    1be4:	8c 01       	movw	r16, r24
    1be6:	6b 01       	movw	r12, r22
    1be8:	58 87       	std	Y+8, r21	; 0x08
    1bea:	4f 83       	std	Y+7, r20	; 0x07
    1bec:	59 01       	movw	r10, r18
    1bee:	4b 83       	std	Y+3, r20	; 0x03
    1bf0:	5c 83       	std	Y+4, r21	; 0x04
    1bf2:	27 e0       	ldi	r18, 0x07	; 7
    1bf4:	c2 16       	cp	r12, r18
    1bf6:	d1 04       	cpc	r13, r1
    1bf8:	88 f5       	brcc	.+98     	; 0x1c5c <qsort+0xac>
    1bfa:	ef 80       	ldd	r14, Y+7	; 0x07
    1bfc:	f8 84       	ldd	r15, Y+8	; 0x08
    1bfe:	e0 0e       	add	r14, r16
    1c00:	f1 1e       	adc	r15, r17
    1c02:	4f 81       	ldd	r20, Y+7	; 0x07
    1c04:	58 85       	ldd	r21, Y+8	; 0x08
    1c06:	c4 9e       	mul	r12, r20
    1c08:	40 01       	movw	r8, r0
    1c0a:	c5 9e       	mul	r12, r21
    1c0c:	90 0c       	add	r9, r0
    1c0e:	d4 9e       	mul	r13, r20
    1c10:	90 0c       	add	r9, r0
    1c12:	11 24       	eor	r1, r1
    1c14:	80 0e       	add	r8, r16
    1c16:	91 1e       	adc	r9, r17
    1c18:	1b c0       	rjmp	.+54     	; 0x1c50 <qsort+0xa0>
    1c1a:	4f 81       	ldd	r20, Y+7	; 0x07
    1c1c:	58 85       	ldd	r21, Y+8	; 0x08
    1c1e:	b6 01       	movw	r22, r12
    1c20:	c3 01       	movw	r24, r6
    1c22:	84 df       	rcall	.-248    	; 0x1b2c <swapfunc>
    1c24:	36 01       	movw	r6, r12
    1c26:	06 15       	cp	r16, r6
    1c28:	17 05       	cpc	r17, r7
    1c2a:	28 f0       	brcs	.+10     	; 0x1c36 <qsort+0x86>
    1c2c:	6f 81       	ldd	r22, Y+7	; 0x07
    1c2e:	78 85       	ldd	r23, Y+8	; 0x08
    1c30:	e6 0e       	add	r14, r22
    1c32:	f7 1e       	adc	r15, r23
    1c34:	0d c0       	rjmp	.+26     	; 0x1c50 <qsort+0xa0>
    1c36:	63 01       	movw	r12, r6
    1c38:	8f 81       	ldd	r24, Y+7	; 0x07
    1c3a:	98 85       	ldd	r25, Y+8	; 0x08
    1c3c:	c8 1a       	sub	r12, r24
    1c3e:	d9 0a       	sbc	r13, r25
    1c40:	b3 01       	movw	r22, r6
    1c42:	c6 01       	movw	r24, r12
    1c44:	f5 01       	movw	r30, r10
    1c46:	09 95       	icall
    1c48:	18 16       	cp	r1, r24
    1c4a:	19 06       	cpc	r1, r25
    1c4c:	34 f3       	brlt	.-52     	; 0x1c1a <qsort+0x6a>
    1c4e:	ee cf       	rjmp	.-36     	; 0x1c2c <qsort+0x7c>
    1c50:	e8 14       	cp	r14, r8
    1c52:	f9 04       	cpc	r15, r9
    1c54:	08 f0       	brcs	.+2      	; 0x1c58 <qsort+0xa8>
    1c56:	4d c1       	rjmp	.+666    	; 0x1ef2 <qsort+0x342>
    1c58:	37 01       	movw	r6, r14
    1c5a:	e5 cf       	rjmp	.-54     	; 0x1c26 <qsort+0x76>
    1c5c:	c6 01       	movw	r24, r12
    1c5e:	96 95       	lsr	r25
    1c60:	87 95       	ror	r24
    1c62:	2f 81       	ldd	r18, Y+7	; 0x07
    1c64:	38 85       	ldd	r19, Y+8	; 0x08
    1c66:	82 9f       	mul	r24, r18
    1c68:	70 01       	movw	r14, r0
    1c6a:	83 9f       	mul	r24, r19
    1c6c:	f0 0c       	add	r15, r0
    1c6e:	92 9f       	mul	r25, r18
    1c70:	f0 0c       	add	r15, r0
    1c72:	11 24       	eor	r1, r1
    1c74:	e0 0e       	add	r14, r16
    1c76:	f1 1e       	adc	r15, r17
    1c78:	37 e0       	ldi	r19, 0x07	; 7
    1c7a:	c3 16       	cp	r12, r19
    1c7c:	d1 04       	cpc	r13, r1
    1c7e:	09 f4       	brne	.+2      	; 0x1c82 <qsort+0xd2>
    1c80:	4c c0       	rjmp	.+152    	; 0x1d1a <qsort+0x16a>
    1c82:	c6 01       	movw	r24, r12
    1c84:	01 97       	sbiw	r24, 0x01	; 1
    1c86:	4f 81       	ldd	r20, Y+7	; 0x07
    1c88:	58 85       	ldd	r21, Y+8	; 0x08
    1c8a:	84 9f       	mul	r24, r20
    1c8c:	40 01       	movw	r8, r0
    1c8e:	85 9f       	mul	r24, r21
    1c90:	90 0c       	add	r9, r0
    1c92:	94 9f       	mul	r25, r20
    1c94:	90 0c       	add	r9, r0
    1c96:	11 24       	eor	r1, r1
    1c98:	80 0e       	add	r8, r16
    1c9a:	91 1e       	adc	r9, r17
    1c9c:	59 e2       	ldi	r21, 0x29	; 41
    1c9e:	c5 16       	cp	r12, r21
    1ca0:	d1 04       	cpc	r13, r1
    1ca2:	a0 f1       	brcs	.+104    	; 0x1d0c <qsort+0x15c>
    1ca4:	c6 01       	movw	r24, r12
    1ca6:	23 e0       	ldi	r18, 0x03	; 3
    1ca8:	96 95       	lsr	r25
    1caa:	87 95       	ror	r24
    1cac:	2a 95       	dec	r18
    1cae:	e1 f7       	brne	.-8      	; 0x1ca8 <qsort+0xf8>
    1cb0:	6f 81       	ldd	r22, Y+7	; 0x07
    1cb2:	78 85       	ldd	r23, Y+8	; 0x08
    1cb4:	86 9f       	mul	r24, r22
    1cb6:	30 01       	movw	r6, r0
    1cb8:	87 9f       	mul	r24, r23
    1cba:	70 0c       	add	r7, r0
    1cbc:	96 9f       	mul	r25, r22
    1cbe:	70 0c       	add	r7, r0
    1cc0:	11 24       	eor	r1, r1
    1cc2:	13 01       	movw	r2, r6
    1cc4:	22 0c       	add	r2, r2
    1cc6:	33 1c       	adc	r3, r3
    1cc8:	a8 01       	movw	r20, r16
    1cca:	42 0d       	add	r20, r2
    1ccc:	53 1d       	adc	r21, r3
    1cce:	b8 01       	movw	r22, r16
    1cd0:	66 0d       	add	r22, r6
    1cd2:	77 1d       	adc	r23, r7
    1cd4:	95 01       	movw	r18, r10
    1cd6:	c8 01       	movw	r24, r16
    1cd8:	35 df       	rcall	.-406    	; 0x1b44 <med3>
    1cda:	2c 01       	movw	r4, r24
    1cdc:	a7 01       	movw	r20, r14
    1cde:	46 0d       	add	r20, r6
    1ce0:	57 1d       	adc	r21, r7
    1ce2:	71 94       	neg	r7
    1ce4:	61 94       	neg	r6
    1ce6:	71 08       	sbc	r7, r1
    1ce8:	95 01       	movw	r18, r10
    1cea:	b7 01       	movw	r22, r14
    1cec:	c7 01       	movw	r24, r14
    1cee:	86 0d       	add	r24, r6
    1cf0:	97 1d       	adc	r25, r7
    1cf2:	28 df       	rcall	.-432    	; 0x1b44 <med3>
    1cf4:	7c 01       	movw	r14, r24
    1cf6:	b4 01       	movw	r22, r8
    1cf8:	66 0d       	add	r22, r6
    1cfa:	77 1d       	adc	r23, r7
    1cfc:	95 01       	movw	r18, r10
    1cfe:	a4 01       	movw	r20, r8
    1d00:	c4 01       	movw	r24, r8
    1d02:	82 19       	sub	r24, r2
    1d04:	93 09       	sbc	r25, r3
    1d06:	1e df       	rcall	.-452    	; 0x1b44 <med3>
    1d08:	4c 01       	movw	r8, r24
    1d0a:	01 c0       	rjmp	.+2      	; 0x1d0e <qsort+0x15e>
    1d0c:	28 01       	movw	r4, r16
    1d0e:	95 01       	movw	r18, r10
    1d10:	a4 01       	movw	r20, r8
    1d12:	b7 01       	movw	r22, r14
    1d14:	c2 01       	movw	r24, r4
    1d16:	16 df       	rcall	.-468    	; 0x1b44 <med3>
    1d18:	7c 01       	movw	r14, r24
    1d1a:	4b 81       	ldd	r20, Y+3	; 0x03
    1d1c:	5c 81       	ldd	r21, Y+4	; 0x04
    1d1e:	b7 01       	movw	r22, r14
    1d20:	c8 01       	movw	r24, r16
    1d22:	04 df       	rcall	.-504    	; 0x1b2c <swapfunc>
    1d24:	4f 80       	ldd	r4, Y+7	; 0x07
    1d26:	58 84       	ldd	r5, Y+8	; 0x08
    1d28:	40 0e       	add	r4, r16
    1d2a:	51 1e       	adc	r5, r17
    1d2c:	c6 01       	movw	r24, r12
    1d2e:	01 97       	sbiw	r24, 0x01	; 1
    1d30:	ef 81       	ldd	r30, Y+7	; 0x07
    1d32:	f8 85       	ldd	r31, Y+8	; 0x08
    1d34:	8e 9f       	mul	r24, r30
    1d36:	30 01       	movw	r6, r0
    1d38:	8f 9f       	mul	r24, r31
    1d3a:	70 0c       	add	r7, r0
    1d3c:	9e 9f       	mul	r25, r30
    1d3e:	70 0c       	add	r7, r0
    1d40:	11 24       	eor	r1, r1
    1d42:	60 0e       	add	r6, r16
    1d44:	71 1e       	adc	r7, r17
    1d46:	43 01       	movw	r8, r6
    1d48:	72 01       	movw	r14, r4
    1d4a:	12 01       	movw	r2, r4
    1d4c:	20 e0       	ldi	r18, 0x00	; 0
    1d4e:	30 e0       	ldi	r19, 0x00	; 0
    1d50:	11 c0       	rjmp	.+34     	; 0x1d74 <qsort+0x1c4>
    1d52:	89 2b       	or	r24, r25
    1d54:	59 f4       	brne	.+22     	; 0x1d6c <qsort+0x1bc>
    1d56:	4b 81       	ldd	r20, Y+3	; 0x03
    1d58:	5c 81       	ldd	r21, Y+4	; 0x04
    1d5a:	b7 01       	movw	r22, r14
    1d5c:	c1 01       	movw	r24, r2
    1d5e:	e6 de       	rcall	.-564    	; 0x1b2c <swapfunc>
    1d60:	2f 81       	ldd	r18, Y+7	; 0x07
    1d62:	38 85       	ldd	r19, Y+8	; 0x08
    1d64:	22 0e       	add	r2, r18
    1d66:	33 1e       	adc	r3, r19
    1d68:	21 e0       	ldi	r18, 0x01	; 1
    1d6a:	30 e0       	ldi	r19, 0x00	; 0
    1d6c:	4f 81       	ldd	r20, Y+7	; 0x07
    1d6e:	58 85       	ldd	r21, Y+8	; 0x08
    1d70:	e4 0e       	add	r14, r20
    1d72:	f5 1e       	adc	r15, r21
    1d74:	8e 14       	cp	r8, r14
    1d76:	9f 04       	cpc	r9, r15
    1d78:	d8 f0       	brcs	.+54     	; 0x1db0 <qsort+0x200>
    1d7a:	b8 01       	movw	r22, r16
    1d7c:	c7 01       	movw	r24, r14
    1d7e:	2d 83       	std	Y+5, r18	; 0x05
    1d80:	3e 83       	std	Y+6, r19	; 0x06
    1d82:	f5 01       	movw	r30, r10
    1d84:	09 95       	icall
    1d86:	2d 81       	ldd	r18, Y+5	; 0x05
    1d88:	3e 81       	ldd	r19, Y+6	; 0x06
    1d8a:	18 16       	cp	r1, r24
    1d8c:	19 06       	cpc	r1, r25
    1d8e:	84 f0       	brlt	.+32     	; 0x1db0 <qsort+0x200>
    1d90:	e0 cf       	rjmp	.-64     	; 0x1d52 <qsort+0x1a2>
    1d92:	89 2b       	or	r24, r25
    1d94:	59 f4       	brne	.+22     	; 0x1dac <qsort+0x1fc>
    1d96:	4b 81       	ldd	r20, Y+3	; 0x03
    1d98:	5c 81       	ldd	r21, Y+4	; 0x04
    1d9a:	b3 01       	movw	r22, r6
    1d9c:	c4 01       	movw	r24, r8
    1d9e:	c6 de       	rcall	.-628    	; 0x1b2c <swapfunc>
    1da0:	2f 81       	ldd	r18, Y+7	; 0x07
    1da2:	38 85       	ldd	r19, Y+8	; 0x08
    1da4:	62 1a       	sub	r6, r18
    1da6:	73 0a       	sbc	r7, r19
    1da8:	21 e0       	ldi	r18, 0x01	; 1
    1daa:	30 e0       	ldi	r19, 0x00	; 0
    1dac:	89 80       	ldd	r8, Y+1	; 0x01
    1dae:	9a 80       	ldd	r9, Y+2	; 0x02
    1db0:	8e 14       	cp	r8, r14
    1db2:	9f 04       	cpc	r9, r15
    1db4:	08 f4       	brcc	.+2      	; 0x1db8 <qsort+0x208>
    1db6:	90 c0       	rjmp	.+288    	; 0x1ed8 <qsort+0x328>
    1db8:	b8 01       	movw	r22, r16
    1dba:	c4 01       	movw	r24, r8
    1dbc:	2d 83       	std	Y+5, r18	; 0x05
    1dbe:	3e 83       	std	Y+6, r19	; 0x06
    1dc0:	f5 01       	movw	r30, r10
    1dc2:	09 95       	icall
    1dc4:	a4 01       	movw	r20, r8
    1dc6:	6f 81       	ldd	r22, Y+7	; 0x07
    1dc8:	78 85       	ldd	r23, Y+8	; 0x08
    1dca:	46 1b       	sub	r20, r22
    1dcc:	57 0b       	sbc	r21, r23
    1dce:	5a 83       	std	Y+2, r21	; 0x02
    1dd0:	49 83       	std	Y+1, r20	; 0x01
    1dd2:	2d 81       	ldd	r18, Y+5	; 0x05
    1dd4:	3e 81       	ldd	r19, Y+6	; 0x06
    1dd6:	97 ff       	sbrs	r25, 7
    1dd8:	dc cf       	rjmp	.-72     	; 0x1d92 <qsort+0x1e2>
    1dda:	70 c0       	rjmp	.+224    	; 0x1ebc <qsort+0x30c>
    1ddc:	48 01       	movw	r8, r16
    1dde:	88 0e       	add	r8, r24
    1de0:	99 1e       	adc	r9, r25
    1de2:	1b c0       	rjmp	.+54     	; 0x1e1a <qsort+0x26a>
    1de4:	4b 81       	ldd	r20, Y+3	; 0x03
    1de6:	5c 81       	ldd	r21, Y+4	; 0x04
    1de8:	b6 01       	movw	r22, r12
    1dea:	c7 01       	movw	r24, r14
    1dec:	9f de       	rcall	.-706    	; 0x1b2c <swapfunc>
    1dee:	76 01       	movw	r14, r12
    1df0:	0e 15       	cp	r16, r14
    1df2:	1f 05       	cpc	r17, r15
    1df4:	28 f0       	brcs	.+10     	; 0x1e00 <qsort+0x250>
    1df6:	8f 81       	ldd	r24, Y+7	; 0x07
    1df8:	98 85       	ldd	r25, Y+8	; 0x08
    1dfa:	48 0e       	add	r4, r24
    1dfc:	59 1e       	adc	r5, r25
    1dfe:	0d c0       	rjmp	.+26     	; 0x1e1a <qsort+0x26a>
    1e00:	67 01       	movw	r12, r14
    1e02:	ef 81       	ldd	r30, Y+7	; 0x07
    1e04:	f8 85       	ldd	r31, Y+8	; 0x08
    1e06:	ce 1a       	sub	r12, r30
    1e08:	df 0a       	sbc	r13, r31
    1e0a:	b7 01       	movw	r22, r14
    1e0c:	c6 01       	movw	r24, r12
    1e0e:	f5 01       	movw	r30, r10
    1e10:	09 95       	icall
    1e12:	18 16       	cp	r1, r24
    1e14:	19 06       	cpc	r1, r25
    1e16:	34 f3       	brlt	.-52     	; 0x1de4 <qsort+0x234>
    1e18:	ee cf       	rjmp	.-36     	; 0x1df6 <qsort+0x246>
    1e1a:	48 14       	cp	r4, r8
    1e1c:	59 04       	cpc	r5, r9
    1e1e:	08 f0       	brcs	.+2      	; 0x1e22 <qsort+0x272>
    1e20:	68 c0       	rjmp	.+208    	; 0x1ef2 <qsort+0x342>
    1e22:	72 01       	movw	r14, r4
    1e24:	e5 cf       	rjmp	.-54     	; 0x1df0 <qsort+0x240>
    1e26:	98 01       	movw	r18, r16
    1e28:	28 0f       	add	r18, r24
    1e2a:	39 1f       	adc	r19, r25
    1e2c:	3a 83       	std	Y+2, r19	; 0x02
    1e2e:	29 83       	std	Y+1, r18	; 0x01
    1e30:	27 01       	movw	r4, r14
    1e32:	42 18       	sub	r4, r2
    1e34:	53 08       	sbc	r5, r3
    1e36:	a1 01       	movw	r20, r2
    1e38:	40 1b       	sub	r20, r16
    1e3a:	51 0b       	sbc	r21, r17
    1e3c:	44 16       	cp	r4, r20
    1e3e:	55 06       	cpc	r5, r21
    1e40:	0c f4       	brge	.+2      	; 0x1e44 <qsort+0x294>
    1e42:	a2 01       	movw	r20, r4
    1e44:	14 16       	cp	r1, r20
    1e46:	15 06       	cpc	r1, r21
    1e48:	2c f4       	brge	.+10     	; 0x1e54 <qsort+0x2a4>
    1e4a:	b7 01       	movw	r22, r14
    1e4c:	64 1b       	sub	r22, r20
    1e4e:	75 0b       	sbc	r23, r21
    1e50:	c8 01       	movw	r24, r16
    1e52:	6c de       	rcall	.-808    	; 0x1b2c <swapfunc>
    1e54:	63 01       	movw	r12, r6
    1e56:	c8 18       	sub	r12, r8
    1e58:	d9 08       	sbc	r13, r9
    1e5a:	49 81       	ldd	r20, Y+1	; 0x01
    1e5c:	5a 81       	ldd	r21, Y+2	; 0x02
    1e5e:	46 19       	sub	r20, r6
    1e60:	57 09       	sbc	r21, r7
    1e62:	6f 81       	ldd	r22, Y+7	; 0x07
    1e64:	78 85       	ldd	r23, Y+8	; 0x08
    1e66:	46 1b       	sub	r20, r22
    1e68:	57 0b       	sbc	r21, r23
    1e6a:	c4 16       	cp	r12, r20
    1e6c:	d5 06       	cpc	r13, r21
    1e6e:	08 f4       	brcc	.+2      	; 0x1e72 <qsort+0x2c2>
    1e70:	a6 01       	movw	r20, r12
    1e72:	14 16       	cp	r1, r20
    1e74:	15 06       	cpc	r1, r21
    1e76:	34 f4       	brge	.+12     	; 0x1e84 <qsort+0x2d4>
    1e78:	69 81       	ldd	r22, Y+1	; 0x01
    1e7a:	7a 81       	ldd	r23, Y+2	; 0x02
    1e7c:	64 1b       	sub	r22, r20
    1e7e:	75 0b       	sbc	r23, r21
    1e80:	c7 01       	movw	r24, r14
    1e82:	54 de       	rcall	.-856    	; 0x1b2c <swapfunc>
    1e84:	8f 81       	ldd	r24, Y+7	; 0x07
    1e86:	98 85       	ldd	r25, Y+8	; 0x08
    1e88:	84 15       	cp	r24, r4
    1e8a:	95 05       	cpc	r25, r5
    1e8c:	48 f4       	brcc	.+18     	; 0x1ea0 <qsort+0x2f0>
    1e8e:	c2 01       	movw	r24, r4
    1e90:	6f 81       	ldd	r22, Y+7	; 0x07
    1e92:	78 85       	ldd	r23, Y+8	; 0x08
    1e94:	37 de       	rcall	.-914    	; 0x1b04 <__udivmodhi4>
    1e96:	95 01       	movw	r18, r10
    1e98:	4f 81       	ldd	r20, Y+7	; 0x07
    1e9a:	58 85       	ldd	r21, Y+8	; 0x08
    1e9c:	c8 01       	movw	r24, r16
    1e9e:	88 de       	rcall	.-752    	; 0x1bb0 <qsort>
    1ea0:	ef 81       	ldd	r30, Y+7	; 0x07
    1ea2:	f8 85       	ldd	r31, Y+8	; 0x08
    1ea4:	ec 15       	cp	r30, r12
    1ea6:	fd 05       	cpc	r31, r13
    1ea8:	20 f5       	brcc	.+72     	; 0x1ef2 <qsort+0x342>
    1eaa:	09 81       	ldd	r16, Y+1	; 0x01
    1eac:	1a 81       	ldd	r17, Y+2	; 0x02
    1eae:	0c 19       	sub	r16, r12
    1eb0:	1d 09       	sbc	r17, r13
    1eb2:	c6 01       	movw	r24, r12
    1eb4:	bf 01       	movw	r22, r30
    1eb6:	26 de       	rcall	.-948    	; 0x1b04 <__udivmodhi4>
    1eb8:	6b 01       	movw	r12, r22
    1eba:	9b ce       	rjmp	.-714    	; 0x1bf2 <qsort+0x42>
    1ebc:	4b 81       	ldd	r20, Y+3	; 0x03
    1ebe:	5c 81       	ldd	r21, Y+4	; 0x04
    1ec0:	b4 01       	movw	r22, r8
    1ec2:	c7 01       	movw	r24, r14
    1ec4:	33 de       	rcall	.-922    	; 0x1b2c <swapfunc>
    1ec6:	2f 81       	ldd	r18, Y+7	; 0x07
    1ec8:	38 85       	ldd	r19, Y+8	; 0x08
    1eca:	e2 0e       	add	r14, r18
    1ecc:	f3 1e       	adc	r15, r19
    1ece:	89 80       	ldd	r8, Y+1	; 0x01
    1ed0:	9a 80       	ldd	r9, Y+2	; 0x02
    1ed2:	21 e0       	ldi	r18, 0x01	; 1
    1ed4:	30 e0       	ldi	r19, 0x00	; 0
    1ed6:	4e cf       	rjmp	.-356    	; 0x1d74 <qsort+0x1c4>
    1ed8:	4f 81       	ldd	r20, Y+7	; 0x07
    1eda:	58 85       	ldd	r21, Y+8	; 0x08
    1edc:	c4 9e       	mul	r12, r20
    1ede:	c0 01       	movw	r24, r0
    1ee0:	c5 9e       	mul	r12, r21
    1ee2:	90 0d       	add	r25, r0
    1ee4:	d4 9e       	mul	r13, r20
    1ee6:	90 0d       	add	r25, r0
    1ee8:	11 24       	eor	r1, r1
    1eea:	23 2b       	or	r18, r19
    1eec:	09 f0       	breq	.+2      	; 0x1ef0 <qsort+0x340>
    1eee:	9b cf       	rjmp	.-202    	; 0x1e26 <qsort+0x276>
    1ef0:	75 cf       	rjmp	.-278    	; 0x1ddc <qsort+0x22c>
    1ef2:	28 96       	adiw	r28, 0x08	; 8
    1ef4:	0f b6       	in	r0, 0x3f	; 63
    1ef6:	f8 94       	cli
    1ef8:	de bf       	out	0x3e, r29	; 62
    1efa:	0f be       	out	0x3f, r0	; 63
    1efc:	cd bf       	out	0x3d, r28	; 61
    1efe:	df 91       	pop	r29
    1f00:	cf 91       	pop	r28
    1f02:	1f 91       	pop	r17
    1f04:	0f 91       	pop	r16
    1f06:	ff 90       	pop	r15
    1f08:	ef 90       	pop	r14
    1f0a:	df 90       	pop	r13
    1f0c:	cf 90       	pop	r12
    1f0e:	bf 90       	pop	r11
    1f10:	af 90       	pop	r10
    1f12:	9f 90       	pop	r9
    1f14:	8f 90       	pop	r8
    1f16:	7f 90       	pop	r7
    1f18:	6f 90       	pop	r6
    1f1a:	5f 90       	pop	r5
    1f1c:	4f 90       	pop	r4
    1f1e:	3f 90       	pop	r3
    1f20:	2f 90       	pop	r2
    1f22:	08 95       	ret

00001f24 <_exit>:
    1f24:	f8 94       	cli

00001f26 <__stop_program>:
    1f26:	ff cf       	rjmp	.-2      	; 0x1f26 <__stop_program>
