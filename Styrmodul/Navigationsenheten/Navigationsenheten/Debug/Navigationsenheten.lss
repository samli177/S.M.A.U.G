
Navigationsenheten.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00001232  00800100  00002240  000022d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002240  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000676  00801332  00801332  00003506  2**0
                  ALLOC
  3 .stab         00002e68  00000000  00000000  00003508  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000d48  00000000  00000000  00006370  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  000070b8  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000003d8  00000000  00000000  000070e7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00003a6b  00000000  00000000  000074bf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000fb6  00000000  00000000  0000af2a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00002463  00000000  00000000  0000bee0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000bec  00000000  00000000  0000e344  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000d97  00000000  00000000  0000ef30  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000247a  00000000  00000000  0000fcc7  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000410  00000000  00000000  00012141  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	6b c0       	rjmp	.+214    	; 0xd8 <__ctors_end>
       2:	00 00       	nop
       4:	8b c6       	rjmp	.+3350   	; 0xd1c <__vector_1>
       6:	00 00       	nop
       8:	b3 c6       	rjmp	.+3430   	; 0xd70 <__vector_2>
       a:	00 00       	nop
       c:	83 c0       	rjmp	.+262    	; 0x114 <__bad_interrupt>
       e:	00 00       	nop
      10:	4b c7       	rjmp	.+3734   	; 0xea8 <__vector_4>
      12:	00 00       	nop
      14:	7f c0       	rjmp	.+254    	; 0x114 <__bad_interrupt>
      16:	00 00       	nop
      18:	7d c0       	rjmp	.+250    	; 0x114 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	7b c0       	rjmp	.+246    	; 0x114 <__bad_interrupt>
      1e:	00 00       	nop
      20:	79 c0       	rjmp	.+242    	; 0x114 <__bad_interrupt>
      22:	00 00       	nop
      24:	77 c0       	rjmp	.+238    	; 0x114 <__bad_interrupt>
      26:	00 00       	nop
      28:	75 c0       	rjmp	.+234    	; 0x114 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	73 c0       	rjmp	.+230    	; 0x114 <__bad_interrupt>
      2e:	00 00       	nop
      30:	71 c0       	rjmp	.+226    	; 0x114 <__bad_interrupt>
      32:	00 00       	nop
      34:	1d c7       	rjmp	.+3642   	; 0xe70 <__vector_13>
      36:	00 00       	nop
      38:	6d c0       	rjmp	.+218    	; 0x114 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	6b c0       	rjmp	.+214    	; 0x114 <__bad_interrupt>
      3e:	00 00       	nop
      40:	69 c0       	rjmp	.+210    	; 0x114 <__bad_interrupt>
      42:	00 00       	nop
      44:	67 c0       	rjmp	.+206    	; 0x114 <__bad_interrupt>
      46:	00 00       	nop
      48:	65 c0       	rjmp	.+202    	; 0x114 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	63 c0       	rjmp	.+198    	; 0x114 <__bad_interrupt>
      4e:	00 00       	nop
      50:	0c 94 bc 0d 	jmp	0x1b78	; 0x1b78 <__vector_20>
      54:	5f c0       	rjmp	.+190    	; 0x114 <__bad_interrupt>
      56:	00 00       	nop
      58:	5d c0       	rjmp	.+186    	; 0x114 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	5b c0       	rjmp	.+182    	; 0x114 <__bad_interrupt>
      5e:	00 00       	nop
      60:	59 c0       	rjmp	.+178    	; 0x114 <__bad_interrupt>
      62:	00 00       	nop
      64:	57 c0       	rjmp	.+174    	; 0x114 <__bad_interrupt>
      66:	00 00       	nop
      68:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__vector_26>
      6c:	53 c0       	rjmp	.+166    	; 0x114 <__bad_interrupt>
      6e:	00 00       	nop
      70:	51 c0       	rjmp	.+162    	; 0x114 <__bad_interrupt>
      72:	00 00       	nop
      74:	4f c0       	rjmp	.+158    	; 0x114 <__bad_interrupt>
      76:	00 00       	nop
      78:	4d c0       	rjmp	.+154    	; 0x114 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	4b c0       	rjmp	.+150    	; 0x114 <__bad_interrupt>
      7e:	00 00       	nop
      80:	05 c7       	rjmp	.+3594   	; 0xe8c <__vector_32>
      82:	00 00       	nop
      84:	47 c0       	rjmp	.+142    	; 0x114 <__bad_interrupt>
      86:	00 00       	nop
      88:	45 c0       	rjmp	.+138    	; 0x114 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	08 4a       	sbci	r16, 0xA8	; 168
      8e:	d7 3b       	cpi	r29, 0xB7	; 183
      90:	3b ce       	rjmp	.-906    	; 0xfffffd08 <__eeprom_end+0xff7efd08>
      92:	01 6e       	ori	r16, 0xE1	; 225
      94:	84 bc       	out	0x24, r8	; 36
      96:	bf fd       	.word	0xfdbf	; ????
      98:	c1 2f       	mov	r28, r17
      9a:	3d 6c       	ori	r19, 0xCD	; 205
      9c:	74 31       	cpi	r23, 0x14	; 20
      9e:	9a bd       	out	0x2a, r25	; 42
      a0:	56 83       	std	Z+6, r21	; 0x06
      a2:	3d da       	rcall	.-2950   	; 0xfffff51e <__eeprom_end+0xff7ef51e>
      a4:	3d 00       	.word	0x003d	; ????
      a6:	c7 7f       	andi	r28, 0xF7	; 247
      a8:	11 be       	out	0x31, r1	; 49
      aa:	d9 e4       	ldi	r29, 0x49	; 73
      ac:	bb 4c       	sbci	r27, 0xCB	; 203
      ae:	3e 91       	ld	r19, -X
      b0:	6b aa       	std	Y+51, r6	; 0x33
      b2:	aa be       	out	0x3a, r10	; 58
      b4:	00 00       	nop
      b6:	00 80       	ld	r0, Z
      b8:	3f 05       	cpc	r19, r15
      ba:	a8 4c       	sbci	r26, 0xC8	; 200
      bc:	cd b2       	in	r12, 0x1d	; 29
      be:	d4 4e       	sbci	r29, 0xE4	; 228
      c0:	b9 38       	cpi	r27, 0x89	; 137
      c2:	36 a9       	ldd	r19, Z+54	; 0x36
      c4:	02 0c       	add	r0, r2
      c6:	50 b9       	out	0x00, r21	; 0
      c8:	91 86       	std	Z+9, r9	; 0x09
      ca:	88 08       	sbc	r8, r8
      cc:	3c a6       	std	Y+44, r3	; 0x2c
      ce:	aa aa       	std	Y+50, r10	; 0x32
      d0:	2a be       	out	0x3a, r2	; 58
      d2:	00 00       	nop
      d4:	00 80       	ld	r0, Z
      d6:	3f 00       	.word	0x003f	; ????

000000d8 <__ctors_end>:
      d8:	11 24       	eor	r1, r1
      da:	1f be       	out	0x3f, r1	; 63
      dc:	cf ef       	ldi	r28, 0xFF	; 255
      de:	d0 e4       	ldi	r29, 0x40	; 64
      e0:	de bf       	out	0x3e, r29	; 62
      e2:	cd bf       	out	0x3d, r28	; 61

000000e4 <__do_copy_data>:
      e4:	13 e1       	ldi	r17, 0x13	; 19
      e6:	a0 e0       	ldi	r26, 0x00	; 0
      e8:	b1 e0       	ldi	r27, 0x01	; 1
      ea:	e0 e4       	ldi	r30, 0x40	; 64
      ec:	f2 e2       	ldi	r31, 0x22	; 34
      ee:	00 e0       	ldi	r16, 0x00	; 0
      f0:	0b bf       	out	0x3b, r16	; 59
      f2:	02 c0       	rjmp	.+4      	; 0xf8 <__do_copy_data+0x14>
      f4:	07 90       	elpm	r0, Z+
      f6:	0d 92       	st	X+, r0
      f8:	a2 33       	cpi	r26, 0x32	; 50
      fa:	b1 07       	cpc	r27, r17
      fc:	d9 f7       	brne	.-10     	; 0xf4 <__do_copy_data+0x10>

000000fe <__do_clear_bss>:
      fe:	29 e1       	ldi	r18, 0x19	; 25
     100:	a2 e3       	ldi	r26, 0x32	; 50
     102:	b3 e1       	ldi	r27, 0x13	; 19
     104:	01 c0       	rjmp	.+2      	; 0x108 <.do_clear_bss_start>

00000106 <.do_clear_bss_loop>:
     106:	1d 92       	st	X+, r1

00000108 <.do_clear_bss_start>:
     108:	a8 3a       	cpi	r26, 0xA8	; 168
     10a:	b2 07       	cpc	r27, r18
     10c:	e1 f7       	brne	.-8      	; 0x106 <.do_clear_bss_loop>
     10e:	5a d6       	rcall	.+3252   	; 0xdc4 <main>
     110:	0c 94 1e 11 	jmp	0x223c	; 0x223c <_exit>

00000114 <__bad_interrupt>:
     114:	75 cf       	rjmp	.-278    	; 0x0 <__vectors>

00000116 <turn_around>:
		TWI_send_string(C_ADDRESS, "Done turning right.");
	}
}

void turn_around()
{
     116:	cf 93       	push	r28
     118:	df 93       	push	r29
	if(gStatus)
     11a:	80 91 00 01 	lds	r24, 0x0100
     11e:	88 23       	and	r24, r24
     120:	d9 f0       	breq	.+54     	; 0x158 <turn_around+0x42>
	{
		TWI_send_string(C_ADDRESS, "Starting to turn around.");
     122:	6b e1       	ldi	r22, 0x1B	; 27
     124:	71 e1       	ldi	r23, 0x11	; 17
     126:	80 e8       	ldi	r24, 0x80	; 128
     128:	0e 94 95 08 	call	0x112a	; 0x112a <TWI_send_string>
     12c:	15 c0       	rjmp	.+42     	; 0x158 <turn_around+0x42>
	{
		if(gStatus)
		{
			//TWI_send_string(C_ADDRESS, "Rotating right.");
		}
		USART_send_command_parameters(0, MAX_ROTATION_COUNTER_CLOCKWISE, 0);
     12e:	40 e0       	ldi	r20, 0x00	; 0
     130:	6e e1       	ldi	r22, 0x1E	; 30
     132:	80 e0       	ldi	r24, 0x00	; 0
     134:	0e 94 48 0e 	call	0x1c90	; 0x1c90 <USART_send_command_parameters>
		navigation_stepping_delay();
     138:	82 d2       	rcall	.+1284   	; 0x63e <navigation_stepping_delay>
     13a:	21 97       	sbiw	r28, 0x01	; 1
{
	if(gStatus)
	{
		TWI_send_string(C_ADDRESS, "Starting to turn around.");
	}
	for(int i = 0; (i < 40 && TWI_get_autonom_settings() != 0); ++i)
     13c:	21 f0       	breq	.+8      	; 0x146 <turn_around+0x30>
     13e:	0e 94 70 09 	call	0x12e0	; 0x12e0 <TWI_get_autonom_settings>
     142:	81 11       	cpse	r24, r1
     144:	f4 cf       	rjmp	.-24     	; 0x12e <turn_around+0x18>
			//TWI_send_string(C_ADDRESS, "Rotating right.");
		}
		USART_send_command_parameters(0, MAX_ROTATION_COUNTER_CLOCKWISE, 0);
		navigation_stepping_delay();
	}
	if(gStatus)
     146:	80 91 00 01 	lds	r24, 0x0100
     14a:	88 23       	and	r24, r24
     14c:	41 f0       	breq	.+16     	; 0x15e <turn_around+0x48>
	{
		TWI_send_string(C_ADDRESS, "Corridor ahead, done turning around.");
     14e:	64 e3       	ldi	r22, 0x34	; 52
     150:	71 e1       	ldi	r23, 0x11	; 17
     152:	80 e8       	ldi	r24, 0x80	; 128
     154:	ea d7       	rcall	.+4052   	; 0x112a <TWI_send_string>
     156:	03 c0       	rjmp	.+6      	; 0x15e <turn_around+0x48>
		TWI_send_string(C_ADDRESS, "Done turning right.");
	}
}

void turn_around()
{
     158:	c8 e2       	ldi	r28, 0x28	; 40
     15a:	d0 e0       	ldi	r29, 0x00	; 0
     15c:	f0 cf       	rjmp	.-32     	; 0x13e <turn_around+0x28>
	}
	if(gStatus)
	{
		TWI_send_string(C_ADDRESS, "Corridor ahead, done turning around.");
	}
}
     15e:	df 91       	pop	r29
     160:	cf 91       	pop	r28
     162:	08 95       	ret

00000164 <walk_forward>:

void walk_forward()
{
     164:	8f 92       	push	r8
     166:	9f 92       	push	r9
     168:	af 92       	push	r10
     16a:	bf 92       	push	r11
     16c:	cf 92       	push	r12
     16e:	df 92       	push	r13
     170:	ef 92       	push	r14
     172:	ff 92       	push	r15
     174:	cf 93       	push	r28
     176:	df 93       	push	r29
	if(gStatus)
	{
		//TWI_send_string(C_ADDRESS, "Finding regulation parameters.");
	}
	float angleOffset = navigation_angle_offset();
     178:	d7 d4       	rcall	.+2478   	; 0xb28 <navigation_angle_offset>
     17a:	6b 01       	movw	r12, r22
     17c:	7c 01       	movw	r14, r24
	float directionCompensationAngle = navigation_direction_regulation(angleOffset);
     17e:	38 d3       	rcall	.+1648   	; 0x7f0 <navigation_direction_regulation>
     180:	4b 01       	movw	r8, r22
     182:	5c 01       	movw	r10, r24
	if(gStatus)
	{
		//TWI_send_string(C_ADDRESS, "Found regulation parameters.");
	}
	int adjustmentRotation = (51 + 50 * angleOffset * 2.0/PI);
     184:	20 e0       	ldi	r18, 0x00	; 0
     186:	30 e0       	ldi	r19, 0x00	; 0
     188:	48 e4       	ldi	r20, 0x48	; 72
     18a:	52 e4       	ldi	r21, 0x42	; 66
     18c:	c7 01       	movw	r24, r14
     18e:	b6 01       	movw	r22, r12
     190:	0e 94 99 10 	call	0x2132	; 0x2132 <__mulsf3>
     194:	9b 01       	movw	r18, r22
     196:	ac 01       	movw	r20, r24
     198:	0e 94 52 0e 	call	0x1ca4	; 0x1ca4 <__addsf3>
     19c:	2b ed       	ldi	r18, 0xDB	; 219
     19e:	3f e0       	ldi	r19, 0x0F	; 15
     1a0:	49 e4       	ldi	r20, 0x49	; 73
     1a2:	50 e4       	ldi	r21, 0x40	; 64
     1a4:	0e 94 e5 0e 	call	0x1dca	; 0x1dca <__divsf3>
     1a8:	20 e0       	ldi	r18, 0x00	; 0
     1aa:	30 e0       	ldi	r19, 0x00	; 0
     1ac:	4c e4       	ldi	r20, 0x4C	; 76
     1ae:	52 e4       	ldi	r21, 0x42	; 66
     1b0:	0e 94 52 0e 	call	0x1ca4	; 0x1ca4 <__addsf3>
     1b4:	0e 94 4d 0f 	call	0x1e9a	; 0x1e9a <__fixsfsi>
	if (adjustmentRotation >= 100)
     1b8:	64 36       	cpi	r22, 0x64	; 100
     1ba:	71 05       	cpc	r23, r1
     1bc:	34 f4       	brge	.+12     	; 0x1ca <walk_forward+0x66>
     1be:	eb 01       	movw	r28, r22
     1c0:	dd 23       	and	r29, r29
     1c2:	2c f4       	brge	.+10     	; 0x1ce <walk_forward+0x6a>
     1c4:	c0 e0       	ldi	r28, 0x00	; 0
     1c6:	d0 e0       	ldi	r29, 0x00	; 0
     1c8:	02 c0       	rjmp	.+4      	; 0x1ce <walk_forward+0x6a>
	{
		adjustmentRotation = 100;
     1ca:	c4 e6       	ldi	r28, 0x64	; 100
     1cc:	d0 e0       	ldi	r29, 0x00	; 0
	}
	else if(adjustmentRotation <= 0)
	{
		adjustmentRotation = 0;
	}
	int adjustmentDirection = 90 * directionCompensationAngle/(2*PI);
     1ce:	20 e0       	ldi	r18, 0x00	; 0
     1d0:	30 e0       	ldi	r19, 0x00	; 0
     1d2:	44 eb       	ldi	r20, 0xB4	; 180
     1d4:	52 e4       	ldi	r21, 0x42	; 66
     1d6:	c5 01       	movw	r24, r10
     1d8:	b4 01       	movw	r22, r8
     1da:	0e 94 99 10 	call	0x2132	; 0x2132 <__mulsf3>
     1de:	2b ed       	ldi	r18, 0xDB	; 219
     1e0:	3f e0       	ldi	r19, 0x0F	; 15
     1e2:	49 ec       	ldi	r20, 0xC9	; 201
     1e4:	50 e4       	ldi	r21, 0x40	; 64
     1e6:	0e 94 e5 0e 	call	0x1dca	; 0x1dca <__divsf3>
     1ea:	0e 94 4d 0f 	call	0x1e9a	; 0x1e9a <__fixsfsi>
     1ee:	26 2f       	mov	r18, r22
	if(gStatus)
	{
		//TWI_send_string(C_ADDRESS, "Taking a step.");
	}
	USART_send_command_parameters((uint8_t)adjustmentDirection, (uint8_t)adjustmentRotation, gSpeed);
     1f0:	40 91 01 01 	lds	r20, 0x0101
     1f4:	6c 2f       	mov	r22, r28
     1f6:	82 2f       	mov	r24, r18
     1f8:	0e 94 48 0e 	call	0x1c90	; 0x1c90 <USART_send_command_parameters>
	//TWI_send_float(C_ADDRESS, adjustmentDirection);
	navigation_stepping_delay();
     1fc:	20 d2       	rcall	.+1088   	; 0x63e <navigation_stepping_delay>
	//TWI_send_float(C_ADDRESS, adjustmentRotation);
}
     1fe:	df 91       	pop	r29
     200:	cf 91       	pop	r28
     202:	ff 90       	pop	r15
     204:	ef 90       	pop	r14
     206:	df 90       	pop	r13
     208:	cf 90       	pop	r12
     20a:	bf 90       	pop	r11
     20c:	af 90       	pop	r10
     20e:	9f 90       	pop	r9
     210:	8f 90       	pop	r8
     212:	08 95       	ret

00000214 <turn_right>:
		TWI_send_string(C_ADDRESS, "Done turning left.");
	}
}

void turn_right()
{
     214:	cf 93       	push	r28
     216:	df 93       	push	r29
	if(gStatus)
     218:	80 91 00 01 	lds	r24, 0x0100
     21c:	88 23       	and	r24, r24
     21e:	11 f1       	breq	.+68     	; 0x264 <turn_right+0x50>
	{
		TWI_send_string(C_ADDRESS, "Starting turning right.");
     220:	69 e5       	ldi	r22, 0x59	; 89
     222:	71 e1       	ldi	r23, 0x11	; 17
     224:	80 e8       	ldi	r24, 0x80	; 128
     226:	81 d7       	rcall	.+3842   	; 0x112a <TWI_send_string>
     228:	1d c0       	rjmp	.+58     	; 0x264 <turn_right+0x50>
	{
		if(gStatus)
		{
			//TWI_send_string(C_ADDRESS, "Rotating right.");
		}
		USART_send_command_parameters(0, MAX_ROTATION_CLOCKWISE, 0);
     22a:	40 e0       	ldi	r20, 0x00	; 0
     22c:	66 e4       	ldi	r22, 0x46	; 70
     22e:	80 e0       	ldi	r24, 0x00	; 0
     230:	0e 94 48 0e 	call	0x1c90	; 0x1c90 <USART_send_command_parameters>
		navigation_stepping_delay();
     234:	04 d2       	rcall	.+1032   	; 0x63e <navigation_stepping_delay>
     236:	21 97       	sbiw	r28, 0x01	; 1
{
	if(gStatus)
	{
		TWI_send_string(C_ADDRESS, "Starting turning right.");
	}
	for(int i = 0; (i < 20 && TWI_get_autonom_settings() != 0); ++i)
     238:	c1 f0       	breq	.+48     	; 0x26a <turn_right+0x56>
     23a:	0e 94 70 09 	call	0x12e0	; 0x12e0 <TWI_get_autonom_settings>
     23e:	81 11       	cpse	r24, r1
     240:	f4 cf       	rjmp	.-24     	; 0x22a <turn_right+0x16>
     242:	13 c0       	rjmp	.+38     	; 0x26a <turn_right+0x56>
		USART_send_command_parameters(0, MAX_ROTATION_CLOCKWISE, 0);
		navigation_stepping_delay();
	}
	for(int i = 0; (i < 12 && TWI_get_autonom_settings() != 0); ++i)
	{
		walk_forward();
     244:	8f df       	rcall	.-226    	; 0x164 <walk_forward>
     246:	21 97       	sbiw	r28, 0x01	; 1
			//TWI_send_string(C_ADDRESS, "Rotating right.");
		}
		USART_send_command_parameters(0, MAX_ROTATION_CLOCKWISE, 0);
		navigation_stepping_delay();
	}
	for(int i = 0; (i < 12 && TWI_get_autonom_settings() != 0); ++i)
     248:	21 f0       	breq	.+8      	; 0x252 <turn_right+0x3e>
     24a:	0e 94 70 09 	call	0x12e0	; 0x12e0 <TWI_get_autonom_settings>
     24e:	81 11       	cpse	r24, r1
     250:	f9 cf       	rjmp	.-14     	; 0x244 <turn_right+0x30>
	{
		walk_forward();
	}
	if(gStatus)
     252:	80 91 00 01 	lds	r24, 0x0100
     256:	88 23       	and	r24, r24
     258:	59 f0       	breq	.+22     	; 0x270 <turn_right+0x5c>
	{
		TWI_send_string(C_ADDRESS, "Done turning right.");
     25a:	61 e7       	ldi	r22, 0x71	; 113
     25c:	71 e1       	ldi	r23, 0x11	; 17
     25e:	80 e8       	ldi	r24, 0x80	; 128
     260:	64 d7       	rcall	.+3784   	; 0x112a <TWI_send_string>
     262:	06 c0       	rjmp	.+12     	; 0x270 <turn_right+0x5c>
		TWI_send_string(C_ADDRESS, "Done turning left.");
	}
}

void turn_right()
{
     264:	c4 e1       	ldi	r28, 0x14	; 20
     266:	d0 e0       	ldi	r29, 0x00	; 0
     268:	e8 cf       	rjmp	.-48     	; 0x23a <turn_right+0x26>
     26a:	cc e0       	ldi	r28, 0x0C	; 12
     26c:	d0 e0       	ldi	r29, 0x00	; 0
     26e:	ed cf       	rjmp	.-38     	; 0x24a <turn_right+0x36>
	}
	if(gStatus)
	{
		TWI_send_string(C_ADDRESS, "Done turning right.");
	}
}
     270:	df 91       	pop	r29
     272:	cf 91       	pop	r28
     274:	08 95       	ret

00000276 <turn_left>:
{
	return gStatus;
}

void turn_left()
{
     276:	cf 93       	push	r28
     278:	df 93       	push	r29
	if(gStatus)
     27a:	80 91 00 01 	lds	r24, 0x0100
     27e:	88 23       	and	r24, r24
     280:	11 f1       	breq	.+68     	; 0x2c6 <turn_left+0x50>
	{
		TWI_send_string(C_ADDRESS, "Starting turning left.");
     282:	65 e8       	ldi	r22, 0x85	; 133
     284:	71 e1       	ldi	r23, 0x11	; 17
     286:	80 e8       	ldi	r24, 0x80	; 128
     288:	50 d7       	rcall	.+3744   	; 0x112a <TWI_send_string>
     28a:	1d c0       	rjmp	.+58     	; 0x2c6 <turn_left+0x50>
	{
		if(gStatus)
		{
			//TWI_send_string(C_ADDRESS, "Rotating right.");
		}
		USART_send_command_parameters(0, MAX_ROTATION_COUNTER_CLOCKWISE, 0);
     28c:	40 e0       	ldi	r20, 0x00	; 0
     28e:	6e e1       	ldi	r22, 0x1E	; 30
     290:	80 e0       	ldi	r24, 0x00	; 0
     292:	0e 94 48 0e 	call	0x1c90	; 0x1c90 <USART_send_command_parameters>
		navigation_stepping_delay();
     296:	d3 d1       	rcall	.+934    	; 0x63e <navigation_stepping_delay>
     298:	21 97       	sbiw	r28, 0x01	; 1
{
	if(gStatus)
	{
		TWI_send_string(C_ADDRESS, "Starting turning left.");
	}
	for(int i = 0; (i < 20 && TWI_get_autonom_settings() != 0); ++i)
     29a:	c1 f0       	breq	.+48     	; 0x2cc <turn_left+0x56>
     29c:	0e 94 70 09 	call	0x12e0	; 0x12e0 <TWI_get_autonom_settings>
     2a0:	81 11       	cpse	r24, r1
     2a2:	f4 cf       	rjmp	.-24     	; 0x28c <turn_left+0x16>
     2a4:	13 c0       	rjmp	.+38     	; 0x2cc <turn_left+0x56>
		USART_send_command_parameters(0, MAX_ROTATION_COUNTER_CLOCKWISE, 0);
		navigation_stepping_delay();
	}
	for(int i = 0; (i < 12 && TWI_get_autonom_settings() != 0); ++i)
	{
		walk_forward();
     2a6:	5e df       	rcall	.-324    	; 0x164 <walk_forward>
     2a8:	21 97       	sbiw	r28, 0x01	; 1
			//TWI_send_string(C_ADDRESS, "Rotating right.");
		}
		USART_send_command_parameters(0, MAX_ROTATION_COUNTER_CLOCKWISE, 0);
		navigation_stepping_delay();
	}
	for(int i = 0; (i < 12 && TWI_get_autonom_settings() != 0); ++i)
     2aa:	21 f0       	breq	.+8      	; 0x2b4 <turn_left+0x3e>
     2ac:	0e 94 70 09 	call	0x12e0	; 0x12e0 <TWI_get_autonom_settings>
     2b0:	81 11       	cpse	r24, r1
     2b2:	f9 cf       	rjmp	.-14     	; 0x2a6 <turn_left+0x30>
	{
		walk_forward();
	}
	if(gStatus)
     2b4:	80 91 00 01 	lds	r24, 0x0100
     2b8:	88 23       	and	r24, r24
     2ba:	59 f0       	breq	.+22     	; 0x2d2 <turn_left+0x5c>
	{
		TWI_send_string(C_ADDRESS, "Done turning left.");
     2bc:	6c e9       	ldi	r22, 0x9C	; 156
     2be:	71 e1       	ldi	r23, 0x11	; 17
     2c0:	80 e8       	ldi	r24, 0x80	; 128
     2c2:	33 d7       	rcall	.+3686   	; 0x112a <TWI_send_string>
     2c4:	06 c0       	rjmp	.+12     	; 0x2d2 <turn_left+0x5c>
{
	return gStatus;
}

void turn_left()
{
     2c6:	c4 e1       	ldi	r28, 0x14	; 20
     2c8:	d0 e0       	ldi	r29, 0x00	; 0
     2ca:	e8 cf       	rjmp	.-48     	; 0x29c <turn_left+0x26>
     2cc:	cc e0       	ldi	r28, 0x0C	; 12
     2ce:	d0 e0       	ldi	r29, 0x00	; 0
     2d0:	ed cf       	rjmp	.-38     	; 0x2ac <turn_left+0x36>
	}
	if(gStatus)
	{
		TWI_send_string(C_ADDRESS, "Done turning left.");
	}
}
     2d2:	df 91       	pop	r29
     2d4:	cf 91       	pop	r28
     2d6:	08 95       	ret

000002d8 <walk_bakwards>:
	navigation_stepping_delay();
	//TWI_send_float(C_ADDRESS, adjustmentRotation);
}

void walk_bakwards()
{
     2d8:	8f 92       	push	r8
     2da:	9f 92       	push	r9
     2dc:	af 92       	push	r10
     2de:	bf 92       	push	r11
     2e0:	cf 92       	push	r12
     2e2:	df 92       	push	r13
     2e4:	ef 92       	push	r14
     2e6:	ff 92       	push	r15
     2e8:	cf 93       	push	r28
     2ea:	df 93       	push	r29
	if(gStatus)
	{
		//TWI_send_string(C_ADDRESS, "Finding regulation parameters.");
	}
	float angleOffset = navigation_angle_offset();
     2ec:	1d d4       	rcall	.+2106   	; 0xb28 <navigation_angle_offset>
     2ee:	6b 01       	movw	r12, r22
     2f0:	7c 01       	movw	r14, r24
	float directionCompensationAngle = navigation_direction_regulation(angleOffset);
     2f2:	7e d2       	rcall	.+1276   	; 0x7f0 <navigation_direction_regulation>
     2f4:	4b 01       	movw	r8, r22
     2f6:	5c 01       	movw	r10, r24
	if(gStatus)
	{
		//TWI_send_string(C_ADDRESS, "Found regulation parameters.");
	}
	int adjustmentRotation = (51 + 50 * angleOffset * 2.0/PI);
     2f8:	20 e0       	ldi	r18, 0x00	; 0
     2fa:	30 e0       	ldi	r19, 0x00	; 0
     2fc:	48 e4       	ldi	r20, 0x48	; 72
     2fe:	52 e4       	ldi	r21, 0x42	; 66
     300:	c7 01       	movw	r24, r14
     302:	b6 01       	movw	r22, r12
     304:	0e 94 99 10 	call	0x2132	; 0x2132 <__mulsf3>
     308:	9b 01       	movw	r18, r22
     30a:	ac 01       	movw	r20, r24
     30c:	0e 94 52 0e 	call	0x1ca4	; 0x1ca4 <__addsf3>
     310:	2b ed       	ldi	r18, 0xDB	; 219
     312:	3f e0       	ldi	r19, 0x0F	; 15
     314:	49 e4       	ldi	r20, 0x49	; 73
     316:	50 e4       	ldi	r21, 0x40	; 64
     318:	0e 94 e5 0e 	call	0x1dca	; 0x1dca <__divsf3>
     31c:	20 e0       	ldi	r18, 0x00	; 0
     31e:	30 e0       	ldi	r19, 0x00	; 0
     320:	4c e4       	ldi	r20, 0x4C	; 76
     322:	52 e4       	ldi	r21, 0x42	; 66
     324:	0e 94 52 0e 	call	0x1ca4	; 0x1ca4 <__addsf3>
     328:	0e 94 4d 0f 	call	0x1e9a	; 0x1e9a <__fixsfsi>
	if (adjustmentRotation >= 100)
     32c:	64 36       	cpi	r22, 0x64	; 100
     32e:	71 05       	cpc	r23, r1
     330:	34 f4       	brge	.+12     	; 0x33e <walk_bakwards+0x66>
     332:	eb 01       	movw	r28, r22
     334:	dd 23       	and	r29, r29
     336:	2c f4       	brge	.+10     	; 0x342 <walk_bakwards+0x6a>
     338:	c0 e0       	ldi	r28, 0x00	; 0
     33a:	d0 e0       	ldi	r29, 0x00	; 0
     33c:	02 c0       	rjmp	.+4      	; 0x342 <walk_bakwards+0x6a>
	{
		adjustmentRotation = 100;
     33e:	c4 e6       	ldi	r28, 0x64	; 100
     340:	d0 e0       	ldi	r29, 0x00	; 0
	}
	else if(adjustmentRotation <= 0)
	{
		adjustmentRotation = 0;
	}
	int adjustmentDirection = 90 * directionCompensationAngle/(2*PI);
     342:	20 e0       	ldi	r18, 0x00	; 0
     344:	30 e0       	ldi	r19, 0x00	; 0
     346:	44 eb       	ldi	r20, 0xB4	; 180
     348:	52 e4       	ldi	r21, 0x42	; 66
     34a:	c5 01       	movw	r24, r10
     34c:	b4 01       	movw	r22, r8
     34e:	0e 94 99 10 	call	0x2132	; 0x2132 <__mulsf3>
     352:	2b ed       	ldi	r18, 0xDB	; 219
     354:	3f e0       	ldi	r19, 0x0F	; 15
     356:	49 ec       	ldi	r20, 0xC9	; 201
     358:	50 e4       	ldi	r21, 0x40	; 64
     35a:	0e 94 e5 0e 	call	0x1dca	; 0x1dca <__divsf3>
     35e:	0e 94 4d 0f 	call	0x1e9a	; 0x1e9a <__fixsfsi>
	if(adjustmentDirection <= 45)
     362:	6e 32       	cpi	r22, 0x2E	; 46
     364:	71 05       	cpc	r23, r1
     366:	2c f4       	brge	.+10     	; 0x372 <walk_bakwards+0x9a>
	{
		adjustmentDirection = 45 - adjustmentDirection;
     368:	8d e2       	ldi	r24, 0x2D	; 45
     36a:	90 e0       	ldi	r25, 0x00	; 0
     36c:	86 1b       	sub	r24, r22
     36e:	97 0b       	sbc	r25, r23
     370:	02 c0       	rjmp	.+4      	; 0x376 <walk_bakwards+0x9e>
	}
	else
	{
		adjustmentDirection = adjustmentDirection - 45;
     372:	cb 01       	movw	r24, r22
     374:	8d 97       	sbiw	r24, 0x2d	; 45
	
	if(gStatus)
	{
		//TWI_send_string(C_ADDRESS, "Taking a step.");
	}
	USART_send_command_parameters((uint8_t)adjustmentDirection, (uint8_t)adjustmentRotation, gSpeed);
     376:	40 91 01 01 	lds	r20, 0x0101
     37a:	6c 2f       	mov	r22, r28
     37c:	0e 94 48 0e 	call	0x1c90	; 0x1c90 <USART_send_command_parameters>
	//TWI_send_float(C_ADDRESS, adjustmentDirection);
	navigation_stepping_delay();
     380:	5e d1       	rcall	.+700    	; 0x63e <navigation_stepping_delay>
	//TWI_send_float(C_ADDRESS, adjustmentRotation);
}
     382:	df 91       	pop	r29
     384:	cf 91       	pop	r28
     386:	ff 90       	pop	r15
     388:	ef 90       	pop	r14
     38a:	df 90       	pop	r13
     38c:	cf 90       	pop	r12
     38e:	bf 90       	pop	r11
     390:	af 90       	pop	r10
     392:	9f 90       	pop	r9
     394:	8f 90       	pop	r8
     396:	08 95       	ret

00000398 <autonomouswalk_walk>:
		}
	}
}

void autonomouswalk_walk()
{
     398:	0f 93       	push	r16
     39a:	1f 93       	push	r17
     39c:	cf 93       	push	r28
     39e:	df 93       	push	r29
	navigation_low_pass_obstacle();
     3a0:	d7 d1       	rcall	.+942    	; 0x750 <navigation_low_pass_obstacle>
	if(navigation_left_algorithm())
     3a2:	41 d1       	rcall	.+642    	; 0x626 <navigation_left_algorithm>
     3a4:	88 23       	and	r24, r24
     3a6:	09 f4       	brne	.+2      	; 0x3aa <autonomouswalk_walk+0x12>
     3a8:	60 c0       	rjmp	.+192    	; 0x46a <autonomouswalk_walk+0xd2>
	{
		if(navigation_check_left_turn() == 2)
     3aa:	0d d2       	rcall	.+1050   	; 0x7c6 <navigation_check_left_turn>
     3ac:	82 30       	cpi	r24, 0x02	; 2
     3ae:	61 f4       	brne	.+24     	; 0x3c8 <autonomouswalk_walk+0x30>
     3b0:	04 c0       	rjmp	.+8      	; 0x3ba <autonomouswalk_walk+0x22>
		{
			for(int i = 0;(i < 4 && TWI_get_autonom_settings() != 0); ++i)
			{
				walk_forward();
     3b2:	d8 de       	rcall	.-592    	; 0x164 <walk_forward>
     3b4:	21 97       	sbiw	r28, 0x01	; 1
	navigation_low_pass_obstacle();
	if(navigation_left_algorithm())
	{
		if(navigation_check_left_turn() == 2)
		{
			for(int i = 0;(i < 4 && TWI_get_autonom_settings() != 0); ++i)
     3b6:	19 f4       	brne	.+6      	; 0x3be <autonomouswalk_walk+0x26>
     3b8:	05 c0       	rjmp	.+10     	; 0x3c4 <autonomouswalk_walk+0x2c>
void autonomouswalk_walk()
{
	navigation_low_pass_obstacle();
	if(navigation_left_algorithm())
	{
		if(navigation_check_left_turn() == 2)
     3ba:	c4 e0       	ldi	r28, 0x04	; 4
     3bc:	d0 e0       	ldi	r29, 0x00	; 0
		{
			for(int i = 0;(i < 4 && TWI_get_autonom_settings() != 0); ++i)
     3be:	90 d7       	rcall	.+3872   	; 0x12e0 <TWI_get_autonom_settings>
     3c0:	81 11       	cpse	r24, r1
     3c2:	f7 cf       	rjmp	.-18     	; 0x3b2 <autonomouswalk_walk+0x1a>
			{
				walk_forward();
			}
			turn_left();
     3c4:	58 df       	rcall	.-336    	; 0x276 <turn_left>
     3c6:	89 c0       	rjmp	.+274    	; 0x4da <autonomouswalk_walk+0x142>
		}
		else if(navigation_get_sensor(4) > CORRIDOR_WIDTH / 2)
     3c8:	84 e0       	ldi	r24, 0x04	; 4
     3ca:	90 e0       	ldi	r25, 0x00	; 0
     3cc:	7a d1       	rcall	.+756    	; 0x6c2 <navigation_get_sensor>
     3ce:	89 32       	cpi	r24, 0x29	; 41
     3d0:	10 f0       	brcs	.+4      	; 0x3d6 <autonomouswalk_walk+0x3e>
		{
			walk_forward();
     3d2:	c8 de       	rcall	.-624    	; 0x164 <walk_forward>
     3d4:	82 c0       	rjmp	.+260    	; 0x4da <autonomouswalk_walk+0x142>
		}
		else if(navigation_check_right_turn() == 2)
     3d6:	e2 d1       	rcall	.+964    	; 0x79c <navigation_check_right_turn>
     3d8:	82 30       	cpi	r24, 0x02	; 2
     3da:	11 f4       	brne	.+4      	; 0x3e0 <autonomouswalk_walk+0x48>
		{
			turn_right();
     3dc:	1b df       	rcall	.-458    	; 0x214 <turn_right>
     3de:	7d c0       	rjmp	.+250    	; 0x4da <autonomouswalk_walk+0x142>
		}
		else if(navigation_check_left_turn() == 0 && navigation_check_right_turn() == 0)
     3e0:	f2 d1       	rcall	.+996    	; 0x7c6 <navigation_check_left_turn>
     3e2:	81 11       	cpse	r24, r1
     3e4:	40 c0       	rjmp	.+128    	; 0x466 <autonomouswalk_walk+0xce>
     3e6:	da d1       	rcall	.+948    	; 0x79c <navigation_check_right_turn>
     3e8:	81 11       	cpse	r24, r1
     3ea:	3d c0       	rjmp	.+122    	; 0x466 <autonomouswalk_walk+0xce>
		{
			deadEndFlag = 1;
     3ec:	81 e0       	ldi	r24, 0x01	; 1
     3ee:	80 93 32 13 	sts	0x1332, r24
			deadEndFlag = 0;
			turn_around();
		}
		else if(navigation_check_left_turn())
		{
			deadEndFlag = 0;
     3f2:	04 e0       	ldi	r16, 0x04	; 4
     3f4:	10 e0       	ldi	r17, 0x00	; 0

void dead_end()
{
	while(deadEndFlag)
	{
		if(navigation_left_algorithm() && navigation_check_right_turn())
     3f6:	17 d1       	rcall	.+558    	; 0x626 <navigation_left_algorithm>
     3f8:	88 23       	and	r24, r24
     3fa:	79 f0       	breq	.+30     	; 0x41a <autonomouswalk_walk+0x82>
     3fc:	cf d1       	rcall	.+926    	; 0x79c <navigation_check_right_turn>
     3fe:	88 23       	and	r24, r24
     400:	61 f0       	breq	.+24     	; 0x41a <autonomouswalk_walk+0x82>
		{
			deadEndFlag = 0;
     402:	10 92 32 13 	sts	0x1332, r1
     406:	e8 01       	movw	r28, r16
     408:	03 c0       	rjmp	.+6      	; 0x410 <autonomouswalk_walk+0x78>
			for(int i = 0;(i < 4 && TWI_get_autonom_settings() != 0); ++i)
			{
				walk_bakwards();
     40a:	66 df       	rcall	.-308    	; 0x2d8 <walk_bakwards>
     40c:	21 97       	sbiw	r28, 0x01	; 1
	while(deadEndFlag)
	{
		if(navigation_left_algorithm() && navigation_check_right_turn())
		{
			deadEndFlag = 0;
			for(int i = 0;(i < 4 && TWI_get_autonom_settings() != 0); ++i)
     40e:	19 f0       	breq	.+6      	; 0x416 <autonomouswalk_walk+0x7e>
     410:	67 d7       	rcall	.+3790   	; 0x12e0 <TWI_get_autonom_settings>
     412:	81 11       	cpse	r24, r1
     414:	fa cf       	rjmp	.-12     	; 0x40a <autonomouswalk_walk+0x72>
			{
				walk_bakwards();
			}
			turn_right();
     416:	fe de       	rcall	.-516    	; 0x214 <turn_right>
     418:	21 c0       	rjmp	.+66     	; 0x45c <autonomouswalk_walk+0xc4>
		}
		else if(navigation_left_algorithm() && navigation_check_left_turn())
     41a:	05 d1       	rcall	.+522    	; 0x626 <navigation_left_algorithm>
     41c:	88 23       	and	r24, r24
     41e:	39 f0       	breq	.+14     	; 0x42e <autonomouswalk_walk+0x96>
     420:	d2 d1       	rcall	.+932    	; 0x7c6 <navigation_check_left_turn>
     422:	88 23       	and	r24, r24
     424:	21 f0       	breq	.+8      	; 0x42e <autonomouswalk_walk+0x96>
		{
			deadEndFlag = 0;
     426:	10 92 32 13 	sts	0x1332, r1
			turn_around();
     42a:	75 de       	rcall	.-790    	; 0x116 <turn_around>
     42c:	17 c0       	rjmp	.+46     	; 0x45c <autonomouswalk_walk+0xc4>
		}
		else if(navigation_check_left_turn())
     42e:	cb d1       	rcall	.+918    	; 0x7c6 <navigation_check_left_turn>
     430:	88 23       	and	r24, r24
     432:	61 f0       	breq	.+24     	; 0x44c <autonomouswalk_walk+0xb4>
		{
			deadEndFlag = 0;
     434:	10 92 32 13 	sts	0x1332, r1
     438:	e8 01       	movw	r28, r16
     43a:	03 c0       	rjmp	.+6      	; 0x442 <autonomouswalk_walk+0xaa>
			for(int i = 0;(i < 4 && TWI_get_autonom_settings() != 0); ++i)
			{
				walk_bakwards();
     43c:	4d df       	rcall	.-358    	; 0x2d8 <walk_bakwards>
     43e:	21 97       	sbiw	r28, 0x01	; 1
			turn_around();
		}
		else if(navigation_check_left_turn())
		{
			deadEndFlag = 0;
			for(int i = 0;(i < 4 && TWI_get_autonom_settings() != 0); ++i)
     440:	19 f0       	breq	.+6      	; 0x448 <autonomouswalk_walk+0xb0>
     442:	4e d7       	rcall	.+3740   	; 0x12e0 <TWI_get_autonom_settings>
     444:	81 11       	cpse	r24, r1
     446:	fa cf       	rjmp	.-12     	; 0x43c <autonomouswalk_walk+0xa4>
			{
				walk_bakwards();
			}
			turn_left();
     448:	16 df       	rcall	.-468    	; 0x276 <turn_left>
     44a:	08 c0       	rjmp	.+16     	; 0x45c <autonomouswalk_walk+0xc4>
		}
		else if(navigation_check_right_turn())
     44c:	a7 d1       	rcall	.+846    	; 0x79c <navigation_check_right_turn>
     44e:	88 23       	and	r24, r24
     450:	21 f0       	breq	.+8      	; 0x45a <autonomouswalk_walk+0xc2>
		{
			deadEndFlag = 0;
     452:	10 92 32 13 	sts	0x1332, r1
			turn_around();
     456:	5f de       	rcall	.-834    	; 0x116 <turn_around>
     458:	01 c0       	rjmp	.+2      	; 0x45c <autonomouswalk_walk+0xc4>
		}
		else
		{
			walk_bakwards();
     45a:	3e df       	rcall	.-388    	; 0x2d8 <walk_bakwards>
	//TWI_send_float(C_ADDRESS, adjustmentRotation);
}

void dead_end()
{
	while(deadEndFlag)
     45c:	80 91 32 13 	lds	r24, 0x1332
     460:	81 11       	cpse	r24, r1
     462:	c9 cf       	rjmp	.-110    	; 0x3f6 <autonomouswalk_walk+0x5e>
     464:	3a c0       	rjmp	.+116    	; 0x4da <autonomouswalk_walk+0x142>
			deadEndFlag = 1;
			dead_end();
		}
		else
		{
			walk_forward();
     466:	7e de       	rcall	.-772    	; 0x164 <walk_forward>
     468:	38 c0       	rjmp	.+112    	; 0x4da <autonomouswalk_walk+0x142>
		}
	}
	else
	{
		if(navigation_check_right_turn() == 2)
     46a:	98 d1       	rcall	.+816    	; 0x79c <navigation_check_right_turn>
     46c:	82 30       	cpi	r24, 0x02	; 2
     46e:	61 f4       	brne	.+24     	; 0x488 <autonomouswalk_walk+0xf0>
     470:	04 c0       	rjmp	.+8      	; 0x47a <autonomouswalk_walk+0xe2>
		{
			for(int i = 0;(i < 4 && TWI_get_autonom_settings() != 0); ++i)
			{
				walk_forward();
     472:	78 de       	rcall	.-784    	; 0x164 <walk_forward>
     474:	21 97       	sbiw	r28, 0x01	; 1
	}
	else
	{
		if(navigation_check_right_turn() == 2)
		{
			for(int i = 0;(i < 4 && TWI_get_autonom_settings() != 0); ++i)
     476:	19 f4       	brne	.+6      	; 0x47e <autonomouswalk_walk+0xe6>
     478:	05 c0       	rjmp	.+10     	; 0x484 <autonomouswalk_walk+0xec>
			walk_forward();
		}
	}
	else
	{
		if(navigation_check_right_turn() == 2)
     47a:	c4 e0       	ldi	r28, 0x04	; 4
     47c:	d0 e0       	ldi	r29, 0x00	; 0
		{
			for(int i = 0;(i < 4 && TWI_get_autonom_settings() != 0); ++i)
     47e:	30 d7       	rcall	.+3680   	; 0x12e0 <TWI_get_autonom_settings>
     480:	81 11       	cpse	r24, r1
     482:	f7 cf       	rjmp	.-18     	; 0x472 <autonomouswalk_walk+0xda>
			{
				walk_forward();
			}
			turn_right();
     484:	c7 de       	rcall	.-626    	; 0x214 <turn_right>
     486:	29 c0       	rjmp	.+82     	; 0x4da <autonomouswalk_walk+0x142>
		}
		else if(navigation_get_sensor(4) > CORRIDOR_WIDTH / 2)
     488:	84 e0       	ldi	r24, 0x04	; 4
     48a:	90 e0       	ldi	r25, 0x00	; 0
     48c:	1a d1       	rcall	.+564    	; 0x6c2 <navigation_get_sensor>
     48e:	89 32       	cpi	r24, 0x29	; 41
     490:	10 f0       	brcs	.+4      	; 0x496 <autonomouswalk_walk+0xfe>
		{
			walk_forward();
     492:	68 de       	rcall	.-816    	; 0x164 <walk_forward>
     494:	22 c0       	rjmp	.+68     	; 0x4da <autonomouswalk_walk+0x142>
		}
		else if(navigation_check_left_turn() == 2)
     496:	97 d1       	rcall	.+814    	; 0x7c6 <navigation_check_left_turn>
     498:	82 30       	cpi	r24, 0x02	; 2
     49a:	11 f4       	brne	.+4      	; 0x4a0 <autonomouswalk_walk+0x108>
		{
			turn_left();
     49c:	ec de       	rcall	.-552    	; 0x276 <turn_left>
     49e:	1d c0       	rjmp	.+58     	; 0x4da <autonomouswalk_walk+0x142>
		}
		else if(navigation_check_left_turn() == 0 && navigation_check_right_turn() == 0)
     4a0:	92 d1       	rcall	.+804    	; 0x7c6 <navigation_check_left_turn>
     4a2:	81 11       	cpse	r24, r1
     4a4:	05 c0       	rjmp	.+10     	; 0x4b0 <autonomouswalk_walk+0x118>
     4a6:	7a d1       	rcall	.+756    	; 0x79c <navigation_check_right_turn>
     4a8:	81 11       	cpse	r24, r1
     4aa:	02 c0       	rjmp	.+4      	; 0x4b0 <autonomouswalk_walk+0x118>
		{
			turn_around();
     4ac:	34 de       	rcall	.-920    	; 0x116 <turn_around>
     4ae:	15 c0       	rjmp	.+42     	; 0x4da <autonomouswalk_walk+0x142>
		}
		else if(decisionCounter < 4)
     4b0:	80 91 33 13 	lds	r24, 0x1333
     4b4:	84 30       	cpi	r24, 0x04	; 4
     4b6:	38 f4       	brcc	.+14     	; 0x4c6 <autonomouswalk_walk+0x12e>
		{
			walk_forward();
     4b8:	55 de       	rcall	.-854    	; 0x164 <walk_forward>
			++decisionCounter;
     4ba:	80 91 33 13 	lds	r24, 0x1333
     4be:	8f 5f       	subi	r24, 0xFF	; 255
     4c0:	80 93 33 13 	sts	0x1333, r24
     4c4:	0a c0       	rjmp	.+20     	; 0x4da <autonomouswalk_walk+0x142>
		}
		else
		{
			decisionCounter = 0;
     4c6:	10 92 33 13 	sts	0x1333, r1
			navigation_set_autonomous_walk(0);
     4ca:	80 e0       	ldi	r24, 0x00	; 0
     4cc:	b5 d0       	rcall	.+362    	; 0x638 <navigation_set_autonomous_walk>
			TWI_send_string_fixed_length(C_ADDRESS, "ERROR: Can't make a decision, turning off autonomous mode", 57);
     4ce:	49 e3       	ldi	r20, 0x39	; 57
     4d0:	50 e0       	ldi	r21, 0x00	; 0
     4d2:	6f ea       	ldi	r22, 0xAF	; 175
     4d4:	71 e1       	ldi	r23, 0x11	; 17
     4d6:	80 e8       	ldi	r24, 0x80	; 128
     4d8:	6e d6       	rcall	.+3292   	; 0x11b6 <TWI_send_string_fixed_length>
		}
	}
     4da:	df 91       	pop	r29
     4dc:	cf 91       	pop	r28
     4de:	1f 91       	pop	r17
     4e0:	0f 91       	pop	r16
     4e2:	08 95       	ret

000004e4 <set_counter_1>:
     4e4:	bc 01       	movw	r22, r24
     4e6:	80 e0       	ldi	r24, 0x00	; 0
     4e8:	90 e0       	ldi	r25, 0x00	; 0
     4ea:	0e 94 7e 0f 	call	0x1efc	; 0x1efc <__floatunsisf>
     4ee:	20 e0       	ldi	r18, 0x00	; 0
     4f0:	30 e0       	ldi	r19, 0x00	; 0
     4f2:	4a e7       	ldi	r20, 0x7A	; 122
     4f4:	51 e4       	ldi	r21, 0x41	; 65
     4f6:	0e 94 99 10 	call	0x2132	; 0x2132 <__mulsf3>
     4fa:	0e 94 52 0f 	call	0x1ea4	; 0x1ea4 <__fixunssfsi>
     4fe:	70 93 89 00 	sts	0x0089, r23
     502:	60 93 88 00 	sts	0x0088, r22
     506:	08 95       	ret

00000508 <set_counter_2>:
     508:	bc 01       	movw	r22, r24
     50a:	80 e0       	ldi	r24, 0x00	; 0
     50c:	90 e0       	ldi	r25, 0x00	; 0
     50e:	0e 94 7e 0f 	call	0x1efc	; 0x1efc <__floatunsisf>
     512:	20 e0       	ldi	r18, 0x00	; 0
     514:	30 e0       	ldi	r19, 0x00	; 0
     516:	4a e7       	ldi	r20, 0x7A	; 122
     518:	51 e4       	ldi	r21, 0x41	; 65
     51a:	0e 94 99 10 	call	0x2132	; 0x2132 <__mulsf3>
     51e:	0e 94 52 0f 	call	0x1ea4	; 0x1ea4 <__fixunssfsi>
     522:	70 93 99 00 	sts	0x0099, r23
     526:	60 93 98 00 	sts	0x0098, r22
     52a:	08 95       	ret

0000052c <init_counters>:
     52c:	e1 e8       	ldi	r30, 0x81	; 129
     52e:	f0 e0       	ldi	r31, 0x00	; 0
     530:	80 81       	ld	r24, Z
     532:	85 60       	ori	r24, 0x05	; 5
     534:	80 83       	st	Z, r24
     536:	e1 e9       	ldi	r30, 0x91	; 145
     538:	f0 e0       	ldi	r31, 0x00	; 0
     53a:	80 81       	ld	r24, Z
     53c:	85 60       	ori	r24, 0x05	; 5
     53e:	80 83       	st	Z, r24
     540:	88 ee       	ldi	r24, 0xE8	; 232
     542:	93 e0       	ldi	r25, 0x03	; 3
     544:	cf df       	rcall	.-98     	; 0x4e4 <set_counter_1>
     546:	88 ee       	ldi	r24, 0xE8	; 232
     548:	93 e0       	ldi	r25, 0x03	; 3
     54a:	de df       	rcall	.-68     	; 0x508 <set_counter_2>
     54c:	ef e6       	ldi	r30, 0x6F	; 111
     54e:	f0 e0       	ldi	r31, 0x00	; 0
     550:	80 81       	ld	r24, Z
     552:	82 60       	ori	r24, 0x02	; 2
     554:	80 83       	st	Z, r24
     556:	e1 e7       	ldi	r30, 0x71	; 113
     558:	f0 e0       	ldi	r31, 0x00	; 0
     55a:	80 81       	ld	r24, Z
     55c:	82 60       	ori	r24, 0x02	; 2
     55e:	80 83       	st	Z, r24
     560:	10 92 85 00 	sts	0x0085, r1
     564:	10 92 84 00 	sts	0x0084, r1
     568:	10 92 95 00 	sts	0x0095, r1
     56c:	10 92 94 00 	sts	0x0094, r1
     570:	08 95       	ret

00000572 <FifoDataLength>:
     572:	fc 01       	movw	r30, r24
     574:	90 81       	ld	r25, Z
     576:	91 50       	subi	r25, 0x01	; 1
     578:	84 81       	ldd	r24, Z+4	; 0x04
     57a:	22 81       	ldd	r18, Z+2	; 0x02
     57c:	82 1b       	sub	r24, r18
     57e:	89 23       	and	r24, r25
     580:	08 95       	ret

00000582 <FifoWrite>:
     582:	1f 93       	push	r17
     584:	cf 93       	push	r28
     586:	df 93       	push	r29
     588:	ec 01       	movw	r28, r24
     58a:	16 2f       	mov	r17, r22
     58c:	f2 df       	rcall	.-28     	; 0x572 <FifoDataLength>
     58e:	28 81       	ld	r18, Y
     590:	39 81       	ldd	r19, Y+1	; 0x01
     592:	21 50       	subi	r18, 0x01	; 1
     594:	31 09       	sbc	r19, r1
     596:	90 e0       	ldi	r25, 0x00	; 0
     598:	82 17       	cp	r24, r18
     59a:	93 07       	cpc	r25, r19
     59c:	69 f0       	breq	.+26     	; 0x5b8 <FifoWrite+0x36>
     59e:	8c 81       	ldd	r24, Y+4	; 0x04
     5a0:	9d 81       	ldd	r25, Y+5	; 0x05
     5a2:	fe 01       	movw	r30, r28
     5a4:	e8 0f       	add	r30, r24
     5a6:	f9 1f       	adc	r31, r25
     5a8:	16 83       	std	Z+6, r17	; 0x06
     5aa:	01 96       	adiw	r24, 0x01	; 1
     5ac:	28 23       	and	r18, r24
     5ae:	39 23       	and	r19, r25
     5b0:	3d 83       	std	Y+5, r19	; 0x05
     5b2:	2c 83       	std	Y+4, r18	; 0x04
     5b4:	80 e0       	ldi	r24, 0x00	; 0
     5b6:	01 c0       	rjmp	.+2      	; 0x5ba <FifoWrite+0x38>
     5b8:	81 e0       	ldi	r24, 0x01	; 1
     5ba:	df 91       	pop	r29
     5bc:	cf 91       	pop	r28
     5be:	1f 91       	pop	r17
     5c0:	08 95       	ret

000005c2 <FifoRead>:
     5c2:	0f 93       	push	r16
     5c4:	1f 93       	push	r17
     5c6:	cf 93       	push	r28
     5c8:	df 93       	push	r29
     5ca:	ec 01       	movw	r28, r24
     5cc:	8b 01       	movw	r16, r22
     5ce:	d1 df       	rcall	.-94     	; 0x572 <FifoDataLength>
     5d0:	88 23       	and	r24, r24
     5d2:	a1 f0       	breq	.+40     	; 0x5fc <FifoRead+0x3a>
     5d4:	ea 81       	ldd	r30, Y+2	; 0x02
     5d6:	fb 81       	ldd	r31, Y+3	; 0x03
     5d8:	ec 0f       	add	r30, r28
     5da:	fd 1f       	adc	r31, r29
     5dc:	86 81       	ldd	r24, Z+6	; 0x06
     5de:	f8 01       	movw	r30, r16
     5e0:	80 83       	st	Z, r24
     5e2:	28 81       	ld	r18, Y
     5e4:	39 81       	ldd	r19, Y+1	; 0x01
     5e6:	21 50       	subi	r18, 0x01	; 1
     5e8:	31 09       	sbc	r19, r1
     5ea:	8a 81       	ldd	r24, Y+2	; 0x02
     5ec:	9b 81       	ldd	r25, Y+3	; 0x03
     5ee:	01 96       	adiw	r24, 0x01	; 1
     5f0:	82 23       	and	r24, r18
     5f2:	93 23       	and	r25, r19
     5f4:	9b 83       	std	Y+3, r25	; 0x03
     5f6:	8a 83       	std	Y+2, r24	; 0x02
     5f8:	80 e0       	ldi	r24, 0x00	; 0
     5fa:	01 c0       	rjmp	.+2      	; 0x5fe <FifoRead+0x3c>
     5fc:	81 e0       	ldi	r24, 0x01	; 1
     5fe:	df 91       	pop	r29
     600:	cf 91       	pop	r28
     602:	1f 91       	pop	r17
     604:	0f 91       	pop	r16
     606:	08 95       	ret

00000608 <navigation_set_Kp>:
     608:	68 2f       	mov	r22, r24
     60a:	70 e0       	ldi	r23, 0x00	; 0
     60c:	80 e0       	ldi	r24, 0x00	; 0
     60e:	90 e0       	ldi	r25, 0x00	; 0
     610:	0e 94 7e 0f 	call	0x1efc	; 0x1efc <__floatunsisf>
     614:	60 93 03 01 	sts	0x0103, r22
     618:	70 93 04 01 	sts	0x0104, r23
     61c:	80 93 05 01 	sts	0x0105, r24
     620:	90 93 06 01 	sts	0x0106, r25
     624:	08 95       	ret

00000626 <navigation_left_algorithm>:
     626:	80 91 07 01 	lds	r24, 0x0107
     62a:	08 95       	ret

0000062c <navigation_set_algorithm>:
     62c:	80 93 07 01 	sts	0x0107, r24
     630:	08 95       	ret

00000632 <navigation_autonomous_walk>:
     632:	80 91 02 01 	lds	r24, 0x0102
     636:	08 95       	ret

00000638 <navigation_set_autonomous_walk>:
     638:	80 93 02 01 	sts	0x0102, r24
     63c:	08 95       	ret

0000063e <navigation_stepping_delay>:
     63e:	cf 93       	push	r28
     640:	c2 e0       	ldi	r28, 0x02	; 2
     642:	0e c0       	rjmp	.+28     	; 0x660 <navigation_stepping_delay+0x22>
     644:	0e 94 94 0d 	call	0x1b28	; 0x1b28 <USART_DecodeRxFIFO>
     648:	2f ef       	ldi	r18, 0xFF	; 255
     64a:	89 ef       	ldi	r24, 0xF9	; 249
     64c:	90 e0       	ldi	r25, 0x00	; 0
     64e:	21 50       	subi	r18, 0x01	; 1
     650:	80 40       	sbci	r24, 0x00	; 0
     652:	90 40       	sbci	r25, 0x00	; 0
     654:	e1 f7       	brne	.-8      	; 0x64e <navigation_stepping_delay+0x10>
     656:	00 c0       	rjmp	.+0      	; 0x658 <navigation_stepping_delay+0x1a>
     658:	00 00       	nop
     65a:	82 b1       	in	r24, 0x02	; 2
     65c:	8c 27       	eor	r24, r28
     65e:	82 b9       	out	0x02, r24	; 2
     660:	0e 94 8a 0d 	call	0x1b14	; 0x1b14 <USART_ready>
     664:	88 23       	and	r24, r24
     666:	71 f3       	breq	.-36     	; 0x644 <navigation_stepping_delay+0x6>
     668:	cf 91       	pop	r28
     66a:	08 95       	ret

0000066c <navigation_fill_buffer>:
     66c:	0f 93       	push	r16
     66e:	1f 93       	push	r17
     670:	cf 93       	push	r28
     672:	df 93       	push	r29
     674:	c0 e0       	ldi	r28, 0x00	; 0
     676:	d0 e0       	ldi	r29, 0x00	; 0
     678:	00 91 35 13 	lds	r16, 0x1335
     67c:	10 e0       	ldi	r17, 0x00	; 0
     67e:	ce 01       	movw	r24, r28
     680:	25 d6       	rcall	.+3146   	; 0x12cc <TWI_get_sensor>
     682:	fe 01       	movw	r30, r28
     684:	ee 0f       	add	r30, r30
     686:	ff 1f       	adc	r31, r31
     688:	ee 0f       	add	r30, r30
     68a:	ff 1f       	adc	r31, r31
     68c:	ec 0f       	add	r30, r28
     68e:	fd 1f       	adc	r31, r29
     690:	0e 0f       	add	r16, r30
     692:	1f 1f       	adc	r17, r31
     694:	f8 01       	movw	r30, r16
     696:	e7 5b       	subi	r30, 0xB7	; 183
     698:	fc 4e       	sbci	r31, 0xEC	; 236
     69a:	80 83       	st	Z, r24
     69c:	21 96       	adiw	r28, 0x01	; 1
     69e:	c8 30       	cpi	r28, 0x08	; 8
     6a0:	d1 05       	cpc	r29, r1
     6a2:	51 f7       	brne	.-44     	; 0x678 <navigation_fill_buffer+0xc>
     6a4:	80 91 35 13 	lds	r24, 0x1335
     6a8:	84 30       	cpi	r24, 0x04	; 4
     6aa:	19 f4       	brne	.+6      	; 0x6b2 <navigation_fill_buffer+0x46>
     6ac:	10 92 35 13 	sts	0x1335, r1
     6b0:	03 c0       	rjmp	.+6      	; 0x6b8 <navigation_fill_buffer+0x4c>
     6b2:	8f 5f       	subi	r24, 0xFF	; 255
     6b4:	80 93 35 13 	sts	0x1335, r24
     6b8:	df 91       	pop	r29
     6ba:	cf 91       	pop	r28
     6bc:	1f 91       	pop	r17
     6be:	0f 91       	pop	r16
     6c0:	08 95       	ret

000006c2 <navigation_get_sensor>:
     6c2:	cf 93       	push	r28
     6c4:	df 93       	push	r29
     6c6:	00 d0       	rcall	.+0      	; 0x6c8 <navigation_get_sensor+0x6>
     6c8:	00 d0       	rcall	.+0      	; 0x6ca <navigation_get_sensor+0x8>
     6ca:	1f 92       	push	r1
     6cc:	cd b7       	in	r28, 0x3d	; 61
     6ce:	de b7       	in	r29, 0x3e	; 62
     6d0:	fc 01       	movw	r30, r24
     6d2:	ee 0f       	add	r30, r30
     6d4:	ff 1f       	adc	r31, r31
     6d6:	ee 0f       	add	r30, r30
     6d8:	ff 1f       	adc	r31, r31
     6da:	8e 0f       	add	r24, r30
     6dc:	9f 1f       	adc	r25, r31
     6de:	fc 01       	movw	r30, r24
     6e0:	e7 5b       	subi	r30, 0xB7	; 183
     6e2:	fc 4e       	sbci	r31, 0xEC	; 236
     6e4:	80 81       	ld	r24, Z
     6e6:	89 83       	std	Y+1, r24	; 0x01
     6e8:	81 81       	ldd	r24, Z+1	; 0x01
     6ea:	8a 83       	std	Y+2, r24	; 0x02
     6ec:	82 81       	ldd	r24, Z+2	; 0x02
     6ee:	8b 83       	std	Y+3, r24	; 0x03
     6f0:	83 81       	ldd	r24, Z+3	; 0x03
     6f2:	8c 83       	std	Y+4, r24	; 0x04
     6f4:	84 81       	ldd	r24, Z+4	; 0x04
     6f6:	8d 83       	std	Y+5, r24	; 0x05
     6f8:	24 e0       	ldi	r18, 0x04	; 4
     6fa:	30 e0       	ldi	r19, 0x00	; 0
     6fc:	0e c0       	rjmp	.+28     	; 0x71a <navigation_get_sensor+0x58>
     6fe:	41 91       	ld	r20, Z+
     700:	50 81       	ld	r21, Z
     702:	54 17       	cp	r21, r20
     704:	20 f4       	brcc	.+8      	; 0x70e <navigation_get_sensor+0x4c>
     706:	df 01       	movw	r26, r30
     708:	11 97       	sbiw	r26, 0x01	; 1
     70a:	5c 93       	st	X, r21
     70c:	40 83       	st	Z, r20
     70e:	8e 17       	cp	r24, r30
     710:	9f 07       	cpc	r25, r31
     712:	a9 f7       	brne	.-22     	; 0x6fe <navigation_get_sensor+0x3c>
     714:	21 50       	subi	r18, 0x01	; 1
     716:	31 09       	sbc	r19, r1
     718:	49 f0       	breq	.+18     	; 0x72c <navigation_get_sensor+0x6a>
     71a:	12 16       	cp	r1, r18
     71c:	13 06       	cpc	r1, r19
     71e:	d4 f7       	brge	.-12     	; 0x714 <navigation_get_sensor+0x52>
     720:	fe 01       	movw	r30, r28
     722:	31 96       	adiw	r30, 0x01	; 1
     724:	cf 01       	movw	r24, r30
     726:	82 0f       	add	r24, r18
     728:	93 1f       	adc	r25, r19
     72a:	e9 cf       	rjmp	.-46     	; 0x6fe <navigation_get_sensor+0x3c>
     72c:	8b 81       	ldd	r24, Y+3	; 0x03
     72e:	0f 90       	pop	r0
     730:	0f 90       	pop	r0
     732:	0f 90       	pop	r0
     734:	0f 90       	pop	r0
     736:	0f 90       	pop	r0
     738:	df 91       	pop	r29
     73a:	cf 91       	pop	r28
     73c:	08 95       	ret

0000073e <navigation_detect_low_pass_obsticle>:
     73e:	85 e0       	ldi	r24, 0x05	; 5
     740:	90 e0       	ldi	r25, 0x00	; 0
     742:	bf df       	rcall	.-130    	; 0x6c2 <navigation_get_sensor>
     744:	91 e0       	ldi	r25, 0x01	; 1
     746:	84 36       	cpi	r24, 0x64	; 100
     748:	08 f0       	brcs	.+2      	; 0x74c <navigation_detect_low_pass_obsticle+0xe>
     74a:	90 e0       	ldi	r25, 0x00	; 0
     74c:	89 2f       	mov	r24, r25
     74e:	08 95       	ret

00000750 <navigation_low_pass_obstacle>:
     750:	f6 df       	rcall	.-20     	; 0x73e <navigation_detect_low_pass_obsticle>
     752:	88 23       	and	r24, r24
     754:	e9 f0       	breq	.+58     	; 0x790 <navigation_low_pass_obstacle+0x40>
     756:	80 91 34 13 	lds	r24, 0x1334
     75a:	81 11       	cpse	r24, r1
     75c:	19 c0       	rjmp	.+50     	; 0x790 <navigation_low_pass_obstacle+0x40>
     75e:	4b e1       	ldi	r20, 0x1B	; 27
     760:	50 e0       	ldi	r21, 0x00	; 0
     762:	69 ee       	ldi	r22, 0xE9	; 233
     764:	71 e1       	ldi	r23, 0x11	; 17
     766:	80 e4       	ldi	r24, 0x40	; 64
     768:	26 d5       	rcall	.+2636   	; 0x11b6 <TWI_send_string_fixed_length>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     76a:	2f ef       	ldi	r18, 0xFF	; 255
     76c:	86 e7       	ldi	r24, 0x76	; 118
     76e:	91 e0       	ldi	r25, 0x01	; 1
     770:	21 50       	subi	r18, 0x01	; 1
     772:	80 40       	sbci	r24, 0x00	; 0
     774:	90 40       	sbci	r25, 0x00	; 0
     776:	e1 f7       	brne	.-8      	; 0x770 <navigation_low_pass_obstacle+0x20>
     778:	00 c0       	rjmp	.+0      	; 0x77a <navigation_low_pass_obstacle+0x2a>
     77a:	00 00       	nop
     77c:	4b e1       	ldi	r20, 0x1B	; 27
     77e:	50 e0       	ldi	r21, 0x00	; 0
     780:	69 ee       	ldi	r22, 0xE9	; 233
     782:	71 e1       	ldi	r23, 0x11	; 17
     784:	80 e8       	ldi	r24, 0x80	; 128
     786:	17 d5       	rcall	.+2606   	; 0x11b6 <TWI_send_string_fixed_length>
     788:	81 e0       	ldi	r24, 0x01	; 1
     78a:	80 93 34 13 	sts	0x1334, r24
     78e:	08 95       	ret
     790:	d6 df       	rcall	.-84     	; 0x73e <navigation_detect_low_pass_obsticle>
     792:	81 11       	cpse	r24, r1
     794:	02 c0       	rjmp	.+4      	; 0x79a <navigation_low_pass_obstacle+0x4a>
     796:	10 92 34 13 	sts	0x1334, r1
     79a:	08 95       	ret

0000079c <navigation_check_right_turn>:
     79c:	81 e0       	ldi	r24, 0x01	; 1
     79e:	90 e0       	ldi	r25, 0x00	; 0
     7a0:	90 df       	rcall	.-224    	; 0x6c2 <navigation_get_sensor>
     7a2:	8c 33       	cpi	r24, 0x3C	; 60
     7a4:	28 f0       	brcs	.+10     	; 0x7b0 <navigation_check_right_turn+0x14>
     7a6:	83 e0       	ldi	r24, 0x03	; 3
     7a8:	90 e0       	ldi	r25, 0x00	; 0
     7aa:	8b df       	rcall	.-234    	; 0x6c2 <navigation_get_sensor>
     7ac:	8c 33       	cpi	r24, 0x3C	; 60
     7ae:	40 f4       	brcc	.+16     	; 0x7c0 <navigation_check_right_turn+0x24>
     7b0:	81 e0       	ldi	r24, 0x01	; 1
     7b2:	90 e0       	ldi	r25, 0x00	; 0
     7b4:	86 df       	rcall	.-244    	; 0x6c2 <navigation_get_sensor>
     7b6:	91 e0       	ldi	r25, 0x01	; 1
     7b8:	86 34       	cpi	r24, 0x46	; 70
     7ba:	18 f4       	brcc	.+6      	; 0x7c2 <navigation_check_right_turn+0x26>
     7bc:	90 e0       	ldi	r25, 0x00	; 0
     7be:	01 c0       	rjmp	.+2      	; 0x7c2 <navigation_check_right_turn+0x26>
     7c0:	92 e0       	ldi	r25, 0x02	; 2
     7c2:	89 2f       	mov	r24, r25
     7c4:	08 95       	ret

000007c6 <navigation_check_left_turn>:
     7c6:	80 e0       	ldi	r24, 0x00	; 0
     7c8:	90 e0       	ldi	r25, 0x00	; 0
     7ca:	7b df       	rcall	.-266    	; 0x6c2 <navigation_get_sensor>
     7cc:	8c 33       	cpi	r24, 0x3C	; 60
     7ce:	28 f0       	brcs	.+10     	; 0x7da <navigation_check_left_turn+0x14>
     7d0:	82 e0       	ldi	r24, 0x02	; 2
     7d2:	90 e0       	ldi	r25, 0x00	; 0
     7d4:	76 df       	rcall	.-276    	; 0x6c2 <navigation_get_sensor>
     7d6:	8c 33       	cpi	r24, 0x3C	; 60
     7d8:	40 f4       	brcc	.+16     	; 0x7ea <navigation_check_left_turn+0x24>
     7da:	80 e0       	ldi	r24, 0x00	; 0
     7dc:	90 e0       	ldi	r25, 0x00	; 0
     7de:	71 df       	rcall	.-286    	; 0x6c2 <navigation_get_sensor>
     7e0:	91 e0       	ldi	r25, 0x01	; 1
     7e2:	86 34       	cpi	r24, 0x46	; 70
     7e4:	18 f4       	brcc	.+6      	; 0x7ec <navigation_check_left_turn+0x26>
     7e6:	90 e0       	ldi	r25, 0x00	; 0
     7e8:	01 c0       	rjmp	.+2      	; 0x7ec <navigation_check_left_turn+0x26>
     7ea:	92 e0       	ldi	r25, 0x02	; 2
     7ec:	89 2f       	mov	r24, r25
     7ee:	08 95       	ret

000007f0 <navigation_direction_regulation>:
     7f0:	cf 92       	push	r12
     7f2:	df 92       	push	r13
     7f4:	ef 92       	push	r14
     7f6:	ff 92       	push	r15
     7f8:	cf 93       	push	r28
     7fa:	df 93       	push	r29
     7fc:	6b 01       	movw	r12, r22
     7fe:	7c 01       	movw	r14, r24
     800:	80 91 07 01 	lds	r24, 0x0107
     804:	88 23       	and	r24, r24
     806:	09 f4       	brne	.+2      	; 0x80a <navigation_direction_regulation+0x1a>
     808:	98 c0       	rjmp	.+304    	; 0x93a <navigation_direction_regulation+0x14a>
     80a:	82 e0       	ldi	r24, 0x02	; 2
     80c:	90 e0       	ldi	r25, 0x00	; 0
     80e:	59 df       	rcall	.-334    	; 0x6c2 <navigation_get_sensor>
     810:	c8 2f       	mov	r28, r24
     812:	80 e0       	ldi	r24, 0x00	; 0
     814:	90 e0       	ldi	r25, 0x00	; 0
     816:	55 df       	rcall	.-342    	; 0x6c2 <navigation_get_sensor>
     818:	2c 2f       	mov	r18, r28
     81a:	30 e0       	ldi	r19, 0x00	; 0
     81c:	a9 01       	movw	r20, r18
     81e:	48 1b       	sub	r20, r24
     820:	51 09       	sbc	r21, r1
     822:	ca 01       	movw	r24, r20
     824:	99 23       	and	r25, r25
     826:	1c f4       	brge	.+6      	; 0x82e <navigation_direction_regulation+0x3e>
     828:	91 95       	neg	r25
     82a:	81 95       	neg	r24
     82c:	91 09       	sbc	r25, r1
     82e:	0a 97       	sbiw	r24, 0x0a	; 10
     830:	b4 f5       	brge	.+108    	; 0x89e <navigation_direction_regulation+0xae>
     832:	80 e0       	ldi	r24, 0x00	; 0
     834:	90 e0       	ldi	r25, 0x00	; 0
     836:	45 df       	rcall	.-374    	; 0x6c2 <navigation_get_sensor>
     838:	82 33       	cpi	r24, 0x32	; 50
     83a:	88 f5       	brcc	.+98     	; 0x89e <navigation_direction_regulation+0xae>
     83c:	82 e0       	ldi	r24, 0x02	; 2
     83e:	90 e0       	ldi	r25, 0x00	; 0
     840:	40 df       	rcall	.-384    	; 0x6c2 <navigation_get_sensor>
     842:	c8 2f       	mov	r28, r24
     844:	80 e0       	ldi	r24, 0x00	; 0
     846:	90 e0       	ldi	r25, 0x00	; 0
     848:	3c df       	rcall	.-392    	; 0x6c2 <navigation_get_sensor>
     84a:	d8 2f       	mov	r29, r24
     84c:	c7 01       	movw	r24, r14
     84e:	b6 01       	movw	r22, r12
     850:	0e 94 e2 0e 	call	0x1dc4	; 0x1dc4 <cos>
     854:	6b 01       	movw	r12, r22
     856:	7c 01       	movw	r14, r24
     858:	6d 2f       	mov	r22, r29
     85a:	70 e0       	ldi	r23, 0x00	; 0
     85c:	6c 0f       	add	r22, r28
     85e:	71 1d       	adc	r23, r1
     860:	88 27       	eor	r24, r24
     862:	77 fd       	sbrc	r23, 7
     864:	80 95       	com	r24
     866:	98 2f       	mov	r25, r24
     868:	0e 94 80 0f 	call	0x1f00	; 0x1f00 <__floatsisf>
     86c:	20 e0       	ldi	r18, 0x00	; 0
     86e:	30 e0       	ldi	r19, 0x00	; 0
     870:	40 e0       	ldi	r20, 0x00	; 0
     872:	5f e3       	ldi	r21, 0x3F	; 63
     874:	0e 94 99 10 	call	0x2132	; 0x2132 <__mulsf3>
     878:	20 e0       	ldi	r18, 0x00	; 0
     87a:	30 e0       	ldi	r19, 0x00	; 0
     87c:	40 ef       	ldi	r20, 0xF0	; 240
     87e:	50 e4       	ldi	r21, 0x40	; 64
     880:	0e 94 52 0e 	call	0x1ca4	; 0x1ca4 <__addsf3>
     884:	a7 01       	movw	r20, r14
     886:	96 01       	movw	r18, r12
     888:	0e 94 99 10 	call	0x2132	; 0x2132 <__mulsf3>
     88c:	20 e0       	ldi	r18, 0x00	; 0
     88e:	30 e0       	ldi	r19, 0x00	; 0
     890:	40 e2       	ldi	r20, 0x20	; 32
     892:	52 e4       	ldi	r21, 0x42	; 66
     894:	0e 94 51 0e 	call	0x1ca2	; 0x1ca2 <__subsf3>
     898:	0e 94 4d 0f 	call	0x1e9a	; 0x1e9a <__fixsfsi>
     89c:	e5 c0       	rjmp	.+458    	; 0xa68 <navigation_direction_regulation+0x278>
     89e:	81 e0       	ldi	r24, 0x01	; 1
     8a0:	90 e0       	ldi	r25, 0x00	; 0
     8a2:	0f df       	rcall	.-482    	; 0x6c2 <navigation_get_sensor>
     8a4:	c8 2f       	mov	r28, r24
     8a6:	83 e0       	ldi	r24, 0x03	; 3
     8a8:	90 e0       	ldi	r25, 0x00	; 0
     8aa:	0b df       	rcall	.-490    	; 0x6c2 <navigation_get_sensor>
     8ac:	2c 2f       	mov	r18, r28
     8ae:	30 e0       	ldi	r19, 0x00	; 0
     8b0:	a9 01       	movw	r20, r18
     8b2:	48 1b       	sub	r20, r24
     8b4:	51 09       	sbc	r21, r1
     8b6:	ca 01       	movw	r24, r20
     8b8:	99 23       	and	r25, r25
     8ba:	1c f4       	brge	.+6      	; 0x8c2 <navigation_direction_regulation+0xd2>
     8bc:	91 95       	neg	r25
     8be:	81 95       	neg	r24
     8c0:	91 09       	sbc	r25, r1
     8c2:	0a 97       	sbiw	r24, 0x0a	; 10
     8c4:	0c f0       	brlt	.+2      	; 0x8c8 <navigation_direction_regulation+0xd8>
     8c6:	21 c1       	rjmp	.+578    	; 0xb0a <navigation_direction_regulation+0x31a>
     8c8:	81 e0       	ldi	r24, 0x01	; 1
     8ca:	90 e0       	ldi	r25, 0x00	; 0
     8cc:	fa de       	rcall	.-524    	; 0x6c2 <navigation_get_sensor>
     8ce:	82 33       	cpi	r24, 0x32	; 50
     8d0:	08 f0       	brcs	.+2      	; 0x8d4 <navigation_direction_regulation+0xe4>
     8d2:	1b c1       	rjmp	.+566    	; 0xb0a <navigation_direction_regulation+0x31a>
     8d4:	81 e0       	ldi	r24, 0x01	; 1
     8d6:	90 e0       	ldi	r25, 0x00	; 0
     8d8:	f4 de       	rcall	.-536    	; 0x6c2 <navigation_get_sensor>
     8da:	c8 2f       	mov	r28, r24
     8dc:	83 e0       	ldi	r24, 0x03	; 3
     8de:	90 e0       	ldi	r25, 0x00	; 0
     8e0:	f0 de       	rcall	.-544    	; 0x6c2 <navigation_get_sensor>
     8e2:	d8 2f       	mov	r29, r24
     8e4:	c7 01       	movw	r24, r14
     8e6:	b6 01       	movw	r22, r12
     8e8:	0e 94 e2 0e 	call	0x1dc4	; 0x1dc4 <cos>
     8ec:	6b 01       	movw	r12, r22
     8ee:	7c 01       	movw	r14, r24
     8f0:	6d 2f       	mov	r22, r29
     8f2:	70 e0       	ldi	r23, 0x00	; 0
     8f4:	6c 0f       	add	r22, r28
     8f6:	71 1d       	adc	r23, r1
     8f8:	88 27       	eor	r24, r24
     8fa:	77 fd       	sbrc	r23, 7
     8fc:	80 95       	com	r24
     8fe:	98 2f       	mov	r25, r24
     900:	0e 94 80 0f 	call	0x1f00	; 0x1f00 <__floatsisf>
     904:	20 e0       	ldi	r18, 0x00	; 0
     906:	30 e0       	ldi	r19, 0x00	; 0
     908:	40 e0       	ldi	r20, 0x00	; 0
     90a:	5f e3       	ldi	r21, 0x3F	; 63
     90c:	0e 94 99 10 	call	0x2132	; 0x2132 <__mulsf3>
     910:	20 e0       	ldi	r18, 0x00	; 0
     912:	30 e0       	ldi	r19, 0x00	; 0
     914:	40 ef       	ldi	r20, 0xF0	; 240
     916:	50 e4       	ldi	r21, 0x40	; 64
     918:	0e 94 52 0e 	call	0x1ca4	; 0x1ca4 <__addsf3>
     91c:	a7 01       	movw	r20, r14
     91e:	96 01       	movw	r18, r12
     920:	0e 94 99 10 	call	0x2132	; 0x2132 <__mulsf3>
     924:	9b 01       	movw	r18, r22
     926:	ac 01       	movw	r20, r24
     928:	60 e0       	ldi	r22, 0x00	; 0
     92a:	70 e0       	ldi	r23, 0x00	; 0
     92c:	80 e2       	ldi	r24, 0x20	; 32
     92e:	92 e4       	ldi	r25, 0x42	; 66
     930:	0e 94 51 0e 	call	0x1ca2	; 0x1ca2 <__subsf3>
     934:	0e 94 4d 0f 	call	0x1e9a	; 0x1e9a <__fixsfsi>
     938:	97 c0       	rjmp	.+302    	; 0xa68 <navigation_direction_regulation+0x278>
     93a:	81 e0       	ldi	r24, 0x01	; 1
     93c:	90 e0       	ldi	r25, 0x00	; 0
     93e:	c1 de       	rcall	.-638    	; 0x6c2 <navigation_get_sensor>
     940:	c8 2f       	mov	r28, r24
     942:	83 e0       	ldi	r24, 0x03	; 3
     944:	90 e0       	ldi	r25, 0x00	; 0
     946:	bd de       	rcall	.-646    	; 0x6c2 <navigation_get_sensor>
     948:	2c 2f       	mov	r18, r28
     94a:	30 e0       	ldi	r19, 0x00	; 0
     94c:	a9 01       	movw	r20, r18
     94e:	48 1b       	sub	r20, r24
     950:	51 09       	sbc	r21, r1
     952:	ca 01       	movw	r24, r20
     954:	99 23       	and	r25, r25
     956:	1c f4       	brge	.+6      	; 0x95e <navigation_direction_regulation+0x16e>
     958:	91 95       	neg	r25
     95a:	81 95       	neg	r24
     95c:	91 09       	sbc	r25, r1
     95e:	0a 97       	sbiw	r24, 0x0a	; 10
     960:	c4 f5       	brge	.+112    	; 0x9d2 <navigation_direction_regulation+0x1e2>
     962:	81 e0       	ldi	r24, 0x01	; 1
     964:	90 e0       	ldi	r25, 0x00	; 0
     966:	ad de       	rcall	.-678    	; 0x6c2 <navigation_get_sensor>
     968:	82 33       	cpi	r24, 0x32	; 50
     96a:	98 f5       	brcc	.+102    	; 0x9d2 <navigation_direction_regulation+0x1e2>
     96c:	81 e0       	ldi	r24, 0x01	; 1
     96e:	90 e0       	ldi	r25, 0x00	; 0
     970:	a8 de       	rcall	.-688    	; 0x6c2 <navigation_get_sensor>
     972:	c8 2f       	mov	r28, r24
     974:	83 e0       	ldi	r24, 0x03	; 3
     976:	90 e0       	ldi	r25, 0x00	; 0
     978:	a4 de       	rcall	.-696    	; 0x6c2 <navigation_get_sensor>
     97a:	d8 2f       	mov	r29, r24
     97c:	c7 01       	movw	r24, r14
     97e:	b6 01       	movw	r22, r12
     980:	0e 94 e2 0e 	call	0x1dc4	; 0x1dc4 <cos>
     984:	6b 01       	movw	r12, r22
     986:	7c 01       	movw	r14, r24
     988:	6d 2f       	mov	r22, r29
     98a:	70 e0       	ldi	r23, 0x00	; 0
     98c:	6c 0f       	add	r22, r28
     98e:	71 1d       	adc	r23, r1
     990:	88 27       	eor	r24, r24
     992:	77 fd       	sbrc	r23, 7
     994:	80 95       	com	r24
     996:	98 2f       	mov	r25, r24
     998:	0e 94 80 0f 	call	0x1f00	; 0x1f00 <__floatsisf>
     99c:	20 e0       	ldi	r18, 0x00	; 0
     99e:	30 e0       	ldi	r19, 0x00	; 0
     9a0:	40 e0       	ldi	r20, 0x00	; 0
     9a2:	5f e3       	ldi	r21, 0x3F	; 63
     9a4:	0e 94 99 10 	call	0x2132	; 0x2132 <__mulsf3>
     9a8:	20 e0       	ldi	r18, 0x00	; 0
     9aa:	30 e0       	ldi	r19, 0x00	; 0
     9ac:	40 ef       	ldi	r20, 0xF0	; 240
     9ae:	50 e4       	ldi	r21, 0x40	; 64
     9b0:	0e 94 52 0e 	call	0x1ca4	; 0x1ca4 <__addsf3>
     9b4:	a7 01       	movw	r20, r14
     9b6:	96 01       	movw	r18, r12
     9b8:	0e 94 99 10 	call	0x2132	; 0x2132 <__mulsf3>
     9bc:	9b 01       	movw	r18, r22
     9be:	ac 01       	movw	r20, r24
     9c0:	60 e0       	ldi	r22, 0x00	; 0
     9c2:	70 e0       	ldi	r23, 0x00	; 0
     9c4:	80 e2       	ldi	r24, 0x20	; 32
     9c6:	92 e4       	ldi	r25, 0x42	; 66
     9c8:	0e 94 51 0e 	call	0x1ca2	; 0x1ca2 <__subsf3>
     9cc:	0e 94 4d 0f 	call	0x1e9a	; 0x1e9a <__fixsfsi>
     9d0:	4b c0       	rjmp	.+150    	; 0xa68 <navigation_direction_regulation+0x278>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	90 e0       	ldi	r25, 0x00	; 0
     9d6:	75 de       	rcall	.-790    	; 0x6c2 <navigation_get_sensor>
     9d8:	c8 2f       	mov	r28, r24
     9da:	80 e0       	ldi	r24, 0x00	; 0
     9dc:	90 e0       	ldi	r25, 0x00	; 0
     9de:	71 de       	rcall	.-798    	; 0x6c2 <navigation_get_sensor>
     9e0:	2c 2f       	mov	r18, r28
     9e2:	30 e0       	ldi	r19, 0x00	; 0
     9e4:	a9 01       	movw	r20, r18
     9e6:	48 1b       	sub	r20, r24
     9e8:	51 09       	sbc	r21, r1
     9ea:	ca 01       	movw	r24, r20
     9ec:	99 23       	and	r25, r25
     9ee:	1c f4       	brge	.+6      	; 0x9f6 <navigation_direction_regulation+0x206>
     9f0:	91 95       	neg	r25
     9f2:	81 95       	neg	r24
     9f4:	91 09       	sbc	r25, r1
     9f6:	0a 97       	sbiw	r24, 0x0a	; 10
     9f8:	0c f0       	brlt	.+2      	; 0x9fc <navigation_direction_regulation+0x20c>
     9fa:	87 c0       	rjmp	.+270    	; 0xb0a <navigation_direction_regulation+0x31a>
     9fc:	80 e0       	ldi	r24, 0x00	; 0
     9fe:	90 e0       	ldi	r25, 0x00	; 0
     a00:	60 de       	rcall	.-832    	; 0x6c2 <navigation_get_sensor>
     a02:	82 33       	cpi	r24, 0x32	; 50
     a04:	08 f0       	brcs	.+2      	; 0xa08 <navigation_direction_regulation+0x218>
     a06:	81 c0       	rjmp	.+258    	; 0xb0a <navigation_direction_regulation+0x31a>
     a08:	82 e0       	ldi	r24, 0x02	; 2
     a0a:	90 e0       	ldi	r25, 0x00	; 0
     a0c:	5a de       	rcall	.-844    	; 0x6c2 <navigation_get_sensor>
     a0e:	c8 2f       	mov	r28, r24
     a10:	80 e0       	ldi	r24, 0x00	; 0
     a12:	90 e0       	ldi	r25, 0x00	; 0
     a14:	56 de       	rcall	.-852    	; 0x6c2 <navigation_get_sensor>
     a16:	d8 2f       	mov	r29, r24
     a18:	c7 01       	movw	r24, r14
     a1a:	b6 01       	movw	r22, r12
     a1c:	0e 94 e2 0e 	call	0x1dc4	; 0x1dc4 <cos>
     a20:	6b 01       	movw	r12, r22
     a22:	7c 01       	movw	r14, r24
     a24:	6d 2f       	mov	r22, r29
     a26:	70 e0       	ldi	r23, 0x00	; 0
     a28:	6c 0f       	add	r22, r28
     a2a:	71 1d       	adc	r23, r1
     a2c:	88 27       	eor	r24, r24
     a2e:	77 fd       	sbrc	r23, 7
     a30:	80 95       	com	r24
     a32:	98 2f       	mov	r25, r24
     a34:	0e 94 80 0f 	call	0x1f00	; 0x1f00 <__floatsisf>
     a38:	20 e0       	ldi	r18, 0x00	; 0
     a3a:	30 e0       	ldi	r19, 0x00	; 0
     a3c:	40 e0       	ldi	r20, 0x00	; 0
     a3e:	5f e3       	ldi	r21, 0x3F	; 63
     a40:	0e 94 99 10 	call	0x2132	; 0x2132 <__mulsf3>
     a44:	20 e0       	ldi	r18, 0x00	; 0
     a46:	30 e0       	ldi	r19, 0x00	; 0
     a48:	40 ef       	ldi	r20, 0xF0	; 240
     a4a:	50 e4       	ldi	r21, 0x40	; 64
     a4c:	0e 94 52 0e 	call	0x1ca4	; 0x1ca4 <__addsf3>
     a50:	a7 01       	movw	r20, r14
     a52:	96 01       	movw	r18, r12
     a54:	0e 94 99 10 	call	0x2132	; 0x2132 <__mulsf3>
     a58:	20 e0       	ldi	r18, 0x00	; 0
     a5a:	30 e0       	ldi	r19, 0x00	; 0
     a5c:	40 e2       	ldi	r20, 0x20	; 32
     a5e:	52 e4       	ldi	r21, 0x42	; 66
     a60:	0e 94 51 0e 	call	0x1ca2	; 0x1ca2 <__subsf3>
     a64:	0e 94 4d 0f 	call	0x1e9a	; 0x1e9a <__fixsfsi>
     a68:	cb 01       	movw	r24, r22
     a6a:	01 96       	adiw	r24, 0x01	; 1
     a6c:	03 97       	sbiw	r24, 0x03	; 3
     a6e:	08 f4       	brcc	.+2      	; 0xa72 <navigation_direction_regulation+0x282>
     a70:	47 c0       	rjmp	.+142    	; 0xb00 <navigation_direction_regulation+0x310>
     a72:	88 27       	eor	r24, r24
     a74:	77 fd       	sbrc	r23, 7
     a76:	80 95       	com	r24
     a78:	98 2f       	mov	r25, r24
     a7a:	0e 94 80 0f 	call	0x1f00	; 0x1f00 <__floatsisf>
     a7e:	20 91 03 01 	lds	r18, 0x0103
     a82:	30 91 04 01 	lds	r19, 0x0104
     a86:	40 91 05 01 	lds	r20, 0x0105
     a8a:	50 91 06 01 	lds	r21, 0x0106
     a8e:	0e 94 99 10 	call	0x2132	; 0x2132 <__mulsf3>
     a92:	0e 94 b6 0e 	call	0x1d6c	; 0x1d6c <atan>
     a96:	c6 2e       	mov	r12, r22
     a98:	d7 2e       	mov	r13, r23
     a9a:	e8 2e       	mov	r14, r24
     a9c:	f9 2e       	mov	r15, r25
     a9e:	20 e0       	ldi	r18, 0x00	; 0
     aa0:	30 e0       	ldi	r19, 0x00	; 0
     aa2:	a9 01       	movw	r20, r18
     aa4:	0e 94 de 0e 	call	0x1dbc	; 0x1dbc <__cmpsf2>
     aa8:	88 23       	and	r24, r24
     aaa:	7c f4       	brge	.+30     	; 0xaca <navigation_direction_regulation+0x2da>
     aac:	2b ed       	ldi	r18, 0xDB	; 219
     aae:	3f e0       	ldi	r19, 0x0F	; 15
     ab0:	49 ec       	ldi	r20, 0xC9	; 201
     ab2:	50 e4       	ldi	r21, 0x40	; 64
     ab4:	6c 2d       	mov	r22, r12
     ab6:	7d 2d       	mov	r23, r13
     ab8:	8e 2d       	mov	r24, r14
     aba:	9f 2d       	mov	r25, r15
     abc:	0e 94 52 0e 	call	0x1ca4	; 0x1ca4 <__addsf3>
     ac0:	c6 2e       	mov	r12, r22
     ac2:	d7 2e       	mov	r13, r23
     ac4:	e8 2e       	mov	r14, r24
     ac6:	f9 2e       	mov	r15, r25
     ac8:	24 c0       	rjmp	.+72     	; 0xb12 <navigation_direction_regulation+0x322>
     aca:	2b ed       	ldi	r18, 0xDB	; 219
     acc:	3f e0       	ldi	r19, 0x0F	; 15
     ace:	49 ec       	ldi	r20, 0xC9	; 201
     ad0:	50 e4       	ldi	r21, 0x40	; 64
     ad2:	6c 2d       	mov	r22, r12
     ad4:	7d 2d       	mov	r23, r13
     ad6:	8e 2d       	mov	r24, r14
     ad8:	9f 2d       	mov	r25, r15
     ada:	0e 94 8e 10 	call	0x211c	; 0x211c <__gesf2>
     ade:	88 23       	and	r24, r24
     ae0:	c4 f0       	brlt	.+48     	; 0xb12 <navigation_direction_regulation+0x322>
     ae2:	2b ed       	ldi	r18, 0xDB	; 219
     ae4:	3f e0       	ldi	r19, 0x0F	; 15
     ae6:	49 ec       	ldi	r20, 0xC9	; 201
     ae8:	50 e4       	ldi	r21, 0x40	; 64
     aea:	6c 2d       	mov	r22, r12
     aec:	7d 2d       	mov	r23, r13
     aee:	8e 2d       	mov	r24, r14
     af0:	9f 2d       	mov	r25, r15
     af2:	0e 94 51 0e 	call	0x1ca2	; 0x1ca2 <__subsf3>
     af6:	c6 2e       	mov	r12, r22
     af8:	d7 2e       	mov	r13, r23
     afa:	e8 2e       	mov	r14, r24
     afc:	f9 2e       	mov	r15, r25
     afe:	09 c0       	rjmp	.+18     	; 0xb12 <navigation_direction_regulation+0x322>
     b00:	c1 2c       	mov	r12, r1
     b02:	d1 2c       	mov	r13, r1
     b04:	e1 2c       	mov	r14, r1
     b06:	f1 2c       	mov	r15, r1
     b08:	04 c0       	rjmp	.+8      	; 0xb12 <navigation_direction_regulation+0x322>
     b0a:	c1 2c       	mov	r12, r1
     b0c:	d1 2c       	mov	r13, r1
     b0e:	e1 2c       	mov	r14, r1
     b10:	f1 2c       	mov	r15, r1
     b12:	6c 2d       	mov	r22, r12
     b14:	7d 2d       	mov	r23, r13
     b16:	8e 2d       	mov	r24, r14
     b18:	9f 2d       	mov	r25, r15
     b1a:	df 91       	pop	r29
     b1c:	cf 91       	pop	r28
     b1e:	ff 90       	pop	r15
     b20:	ef 90       	pop	r14
     b22:	df 90       	pop	r13
     b24:	cf 90       	pop	r12
     b26:	08 95       	ret

00000b28 <navigation_angle_offset>:
     b28:	cf 92       	push	r12
     b2a:	df 92       	push	r13
     b2c:	ef 92       	push	r14
     b2e:	ff 92       	push	r15
     b30:	80 91 07 01 	lds	r24, 0x0107
     b34:	88 23       	and	r24, r24
     b36:	09 f4       	brne	.+2      	; 0xb3a <navigation_angle_offset+0x12>
     b38:	6c c0       	rjmp	.+216    	; 0xc12 <navigation_angle_offset+0xea>
     b3a:	82 e0       	ldi	r24, 0x02	; 2
     b3c:	90 e0       	ldi	r25, 0x00	; 0
     b3e:	c1 dd       	rcall	.-1150   	; 0x6c2 <navigation_get_sensor>
     b40:	f8 2e       	mov	r15, r24
     b42:	80 e0       	ldi	r24, 0x00	; 0
     b44:	90 e0       	ldi	r25, 0x00	; 0
     b46:	bd dd       	rcall	.-1158   	; 0x6c2 <navigation_get_sensor>
     b48:	2f 2d       	mov	r18, r15
     b4a:	30 e0       	ldi	r19, 0x00	; 0
     b4c:	a9 01       	movw	r20, r18
     b4e:	48 1b       	sub	r20, r24
     b50:	51 09       	sbc	r21, r1
     b52:	ca 01       	movw	r24, r20
     b54:	99 23       	and	r25, r25
     b56:	1c f4       	brge	.+6      	; 0xb5e <navigation_angle_offset+0x36>
     b58:	91 95       	neg	r25
     b5a:	81 95       	neg	r24
     b5c:	91 09       	sbc	r25, r1
     b5e:	0a 97       	sbiw	r24, 0x0a	; 10
     b60:	0c f5       	brge	.+66     	; 0xba4 <navigation_angle_offset+0x7c>
     b62:	80 e0       	ldi	r24, 0x00	; 0
     b64:	90 e0       	ldi	r25, 0x00	; 0
     b66:	ad dd       	rcall	.-1190   	; 0x6c2 <navigation_get_sensor>
     b68:	82 33       	cpi	r24, 0x32	; 50
     b6a:	e0 f4       	brcc	.+56     	; 0xba4 <navigation_angle_offset+0x7c>
     b6c:	82 e0       	ldi	r24, 0x02	; 2
     b6e:	90 e0       	ldi	r25, 0x00	; 0
     b70:	a8 dd       	rcall	.-1200   	; 0x6c2 <navigation_get_sensor>
     b72:	f8 2e       	mov	r15, r24
     b74:	80 e0       	ldi	r24, 0x00	; 0
     b76:	90 e0       	ldi	r25, 0x00	; 0
     b78:	a4 dd       	rcall	.-1208   	; 0x6c2 <navigation_get_sensor>
     b7a:	6f 2d       	mov	r22, r15
     b7c:	70 e0       	ldi	r23, 0x00	; 0
     b7e:	68 1b       	sub	r22, r24
     b80:	71 09       	sbc	r23, r1
     b82:	88 27       	eor	r24, r24
     b84:	77 fd       	sbrc	r23, 7
     b86:	80 95       	com	r24
     b88:	98 2f       	mov	r25, r24
     b8a:	0e 94 80 0f 	call	0x1f00	; 0x1f00 <__floatsisf>
     b8e:	20 e0       	ldi	r18, 0x00	; 0
     b90:	30 e0       	ldi	r19, 0x00	; 0
     b92:	48 e6       	ldi	r20, 0x68	; 104
     b94:	51 e4       	ldi	r21, 0x41	; 65
     b96:	0e 94 e5 0e 	call	0x1dca	; 0x1dca <__divsf3>
     b9a:	0e 94 b6 0e 	call	0x1d6c	; 0x1d6c <atan>
     b9e:	6b 01       	movw	r12, r22
     ba0:	7c 01       	movw	r14, r24
     ba2:	a0 c0       	rjmp	.+320    	; 0xce4 <navigation_angle_offset+0x1bc>
     ba4:	81 e0       	ldi	r24, 0x01	; 1
     ba6:	90 e0       	ldi	r25, 0x00	; 0
     ba8:	8c dd       	rcall	.-1256   	; 0x6c2 <navigation_get_sensor>
     baa:	f8 2e       	mov	r15, r24
     bac:	83 e0       	ldi	r24, 0x03	; 3
     bae:	90 e0       	ldi	r25, 0x00	; 0
     bb0:	88 dd       	rcall	.-1264   	; 0x6c2 <navigation_get_sensor>
     bb2:	2f 2d       	mov	r18, r15
     bb4:	30 e0       	ldi	r19, 0x00	; 0
     bb6:	a9 01       	movw	r20, r18
     bb8:	48 1b       	sub	r20, r24
     bba:	51 09       	sbc	r21, r1
     bbc:	ca 01       	movw	r24, r20
     bbe:	99 23       	and	r25, r25
     bc0:	1c f4       	brge	.+6      	; 0xbc8 <navigation_angle_offset+0xa0>
     bc2:	91 95       	neg	r25
     bc4:	81 95       	neg	r24
     bc6:	91 09       	sbc	r25, r1
     bc8:	0a 97       	sbiw	r24, 0x0a	; 10
     bca:	0c f0       	brlt	.+2      	; 0xbce <navigation_angle_offset+0xa6>
     bcc:	9a c0       	rjmp	.+308    	; 0xd02 <navigation_angle_offset+0x1da>
     bce:	81 e0       	ldi	r24, 0x01	; 1
     bd0:	90 e0       	ldi	r25, 0x00	; 0
     bd2:	77 dd       	rcall	.-1298   	; 0x6c2 <navigation_get_sensor>
     bd4:	82 33       	cpi	r24, 0x32	; 50
     bd6:	08 f0       	brcs	.+2      	; 0xbda <navigation_angle_offset+0xb2>
     bd8:	94 c0       	rjmp	.+296    	; 0xd02 <navigation_angle_offset+0x1da>
     bda:	81 e0       	ldi	r24, 0x01	; 1
     bdc:	90 e0       	ldi	r25, 0x00	; 0
     bde:	71 dd       	rcall	.-1310   	; 0x6c2 <navigation_get_sensor>
     be0:	f8 2e       	mov	r15, r24
     be2:	83 e0       	ldi	r24, 0x03	; 3
     be4:	90 e0       	ldi	r25, 0x00	; 0
     be6:	6d dd       	rcall	.-1318   	; 0x6c2 <navigation_get_sensor>
     be8:	6f 2d       	mov	r22, r15
     bea:	70 e0       	ldi	r23, 0x00	; 0
     bec:	68 1b       	sub	r22, r24
     bee:	71 09       	sbc	r23, r1
     bf0:	88 27       	eor	r24, r24
     bf2:	77 fd       	sbrc	r23, 7
     bf4:	80 95       	com	r24
     bf6:	98 2f       	mov	r25, r24
     bf8:	0e 94 80 0f 	call	0x1f00	; 0x1f00 <__floatsisf>
     bfc:	20 e0       	ldi	r18, 0x00	; 0
     bfe:	30 e0       	ldi	r19, 0x00	; 0
     c00:	48 e6       	ldi	r20, 0x68	; 104
     c02:	51 e4       	ldi	r21, 0x41	; 65
     c04:	0e 94 e5 0e 	call	0x1dca	; 0x1dca <__divsf3>
     c08:	0e 94 b6 0e 	call	0x1d6c	; 0x1d6c <atan>
     c0c:	6b 01       	movw	r12, r22
     c0e:	7c 01       	movw	r14, r24
     c10:	69 c0       	rjmp	.+210    	; 0xce4 <navigation_angle_offset+0x1bc>
     c12:	81 e0       	ldi	r24, 0x01	; 1
     c14:	90 e0       	ldi	r25, 0x00	; 0
     c16:	55 dd       	rcall	.-1366   	; 0x6c2 <navigation_get_sensor>
     c18:	f8 2e       	mov	r15, r24
     c1a:	83 e0       	ldi	r24, 0x03	; 3
     c1c:	90 e0       	ldi	r25, 0x00	; 0
     c1e:	51 dd       	rcall	.-1374   	; 0x6c2 <navigation_get_sensor>
     c20:	2f 2d       	mov	r18, r15
     c22:	30 e0       	ldi	r19, 0x00	; 0
     c24:	a9 01       	movw	r20, r18
     c26:	48 1b       	sub	r20, r24
     c28:	51 09       	sbc	r21, r1
     c2a:	ca 01       	movw	r24, r20
     c2c:	99 23       	and	r25, r25
     c2e:	1c f4       	brge	.+6      	; 0xc36 <navigation_angle_offset+0x10e>
     c30:	91 95       	neg	r25
     c32:	81 95       	neg	r24
     c34:	91 09       	sbc	r25, r1
     c36:	0a 97       	sbiw	r24, 0x0a	; 10
     c38:	0c f5       	brge	.+66     	; 0xc7c <navigation_angle_offset+0x154>
     c3a:	81 e0       	ldi	r24, 0x01	; 1
     c3c:	90 e0       	ldi	r25, 0x00	; 0
     c3e:	41 dd       	rcall	.-1406   	; 0x6c2 <navigation_get_sensor>
     c40:	82 33       	cpi	r24, 0x32	; 50
     c42:	e0 f4       	brcc	.+56     	; 0xc7c <navigation_angle_offset+0x154>
     c44:	81 e0       	ldi	r24, 0x01	; 1
     c46:	90 e0       	ldi	r25, 0x00	; 0
     c48:	3c dd       	rcall	.-1416   	; 0x6c2 <navigation_get_sensor>
     c4a:	f8 2e       	mov	r15, r24
     c4c:	83 e0       	ldi	r24, 0x03	; 3
     c4e:	90 e0       	ldi	r25, 0x00	; 0
     c50:	38 dd       	rcall	.-1424   	; 0x6c2 <navigation_get_sensor>
     c52:	6f 2d       	mov	r22, r15
     c54:	70 e0       	ldi	r23, 0x00	; 0
     c56:	68 1b       	sub	r22, r24
     c58:	71 09       	sbc	r23, r1
     c5a:	88 27       	eor	r24, r24
     c5c:	77 fd       	sbrc	r23, 7
     c5e:	80 95       	com	r24
     c60:	98 2f       	mov	r25, r24
     c62:	0e 94 80 0f 	call	0x1f00	; 0x1f00 <__floatsisf>
     c66:	20 e0       	ldi	r18, 0x00	; 0
     c68:	30 e0       	ldi	r19, 0x00	; 0
     c6a:	48 e6       	ldi	r20, 0x68	; 104
     c6c:	51 e4       	ldi	r21, 0x41	; 65
     c6e:	0e 94 e5 0e 	call	0x1dca	; 0x1dca <__divsf3>
     c72:	0e 94 b6 0e 	call	0x1d6c	; 0x1d6c <atan>
     c76:	6b 01       	movw	r12, r22
     c78:	7c 01       	movw	r14, r24
     c7a:	34 c0       	rjmp	.+104    	; 0xce4 <navigation_angle_offset+0x1bc>
     c7c:	82 e0       	ldi	r24, 0x02	; 2
     c7e:	90 e0       	ldi	r25, 0x00	; 0
     c80:	20 dd       	rcall	.-1472   	; 0x6c2 <navigation_get_sensor>
     c82:	f8 2e       	mov	r15, r24
     c84:	80 e0       	ldi	r24, 0x00	; 0
     c86:	90 e0       	ldi	r25, 0x00	; 0
     c88:	1c dd       	rcall	.-1480   	; 0x6c2 <navigation_get_sensor>
     c8a:	2f 2d       	mov	r18, r15
     c8c:	30 e0       	ldi	r19, 0x00	; 0
     c8e:	a9 01       	movw	r20, r18
     c90:	48 1b       	sub	r20, r24
     c92:	51 09       	sbc	r21, r1
     c94:	ca 01       	movw	r24, r20
     c96:	99 23       	and	r25, r25
     c98:	1c f4       	brge	.+6      	; 0xca0 <navigation_angle_offset+0x178>
     c9a:	91 95       	neg	r25
     c9c:	81 95       	neg	r24
     c9e:	91 09       	sbc	r25, r1
     ca0:	0a 97       	sbiw	r24, 0x0a	; 10
     ca2:	7c f5       	brge	.+94     	; 0xd02 <navigation_angle_offset+0x1da>
     ca4:	80 e0       	ldi	r24, 0x00	; 0
     ca6:	90 e0       	ldi	r25, 0x00	; 0
     ca8:	0c dd       	rcall	.-1512   	; 0x6c2 <navigation_get_sensor>
     caa:	82 33       	cpi	r24, 0x32	; 50
     cac:	50 f5       	brcc	.+84     	; 0xd02 <navigation_angle_offset+0x1da>
     cae:	82 e0       	ldi	r24, 0x02	; 2
     cb0:	90 e0       	ldi	r25, 0x00	; 0
     cb2:	07 dd       	rcall	.-1522   	; 0x6c2 <navigation_get_sensor>
     cb4:	f8 2e       	mov	r15, r24
     cb6:	80 e0       	ldi	r24, 0x00	; 0
     cb8:	90 e0       	ldi	r25, 0x00	; 0
     cba:	03 dd       	rcall	.-1530   	; 0x6c2 <navigation_get_sensor>
     cbc:	6f 2d       	mov	r22, r15
     cbe:	70 e0       	ldi	r23, 0x00	; 0
     cc0:	68 1b       	sub	r22, r24
     cc2:	71 09       	sbc	r23, r1
     cc4:	88 27       	eor	r24, r24
     cc6:	77 fd       	sbrc	r23, 7
     cc8:	80 95       	com	r24
     cca:	98 2f       	mov	r25, r24
     ccc:	0e 94 80 0f 	call	0x1f00	; 0x1f00 <__floatsisf>
     cd0:	20 e0       	ldi	r18, 0x00	; 0
     cd2:	30 e0       	ldi	r19, 0x00	; 0
     cd4:	48 e6       	ldi	r20, 0x68	; 104
     cd6:	51 e4       	ldi	r21, 0x41	; 65
     cd8:	0e 94 e5 0e 	call	0x1dca	; 0x1dca <__divsf3>
     cdc:	0e 94 b6 0e 	call	0x1d6c	; 0x1d6c <atan>
     ce0:	6b 01       	movw	r12, r22
     ce2:	7c 01       	movw	r14, r24
     ce4:	c7 01       	movw	r24, r14
     ce6:	b6 01       	movw	r22, r12
     ce8:	9f 77       	andi	r25, 0x7F	; 127
     cea:	29 e2       	ldi	r18, 0x29	; 41
     cec:	3c e5       	ldi	r19, 0x5C	; 92
     cee:	4f e8       	ldi	r20, 0x8F	; 143
     cf0:	5d e3       	ldi	r21, 0x3D	; 61
     cf2:	0e 94 8e 10 	call	0x211c	; 0x211c <__gesf2>
     cf6:	18 16       	cp	r1, r24
     cf8:	3c f0       	brlt	.+14     	; 0xd08 <navigation_angle_offset+0x1e0>
     cfa:	c1 2c       	mov	r12, r1
     cfc:	d1 2c       	mov	r13, r1
     cfe:	76 01       	movw	r14, r12
     d00:	03 c0       	rjmp	.+6      	; 0xd08 <navigation_angle_offset+0x1e0>
     d02:	c1 2c       	mov	r12, r1
     d04:	d1 2c       	mov	r13, r1
     d06:	76 01       	movw	r14, r12
     d08:	7c 2d       	mov	r23, r12
     d0a:	67 2f       	mov	r22, r23
     d0c:	7d 2d       	mov	r23, r13
     d0e:	8e 2d       	mov	r24, r14
     d10:	9f 2d       	mov	r25, r15
     d12:	ff 90       	pop	r15
     d14:	ef 90       	pop	r14
     d16:	df 90       	pop	r13
     d18:	cf 90       	pop	r12
     d1a:	08 95       	ret

00000d1c <__vector_1>:
     d1c:	1f 92       	push	r1
     d1e:	0f 92       	push	r0
     d20:	0f b6       	in	r0, 0x3f	; 63
     d22:	0f 92       	push	r0
     d24:	11 24       	eor	r1, r1
     d26:	0b b6       	in	r0, 0x3b	; 59
     d28:	0f 92       	push	r0
     d2a:	2f 93       	push	r18
     d2c:	3f 93       	push	r19
     d2e:	4f 93       	push	r20
     d30:	5f 93       	push	r21
     d32:	6f 93       	push	r22
     d34:	7f 93       	push	r23
     d36:	8f 93       	push	r24
     d38:	9f 93       	push	r25
     d3a:	af 93       	push	r26
     d3c:	bf 93       	push	r27
     d3e:	ef 93       	push	r30
     d40:	ff 93       	push	r31
     d42:	81 e0       	ldi	r24, 0x01	; 1
     d44:	73 dc       	rcall	.-1818   	; 0x62c <navigation_set_algorithm>
     d46:	81 e0       	ldi	r24, 0x01	; 1
     d48:	77 dc       	rcall	.-1810   	; 0x638 <navigation_set_autonomous_walk>
     d4a:	ff 91       	pop	r31
     d4c:	ef 91       	pop	r30
     d4e:	bf 91       	pop	r27
     d50:	af 91       	pop	r26
     d52:	9f 91       	pop	r25
     d54:	8f 91       	pop	r24
     d56:	7f 91       	pop	r23
     d58:	6f 91       	pop	r22
     d5a:	5f 91       	pop	r21
     d5c:	4f 91       	pop	r20
     d5e:	3f 91       	pop	r19
     d60:	2f 91       	pop	r18
     d62:	0f 90       	pop	r0
     d64:	0b be       	out	0x3b, r0	; 59
     d66:	0f 90       	pop	r0
     d68:	0f be       	out	0x3f, r0	; 63
     d6a:	0f 90       	pop	r0
     d6c:	1f 90       	pop	r1
     d6e:	18 95       	reti

00000d70 <__vector_2>:
     d70:	1f 92       	push	r1
     d72:	0f 92       	push	r0
     d74:	0f b6       	in	r0, 0x3f	; 63
     d76:	0f 92       	push	r0
     d78:	11 24       	eor	r1, r1
     d7a:	0b b6       	in	r0, 0x3b	; 59
     d7c:	0f 92       	push	r0
     d7e:	2f 93       	push	r18
     d80:	3f 93       	push	r19
     d82:	4f 93       	push	r20
     d84:	5f 93       	push	r21
     d86:	6f 93       	push	r22
     d88:	7f 93       	push	r23
     d8a:	8f 93       	push	r24
     d8c:	9f 93       	push	r25
     d8e:	af 93       	push	r26
     d90:	bf 93       	push	r27
     d92:	ef 93       	push	r30
     d94:	ff 93       	push	r31
     d96:	80 e0       	ldi	r24, 0x00	; 0
     d98:	49 dc       	rcall	.-1902   	; 0x62c <navigation_set_algorithm>
     d9a:	81 e0       	ldi	r24, 0x01	; 1
     d9c:	4d dc       	rcall	.-1894   	; 0x638 <navigation_set_autonomous_walk>
     d9e:	ff 91       	pop	r31
     da0:	ef 91       	pop	r30
     da2:	bf 91       	pop	r27
     da4:	af 91       	pop	r26
     da6:	9f 91       	pop	r25
     da8:	8f 91       	pop	r24
     daa:	7f 91       	pop	r23
     dac:	6f 91       	pop	r22
     dae:	5f 91       	pop	r21
     db0:	4f 91       	pop	r20
     db2:	3f 91       	pop	r19
     db4:	2f 91       	pop	r18
     db6:	0f 90       	pop	r0
     db8:	0b be       	out	0x3b, r0	; 59
     dba:	0f 90       	pop	r0
     dbc:	0f be       	out	0x3f, r0	; 63
     dbe:	0f 90       	pop	r0
     dc0:	1f 90       	pop	r1
     dc2:	18 95       	reti

00000dc4 <main>:
#include "Navigation.h"
#include "autonomouswalk.h"

int main(void)
{
	USART_init();
     dc4:	7e d4       	rcall	.+2300   	; 0x16c2 <USART_init>
	USART_set_twi_message_destination(C_ADDRESS); // send messages from gang to the display, not the computer
     dc6:	80 e8       	ldi	r24, 0x80	; 128
     dc8:	90 e0       	ldi	r25, 0x00	; 0
     dca:	87 d4       	rcall	.+2318   	; 0x16da <USART_set_twi_message_destination>
	sei();
     dcc:	78 94       	sei
	TWI_init(ST_ADDRESS);
     dce:	80 e2       	ldi	r24, 0x20	; 32
     dd0:	41 d1       	rcall	.+642    	; 0x1054 <TWI_init>
	init_counters();
     dd2:	ac db       	rcall	.-2216   	; 0x52c <init_counters>
	
	//LED
	DDRA |= (1<<PORTA0 | 1<<PORTA1);
     dd4:	81 b1       	in	r24, 0x01	; 1
     dd6:	83 60       	ori	r24, 0x03	; 3
     dd8:	81 b9       	out	0x01, r24	; 1
	DDRC |= (1<<PORTC6 | 1<<PORTC7);
     dda:	87 b1       	in	r24, 0x07	; 7
     ddc:	80 6c       	ori	r24, 0xC0	; 192
     dde:	87 b9       	out	0x07, r24	; 7
	
	//Buttons
	DDRA &= ~(1<<PORTA6 | 1<<PORTA7); //For emphasize
     de0:	81 b1       	in	r24, 0x01	; 1
     de2:	8f 73       	andi	r24, 0x3F	; 63
     de4:	81 b9       	out	0x01, r24	; 1
	PCICR |= (1<<PCIE0); //Interrupt enable
     de6:	e8 e6       	ldi	r30, 0x68	; 104
     de8:	f0 e0       	ldi	r31, 0x00	; 0
     dea:	80 81       	ld	r24, Z
     dec:	81 60       	ori	r24, 0x01	; 1
     dee:	80 83       	st	Z, r24
	PCMSK0 |= (1<<PCINT6 | 1<<PCINT7); //mask for porta6 and porta7
     df0:	eb e6       	ldi	r30, 0x6B	; 107
     df2:	f0 e0       	ldi	r31, 0x00	; 0
     df4:	80 81       	ld	r24, Z
     df6:	80 6c       	ori	r24, 0xC0	; 192
     df8:	80 83       	st	Z, r24
     dfa:	2f ef       	ldi	r18, 0xFF	; 255
     dfc:	83 e2       	ldi	r24, 0x23	; 35
     dfe:	94 ef       	ldi	r25, 0xF4	; 244
     e00:	21 50       	subi	r18, 0x01	; 1
     e02:	80 40       	sbci	r24, 0x00	; 0
     e04:	90 40       	sbci	r25, 0x00	; 0
     e06:	e1 f7       	brne	.-8      	; 0xe00 <main+0x3c>
     e08:	00 c0       	rjmp	.+0      	; 0xe0a <main+0x46>
     e0a:	00 00       	nop
	
	
	_delay_ms(5000);
	navigation_set_autonomous_walk(0);
     e0c:	80 e0       	ldi	r24, 0x00	; 0
     e0e:	14 dc       	rcall	.-2008   	; 0x638 <navigation_set_autonomous_walk>
		}
		else
		{
			if(TWI_command_flag())
			{
				PORTA ^= (1<<PORTA1);
     e10:	c2 e0       	ldi	r28, 0x02	; 2
		/*if(TWI_sensor_flag())
		{
			PORTA ^= (1<<PORTA1);
			navigation_fill_buffer();
		}*/
		if(TWI_autonom_settings_flag())
     e12:	80 d2       	rcall	.+1280   	; 0x1314 <TWI_autonom_settings_flag>
     e14:	88 23       	and	r24, r24
     e16:	79 f0       	breq	.+30     	; 0xe36 <main+0x72>
		{
			uint8_t sett = TWI_get_autonom_settings();
     e18:	63 d2       	rcall	.+1222   	; 0x12e0 <TWI_get_autonom_settings>
			if(sett == 0)
     e1a:	81 11       	cpse	r24, r1
     e1c:	02 c0       	rjmp	.+4      	; 0xe22 <main+0x5e>
			{
				navigation_set_autonomous_walk(0);
     e1e:	0c dc       	rcall	.-2024   	; 0x638 <navigation_set_autonomous_walk>
     e20:	0a c0       	rjmp	.+20     	; 0xe36 <main+0x72>
			}
			else if(sett == 1)
     e22:	81 30       	cpi	r24, 0x01	; 1
     e24:	21 f4       	brne	.+8      	; 0xe2e <main+0x6a>
			{
				navigation_set_autonomous_walk(1);
     e26:	08 dc       	rcall	.-2032   	; 0x638 <navigation_set_autonomous_walk>
				navigation_set_algorithm(1);
     e28:	81 e0       	ldi	r24, 0x01	; 1
     e2a:	00 dc       	rcall	.-2048   	; 0x62c <navigation_set_algorithm>
     e2c:	04 c0       	rjmp	.+8      	; 0xe36 <main+0x72>
			}
			else //sett == 2
			{
				navigation_set_autonomous_walk(1);
     e2e:	81 e0       	ldi	r24, 0x01	; 1
     e30:	03 dc       	rcall	.-2042   	; 0x638 <navigation_set_autonomous_walk>
				navigation_set_algorithm(0);
     e32:	80 e0       	ldi	r24, 0x00	; 0
     e34:	fb db       	rcall	.-2058   	; 0x62c <navigation_set_algorithm>
			}
		}
		
		if(navigation_autonomous_walk() == 1)
     e36:	fd db       	rcall	.-2054   	; 0x632 <navigation_autonomous_walk>
     e38:	81 30       	cpi	r24, 0x01	; 1
     e3a:	49 f4       	brne	.+18     	; 0xe4e <main+0x8a>
		{
			if(TWI_control_settings_flag())
     e3c:	61 d2       	rcall	.+1218   	; 0x1300 <TWI_control_settings_flag>
     e3e:	88 23       	and	r24, r24
     e40:	21 f0       	breq	.+8      	; 0xe4a <main+0x86>
			{
				navigation_set_Kp(TWI_get_control_setting(0));
     e42:	80 e0       	ldi	r24, 0x00	; 0
     e44:	90 e0       	ldi	r25, 0x00	; 0
     e46:	47 d2       	rcall	.+1166   	; 0x12d6 <TWI_get_control_setting>
     e48:	df db       	rcall	.-2114   	; 0x608 <navigation_set_Kp>
			}
			autonomouswalk_walk();
     e4a:	a6 da       	rcall	.-2740   	; 0x398 <autonomouswalk_walk>
     e4c:	07 c0       	rjmp	.+14     	; 0xe5c <main+0x98>
		}
		else
		{
			if(TWI_command_flag())
     e4e:	4e d2       	rcall	.+1180   	; 0x12ec <TWI_command_flag>
     e50:	88 23       	and	r24, r24
     e52:	21 f0       	breq	.+8      	; 0xe5c <main+0x98>
			{
				PORTA ^= (1<<PORTA1);
     e54:	82 b1       	in	r24, 0x02	; 2
     e56:	8c 27       	eor	r24, r28
     e58:	82 b9       	out	0x02, r24	; 2
				USART_SendCommand();
     e5a:	0a d5       	rcall	.+2580   	; 0x1870 <USART_SendCommand>
			}
		}
		
		if(TWI_elevation_flag())
     e5c:	65 d2       	rcall	.+1226   	; 0x1328 <TWI_elevation_flag>
     e5e:	88 23       	and	r24, r24
     e60:	29 f0       	breq	.+10     	; 0xe6c <main+0xa8>
		{
			PORTA ^= (1<<PORTA0); 
     e62:	92 b1       	in	r25, 0x02	; 2
     e64:	81 e0       	ldi	r24, 0x01	; 1
     e66:	89 27       	eor	r24, r25
     e68:	82 b9       	out	0x02, r24	; 2
			USART_SendElevation();
     e6a:	14 d5       	rcall	.+2600   	; 0x1894 <USART_SendElevation>
		}
		USART_DecodeRxFIFO();
     e6c:	5d d6       	rcall	.+3258   	; 0x1b28 <USART_DecodeRxFIFO>
    }
     e6e:	d1 cf       	rjmp	.-94     	; 0xe12 <main+0x4e>

00000e70 <__vector_13>:
}

//---------------------------------------COUNTERS/TIMERS interrupt vectors-----------

ISR(TIMER1_COMPA_vect)
{
     e70:	1f 92       	push	r1
     e72:	0f 92       	push	r0
     e74:	0f b6       	in	r0, 0x3f	; 63
     e76:	0f 92       	push	r0
     e78:	11 24       	eor	r1, r1
	TCNT1 = 0;
     e7a:	10 92 85 00 	sts	0x0085, r1
     e7e:	10 92 84 00 	sts	0x0084, r1
}
     e82:	0f 90       	pop	r0
     e84:	0f be       	out	0x3f, r0	; 63
     e86:	0f 90       	pop	r0
     e88:	1f 90       	pop	r1
     e8a:	18 95       	reti

00000e8c <__vector_32>:

ISR(TIMER3_COMPA_vect)
{
     e8c:	1f 92       	push	r1
     e8e:	0f 92       	push	r0
     e90:	0f b6       	in	r0, 0x3f	; 63
     e92:	0f 92       	push	r0
     e94:	11 24       	eor	r1, r1
	//TWI_send_float(C_ADDRESS, (float)navigation_get_sensor(0));
	TCNT3 = 0;
     e96:	10 92 95 00 	sts	0x0095, r1
     e9a:	10 92 94 00 	sts	0x0094, r1
}
     e9e:	0f 90       	pop	r0
     ea0:	0f be       	out	0x3f, r0	; 63
     ea2:	0f 90       	pop	r0
     ea4:	1f 90       	pop	r1
     ea6:	18 95       	reti

00000ea8 <__vector_4>:

//-------------------Buttons PinChange interrupt---------------------

ISR(PCINT0_vect)
{
     ea8:	1f 92       	push	r1
     eaa:	0f 92       	push	r0
     eac:	0f b6       	in	r0, 0x3f	; 63
     eae:	0f 92       	push	r0
     eb0:	11 24       	eor	r1, r1
     eb2:	0b b6       	in	r0, 0x3b	; 59
     eb4:	0f 92       	push	r0
     eb6:	2f 93       	push	r18
     eb8:	3f 93       	push	r19
     eba:	4f 93       	push	r20
     ebc:	5f 93       	push	r21
     ebe:	6f 93       	push	r22
     ec0:	7f 93       	push	r23
     ec2:	8f 93       	push	r24
     ec4:	9f 93       	push	r25
     ec6:	af 93       	push	r26
     ec8:	bf 93       	push	r27
     eca:	ef 93       	push	r30
     ecc:	ff 93       	push	r31
	if(PINA & (1<<PINA6)) //Left walk
     ece:	06 9b       	sbis	0x00, 6	; 0
     ed0:	09 c0       	rjmp	.+18     	; 0xee4 <__vector_4+0x3c>
	{
		navigation_set_autonomous_walk(1);
     ed2:	81 e0       	ldi	r24, 0x01	; 1
     ed4:	b1 db       	rcall	.-2206   	; 0x638 <navigation_set_autonomous_walk>
		navigation_set_algorithm(1);
     ed6:	81 e0       	ldi	r24, 0x01	; 1
     ed8:	a9 db       	rcall	.-2222   	; 0x62c <navigation_set_algorithm>
		//test
		PORTC ^= (1<<PORTC6);
     eda:	98 b1       	in	r25, 0x08	; 8
     edc:	80 e4       	ldi	r24, 0x40	; 64
     ede:	89 27       	eor	r24, r25
     ee0:	88 b9       	out	0x08, r24	; 8
     ee2:	09 c0       	rjmp	.+18     	; 0xef6 <__vector_4+0x4e>
	}
	else if(PINA & (1<<PINA7)) //Right walk
     ee4:	07 9b       	sbis	0x00, 7	; 0
     ee6:	07 c0       	rjmp	.+14     	; 0xef6 <__vector_4+0x4e>
	{
		navigation_set_autonomous_walk(1);
     ee8:	81 e0       	ldi	r24, 0x01	; 1
     eea:	a6 db       	rcall	.-2228   	; 0x638 <navigation_set_autonomous_walk>
		navigation_set_algorithm(0);
     eec:	80 e0       	ldi	r24, 0x00	; 0
     eee:	9e db       	rcall	.-2244   	; 0x62c <navigation_set_algorithm>
		//test
		PORTC ^= (1<<PORTC7);
     ef0:	88 b1       	in	r24, 0x08	; 8
     ef2:	80 58       	subi	r24, 0x80	; 128
     ef4:	88 b9       	out	0x08, r24	; 8
	}	
     ef6:	ff 91       	pop	r31
     ef8:	ef 91       	pop	r30
     efa:	bf 91       	pop	r27
     efc:	af 91       	pop	r26
     efe:	9f 91       	pop	r25
     f00:	8f 91       	pop	r24
     f02:	7f 91       	pop	r23
     f04:	6f 91       	pop	r22
     f06:	5f 91       	pop	r21
     f08:	4f 91       	pop	r20
     f0a:	3f 91       	pop	r19
     f0c:	2f 91       	pop	r18
     f0e:	0f 90       	pop	r0
     f10:	0b be       	out	0x3b, r0	; 59
     f12:	0f 90       	pop	r0
     f14:	0f be       	out	0x3f, r0	; 63
     f16:	0f 90       	pop	r0
     f18:	1f 90       	pop	r1
     f1a:	18 95       	reti

00000f1c <set_twi_reciever_enable>:
     f1c:	85 e4       	ldi	r24, 0x45	; 69
     f1e:	80 93 bc 00 	sts	0x00BC, r24
     f22:	08 95       	ret

00000f24 <clear_int>:
     f24:	81 ec       	ldi	r24, 0xC1	; 193
     f26:	80 93 bc 00 	sts	0x00BC, r24
     f2a:	08 95       	ret

00000f2c <start_bus>:
     f2c:	84 ea       	ldi	r24, 0xA4	; 164
     f2e:	80 93 bc 00 	sts	0x00BC, r24
     f32:	08 95       	ret

00000f34 <stop_bus>:
     f34:	85 ed       	ldi	r24, 0xD5	; 213
     f36:	80 93 bc 00 	sts	0x00BC, r24
     f3a:	08 95       	ret

00000f3c <Error>:
     f3c:	80 91 b9 00 	lds	r24, 0x00B9
     f40:	88 7f       	andi	r24, 0xF8	; 248
     f42:	88 33       	cpi	r24, 0x38	; 56
     f44:	09 f0       	breq	.+2      	; 0xf48 <Error+0xc>
     f46:	f6 cf       	rjmp	.-20     	; 0xf34 <stop_bus>
     f48:	ed cf       	rjmp	.-38     	; 0xf24 <clear_int>

00000f4a <get_data>:
     f4a:	80 91 bb 00 	lds	r24, 0x00BB
     f4e:	08 95       	ret

00000f50 <wait_for_bus>:
     f50:	ec eb       	ldi	r30, 0xBC	; 188
     f52:	f0 e0       	ldi	r31, 0x00	; 0
     f54:	80 81       	ld	r24, Z
     f56:	88 23       	and	r24, r24
     f58:	ec f7       	brge	.-6      	; 0xf54 <wait_for_bus+0x4>
     f5a:	08 95       	ret

00000f5c <send_data_and_wait>:
     f5c:	80 93 bb 00 	sts	0x00BB, r24
     f60:	84 e8       	ldi	r24, 0x84	; 132
     f62:	80 93 bc 00 	sts	0x00BC, r24
     f66:	f4 cf       	rjmp	.-24     	; 0xf50 <wait_for_bus>

00000f68 <stop_twi>:
     f68:	10 92 84 14 	sts	0x1484, r1
     f6c:	10 92 83 14 	sts	0x1483, r1
     f70:	10 92 8e 14 	sts	0x148E, r1
     f74:	10 92 8d 14 	sts	0x148D, r1
     f78:	10 92 79 14 	sts	0x1479, r1
     f7c:	10 92 78 14 	sts	0x1478, r1
     f80:	10 92 7e 14 	sts	0x147E, r1
     f84:	10 92 7d 14 	sts	0x147D, r1
     f88:	10 92 81 14 	sts	0x1481, r1
     f8c:	10 92 80 14 	sts	0x1480, r1
     f90:	08 95       	ret

00000f92 <reset_TWI>:
     f92:	ec eb       	ldi	r30, 0xBC	; 188
     f94:	f0 e0       	ldi	r31, 0x00	; 0
     f96:	80 81       	ld	r24, Z
     f98:	80 6c       	ori	r24, 0xC0	; 192
     f9a:	80 83       	st	Z, r24
     f9c:	08 95       	ret

00000f9e <get_control_settings_from_bus>:
     f9e:	cf 93       	push	r28
     fa0:	df 93       	push	r29
     fa2:	c0 91 7d 14 	lds	r28, 0x147D
     fa6:	d0 91 7e 14 	lds	r29, 0x147E
     faa:	cf df       	rcall	.-98     	; 0xf4a <get_data>
     fac:	c6 58       	subi	r28, 0x86	; 134
     fae:	db 4e       	sbci	r29, 0xEB	; 235
     fb0:	88 83       	st	Y, r24
     fb2:	10 92 7e 14 	sts	0x147E, r1
     fb6:	10 92 7d 14 	sts	0x147D, r1
     fba:	df 91       	pop	r29
     fbc:	cf 91       	pop	r28
     fbe:	08 95       	ret

00000fc0 <get_autonom_settings_from_bus>:
     fc0:	c4 df       	rcall	.-120    	; 0xf4a <get_data>
     fc2:	80 93 78 13 	sts	0x1378, r24
     fc6:	08 95       	ret

00000fc8 <get_char_from_bus>:
     fc8:	cf 93       	push	r28
     fca:	df 93       	push	r29
     fcc:	c0 91 78 14 	lds	r28, 0x1478
     fd0:	d0 91 79 14 	lds	r29, 0x1479
     fd4:	ba df       	rcall	.-140    	; 0xf4a <get_data>
     fd6:	c7 58       	subi	r28, 0x87	; 135
     fd8:	dc 4e       	sbci	r29, 0xEC	; 236
     fda:	88 83       	st	Y, r24
     fdc:	80 91 78 14 	lds	r24, 0x1478
     fe0:	90 91 79 14 	lds	r25, 0x1479
     fe4:	01 96       	adiw	r24, 0x01	; 1
     fe6:	90 93 79 14 	sts	0x1479, r25
     fea:	80 93 78 14 	sts	0x1478, r24
     fee:	90 93 89 14 	sts	0x1489, r25
     ff2:	80 93 88 14 	sts	0x1488, r24
     ff6:	df 91       	pop	r29
     ff8:	cf 91       	pop	r28
     ffa:	08 95       	ret

00000ffc <get_sensor_from_bus>:
     ffc:	cf 93       	push	r28
     ffe:	df 93       	push	r29
    1000:	c0 91 8d 14 	lds	r28, 0x148D
    1004:	d0 91 8e 14 	lds	r29, 0x148E
    1008:	c8 30       	cpi	r28, 0x08	; 8
    100a:	d1 05       	cpc	r29, r1
    100c:	99 f4       	brne	.+38     	; 0x1034 <get_sensor_from_bus+0x38>
    100e:	ef e8       	ldi	r30, 0x8F	; 143
    1010:	f4 e1       	ldi	r31, 0x14	; 20
    1012:	a7 e9       	ldi	r26, 0x97	; 151
    1014:	b4 e1       	ldi	r27, 0x14	; 20
    1016:	87 e9       	ldi	r24, 0x97	; 151
    1018:	94 e1       	ldi	r25, 0x14	; 20
    101a:	21 91       	ld	r18, Z+
    101c:	2d 93       	st	X+, r18
    101e:	e8 17       	cp	r30, r24
    1020:	f9 07       	cpc	r31, r25
    1022:	d9 f7       	brne	.-10     	; 0x101a <get_sensor_from_bus+0x1e>
    1024:	92 df       	rcall	.-220    	; 0xf4a <get_data>
    1026:	80 93 87 14 	sts	0x1487, r24
    102a:	81 e0       	ldi	r24, 0x01	; 1
    102c:	80 93 3b 13 	sts	0x133B, r24
    1030:	1d db       	rcall	.-2502   	; 0x66c <navigation_fill_buffer>
    1032:	0d c0       	rjmp	.+26     	; 0x104e <get_sensor_from_bus+0x52>
    1034:	8a df       	rcall	.-236    	; 0xf4a <get_data>
    1036:	c1 57       	subi	r28, 0x71	; 113
    1038:	db 4e       	sbci	r29, 0xEB	; 235
    103a:	88 83       	st	Y, r24
    103c:	80 91 8d 14 	lds	r24, 0x148D
    1040:	90 91 8e 14 	lds	r25, 0x148E
    1044:	01 96       	adiw	r24, 0x01	; 1
    1046:	90 93 8e 14 	sts	0x148E, r25
    104a:	80 93 8d 14 	sts	0x148D, r24
    104e:	df 91       	pop	r29
    1050:	cf 91       	pop	r28
    1052:	08 95       	ret

00001054 <TWI_init>:
    1054:	80 93 7f 14 	sts	0x147F, r24
    1058:	80 34       	cpi	r24, 0x40	; 64
    105a:	79 f0       	breq	.+30     	; 0x107a <TWI_init+0x26>
    105c:	80 38       	cpi	r24, 0x80	; 128
    105e:	19 f0       	breq	.+6      	; 0x1066 <TWI_init+0x12>
    1060:	80 32       	cpi	r24, 0x20	; 32
    1062:	d1 f4       	brne	.+52     	; 0x1098 <TWI_init+0x44>
    1064:	12 c0       	rjmp	.+36     	; 0x108a <TWI_init+0x36>
    1066:	83 e0       	ldi	r24, 0x03	; 3
    1068:	88 b9       	out	0x08, r24	; 8
    106a:	58 df       	rcall	.-336    	; 0xf1c <set_twi_reciever_enable>
    106c:	8f e3       	ldi	r24, 0x3F	; 63
    106e:	80 93 b8 00 	sts	0x00B8, r24
    1072:	81 e8       	ldi	r24, 0x81	; 129
    1074:	80 93 ba 00 	sts	0x00BA, r24
    1078:	08 95       	ret
    107a:	8f e3       	ldi	r24, 0x3F	; 63
    107c:	80 93 b8 00 	sts	0x00B8, r24
    1080:	4d df       	rcall	.-358    	; 0xf1c <set_twi_reciever_enable>
    1082:	80 e4       	ldi	r24, 0x40	; 64
    1084:	80 93 ba 00 	sts	0x00BA, r24
    1088:	08 95       	ret
    108a:	8f e3       	ldi	r24, 0x3F	; 63
    108c:	80 93 b8 00 	sts	0x00B8, r24
    1090:	45 df       	rcall	.-374    	; 0xf1c <set_twi_reciever_enable>
    1092:	81 e2       	ldi	r24, 0x21	; 33
    1094:	80 93 ba 00 	sts	0x00BA, r24
    1098:	08 95       	ret

0000109a <TWI_send_command>:
    109a:	1f 93       	push	r17
    109c:	cf 93       	push	r28
    109e:	df 93       	push	r29
    10a0:	c8 2f       	mov	r28, r24
    10a2:	d6 2f       	mov	r29, r22
    10a4:	14 2f       	mov	r17, r20
    10a6:	42 df       	rcall	.-380    	; 0xf2c <start_bus>
    10a8:	53 df       	rcall	.-346    	; 0xf50 <wait_for_bus>
    10aa:	90 91 b9 00 	lds	r25, 0x00B9
    10ae:	98 7f       	andi	r25, 0xF8	; 248
    10b0:	98 30       	cpi	r25, 0x08	; 8
    10b2:	19 f0       	breq	.+6      	; 0x10ba <TWI_send_command+0x20>
    10b4:	43 df       	rcall	.-378    	; 0xf3c <Error>
    10b6:	80 e0       	ldi	r24, 0x00	; 0
    10b8:	34 c0       	rjmp	.+104    	; 0x1122 <TWI_send_command+0x88>
    10ba:	80 e2       	ldi	r24, 0x20	; 32
    10bc:	4f df       	rcall	.-354    	; 0xf5c <send_data_and_wait>
    10be:	80 91 b9 00 	lds	r24, 0x00B9
    10c2:	88 7f       	andi	r24, 0xF8	; 248
    10c4:	88 31       	cpi	r24, 0x18	; 24
    10c6:	19 f0       	breq	.+6      	; 0x10ce <TWI_send_command+0x34>
    10c8:	39 df       	rcall	.-398    	; 0xf3c <Error>
    10ca:	80 e0       	ldi	r24, 0x00	; 0
    10cc:	2a c0       	rjmp	.+84     	; 0x1122 <TWI_send_command+0x88>
    10ce:	80 e0       	ldi	r24, 0x00	; 0
    10d0:	45 df       	rcall	.-374    	; 0xf5c <send_data_and_wait>
    10d2:	80 91 b9 00 	lds	r24, 0x00B9
    10d6:	88 7f       	andi	r24, 0xF8	; 248
    10d8:	88 32       	cpi	r24, 0x28	; 40
    10da:	19 f0       	breq	.+6      	; 0x10e2 <TWI_send_command+0x48>
    10dc:	2f df       	rcall	.-418    	; 0xf3c <Error>
    10de:	80 e0       	ldi	r24, 0x00	; 0
    10e0:	20 c0       	rjmp	.+64     	; 0x1122 <TWI_send_command+0x88>
    10e2:	8c 2f       	mov	r24, r28
    10e4:	3b df       	rcall	.-394    	; 0xf5c <send_data_and_wait>
    10e6:	80 91 b9 00 	lds	r24, 0x00B9
    10ea:	88 7f       	andi	r24, 0xF8	; 248
    10ec:	88 32       	cpi	r24, 0x28	; 40
    10ee:	19 f0       	breq	.+6      	; 0x10f6 <TWI_send_command+0x5c>
    10f0:	25 df       	rcall	.-438    	; 0xf3c <Error>
    10f2:	80 e0       	ldi	r24, 0x00	; 0
    10f4:	16 c0       	rjmp	.+44     	; 0x1122 <TWI_send_command+0x88>
    10f6:	8d 2f       	mov	r24, r29
    10f8:	31 df       	rcall	.-414    	; 0xf5c <send_data_and_wait>
    10fa:	80 91 b9 00 	lds	r24, 0x00B9
    10fe:	88 7f       	andi	r24, 0xF8	; 248
    1100:	88 32       	cpi	r24, 0x28	; 40
    1102:	19 f0       	breq	.+6      	; 0x110a <TWI_send_command+0x70>
    1104:	1b df       	rcall	.-458    	; 0xf3c <Error>
    1106:	80 e0       	ldi	r24, 0x00	; 0
    1108:	0c c0       	rjmp	.+24     	; 0x1122 <TWI_send_command+0x88>
    110a:	81 2f       	mov	r24, r17
    110c:	27 df       	rcall	.-434    	; 0xf5c <send_data_and_wait>
    110e:	80 91 b9 00 	lds	r24, 0x00B9
    1112:	88 7f       	andi	r24, 0xF8	; 248
    1114:	88 32       	cpi	r24, 0x28	; 40
    1116:	19 f0       	breq	.+6      	; 0x111e <TWI_send_command+0x84>
    1118:	11 df       	rcall	.-478    	; 0xf3c <Error>
    111a:	80 e0       	ldi	r24, 0x00	; 0
    111c:	02 c0       	rjmp	.+4      	; 0x1122 <TWI_send_command+0x88>
    111e:	0a df       	rcall	.-492    	; 0xf34 <stop_bus>
    1120:	81 e0       	ldi	r24, 0x01	; 1
    1122:	df 91       	pop	r29
    1124:	cf 91       	pop	r28
    1126:	1f 91       	pop	r17
    1128:	08 95       	ret

0000112a <TWI_send_string>:
    112a:	ef 92       	push	r14
    112c:	ff 92       	push	r15
    112e:	0f 93       	push	r16
    1130:	1f 93       	push	r17
    1132:	cf 93       	push	r28
    1134:	df 93       	push	r29
    1136:	c8 2f       	mov	r28, r24
    1138:	e6 2e       	mov	r14, r22
    113a:	f7 2e       	mov	r15, r23
    113c:	f7 de       	rcall	.-530    	; 0xf2c <start_bus>
    113e:	08 df       	rcall	.-496    	; 0xf50 <wait_for_bus>
    1140:	90 91 b9 00 	lds	r25, 0x00B9
    1144:	98 7f       	andi	r25, 0xF8	; 248
    1146:	98 30       	cpi	r25, 0x08	; 8
    1148:	19 f0       	breq	.+6      	; 0x1150 <TWI_send_string+0x26>
    114a:	f8 de       	rcall	.-528    	; 0xf3c <Error>
    114c:	80 e0       	ldi	r24, 0x00	; 0
    114e:	2c c0       	rjmp	.+88     	; 0x11a8 <TWI_send_string+0x7e>
    1150:	8c 2f       	mov	r24, r28
    1152:	04 df       	rcall	.-504    	; 0xf5c <send_data_and_wait>
    1154:	80 91 b9 00 	lds	r24, 0x00B9
    1158:	88 7f       	andi	r24, 0xF8	; 248
    115a:	88 31       	cpi	r24, 0x18	; 24
    115c:	19 f0       	breq	.+6      	; 0x1164 <TWI_send_string+0x3a>
    115e:	ee de       	rcall	.-548    	; 0xf3c <Error>
    1160:	80 e0       	ldi	r24, 0x00	; 0
    1162:	22 c0       	rjmp	.+68     	; 0x11a8 <TWI_send_string+0x7e>
    1164:	89 e1       	ldi	r24, 0x19	; 25
    1166:	fa de       	rcall	.-524    	; 0xf5c <send_data_and_wait>
    1168:	80 91 b9 00 	lds	r24, 0x00B9
    116c:	88 7f       	andi	r24, 0xF8	; 248
    116e:	88 32       	cpi	r24, 0x28	; 40
    1170:	29 f4       	brne	.+10     	; 0x117c <TWI_send_string+0x52>
    1172:	0e 2d       	mov	r16, r14
    1174:	1f 2d       	mov	r17, r15
    1176:	c0 e0       	ldi	r28, 0x00	; 0
    1178:	d0 e0       	ldi	r29, 0x00	; 0
    117a:	08 c0       	rjmp	.+16     	; 0x118c <TWI_send_string+0x62>
    117c:	df de       	rcall	.-578    	; 0xf3c <Error>
    117e:	80 e0       	ldi	r24, 0x00	; 0
    1180:	13 c0       	rjmp	.+38     	; 0x11a8 <TWI_send_string+0x7e>
    1182:	f8 01       	movw	r30, r16
    1184:	81 91       	ld	r24, Z+
    1186:	8f 01       	movw	r16, r30
    1188:	e9 de       	rcall	.-558    	; 0xf5c <send_data_and_wait>
    118a:	21 96       	adiw	r28, 0x01	; 1
    118c:	ee 2d       	mov	r30, r14
    118e:	ff 2d       	mov	r31, r15
    1190:	df 01       	movw	r26, r30
    1192:	0d 90       	ld	r0, X+
    1194:	00 20       	and	r0, r0
    1196:	e9 f7       	brne	.-6      	; 0x1192 <TWI_send_string+0x68>
    1198:	11 97       	sbiw	r26, 0x01	; 1
    119a:	ae 1b       	sub	r26, r30
    119c:	bf 0b       	sbc	r27, r31
    119e:	ca 17       	cp	r28, r26
    11a0:	db 07       	cpc	r29, r27
    11a2:	78 f3       	brcs	.-34     	; 0x1182 <TWI_send_string+0x58>
    11a4:	c7 de       	rcall	.-626    	; 0xf34 <stop_bus>
    11a6:	81 e0       	ldi	r24, 0x01	; 1
    11a8:	df 91       	pop	r29
    11aa:	cf 91       	pop	r28
    11ac:	1f 91       	pop	r17
    11ae:	0f 91       	pop	r16
    11b0:	ff 90       	pop	r15
    11b2:	ef 90       	pop	r14
    11b4:	08 95       	ret

000011b6 <TWI_send_string_fixed_length>:
    11b6:	ef 92       	push	r14
    11b8:	ff 92       	push	r15
    11ba:	0f 93       	push	r16
    11bc:	1f 93       	push	r17
    11be:	cf 93       	push	r28
    11c0:	df 93       	push	r29
    11c2:	c8 2f       	mov	r28, r24
    11c4:	e6 2e       	mov	r14, r22
    11c6:	f7 2e       	mov	r15, r23
    11c8:	8a 01       	movw	r16, r20
    11ca:	b0 de       	rcall	.-672    	; 0xf2c <start_bus>
    11cc:	c1 de       	rcall	.-638    	; 0xf50 <wait_for_bus>
    11ce:	90 91 b9 00 	lds	r25, 0x00B9
    11d2:	98 7f       	andi	r25, 0xF8	; 248
    11d4:	98 30       	cpi	r25, 0x08	; 8
    11d6:	19 f0       	breq	.+6      	; 0x11de <TWI_send_string_fixed_length+0x28>
    11d8:	b1 de       	rcall	.-670    	; 0xf3c <Error>
    11da:	80 e0       	ldi	r24, 0x00	; 0
    11dc:	23 c0       	rjmp	.+70     	; 0x1224 <TWI_send_string_fixed_length+0x6e>
    11de:	8c 2f       	mov	r24, r28
    11e0:	bd de       	rcall	.-646    	; 0xf5c <send_data_and_wait>
    11e2:	80 91 b9 00 	lds	r24, 0x00B9
    11e6:	88 7f       	andi	r24, 0xF8	; 248
    11e8:	88 31       	cpi	r24, 0x18	; 24
    11ea:	19 f0       	breq	.+6      	; 0x11f2 <TWI_send_string_fixed_length+0x3c>
    11ec:	a7 de       	rcall	.-690    	; 0xf3c <Error>
    11ee:	80 e0       	ldi	r24, 0x00	; 0
    11f0:	19 c0       	rjmp	.+50     	; 0x1224 <TWI_send_string_fixed_length+0x6e>
    11f2:	89 e1       	ldi	r24, 0x19	; 25
    11f4:	b3 de       	rcall	.-666    	; 0xf5c <send_data_and_wait>
    11f6:	80 91 b9 00 	lds	r24, 0x00B9
    11fa:	88 7f       	andi	r24, 0xF8	; 248
    11fc:	88 32       	cpi	r24, 0x28	; 40
    11fe:	21 f4       	brne	.+8      	; 0x1208 <TWI_send_string_fixed_length+0x52>
    1200:	10 16       	cp	r1, r16
    1202:	11 06       	cpc	r1, r17
    1204:	24 f0       	brlt	.+8      	; 0x120e <TWI_send_string_fixed_length+0x58>
    1206:	0c c0       	rjmp	.+24     	; 0x1220 <TWI_send_string_fixed_length+0x6a>
    1208:	99 de       	rcall	.-718    	; 0xf3c <Error>
    120a:	80 e0       	ldi	r24, 0x00	; 0
    120c:	0b c0       	rjmp	.+22     	; 0x1224 <TWI_send_string_fixed_length+0x6e>
    120e:	ce 2d       	mov	r28, r14
    1210:	df 2d       	mov	r29, r15
    1212:	0c 0f       	add	r16, r28
    1214:	1d 1f       	adc	r17, r29
    1216:	89 91       	ld	r24, Y+
    1218:	a1 de       	rcall	.-702    	; 0xf5c <send_data_and_wait>
    121a:	c0 17       	cp	r28, r16
    121c:	d1 07       	cpc	r29, r17
    121e:	d9 f7       	brne	.-10     	; 0x1216 <TWI_send_string_fixed_length+0x60>
    1220:	89 de       	rcall	.-750    	; 0xf34 <stop_bus>
    1222:	81 e0       	ldi	r24, 0x01	; 1
    1224:	df 91       	pop	r29
    1226:	cf 91       	pop	r28
    1228:	1f 91       	pop	r17
    122a:	0f 91       	pop	r16
    122c:	ff 90       	pop	r15
    122e:	ef 90       	pop	r14
    1230:	08 95       	ret

00001232 <TWI_send_float>:
    1232:	ef 92       	push	r14
    1234:	ff 92       	push	r15
    1236:	0f 93       	push	r16
    1238:	1f 93       	push	r17
    123a:	cf 93       	push	r28
    123c:	df 93       	push	r29
    123e:	00 d0       	rcall	.+0      	; 0x1240 <TWI_send_float+0xe>
    1240:	00 d0       	rcall	.+0      	; 0x1242 <TWI_send_float+0x10>
    1242:	cd b7       	in	r28, 0x3d	; 61
    1244:	de b7       	in	r29, 0x3e	; 62
    1246:	18 2f       	mov	r17, r24
    1248:	49 83       	std	Y+1, r20	; 0x01
    124a:	5a 83       	std	Y+2, r21	; 0x02
    124c:	6b 83       	std	Y+3, r22	; 0x03
    124e:	7c 83       	std	Y+4, r23	; 0x04
    1250:	6d de       	rcall	.-806    	; 0xf2c <start_bus>
    1252:	7e de       	rcall	.-772    	; 0xf50 <wait_for_bus>
    1254:	90 91 b9 00 	lds	r25, 0x00B9
    1258:	98 7f       	andi	r25, 0xF8	; 248
    125a:	98 30       	cpi	r25, 0x08	; 8
    125c:	19 f0       	breq	.+6      	; 0x1264 <TWI_send_float+0x32>
    125e:	6e de       	rcall	.-804    	; 0xf3c <Error>
    1260:	80 e0       	ldi	r24, 0x00	; 0
    1262:	24 c0       	rjmp	.+72     	; 0x12ac <TWI_send_float+0x7a>
    1264:	81 2f       	mov	r24, r17
    1266:	7a de       	rcall	.-780    	; 0xf5c <send_data_and_wait>
    1268:	80 91 b9 00 	lds	r24, 0x00B9
    126c:	88 7f       	andi	r24, 0xF8	; 248
    126e:	88 31       	cpi	r24, 0x18	; 24
    1270:	19 f0       	breq	.+6      	; 0x1278 <TWI_send_float+0x46>
    1272:	64 de       	rcall	.-824    	; 0xf3c <Error>
    1274:	80 e0       	ldi	r24, 0x00	; 0
    1276:	1a c0       	rjmp	.+52     	; 0x12ac <TWI_send_float+0x7a>
    1278:	86 e0       	ldi	r24, 0x06	; 6
    127a:	70 de       	rcall	.-800    	; 0xf5c <send_data_and_wait>
    127c:	80 91 b9 00 	lds	r24, 0x00B9
    1280:	88 7f       	andi	r24, 0xF8	; 248
    1282:	88 32       	cpi	r24, 0x28	; 40
    1284:	19 f0       	breq	.+6      	; 0x128c <TWI_send_float+0x5a>
    1286:	5a de       	rcall	.-844    	; 0xf3c <Error>
    1288:	80 e0       	ldi	r24, 0x00	; 0
    128a:	10 c0       	rjmp	.+32     	; 0x12ac <TWI_send_float+0x7a>
    128c:	8e 01       	movw	r16, r28
    128e:	0f 5f       	subi	r16, 0xFF	; 255
    1290:	1f 4f       	sbci	r17, 0xFF	; 255
    1292:	7e 01       	movw	r14, r28
    1294:	85 e0       	ldi	r24, 0x05	; 5
    1296:	e8 0e       	add	r14, r24
    1298:	f1 1c       	adc	r15, r1
    129a:	f8 01       	movw	r30, r16
    129c:	81 91       	ld	r24, Z+
    129e:	8f 01       	movw	r16, r30
    12a0:	5d de       	rcall	.-838    	; 0xf5c <send_data_and_wait>
    12a2:	0e 15       	cp	r16, r14
    12a4:	1f 05       	cpc	r17, r15
    12a6:	c9 f7       	brne	.-14     	; 0x129a <TWI_send_float+0x68>
    12a8:	45 de       	rcall	.-886    	; 0xf34 <stop_bus>
    12aa:	81 e0       	ldi	r24, 0x01	; 1
    12ac:	0f 90       	pop	r0
    12ae:	0f 90       	pop	r0
    12b0:	0f 90       	pop	r0
    12b2:	0f 90       	pop	r0
    12b4:	df 91       	pop	r29
    12b6:	cf 91       	pop	r28
    12b8:	1f 91       	pop	r17
    12ba:	0f 91       	pop	r16
    12bc:	ff 90       	pop	r15
    12be:	ef 90       	pop	r14
    12c0:	08 95       	ret

000012c2 <TWI_get_command>:
    12c2:	8b 58       	subi	r24, 0x8B	; 139
    12c4:	9c 4e       	sbci	r25, 0xEC	; 236
    12c6:	fc 01       	movw	r30, r24
    12c8:	80 81       	ld	r24, Z
    12ca:	08 95       	ret

000012cc <TWI_get_sensor>:
    12cc:	89 56       	subi	r24, 0x69	; 105
    12ce:	9b 4e       	sbci	r25, 0xEB	; 235
    12d0:	fc 01       	movw	r30, r24
    12d2:	80 81       	ld	r24, Z
    12d4:	08 95       	ret

000012d6 <TWI_get_control_setting>:
    12d6:	86 58       	subi	r24, 0x86	; 134
    12d8:	9b 4e       	sbci	r25, 0xEB	; 235
    12da:	fc 01       	movw	r30, r24
    12dc:	80 81       	ld	r24, Z
    12de:	08 95       	ret

000012e0 <TWI_get_autonom_settings>:
    12e0:	80 91 78 13 	lds	r24, 0x1378
    12e4:	08 95       	ret

000012e6 <TWI_get_elevation>:
    12e6:	80 91 85 14 	lds	r24, 0x1485
    12ea:	08 95       	ret

000012ec <TWI_command_flag>:
    12ec:	80 91 3a 13 	lds	r24, 0x133A
    12f0:	88 23       	and	r24, r24
    12f2:	21 f0       	breq	.+8      	; 0x12fc <TWI_command_flag+0x10>
    12f4:	10 92 3a 13 	sts	0x133A, r1
    12f8:	81 e0       	ldi	r24, 0x01	; 1
    12fa:	08 95       	ret
    12fc:	80 e0       	ldi	r24, 0x00	; 0
    12fe:	08 95       	ret

00001300 <TWI_control_settings_flag>:
    1300:	80 91 39 13 	lds	r24, 0x1339
    1304:	88 23       	and	r24, r24
    1306:	21 f0       	breq	.+8      	; 0x1310 <TWI_control_settings_flag+0x10>
    1308:	10 92 39 13 	sts	0x1339, r1
    130c:	81 e0       	ldi	r24, 0x01	; 1
    130e:	08 95       	ret
    1310:	80 e0       	ldi	r24, 0x00	; 0
    1312:	08 95       	ret

00001314 <TWI_autonom_settings_flag>:
    1314:	80 91 38 13 	lds	r24, 0x1338
    1318:	88 23       	and	r24, r24
    131a:	21 f0       	breq	.+8      	; 0x1324 <TWI_autonom_settings_flag+0x10>
    131c:	10 92 38 13 	sts	0x1338, r1
    1320:	81 e0       	ldi	r24, 0x01	; 1
    1322:	08 95       	ret
    1324:	80 e0       	ldi	r24, 0x00	; 0
    1326:	08 95       	ret

00001328 <TWI_elevation_flag>:
    1328:	80 91 37 13 	lds	r24, 0x1337
    132c:	88 23       	and	r24, r24
    132e:	21 f0       	breq	.+8      	; 0x1338 <TWI_elevation_flag+0x10>
    1330:	10 92 37 13 	sts	0x1337, r1
    1334:	81 e0       	ldi	r24, 0x01	; 1
    1336:	08 95       	ret
    1338:	80 e0       	ldi	r24, 0x00	; 0
    133a:	08 95       	ret

0000133c <write_to_TwiFIFO>:
    133c:	0f 93       	push	r16
    133e:	1f 93       	push	r17
    1340:	cf 93       	push	r28
    1342:	df 93       	push	r29
    1344:	d8 2f       	mov	r29, r24
    1346:	c9 2f       	mov	r28, r25
    1348:	60 91 88 14 	lds	r22, 0x1488
    134c:	80 91 08 01 	lds	r24, 0x0108
    1350:	90 91 09 01 	lds	r25, 0x0109
    1354:	16 d9       	rcall	.-3540   	; 0x582 <FifoWrite>
    1356:	81 11       	cpse	r24, r1
    1358:	1f c0       	rjmp	.+62     	; 0x1398 <write_to_TwiFIFO+0x5c>
    135a:	20 91 88 14 	lds	r18, 0x1488
    135e:	30 91 89 14 	lds	r19, 0x1489
    1362:	12 16       	cp	r1, r18
    1364:	13 06       	cpc	r1, r19
    1366:	d4 f4       	brge	.+52     	; 0x139c <write_to_TwiFIFO+0x60>
    1368:	0d 2f       	mov	r16, r29
    136a:	1c 2f       	mov	r17, r28
    136c:	c0 e0       	ldi	r28, 0x00	; 0
    136e:	d0 e0       	ldi	r29, 0x00	; 0
    1370:	f8 01       	movw	r30, r16
    1372:	61 91       	ld	r22, Z+
    1374:	8f 01       	movw	r16, r30
    1376:	80 91 08 01 	lds	r24, 0x0108
    137a:	90 91 09 01 	lds	r25, 0x0109
    137e:	01 d9       	rcall	.-3582   	; 0x582 <FifoWrite>
    1380:	81 11       	cpse	r24, r1
    1382:	0e c0       	rjmp	.+28     	; 0x13a0 <write_to_TwiFIFO+0x64>
    1384:	21 96       	adiw	r28, 0x01	; 1
    1386:	80 91 88 14 	lds	r24, 0x1488
    138a:	90 91 89 14 	lds	r25, 0x1489
    138e:	c8 17       	cp	r28, r24
    1390:	d9 07       	cpc	r29, r25
    1392:	74 f3       	brlt	.-36     	; 0x1370 <write_to_TwiFIFO+0x34>
    1394:	80 e0       	ldi	r24, 0x00	; 0
    1396:	05 c0       	rjmp	.+10     	; 0x13a2 <write_to_TwiFIFO+0x66>
    1398:	81 e0       	ldi	r24, 0x01	; 1
    139a:	03 c0       	rjmp	.+6      	; 0x13a2 <write_to_TwiFIFO+0x66>
    139c:	80 e0       	ldi	r24, 0x00	; 0
    139e:	01 c0       	rjmp	.+2      	; 0x13a2 <write_to_TwiFIFO+0x66>
    13a0:	81 e0       	ldi	r24, 0x01	; 1
    13a2:	df 91       	pop	r29
    13a4:	cf 91       	pop	r28
    13a6:	1f 91       	pop	r17
    13a8:	0f 91       	pop	r16
    13aa:	08 95       	ret

000013ac <__vector_26>:
    13ac:	1f 92       	push	r1
    13ae:	0f 92       	push	r0
    13b0:	0f b6       	in	r0, 0x3f	; 63
    13b2:	0f 92       	push	r0
    13b4:	11 24       	eor	r1, r1
    13b6:	0b b6       	in	r0, 0x3b	; 59
    13b8:	0f 92       	push	r0
    13ba:	2f 93       	push	r18
    13bc:	3f 93       	push	r19
    13be:	4f 93       	push	r20
    13c0:	5f 93       	push	r21
    13c2:	6f 93       	push	r22
    13c4:	7f 93       	push	r23
    13c6:	8f 93       	push	r24
    13c8:	9f 93       	push	r25
    13ca:	af 93       	push	r26
    13cc:	bf 93       	push	r27
    13ce:	cf 93       	push	r28
    13d0:	df 93       	push	r29
    13d2:	ef 93       	push	r30
    13d4:	ff 93       	push	r31
    13d6:	80 91 7f 14 	lds	r24, 0x147F
    13da:	80 34       	cpi	r24, 0x40	; 64
    13dc:	09 f4       	brne	.+2      	; 0x13e0 <__vector_26+0x34>
    13de:	87 c0       	rjmp	.+270    	; 0x14ee <__vector_26+0x142>
    13e0:	80 38       	cpi	r24, 0x80	; 128
    13e2:	21 f0       	breq	.+8      	; 0x13ec <__vector_26+0x40>
    13e4:	80 32       	cpi	r24, 0x20	; 32
    13e6:	09 f0       	breq	.+2      	; 0x13ea <__vector_26+0x3e>
    13e8:	57 c1       	rjmp	.+686    	; 0x1698 <__vector_26+0x2ec>
    13ea:	c9 c0       	rjmp	.+402    	; 0x157e <__vector_26+0x1d2>
    13ec:	80 91 b9 00 	lds	r24, 0x00B9
    13f0:	88 7f       	andi	r24, 0xF8	; 248
    13f2:	80 36       	cpi	r24, 0x60	; 96
    13f4:	29 f0       	breq	.+10     	; 0x1400 <__vector_26+0x54>
    13f6:	80 91 b9 00 	lds	r24, 0x00B9
    13fa:	88 7f       	andi	r24, 0xF8	; 248
    13fc:	88 36       	cpi	r24, 0x68	; 104
    13fe:	21 f4       	brne	.+8      	; 0x1408 <__vector_26+0x5c>
    1400:	81 e0       	ldi	r24, 0x01	; 1
    1402:	80 93 82 14 	sts	0x1482, r24
    1406:	71 c0       	rjmp	.+226    	; 0x14ea <__vector_26+0x13e>
    1408:	80 91 b9 00 	lds	r24, 0x00B9
    140c:	88 7f       	andi	r24, 0xF8	; 248
    140e:	80 37       	cpi	r24, 0x70	; 112
    1410:	29 f0       	breq	.+10     	; 0x141c <__vector_26+0x70>
    1412:	80 91 b9 00 	lds	r24, 0x00B9
    1416:	88 7f       	andi	r24, 0xF8	; 248
    1418:	88 37       	cpi	r24, 0x78	; 120
    141a:	39 f4       	brne	.+14     	; 0x142a <__vector_26+0x7e>
    141c:	8f ef       	ldi	r24, 0xFF	; 255
    141e:	90 e0       	ldi	r25, 0x00	; 0
    1420:	90 93 8c 14 	sts	0x148C, r25
    1424:	80 93 8b 14 	sts	0x148B, r24
    1428:	60 c0       	rjmp	.+192    	; 0x14ea <__vector_26+0x13e>
    142a:	80 91 b9 00 	lds	r24, 0x00B9
    142e:	88 7f       	andi	r24, 0xF8	; 248
    1430:	80 38       	cpi	r24, 0x80	; 128
    1432:	b9 f5       	brne	.+110    	; 0x14a2 <__vector_26+0xf6>
    1434:	80 91 82 14 	lds	r24, 0x1482
    1438:	88 23       	and	r24, r24
    143a:	41 f0       	breq	.+16     	; 0x144c <__vector_26+0xa0>
    143c:	86 dd       	rcall	.-1268   	; 0xf4a <get_data>
    143e:	80 93 8b 14 	sts	0x148B, r24
    1442:	10 92 8c 14 	sts	0x148C, r1
    1446:	10 92 82 14 	sts	0x1482, r1
    144a:	4f c0       	rjmp	.+158    	; 0x14ea <__vector_26+0x13e>
    144c:	80 91 8b 14 	lds	r24, 0x148B
    1450:	90 91 8c 14 	lds	r25, 0x148C
    1454:	85 30       	cpi	r24, 0x05	; 5
    1456:	91 05       	cpc	r25, r1
    1458:	71 f0       	breq	.+28     	; 0x1476 <__vector_26+0xca>
    145a:	24 f4       	brge	.+8      	; 0x1464 <__vector_26+0xb8>
    145c:	01 97       	sbiw	r24, 0x01	; 1
    145e:	09 f0       	breq	.+2      	; 0x1462 <__vector_26+0xb6>
    1460:	44 c0       	rjmp	.+136    	; 0x14ea <__vector_26+0x13e>
    1462:	07 c0       	rjmp	.+14     	; 0x1472 <__vector_26+0xc6>
    1464:	86 30       	cpi	r24, 0x06	; 6
    1466:	91 05       	cpc	r25, r1
    1468:	51 f0       	breq	.+20     	; 0x147e <__vector_26+0xd2>
    146a:	49 97       	sbiw	r24, 0x19	; 25
    146c:	09 f0       	breq	.+2      	; 0x1470 <__vector_26+0xc4>
    146e:	3d c0       	rjmp	.+122    	; 0x14ea <__vector_26+0x13e>
    1470:	04 c0       	rjmp	.+8      	; 0x147a <__vector_26+0xce>
    1472:	95 dd       	rcall	.-1238   	; 0xf9e <get_control_settings_from_bus>
    1474:	3a c0       	rjmp	.+116    	; 0x14ea <__vector_26+0x13e>
    1476:	a4 dd       	rcall	.-1208   	; 0xfc0 <get_autonom_settings_from_bus>
    1478:	38 c0       	rjmp	.+112    	; 0x14ea <__vector_26+0x13e>
    147a:	a6 dd       	rcall	.-1204   	; 0xfc8 <get_char_from_bus>
    147c:	36 c0       	rjmp	.+108    	; 0x14ea <__vector_26+0x13e>
    147e:	c0 91 80 14 	lds	r28, 0x1480
    1482:	d0 91 81 14 	lds	r29, 0x1481
    1486:	61 dd       	rcall	.-1342   	; 0xf4a <get_data>
    1488:	cf 58       	subi	r28, 0x8F	; 143
    148a:	dc 4e       	sbci	r29, 0xEC	; 236
    148c:	88 83       	st	Y, r24
    148e:	80 91 80 14 	lds	r24, 0x1480
    1492:	90 91 81 14 	lds	r25, 0x1481
    1496:	01 96       	adiw	r24, 0x01	; 1
    1498:	90 93 81 14 	sts	0x1481, r25
    149c:	80 93 80 14 	sts	0x1480, r24
    14a0:	24 c0       	rjmp	.+72     	; 0x14ea <__vector_26+0x13e>
    14a2:	80 91 b9 00 	lds	r24, 0x00B9
    14a6:	88 7f       	andi	r24, 0xF8	; 248
    14a8:	80 39       	cpi	r24, 0x90	; 144
    14aa:	11 f4       	brne	.+4      	; 0x14b0 <__vector_26+0x104>
    14ac:	a7 dd       	rcall	.-1202   	; 0xffc <get_sensor_from_bus>
    14ae:	1d c0       	rjmp	.+58     	; 0x14ea <__vector_26+0x13e>
    14b0:	80 91 b9 00 	lds	r24, 0x00B9
    14b4:	88 7f       	andi	r24, 0xF8	; 248
    14b6:	80 3a       	cpi	r24, 0xA0	; 160
    14b8:	c1 f4       	brne	.+48     	; 0x14ea <__vector_26+0x13e>
    14ba:	56 dd       	rcall	.-1364   	; 0xf68 <stop_twi>
    14bc:	80 91 8b 14 	lds	r24, 0x148B
    14c0:	90 91 8c 14 	lds	r25, 0x148C
    14c4:	85 30       	cpi	r24, 0x05	; 5
    14c6:	91 05       	cpc	r25, r1
    14c8:	49 f0       	breq	.+18     	; 0x14dc <__vector_26+0x130>
    14ca:	89 31       	cpi	r24, 0x19	; 25
    14cc:	91 05       	cpc	r25, r1
    14ce:	51 f0       	breq	.+20     	; 0x14e4 <__vector_26+0x138>
    14d0:	01 97       	sbiw	r24, 0x01	; 1
    14d2:	59 f4       	brne	.+22     	; 0x14ea <__vector_26+0x13e>
    14d4:	81 e0       	ldi	r24, 0x01	; 1
    14d6:	80 93 39 13 	sts	0x1339, r24
    14da:	07 c0       	rjmp	.+14     	; 0x14ea <__vector_26+0x13e>
    14dc:	81 e0       	ldi	r24, 0x01	; 1
    14de:	80 93 38 13 	sts	0x1338, r24
    14e2:	03 c0       	rjmp	.+6      	; 0x14ea <__vector_26+0x13e>
    14e4:	89 e7       	ldi	r24, 0x79	; 121
    14e6:	93 e1       	ldi	r25, 0x13	; 19
    14e8:	29 df       	rcall	.-430    	; 0x133c <write_to_TwiFIFO>
    14ea:	53 dd       	rcall	.-1370   	; 0xf92 <reset_TWI>
    14ec:	d5 c0       	rjmp	.+426    	; 0x1698 <__vector_26+0x2ec>
    14ee:	80 91 b9 00 	lds	r24, 0x00B9
    14f2:	88 7f       	andi	r24, 0xF8	; 248
    14f4:	80 36       	cpi	r24, 0x60	; 96
    14f6:	29 f0       	breq	.+10     	; 0x1502 <__vector_26+0x156>
    14f8:	80 91 b9 00 	lds	r24, 0x00B9
    14fc:	88 7f       	andi	r24, 0xF8	; 248
    14fe:	88 36       	cpi	r24, 0x68	; 104
    1500:	21 f4       	brne	.+8      	; 0x150a <__vector_26+0x15e>
    1502:	81 e0       	ldi	r24, 0x01	; 1
    1504:	80 93 82 14 	sts	0x1482, r24
    1508:	38 c0       	rjmp	.+112    	; 0x157a <__vector_26+0x1ce>
    150a:	80 91 b9 00 	lds	r24, 0x00B9
    150e:	88 7f       	andi	r24, 0xF8	; 248
    1510:	80 38       	cpi	r24, 0x80	; 128
    1512:	e1 f4       	brne	.+56     	; 0x154c <__vector_26+0x1a0>
    1514:	80 91 82 14 	lds	r24, 0x1482
    1518:	88 23       	and	r24, r24
    151a:	41 f0       	breq	.+16     	; 0x152c <__vector_26+0x180>
    151c:	16 dd       	rcall	.-1492   	; 0xf4a <get_data>
    151e:	80 93 8b 14 	sts	0x148B, r24
    1522:	10 92 8c 14 	sts	0x148C, r1
    1526:	10 92 82 14 	sts	0x1482, r1
    152a:	27 c0       	rjmp	.+78     	; 0x157a <__vector_26+0x1ce>
    152c:	80 91 8b 14 	lds	r24, 0x148B
    1530:	90 91 8c 14 	lds	r25, 0x148C
    1534:	82 30       	cpi	r24, 0x02	; 2
    1536:	91 05       	cpc	r25, r1
    1538:	19 f0       	breq	.+6      	; 0x1540 <__vector_26+0x194>
    153a:	49 97       	sbiw	r24, 0x19	; 25
    153c:	f1 f4       	brne	.+60     	; 0x157a <__vector_26+0x1ce>
    153e:	04 c0       	rjmp	.+8      	; 0x1548 <__vector_26+0x19c>
    1540:	04 dd       	rcall	.-1528   	; 0xf4a <get_data>
    1542:	80 93 8a 14 	sts	0x148A, r24
    1546:	19 c0       	rjmp	.+50     	; 0x157a <__vector_26+0x1ce>
    1548:	3f dd       	rcall	.-1410   	; 0xfc8 <get_char_from_bus>
    154a:	17 c0       	rjmp	.+46     	; 0x157a <__vector_26+0x1ce>
    154c:	80 91 b9 00 	lds	r24, 0x00B9
    1550:	88 7f       	andi	r24, 0xF8	; 248
    1552:	80 3a       	cpi	r24, 0xA0	; 160
    1554:	91 f4       	brne	.+36     	; 0x157a <__vector_26+0x1ce>
    1556:	08 dd       	rcall	.-1520   	; 0xf68 <stop_twi>
    1558:	80 91 8b 14 	lds	r24, 0x148B
    155c:	90 91 8c 14 	lds	r25, 0x148C
    1560:	82 30       	cpi	r24, 0x02	; 2
    1562:	91 05       	cpc	r25, r1
    1564:	19 f0       	breq	.+6      	; 0x156c <__vector_26+0x1c0>
    1566:	49 97       	sbiw	r24, 0x19	; 25
    1568:	41 f4       	brne	.+16     	; 0x157a <__vector_26+0x1ce>
    156a:	04 c0       	rjmp	.+8      	; 0x1574 <__vector_26+0x1c8>
    156c:	81 e0       	ldi	r24, 0x01	; 1
    156e:	80 93 36 13 	sts	0x1336, r24
    1572:	03 c0       	rjmp	.+6      	; 0x157a <__vector_26+0x1ce>
    1574:	89 e7       	ldi	r24, 0x79	; 121
    1576:	93 e1       	ldi	r25, 0x13	; 19
    1578:	e1 de       	rcall	.-574    	; 0x133c <write_to_TwiFIFO>
    157a:	0b dd       	rcall	.-1514   	; 0xf92 <reset_TWI>
    157c:	8d c0       	rjmp	.+282    	; 0x1698 <__vector_26+0x2ec>
    157e:	80 91 b9 00 	lds	r24, 0x00B9
    1582:	88 7f       	andi	r24, 0xF8	; 248
    1584:	80 36       	cpi	r24, 0x60	; 96
    1586:	29 f0       	breq	.+10     	; 0x1592 <__vector_26+0x1e6>
    1588:	80 91 b9 00 	lds	r24, 0x00B9
    158c:	88 7f       	andi	r24, 0xF8	; 248
    158e:	88 36       	cpi	r24, 0x68	; 104
    1590:	21 f4       	brne	.+8      	; 0x159a <__vector_26+0x1ee>
    1592:	81 e0       	ldi	r24, 0x01	; 1
    1594:	80 93 82 14 	sts	0x1482, r24
    1598:	7e c0       	rjmp	.+252    	; 0x1696 <__vector_26+0x2ea>
    159a:	80 91 b9 00 	lds	r24, 0x00B9
    159e:	88 7f       	andi	r24, 0xF8	; 248
    15a0:	80 37       	cpi	r24, 0x70	; 112
    15a2:	29 f0       	breq	.+10     	; 0x15ae <__vector_26+0x202>
    15a4:	80 91 b9 00 	lds	r24, 0x00B9
    15a8:	88 7f       	andi	r24, 0xF8	; 248
    15aa:	88 37       	cpi	r24, 0x78	; 120
    15ac:	39 f4       	brne	.+14     	; 0x15bc <__vector_26+0x210>
    15ae:	8f ef       	ldi	r24, 0xFF	; 255
    15b0:	90 e0       	ldi	r25, 0x00	; 0
    15b2:	90 93 8c 14 	sts	0x148C, r25
    15b6:	80 93 8b 14 	sts	0x148B, r24
    15ba:	6d c0       	rjmp	.+218    	; 0x1696 <__vector_26+0x2ea>
    15bc:	80 91 b9 00 	lds	r24, 0x00B9
    15c0:	88 7f       	andi	r24, 0xF8	; 248
    15c2:	80 38       	cpi	r24, 0x80	; 128
    15c4:	09 f0       	breq	.+2      	; 0x15c8 <__vector_26+0x21c>
    15c6:	3a c0       	rjmp	.+116    	; 0x163c <__vector_26+0x290>
    15c8:	80 91 82 14 	lds	r24, 0x1482
    15cc:	88 23       	and	r24, r24
    15ce:	41 f0       	breq	.+16     	; 0x15e0 <__vector_26+0x234>
    15d0:	bc dc       	rcall	.-1672   	; 0xf4a <get_data>
    15d2:	80 93 8b 14 	sts	0x148B, r24
    15d6:	10 92 8c 14 	sts	0x148C, r1
    15da:	10 92 82 14 	sts	0x1482, r1
    15de:	5b c0       	rjmp	.+182    	; 0x1696 <__vector_26+0x2ea>
    15e0:	80 91 8b 14 	lds	r24, 0x148B
    15e4:	90 91 8c 14 	lds	r25, 0x148C
    15e8:	81 30       	cpi	r24, 0x01	; 1
    15ea:	91 05       	cpc	r25, r1
    15ec:	19 f1       	breq	.+70     	; 0x1634 <__vector_26+0x288>
    15ee:	1c f4       	brge	.+6      	; 0x15f6 <__vector_26+0x24a>
    15f0:	89 2b       	or	r24, r25
    15f2:	41 f0       	breq	.+16     	; 0x1604 <__vector_26+0x258>
    15f4:	50 c0       	rjmp	.+160    	; 0x1696 <__vector_26+0x2ea>
    15f6:	84 30       	cpi	r24, 0x04	; 4
    15f8:	91 05       	cpc	r25, r1
    15fa:	b1 f0       	breq	.+44     	; 0x1628 <__vector_26+0x27c>
    15fc:	05 97       	sbiw	r24, 0x05	; 5
    15fe:	09 f0       	breq	.+2      	; 0x1602 <__vector_26+0x256>
    1600:	4a c0       	rjmp	.+148    	; 0x1696 <__vector_26+0x2ea>
    1602:	1a c0       	rjmp	.+52     	; 0x1638 <__vector_26+0x28c>
    1604:	c0 91 83 14 	lds	r28, 0x1483
    1608:	d0 91 84 14 	lds	r29, 0x1484
    160c:	9e dc       	rcall	.-1732   	; 0xf4a <get_data>
    160e:	cb 58       	subi	r28, 0x8B	; 139
    1610:	dc 4e       	sbci	r29, 0xEC	; 236
    1612:	88 83       	st	Y, r24
    1614:	80 91 83 14 	lds	r24, 0x1483
    1618:	90 91 84 14 	lds	r25, 0x1484
    161c:	01 96       	adiw	r24, 0x01	; 1
    161e:	90 93 84 14 	sts	0x1484, r25
    1622:	80 93 83 14 	sts	0x1483, r24
    1626:	37 c0       	rjmp	.+110    	; 0x1696 <__vector_26+0x2ea>
    1628:	90 dc       	rcall	.-1760   	; 0xf4a <get_data>
    162a:	80 93 85 14 	sts	0x1485, r24
    162e:	10 92 86 14 	sts	0x1486, r1
    1632:	31 c0       	rjmp	.+98     	; 0x1696 <__vector_26+0x2ea>
    1634:	b4 dc       	rcall	.-1688   	; 0xf9e <get_control_settings_from_bus>
    1636:	2f c0       	rjmp	.+94     	; 0x1696 <__vector_26+0x2ea>
    1638:	c3 dc       	rcall	.-1658   	; 0xfc0 <get_autonom_settings_from_bus>
    163a:	2d c0       	rjmp	.+90     	; 0x1696 <__vector_26+0x2ea>
    163c:	80 91 b9 00 	lds	r24, 0x00B9
    1640:	88 7f       	andi	r24, 0xF8	; 248
    1642:	80 39       	cpi	r24, 0x90	; 144
    1644:	11 f4       	brne	.+4      	; 0x164a <__vector_26+0x29e>
    1646:	da dc       	rcall	.-1612   	; 0xffc <get_sensor_from_bus>
    1648:	26 c0       	rjmp	.+76     	; 0x1696 <__vector_26+0x2ea>
    164a:	80 91 b9 00 	lds	r24, 0x00B9
    164e:	88 7f       	andi	r24, 0xF8	; 248
    1650:	80 3a       	cpi	r24, 0xA0	; 160
    1652:	09 f5       	brne	.+66     	; 0x1696 <__vector_26+0x2ea>
    1654:	89 dc       	rcall	.-1774   	; 0xf68 <stop_twi>
    1656:	80 91 8b 14 	lds	r24, 0x148B
    165a:	90 91 8c 14 	lds	r25, 0x148C
    165e:	81 30       	cpi	r24, 0x01	; 1
    1660:	91 05       	cpc	r25, r1
    1662:	91 f0       	breq	.+36     	; 0x1688 <__vector_26+0x2dc>
    1664:	1c f4       	brge	.+6      	; 0x166c <__vector_26+0x2c0>
    1666:	89 2b       	or	r24, r25
    1668:	39 f0       	breq	.+14     	; 0x1678 <__vector_26+0x2cc>
    166a:	15 c0       	rjmp	.+42     	; 0x1696 <__vector_26+0x2ea>
    166c:	84 30       	cpi	r24, 0x04	; 4
    166e:	91 05       	cpc	r25, r1
    1670:	39 f0       	breq	.+14     	; 0x1680 <__vector_26+0x2d4>
    1672:	05 97       	sbiw	r24, 0x05	; 5
    1674:	81 f4       	brne	.+32     	; 0x1696 <__vector_26+0x2ea>
    1676:	0c c0       	rjmp	.+24     	; 0x1690 <__vector_26+0x2e4>
    1678:	81 e0       	ldi	r24, 0x01	; 1
    167a:	80 93 3a 13 	sts	0x133A, r24
    167e:	0b c0       	rjmp	.+22     	; 0x1696 <__vector_26+0x2ea>
    1680:	81 e0       	ldi	r24, 0x01	; 1
    1682:	80 93 37 13 	sts	0x1337, r24
    1686:	07 c0       	rjmp	.+14     	; 0x1696 <__vector_26+0x2ea>
    1688:	81 e0       	ldi	r24, 0x01	; 1
    168a:	80 93 39 13 	sts	0x1339, r24
    168e:	03 c0       	rjmp	.+6      	; 0x1696 <__vector_26+0x2ea>
    1690:	81 e0       	ldi	r24, 0x01	; 1
    1692:	80 93 38 13 	sts	0x1338, r24
    1696:	7d dc       	rcall	.-1798   	; 0xf92 <reset_TWI>
    1698:	ff 91       	pop	r31
    169a:	ef 91       	pop	r30
    169c:	df 91       	pop	r29
    169e:	cf 91       	pop	r28
    16a0:	bf 91       	pop	r27
    16a2:	af 91       	pop	r26
    16a4:	9f 91       	pop	r25
    16a6:	8f 91       	pop	r24
    16a8:	7f 91       	pop	r23
    16aa:	6f 91       	pop	r22
    16ac:	5f 91       	pop	r21
    16ae:	4f 91       	pop	r20
    16b0:	3f 91       	pop	r19
    16b2:	2f 91       	pop	r18
    16b4:	0f 90       	pop	r0
    16b6:	0b be       	out	0x3b, r0	; 59
    16b8:	0f 90       	pop	r0
    16ba:	0f be       	out	0x3f, r0	; 63
    16bc:	0f 90       	pop	r0
    16be:	1f 90       	pop	r1
    16c0:	18 95       	reti

000016c2 <USART_init>:
    16c2:	10 92 c5 00 	sts	0x00C5, r1
    16c6:	87 e0       	ldi	r24, 0x07	; 7
    16c8:	80 93 c4 00 	sts	0x00C4, r24
    16cc:	88 e9       	ldi	r24, 0x98	; 152
    16ce:	80 93 c1 00 	sts	0x00C1, r24
    16d2:	86 e0       	ldi	r24, 0x06	; 6
    16d4:	80 93 c2 00 	sts	0x00C2, r24
    16d8:	08 95       	ret

000016da <USART_set_twi_message_destination>:
    16da:	90 93 1a 11 	sts	0x111A, r25
    16de:	80 93 19 11 	sts	0x1119, r24
    16e2:	08 95       	ret

000016e4 <USART_CheckTxReady>:
    16e4:	80 91 c0 00 	lds	r24, 0x00C0
    16e8:	80 72       	andi	r24, 0x20	; 32
    16ea:	08 95       	ret

000016ec <USART_WriteByte>:
    16ec:	cf 93       	push	r28
    16ee:	c8 2f       	mov	r28, r24
    16f0:	f9 df       	rcall	.-14     	; 0x16e4 <USART_CheckTxReady>
    16f2:	88 23       	and	r24, r24
    16f4:	e9 f3       	breq	.-6      	; 0x16f0 <USART_WriteByte+0x4>
    16f6:	c0 93 c6 00 	sts	0x00C6, r28
    16fa:	cf 91       	pop	r28
    16fc:	08 95       	ret

000016fe <USART_crc16>:
    16fe:	cf 92       	push	r12
    1700:	df 92       	push	r13
    1702:	ef 92       	push	r14
    1704:	ff 92       	push	r15
    1706:	0f 93       	push	r16
    1708:	1f 93       	push	r17
    170a:	cf 93       	push	r28
    170c:	df 93       	push	r29
    170e:	66 23       	and	r22, r22
    1710:	09 f4       	brne	.+2      	; 0x1714 <USART_crc16+0x16>
    1712:	3e c0       	rjmp	.+124    	; 0x1790 <USART_crc16+0x92>
    1714:	06 2f       	mov	r16, r22
    1716:	10 e0       	ldi	r17, 0x00	; 0
    1718:	4f ef       	ldi	r20, 0xFF	; 255
    171a:	5f ef       	ldi	r21, 0xFF	; 255
    171c:	ee ef       	ldi	r30, 0xFE	; 254
    171e:	ff ef       	ldi	r31, 0xFF	; 255
    1720:	c6 2e       	mov	r12, r22
    1722:	d1 2c       	mov	r13, r1
    1724:	e8 2e       	mov	r14, r24
    1726:	f1 2c       	mov	r15, r1
    1728:	c8 e0       	ldi	r28, 0x08	; 8
    172a:	d0 e0       	ldi	r29, 0x00	; 0
    172c:	ee 3f       	cpi	r30, 0xFE	; 254
    172e:	6f ef       	ldi	r22, 0xFF	; 255
    1730:	f6 07       	cpc	r31, r22
    1732:	19 f4       	brne	.+6      	; 0x173a <USART_crc16+0x3c>
    1734:	8e 2d       	mov	r24, r14
    1736:	9f 2d       	mov	r25, r15
    1738:	30 c0       	rjmp	.+96     	; 0x179a <USART_crc16+0x9c>
    173a:	ef 3f       	cpi	r30, 0xFF	; 255
    173c:	8f ef       	ldi	r24, 0xFF	; 255
    173e:	f8 07       	cpc	r31, r24
    1740:	19 f4       	brne	.+6      	; 0x1748 <USART_crc16+0x4a>
    1742:	8c 2d       	mov	r24, r12
    1744:	9d 2d       	mov	r25, r13
    1746:	29 c0       	rjmp	.+82     	; 0x179a <USART_crc16+0x9c>
    1748:	df 01       	movw	r26, r30
    174a:	ac 55       	subi	r26, 0x5C	; 92
    174c:	b9 4e       	sbci	r27, 0xE9	; 233
    174e:	8c 91       	ld	r24, X
    1750:	90 e0       	ldi	r25, 0x00	; 0
    1752:	23 c0       	rjmp	.+70     	; 0x179a <USART_crc16+0x9c>
    1754:	ba 01       	movw	r22, r20
    1756:	68 27       	eor	r22, r24
    1758:	79 27       	eor	r23, r25
    175a:	60 ff       	sbrs	r22, 0
    175c:	07 c0       	rjmp	.+14     	; 0x176c <USART_crc16+0x6e>
    175e:	56 95       	lsr	r21
    1760:	47 95       	ror	r20
    1762:	68 e0       	ldi	r22, 0x08	; 8
    1764:	46 27       	eor	r20, r22
    1766:	64 e8       	ldi	r22, 0x84	; 132
    1768:	56 27       	eor	r21, r22
    176a:	02 c0       	rjmp	.+4      	; 0x1770 <USART_crc16+0x72>
    176c:	56 95       	lsr	r21
    176e:	47 95       	ror	r20
    1770:	96 95       	lsr	r25
    1772:	87 95       	ror	r24
    1774:	21 50       	subi	r18, 0x01	; 1
    1776:	31 09       	sbc	r19, r1
    1778:	69 f7       	brne	.-38     	; 0x1754 <USART_crc16+0x56>
    177a:	31 96       	adiw	r30, 0x01	; 1
    177c:	e0 17       	cp	r30, r16
    177e:	f1 07       	cpc	r31, r17
    1780:	a9 f6       	brne	.-86     	; 0x172c <USART_crc16+0x2e>
    1782:	9a 01       	movw	r18, r20
    1784:	20 95       	com	r18
    1786:	30 95       	com	r19
    1788:	32 27       	eor	r19, r18
    178a:	23 27       	eor	r18, r19
    178c:	32 27       	eor	r19, r18
    178e:	02 c0       	rjmp	.+4      	; 0x1794 <USART_crc16+0x96>
    1790:	20 e0       	ldi	r18, 0x00	; 0
    1792:	30 e0       	ldi	r19, 0x00	; 0
    1794:	82 2f       	mov	r24, r18
    1796:	93 2f       	mov	r25, r19
    1798:	02 c0       	rjmp	.+4      	; 0x179e <USART_crc16+0xa0>
    179a:	9e 01       	movw	r18, r28
    179c:	db cf       	rjmp	.-74     	; 0x1754 <USART_crc16+0x56>
    179e:	df 91       	pop	r29
    17a0:	cf 91       	pop	r28
    17a2:	1f 91       	pop	r17
    17a4:	0f 91       	pop	r16
    17a6:	ff 90       	pop	r15
    17a8:	ef 90       	pop	r14
    17aa:	df 90       	pop	r13
    17ac:	cf 90       	pop	r12
    17ae:	08 95       	ret

000017b0 <USART_SendPacket>:
    17b0:	0f 93       	push	r16
    17b2:	1f 93       	push	r17
    17b4:	cf 93       	push	r28
    17b6:	df 93       	push	r29
    17b8:	9e e7       	ldi	r25, 0x7E	; 126
    17ba:	90 93 a3 17 	sts	0x17A3, r25
    17be:	80 93 a4 17 	sts	0x17A4, r24
    17c2:	60 93 a5 17 	sts	0x17A5, r22
    17c6:	26 2f       	mov	r18, r22
    17c8:	30 e0       	ldi	r19, 0x00	; 0
    17ca:	12 16       	cp	r1, r18
    17cc:	13 06       	cpc	r1, r19
    17ce:	4c f5       	brge	.+82     	; 0x1822 <USART_SendPacket+0x72>
    17d0:	e4 ea       	ldi	r30, 0xA4	; 164
    17d2:	f6 e1       	ldi	r31, 0x16	; 22
    17d4:	03 e0       	ldi	r16, 0x03	; 3
    17d6:	10 e0       	ldi	r17, 0x00	; 0
    17d8:	c0 e0       	ldi	r28, 0x00	; 0
    17da:	d0 e0       	ldi	r29, 0x00	; 0
    17dc:	7d e7       	ldi	r23, 0x7D	; 125
    17de:	50 e2       	ldi	r21, 0x20	; 32
    17e0:	90 81       	ld	r25, Z
    17e2:	49 2f       	mov	r20, r25
    17e4:	4d 57       	subi	r20, 0x7D	; 125
    17e6:	42 30       	cpi	r20, 0x02	; 2
    17e8:	80 f4       	brcc	.+32     	; 0x180a <USART_SendPacket+0x5a>
    17ea:	d8 01       	movw	r26, r16
    17ec:	ad 55       	subi	r26, 0x5D	; 93
    17ee:	b8 4e       	sbci	r27, 0xE8	; 232
    17f0:	ac 0f       	add	r26, r28
    17f2:	bd 1f       	adc	r27, r29
    17f4:	7c 93       	st	X, r23
    17f6:	0f 5f       	subi	r16, 0xFF	; 255
    17f8:	1f 4f       	sbci	r17, 0xFF	; 255
    17fa:	d8 01       	movw	r26, r16
    17fc:	ad 55       	subi	r26, 0x5D	; 93
    17fe:	b8 4e       	sbci	r27, 0xE8	; 232
    1800:	ac 0f       	add	r26, r28
    1802:	bd 1f       	adc	r27, r29
    1804:	95 27       	eor	r25, r21
    1806:	9c 93       	st	X, r25
    1808:	06 c0       	rjmp	.+12     	; 0x1816 <USART_SendPacket+0x66>
    180a:	d8 01       	movw	r26, r16
    180c:	ad 55       	subi	r26, 0x5D	; 93
    180e:	b8 4e       	sbci	r27, 0xE8	; 232
    1810:	ac 0f       	add	r26, r28
    1812:	bd 1f       	adc	r27, r29
    1814:	9c 93       	st	X, r25
    1816:	21 96       	adiw	r28, 0x01	; 1
    1818:	31 96       	adiw	r30, 0x01	; 1
    181a:	c2 17       	cp	r28, r18
    181c:	d3 07       	cpc	r29, r19
    181e:	01 f7       	brne	.-64     	; 0x17e0 <USART_SendPacket+0x30>
    1820:	04 c0       	rjmp	.+8      	; 0x182a <USART_SendPacket+0x7a>
    1822:	03 e0       	ldi	r16, 0x03	; 3
    1824:	10 e0       	ldi	r17, 0x00	; 0
    1826:	c0 e0       	ldi	r28, 0x00	; 0
    1828:	d0 e0       	ldi	r29, 0x00	; 0
    182a:	69 df       	rcall	.-302    	; 0x16fe <USART_crc16>
    182c:	f8 01       	movw	r30, r16
    182e:	ed 55       	subi	r30, 0x5D	; 93
    1830:	f8 4e       	sbci	r31, 0xE8	; 232
    1832:	ec 0f       	add	r30, r28
    1834:	fd 1f       	adc	r31, r29
    1836:	90 83       	st	Z, r25
    1838:	81 83       	std	Z+1, r24	; 0x01
    183a:	22 96       	adiw	r28, 0x02	; 2
    183c:	0c 0f       	add	r16, r28
    183e:	1d 1f       	adc	r17, r29
    1840:	f8 01       	movw	r30, r16
    1842:	ed 55       	subi	r30, 0x5D	; 93
    1844:	f8 4e       	sbci	r31, 0xE8	; 232
    1846:	8e e7       	ldi	r24, 0x7E	; 126
    1848:	80 83       	st	Z, r24
    184a:	c8 01       	movw	r24, r16
    184c:	01 96       	adiw	r24, 0x01	; 1
    184e:	18 16       	cp	r1, r24
    1850:	19 06       	cpc	r1, r25
    1852:	4c f4       	brge	.+18     	; 0x1866 <USART_SendPacket+0xb6>
    1854:	c3 ea       	ldi	r28, 0xA3	; 163
    1856:	d7 e1       	ldi	r29, 0x17	; 23
    1858:	0c 55       	subi	r16, 0x5C	; 92
    185a:	18 4e       	sbci	r17, 0xE8	; 232
    185c:	89 91       	ld	r24, Y+
    185e:	46 df       	rcall	.-372    	; 0x16ec <USART_WriteByte>
    1860:	c0 17       	cp	r28, r16
    1862:	d1 07       	cpc	r29, r17
    1864:	d9 f7       	brne	.-10     	; 0x185c <USART_SendPacket+0xac>
    1866:	df 91       	pop	r29
    1868:	cf 91       	pop	r28
    186a:	1f 91       	pop	r17
    186c:	0f 91       	pop	r16
    186e:	08 95       	ret

00001870 <USART_SendCommand>:
    1870:	80 e0       	ldi	r24, 0x00	; 0
    1872:	90 e0       	ldi	r25, 0x00	; 0
    1874:	26 dd       	rcall	.-1460   	; 0x12c2 <TWI_get_command>
    1876:	80 93 a4 16 	sts	0x16A4, r24
    187a:	81 e0       	ldi	r24, 0x01	; 1
    187c:	90 e0       	ldi	r25, 0x00	; 0
    187e:	21 dd       	rcall	.-1470   	; 0x12c2 <TWI_get_command>
    1880:	80 93 a5 16 	sts	0x16A5, r24
    1884:	82 e0       	ldi	r24, 0x02	; 2
    1886:	90 e0       	ldi	r25, 0x00	; 0
    1888:	1c dd       	rcall	.-1480   	; 0x12c2 <TWI_get_command>
    188a:	80 93 a6 16 	sts	0x16A6, r24
    188e:	63 e0       	ldi	r22, 0x03	; 3
    1890:	83 e4       	ldi	r24, 0x43	; 67
    1892:	8e cf       	rjmp	.-228    	; 0x17b0 <USART_SendPacket>

00001894 <USART_SendElevation>:
    1894:	28 dd       	rcall	.-1456   	; 0x12e6 <TWI_get_elevation>
    1896:	80 93 a4 16 	sts	0x16A4, r24
    189a:	61 e0       	ldi	r22, 0x01	; 1
    189c:	85 e4       	ldi	r24, 0x45	; 69
    189e:	88 cf       	rjmp	.-240    	; 0x17b0 <USART_SendPacket>

000018a0 <USART_DecodeMessageRxFIFO>:
    18a0:	8f 92       	push	r8
    18a2:	9f 92       	push	r9
    18a4:	af 92       	push	r10
    18a6:	bf 92       	push	r11
    18a8:	cf 92       	push	r12
    18aa:	df 92       	push	r13
    18ac:	ef 92       	push	r14
    18ae:	ff 92       	push	r15
    18b0:	0f 93       	push	r16
    18b2:	1f 93       	push	r17
    18b4:	cf 93       	push	r28
    18b6:	df 93       	push	r29
    18b8:	cd b7       	in	r28, 0x3d	; 61
    18ba:	de b7       	in	r29, 0x3e	; 62
    18bc:	ad b6       	in	r10, 0x3d	; 61
    18be:	be b6       	in	r11, 0x3e	; 62
    18c0:	60 e0       	ldi	r22, 0x00	; 0
    18c2:	70 e0       	ldi	r23, 0x00	; 0
    18c4:	80 91 11 01 	lds	r24, 0x0111
    18c8:	90 91 12 01 	lds	r25, 0x0112
    18cc:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <FifoRead>
    18d0:	88 23       	and	r24, r24
    18d2:	31 f0       	breq	.+12     	; 0x18e0 <USART_DecodeMessageRxFIFO+0x40>
    18d4:	65 e0       	ldi	r22, 0x05	; 5
    18d6:	72 e1       	ldi	r23, 0x12	; 18
    18d8:	80 e4       	ldi	r24, 0x40	; 64
    18da:	27 dc       	rcall	.-1970   	; 0x112a <TWI_send_string>
    18dc:	81 e0       	ldi	r24, 0x01	; 1
    18de:	45 c0       	rjmp	.+138    	; 0x196a <USART_DecodeMessageRxFIFO+0xca>
    18e0:	c0 90 00 00 	lds	r12, 0x0000
    18e4:	d1 2c       	mov	r13, r1
    18e6:	96 01       	movw	r18, r12
    18e8:	21 50       	subi	r18, 0x01	; 1
    18ea:	31 09       	sbc	r19, r1
    18ec:	81 e0       	ldi	r24, 0x01	; 1
    18ee:	90 e0       	ldi	r25, 0x00	; 0
    18f0:	c1 14       	cp	r12, r1
    18f2:	d1 04       	cpc	r13, r1
    18f4:	11 f0       	breq	.+4      	; 0x18fa <USART_DecodeMessageRxFIFO+0x5a>
    18f6:	80 e0       	ldi	r24, 0x00	; 0
    18f8:	90 e0       	ldi	r25, 0x00	; 0
    18fa:	82 0f       	add	r24, r18
    18fc:	93 1f       	adc	r25, r19
    18fe:	2d b7       	in	r18, 0x3d	; 61
    1900:	3e b7       	in	r19, 0x3e	; 62
    1902:	28 1b       	sub	r18, r24
    1904:	39 0b       	sbc	r19, r25
    1906:	0f b6       	in	r0, 0x3f	; 63
    1908:	f8 94       	cli
    190a:	3e bf       	out	0x3e, r19	; 62
    190c:	0f be       	out	0x3f, r0	; 63
    190e:	2d bf       	out	0x3d, r18	; 61
    1910:	8d b7       	in	r24, 0x3d	; 61
    1912:	9e b7       	in	r25, 0x3e	; 62
    1914:	01 96       	adiw	r24, 0x01	; 1
    1916:	88 2e       	mov	r8, r24
    1918:	99 2e       	mov	r9, r25
    191a:	1c 14       	cp	r1, r12
    191c:	1d 04       	cpc	r1, r13
    191e:	f4 f4       	brge	.+60     	; 0x195c <USART_DecodeMessageRxFIFO+0xbc>
    1920:	e8 2e       	mov	r14, r24
    1922:	f9 2e       	mov	r15, r25
    1924:	00 e0       	ldi	r16, 0x00	; 0
    1926:	10 e0       	ldi	r17, 0x00	; 0
    1928:	60 e0       	ldi	r22, 0x00	; 0
    192a:	70 e0       	ldi	r23, 0x00	; 0
    192c:	80 91 11 01 	lds	r24, 0x0111
    1930:	90 91 12 01 	lds	r25, 0x0112
    1934:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <FifoRead>
    1938:	88 23       	and	r24, r24
    193a:	31 f0       	breq	.+12     	; 0x1948 <USART_DecodeMessageRxFIFO+0xa8>
    193c:	67 e2       	ldi	r22, 0x27	; 39
    193e:	72 e1       	ldi	r23, 0x12	; 18
    1940:	80 e4       	ldi	r24, 0x40	; 64
    1942:	f3 db       	rcall	.-2074   	; 0x112a <TWI_send_string>
    1944:	81 e0       	ldi	r24, 0x01	; 1
    1946:	11 c0       	rjmp	.+34     	; 0x196a <USART_DecodeMessageRxFIFO+0xca>
    1948:	80 91 00 00 	lds	r24, 0x0000
    194c:	f7 01       	movw	r30, r14
    194e:	81 93       	st	Z+, r24
    1950:	7f 01       	movw	r14, r30
    1952:	0f 5f       	subi	r16, 0xFF	; 255
    1954:	1f 4f       	sbci	r17, 0xFF	; 255
    1956:	0c 15       	cp	r16, r12
    1958:	1d 05       	cpc	r17, r13
    195a:	34 f3       	brlt	.-52     	; 0x1928 <USART_DecodeMessageRxFIFO+0x88>
    195c:	a6 01       	movw	r20, r12
    195e:	68 2d       	mov	r22, r8
    1960:	79 2d       	mov	r23, r9
    1962:	80 91 19 11 	lds	r24, 0x1119
    1966:	27 dc       	rcall	.-1970   	; 0x11b6 <TWI_send_string_fixed_length>
    1968:	80 e0       	ldi	r24, 0x00	; 0
    196a:	0f b6       	in	r0, 0x3f	; 63
    196c:	f8 94       	cli
    196e:	be be       	out	0x3e, r11	; 62
    1970:	0f be       	out	0x3f, r0	; 63
    1972:	ad be       	out	0x3d, r10	; 61
    1974:	df 91       	pop	r29
    1976:	cf 91       	pop	r28
    1978:	1f 91       	pop	r17
    197a:	0f 91       	pop	r16
    197c:	ff 90       	pop	r15
    197e:	ef 90       	pop	r14
    1980:	df 90       	pop	r13
    1982:	cf 90       	pop	r12
    1984:	bf 90       	pop	r11
    1986:	af 90       	pop	r10
    1988:	9f 90       	pop	r9
    198a:	8f 90       	pop	r8
    198c:	08 95       	ret

0000198e <USART_DecodeCommandRxFIFO>:
    198e:	cf 93       	push	r28
    1990:	df 93       	push	r29
    1992:	60 e0       	ldi	r22, 0x00	; 0
    1994:	70 e0       	ldi	r23, 0x00	; 0
    1996:	80 91 11 01 	lds	r24, 0x0111
    199a:	90 91 12 01 	lds	r25, 0x0112
    199e:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <FifoRead>
    19a2:	88 23       	and	r24, r24
    19a4:	31 f0       	breq	.+12     	; 0x19b2 <USART_DecodeCommandRxFIFO+0x24>
    19a6:	6a e4       	ldi	r22, 0x4A	; 74
    19a8:	72 e1       	ldi	r23, 0x12	; 18
    19aa:	80 e4       	ldi	r24, 0x40	; 64
    19ac:	be db       	rcall	.-2180   	; 0x112a <TWI_send_string>
    19ae:	81 e0       	ldi	r24, 0x01	; 1
    19b0:	45 c0       	rjmp	.+138    	; 0x1a3c <USART_DecodeCommandRxFIFO+0xae>
    19b2:	80 91 00 00 	lds	r24, 0x0000
    19b6:	83 30       	cpi	r24, 0x03	; 3
    19b8:	09 f0       	breq	.+2      	; 0x19bc <USART_DecodeCommandRxFIFO+0x2e>
    19ba:	3b c0       	rjmp	.+118    	; 0x1a32 <USART_DecodeCommandRxFIFO+0xa4>
    19bc:	60 e0       	ldi	r22, 0x00	; 0
    19be:	70 e0       	ldi	r23, 0x00	; 0
    19c0:	80 91 11 01 	lds	r24, 0x0111
    19c4:	90 91 12 01 	lds	r25, 0x0112
    19c8:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <FifoRead>
    19cc:	88 23       	and	r24, r24
    19ce:	31 f0       	breq	.+12     	; 0x19dc <USART_DecodeCommandRxFIFO+0x4e>
    19d0:	6c e6       	ldi	r22, 0x6C	; 108
    19d2:	72 e1       	ldi	r23, 0x12	; 18
    19d4:	80 e4       	ldi	r24, 0x40	; 64
    19d6:	a9 db       	rcall	.-2222   	; 0x112a <TWI_send_string>
    19d8:	81 e0       	ldi	r24, 0x01	; 1
    19da:	30 c0       	rjmp	.+96     	; 0x1a3c <USART_DecodeCommandRxFIFO+0xae>
    19dc:	c0 91 00 00 	lds	r28, 0x0000
    19e0:	60 e0       	ldi	r22, 0x00	; 0
    19e2:	70 e0       	ldi	r23, 0x00	; 0
    19e4:	80 91 11 01 	lds	r24, 0x0111
    19e8:	90 91 12 01 	lds	r25, 0x0112
    19ec:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <FifoRead>
    19f0:	88 23       	and	r24, r24
    19f2:	31 f0       	breq	.+12     	; 0x1a00 <USART_DecodeCommandRxFIFO+0x72>
    19f4:	64 e9       	ldi	r22, 0x94	; 148
    19f6:	72 e1       	ldi	r23, 0x12	; 18
    19f8:	80 e4       	ldi	r24, 0x40	; 64
    19fa:	97 db       	rcall	.-2258   	; 0x112a <TWI_send_string>
    19fc:	81 e0       	ldi	r24, 0x01	; 1
    19fe:	1e c0       	rjmp	.+60     	; 0x1a3c <USART_DecodeCommandRxFIFO+0xae>
    1a00:	d0 91 00 00 	lds	r29, 0x0000
    1a04:	60 e0       	ldi	r22, 0x00	; 0
    1a06:	70 e0       	ldi	r23, 0x00	; 0
    1a08:	80 91 11 01 	lds	r24, 0x0111
    1a0c:	90 91 12 01 	lds	r25, 0x0112
    1a10:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <FifoRead>
    1a14:	88 23       	and	r24, r24
    1a16:	31 f0       	breq	.+12     	; 0x1a24 <USART_DecodeCommandRxFIFO+0x96>
    1a18:	6b eb       	ldi	r22, 0xBB	; 187
    1a1a:	72 e1       	ldi	r23, 0x12	; 18
    1a1c:	80 e4       	ldi	r24, 0x40	; 64
    1a1e:	85 db       	rcall	.-2294   	; 0x112a <TWI_send_string>
    1a20:	81 e0       	ldi	r24, 0x01	; 1
    1a22:	0c c0       	rjmp	.+24     	; 0x1a3c <USART_DecodeCommandRxFIFO+0xae>
    1a24:	40 91 00 00 	lds	r20, 0x0000
    1a28:	6d 2f       	mov	r22, r29
    1a2a:	8c 2f       	mov	r24, r28
    1a2c:	36 db       	rcall	.-2452   	; 0x109a <TWI_send_command>
    1a2e:	80 e0       	ldi	r24, 0x00	; 0
    1a30:	05 c0       	rjmp	.+10     	; 0x1a3c <USART_DecodeCommandRxFIFO+0xae>
    1a32:	6f ed       	ldi	r22, 0xDF	; 223
    1a34:	72 e1       	ldi	r23, 0x12	; 18
    1a36:	80 e4       	ldi	r24, 0x40	; 64
    1a38:	78 db       	rcall	.-2320   	; 0x112a <TWI_send_string>
    1a3a:	81 e0       	ldi	r24, 0x01	; 1
    1a3c:	df 91       	pop	r29
    1a3e:	cf 91       	pop	r28
    1a40:	08 95       	ret

00001a42 <USART_DecodeValueFIFO>:
    1a42:	ef 92       	push	r14
    1a44:	ff 92       	push	r15
    1a46:	0f 93       	push	r16
    1a48:	1f 93       	push	r17
    1a4a:	cf 93       	push	r28
    1a4c:	df 93       	push	r29
    1a4e:	00 d0       	rcall	.+0      	; 0x1a50 <USART_DecodeValueFIFO+0xe>
    1a50:	00 d0       	rcall	.+0      	; 0x1a52 <USART_DecodeValueFIFO+0x10>
    1a52:	cd b7       	in	r28, 0x3d	; 61
    1a54:	de b7       	in	r29, 0x3e	; 62
    1a56:	60 e0       	ldi	r22, 0x00	; 0
    1a58:	70 e0       	ldi	r23, 0x00	; 0
    1a5a:	80 91 11 01 	lds	r24, 0x0111
    1a5e:	90 91 12 01 	lds	r25, 0x0112
    1a62:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <FifoRead>
    1a66:	88 23       	and	r24, r24
    1a68:	31 f0       	breq	.+12     	; 0x1a76 <USART_DecodeValueFIFO+0x34>
    1a6a:	66 e0       	ldi	r22, 0x06	; 6
    1a6c:	73 e1       	ldi	r23, 0x13	; 19
    1a6e:	80 e4       	ldi	r24, 0x40	; 64
    1a70:	5c db       	rcall	.-2376   	; 0x112a <TWI_send_string>
    1a72:	81 e0       	ldi	r24, 0x01	; 1
    1a74:	29 c0       	rjmp	.+82     	; 0x1ac8 <USART_DecodeValueFIFO+0x86>
    1a76:	80 91 00 00 	lds	r24, 0x0000
    1a7a:	84 30       	cpi	r24, 0x04	; 4
    1a7c:	11 f5       	brne	.+68     	; 0x1ac2 <USART_DecodeValueFIFO+0x80>
    1a7e:	8e 01       	movw	r16, r28
    1a80:	0f 5f       	subi	r16, 0xFF	; 255
    1a82:	1f 4f       	sbci	r17, 0xFF	; 255
    1a84:	7e 01       	movw	r14, r28
    1a86:	85 e0       	ldi	r24, 0x05	; 5
    1a88:	e8 0e       	add	r14, r24
    1a8a:	f1 1c       	adc	r15, r1
    1a8c:	60 e0       	ldi	r22, 0x00	; 0
    1a8e:	70 e0       	ldi	r23, 0x00	; 0
    1a90:	80 91 11 01 	lds	r24, 0x0111
    1a94:	90 91 12 01 	lds	r25, 0x0112
    1a98:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <FifoRead>
    1a9c:	81 11       	cpse	r24, r1
    1a9e:	13 c0       	rjmp	.+38     	; 0x1ac6 <USART_DecodeValueFIFO+0x84>
    1aa0:	80 91 00 00 	lds	r24, 0x0000
    1aa4:	f8 01       	movw	r30, r16
    1aa6:	81 93       	st	Z+, r24
    1aa8:	8f 01       	movw	r16, r30
    1aaa:	ee 15       	cp	r30, r14
    1aac:	ff 05       	cpc	r31, r15
    1aae:	71 f7       	brne	.-36     	; 0x1a8c <USART_DecodeValueFIFO+0x4a>
    1ab0:	49 81       	ldd	r20, Y+1	; 0x01
    1ab2:	5a 81       	ldd	r21, Y+2	; 0x02
    1ab4:	6b 81       	ldd	r22, Y+3	; 0x03
    1ab6:	7c 81       	ldd	r23, Y+4	; 0x04
    1ab8:	80 91 19 11 	lds	r24, 0x1119
    1abc:	ba db       	rcall	.-2188   	; 0x1232 <TWI_send_float>
    1abe:	80 e0       	ldi	r24, 0x00	; 0
    1ac0:	03 c0       	rjmp	.+6      	; 0x1ac8 <USART_DecodeValueFIFO+0x86>
    1ac2:	81 e0       	ldi	r24, 0x01	; 1
    1ac4:	01 c0       	rjmp	.+2      	; 0x1ac8 <USART_DecodeValueFIFO+0x86>
    1ac6:	81 e0       	ldi	r24, 0x01	; 1
    1ac8:	0f 90       	pop	r0
    1aca:	0f 90       	pop	r0
    1acc:	0f 90       	pop	r0
    1ace:	0f 90       	pop	r0
    1ad0:	df 91       	pop	r29
    1ad2:	cf 91       	pop	r28
    1ad4:	1f 91       	pop	r17
    1ad6:	0f 91       	pop	r16
    1ad8:	ff 90       	pop	r15
    1ada:	ef 90       	pop	r14
    1adc:	08 95       	ret

00001ade <USART_DecodeReadyFIFO>:
    1ade:	60 e0       	ldi	r22, 0x00	; 0
    1ae0:	70 e0       	ldi	r23, 0x00	; 0
    1ae2:	80 91 11 01 	lds	r24, 0x0111
    1ae6:	90 91 12 01 	lds	r25, 0x0112
    1aea:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <FifoRead>
    1aee:	88 23       	and	r24, r24
    1af0:	31 f0       	breq	.+12     	; 0x1afe <USART_DecodeReadyFIFO+0x20>
    1af2:	6a e4       	ldi	r22, 0x4A	; 74
    1af4:	72 e1       	ldi	r23, 0x12	; 18
    1af6:	80 e4       	ldi	r24, 0x40	; 64
    1af8:	18 db       	rcall	.-2512   	; 0x112a <TWI_send_string>
    1afa:	81 e0       	ldi	r24, 0x01	; 1
    1afc:	08 95       	ret
    1afe:	80 91 00 00 	lds	r24, 0x0000
    1b02:	81 11       	cpse	r24, r1
    1b04:	05 c0       	rjmp	.+10     	; 0x1b10 <USART_DecodeReadyFIFO+0x32>
    1b06:	81 e0       	ldi	r24, 0x01	; 1
    1b08:	80 93 3c 13 	sts	0x133C, r24
    1b0c:	80 e0       	ldi	r24, 0x00	; 0
    1b0e:	08 95       	ret
    1b10:	81 e0       	ldi	r24, 0x01	; 1
    1b12:	08 95       	ret

00001b14 <USART_ready>:
    1b14:	80 91 3c 13 	lds	r24, 0x133C
    1b18:	88 23       	and	r24, r24
    1b1a:	21 f0       	breq	.+8      	; 0x1b24 <USART_ready+0x10>
    1b1c:	10 92 3c 13 	sts	0x133C, r1
    1b20:	81 e0       	ldi	r24, 0x01	; 1
    1b22:	08 95       	ret
    1b24:	80 e0       	ldi	r24, 0x00	; 0
    1b26:	08 95       	ret

00001b28 <USART_DecodeRxFIFO>:
    1b28:	1c c0       	rjmp	.+56     	; 0x1b62 <USART_DecodeRxFIFO+0x3a>
    1b2a:	80 91 00 00 	lds	r24, 0x0000
    1b2e:	8d 34       	cpi	r24, 0x4D	; 77
    1b30:	49 f0       	breq	.+18     	; 0x1b44 <USART_DecodeRxFIFO+0x1c>
    1b32:	18 f4       	brcc	.+6      	; 0x1b3a <USART_DecodeRxFIFO+0x12>
    1b34:	83 34       	cpi	r24, 0x43	; 67
    1b36:	a9 f4       	brne	.+42     	; 0x1b62 <USART_DecodeRxFIFO+0x3a>
    1b38:	09 c0       	rjmp	.+18     	; 0x1b4c <USART_DecodeRxFIFO+0x24>
    1b3a:	82 35       	cpi	r24, 0x52	; 82
    1b3c:	79 f0       	breq	.+30     	; 0x1b5c <USART_DecodeRxFIFO+0x34>
    1b3e:	86 35       	cpi	r24, 0x56	; 86
    1b40:	81 f4       	brne	.+32     	; 0x1b62 <USART_DecodeRxFIFO+0x3a>
    1b42:	08 c0       	rjmp	.+16     	; 0x1b54 <USART_DecodeRxFIFO+0x2c>
    1b44:	ad de       	rcall	.-678    	; 0x18a0 <USART_DecodeMessageRxFIFO>
    1b46:	88 23       	and	r24, r24
    1b48:	61 f0       	breq	.+24     	; 0x1b62 <USART_DecodeRxFIFO+0x3a>
    1b4a:	08 95       	ret
    1b4c:	20 df       	rcall	.-448    	; 0x198e <USART_DecodeCommandRxFIFO>
    1b4e:	88 23       	and	r24, r24
    1b50:	41 f0       	breq	.+16     	; 0x1b62 <USART_DecodeRxFIFO+0x3a>
    1b52:	08 95       	ret
    1b54:	76 df       	rcall	.-276    	; 0x1a42 <USART_DecodeValueFIFO>
    1b56:	88 23       	and	r24, r24
    1b58:	21 f0       	breq	.+8      	; 0x1b62 <USART_DecodeRxFIFO+0x3a>
    1b5a:	08 95       	ret
    1b5c:	c0 df       	rcall	.-128    	; 0x1ade <USART_DecodeReadyFIFO>
    1b5e:	81 11       	cpse	r24, r1
    1b60:	0a c0       	rjmp	.+20     	; 0x1b76 <USART_DecodeRxFIFO+0x4e>
    1b62:	60 e0       	ldi	r22, 0x00	; 0
    1b64:	70 e0       	ldi	r23, 0x00	; 0
    1b66:	80 91 11 01 	lds	r24, 0x0111
    1b6a:	90 91 12 01 	lds	r25, 0x0112
    1b6e:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <FifoRead>
    1b72:	88 23       	and	r24, r24
    1b74:	d1 f2       	breq	.-76     	; 0x1b2a <USART_DecodeRxFIFO+0x2>
    1b76:	08 95       	ret

00001b78 <__vector_20>:
    1b78:	1f 92       	push	r1
    1b7a:	0f 92       	push	r0
    1b7c:	0f b6       	in	r0, 0x3f	; 63
    1b7e:	0f 92       	push	r0
    1b80:	11 24       	eor	r1, r1
    1b82:	0b b6       	in	r0, 0x3b	; 59
    1b84:	0f 92       	push	r0
    1b86:	ef 92       	push	r14
    1b88:	ff 92       	push	r15
    1b8a:	0f 93       	push	r16
    1b8c:	1f 93       	push	r17
    1b8e:	2f 93       	push	r18
    1b90:	3f 93       	push	r19
    1b92:	4f 93       	push	r20
    1b94:	5f 93       	push	r21
    1b96:	6f 93       	push	r22
    1b98:	7f 93       	push	r23
    1b9a:	8f 93       	push	r24
    1b9c:	9f 93       	push	r25
    1b9e:	af 93       	push	r26
    1ba0:	bf 93       	push	r27
    1ba2:	cf 93       	push	r28
    1ba4:	df 93       	push	r29
    1ba6:	ef 93       	push	r30
    1ba8:	ff 93       	push	r31
    1baa:	20 91 c6 00 	lds	r18, 0x00C6
    1bae:	2e 37       	cpi	r18, 0x7E	; 126
    1bb0:	09 f0       	breq	.+2      	; 0x1bb4 <__vector_20+0x3c>
    1bb2:	3f c0       	rjmp	.+126    	; 0x1c32 <__vector_20+0xba>
    1bb4:	80 91 3f 13 	lds	r24, 0x133F
    1bb8:	90 91 40 13 	lds	r25, 0x1340
    1bbc:	84 30       	cpi	r24, 0x04	; 4
    1bbe:	91 05       	cpc	r25, r1
    1bc0:	40 f4       	brcc	.+16     	; 0x1bd2 <__vector_20+0x5a>
    1bc2:	20 91 a0 14 	lds	r18, 0x14A0
    1bc6:	30 e0       	ldi	r19, 0x00	; 0
    1bc8:	2c 5f       	subi	r18, 0xFC	; 252
    1bca:	3f 4f       	sbci	r19, 0xFF	; 255
    1bcc:	82 17       	cp	r24, r18
    1bce:	93 07       	cpc	r25, r19
    1bd0:	59 f5       	brne	.+86     	; 0x1c28 <__vector_20+0xb0>
    1bd2:	80 91 3d 13 	lds	r24, 0x133D
    1bd6:	90 91 3e 13 	lds	r25, 0x133E
    1bda:	89 2b       	or	r24, r25
    1bdc:	21 f0       	breq	.+8      	; 0x1be6 <__vector_20+0x6e>
    1bde:	10 92 3e 13 	sts	0x133E, r1
    1be2:	10 92 3d 13 	sts	0x133D, r1
    1be6:	0f e9       	ldi	r16, 0x9F	; 159
    1be8:	14 e1       	ldi	r17, 0x14	; 20
    1bea:	c0 e0       	ldi	r28, 0x00	; 0
    1bec:	d0 e0       	ldi	r29, 0x00	; 0
    1bee:	0f 2e       	mov	r0, r31
    1bf0:	f0 ea       	ldi	r31, 0xA0	; 160
    1bf2:	ef 2e       	mov	r14, r31
    1bf4:	f4 e1       	ldi	r31, 0x14	; 20
    1bf6:	ff 2e       	mov	r15, r31
    1bf8:	f0 2d       	mov	r31, r0
    1bfa:	f8 01       	movw	r30, r16
    1bfc:	61 91       	ld	r22, Z+
    1bfe:	8f 01       	movw	r16, r30
    1c00:	80 91 11 01 	lds	r24, 0x0111
    1c04:	90 91 12 01 	lds	r25, 0x0112
    1c08:	0e 94 c1 02 	call	0x582	; 0x582 <FifoWrite>
    1c0c:	88 23       	and	r24, r24
    1c0e:	21 f0       	breq	.+8      	; 0x1c18 <__vector_20+0xa0>
    1c10:	66 e2       	ldi	r22, 0x26	; 38
    1c12:	73 e1       	ldi	r23, 0x13	; 19
    1c14:	80 e4       	ldi	r24, 0x40	; 64
    1c16:	89 da       	rcall	.-2798   	; 0x112a <TWI_send_string>
    1c18:	21 96       	adiw	r28, 0x01	; 1
    1c1a:	f7 01       	movw	r30, r14
    1c1c:	80 81       	ld	r24, Z
    1c1e:	90 e0       	ldi	r25, 0x00	; 0
    1c20:	02 96       	adiw	r24, 0x02	; 2
    1c22:	c8 17       	cp	r28, r24
    1c24:	d9 07       	cpc	r29, r25
    1c26:	4c f3       	brlt	.-46     	; 0x1bfa <__vector_20+0x82>
    1c28:	10 92 40 13 	sts	0x1340, r1
    1c2c:	10 92 3f 13 	sts	0x133F, r1
    1c30:	16 c0       	rjmp	.+44     	; 0x1c5e <__vector_20+0xe6>
    1c32:	2d 37       	cpi	r18, 0x7D	; 125
    1c34:	39 f4       	brne	.+14     	; 0x1c44 <__vector_20+0xcc>
    1c36:	81 e0       	ldi	r24, 0x01	; 1
    1c38:	90 e0       	ldi	r25, 0x00	; 0
    1c3a:	90 93 3e 13 	sts	0x133E, r25
    1c3e:	80 93 3d 13 	sts	0x133D, r24
    1c42:	0d c0       	rjmp	.+26     	; 0x1c5e <__vector_20+0xe6>
    1c44:	80 91 3f 13 	lds	r24, 0x133F
    1c48:	90 91 40 13 	lds	r25, 0x1340
    1c4c:	fc 01       	movw	r30, r24
    1c4e:	e1 56       	subi	r30, 0x61	; 97
    1c50:	fb 4e       	sbci	r31, 0xEB	; 235
    1c52:	20 83       	st	Z, r18
    1c54:	01 96       	adiw	r24, 0x01	; 1
    1c56:	90 93 40 13 	sts	0x1340, r25
    1c5a:	80 93 3f 13 	sts	0x133F, r24
    1c5e:	ff 91       	pop	r31
    1c60:	ef 91       	pop	r30
    1c62:	df 91       	pop	r29
    1c64:	cf 91       	pop	r28
    1c66:	bf 91       	pop	r27
    1c68:	af 91       	pop	r26
    1c6a:	9f 91       	pop	r25
    1c6c:	8f 91       	pop	r24
    1c6e:	7f 91       	pop	r23
    1c70:	6f 91       	pop	r22
    1c72:	5f 91       	pop	r21
    1c74:	4f 91       	pop	r20
    1c76:	3f 91       	pop	r19
    1c78:	2f 91       	pop	r18
    1c7a:	1f 91       	pop	r17
    1c7c:	0f 91       	pop	r16
    1c7e:	ff 90       	pop	r15
    1c80:	ef 90       	pop	r14
    1c82:	0f 90       	pop	r0
    1c84:	0b be       	out	0x3b, r0	; 59
    1c86:	0f 90       	pop	r0
    1c88:	0f be       	out	0x3f, r0	; 63
    1c8a:	0f 90       	pop	r0
    1c8c:	1f 90       	pop	r1
    1c8e:	18 95       	reti

00001c90 <USART_send_command_parameters>:
    1c90:	80 93 a4 16 	sts	0x16A4, r24
    1c94:	60 93 a5 16 	sts	0x16A5, r22
    1c98:	40 93 a6 16 	sts	0x16A6, r20
    1c9c:	63 e0       	ldi	r22, 0x03	; 3
    1c9e:	83 e4       	ldi	r24, 0x43	; 67
    1ca0:	87 cd       	rjmp	.-1266   	; 0x17b0 <USART_SendPacket>

00001ca2 <__subsf3>:
    1ca2:	50 58       	subi	r21, 0x80	; 128

00001ca4 <__addsf3>:
    1ca4:	bb 27       	eor	r27, r27
    1ca6:	aa 27       	eor	r26, r26
    1ca8:	0e d0       	rcall	.+28     	; 0x1cc6 <__addsf3x>
    1caa:	ed c1       	rjmp	.+986    	; 0x2086 <__fp_round>
    1cac:	b6 d1       	rcall	.+876    	; 0x201a <__fp_pscA>
    1cae:	30 f0       	brcs	.+12     	; 0x1cbc <__addsf3+0x18>
    1cb0:	bb d1       	rcall	.+886    	; 0x2028 <__fp_pscB>
    1cb2:	20 f0       	brcs	.+8      	; 0x1cbc <__addsf3+0x18>
    1cb4:	31 f4       	brne	.+12     	; 0x1cc2 <__addsf3+0x1e>
    1cb6:	9f 3f       	cpi	r25, 0xFF	; 255
    1cb8:	11 f4       	brne	.+4      	; 0x1cbe <__addsf3+0x1a>
    1cba:	1e f4       	brtc	.+6      	; 0x1cc2 <__addsf3+0x1e>
    1cbc:	86 c1       	rjmp	.+780    	; 0x1fca <__fp_nan>
    1cbe:	0e f4       	brtc	.+2      	; 0x1cc2 <__addsf3+0x1e>
    1cc0:	e0 95       	com	r30
    1cc2:	e7 fb       	bst	r30, 7
    1cc4:	7c c1       	rjmp	.+760    	; 0x1fbe <__fp_inf>

00001cc6 <__addsf3x>:
    1cc6:	e9 2f       	mov	r30, r25
    1cc8:	00 d2       	rcall	.+1024   	; 0x20ca <__fp_split3>
    1cca:	80 f3       	brcs	.-32     	; 0x1cac <__addsf3+0x8>
    1ccc:	ba 17       	cp	r27, r26
    1cce:	62 07       	cpc	r22, r18
    1cd0:	73 07       	cpc	r23, r19
    1cd2:	84 07       	cpc	r24, r20
    1cd4:	95 07       	cpc	r25, r21
    1cd6:	18 f0       	brcs	.+6      	; 0x1cde <__addsf3x+0x18>
    1cd8:	71 f4       	brne	.+28     	; 0x1cf6 <__addsf3x+0x30>
    1cda:	9e f5       	brtc	.+102    	; 0x1d42 <__addsf3x+0x7c>
    1cdc:	18 c2       	rjmp	.+1072   	; 0x210e <__fp_zero>
    1cde:	0e f4       	brtc	.+2      	; 0x1ce2 <__addsf3x+0x1c>
    1ce0:	e0 95       	com	r30
    1ce2:	0b 2e       	mov	r0, r27
    1ce4:	ba 2f       	mov	r27, r26
    1ce6:	a0 2d       	mov	r26, r0
    1ce8:	0b 01       	movw	r0, r22
    1cea:	b9 01       	movw	r22, r18
    1cec:	90 01       	movw	r18, r0
    1cee:	0c 01       	movw	r0, r24
    1cf0:	ca 01       	movw	r24, r20
    1cf2:	a0 01       	movw	r20, r0
    1cf4:	11 24       	eor	r1, r1
    1cf6:	ff 27       	eor	r31, r31
    1cf8:	59 1b       	sub	r21, r25
    1cfa:	99 f0       	breq	.+38     	; 0x1d22 <__addsf3x+0x5c>
    1cfc:	59 3f       	cpi	r21, 0xF9	; 249
    1cfe:	50 f4       	brcc	.+20     	; 0x1d14 <__addsf3x+0x4e>
    1d00:	50 3e       	cpi	r21, 0xE0	; 224
    1d02:	68 f1       	brcs	.+90     	; 0x1d5e <__addsf3x+0x98>
    1d04:	1a 16       	cp	r1, r26
    1d06:	f0 40       	sbci	r31, 0x00	; 0
    1d08:	a2 2f       	mov	r26, r18
    1d0a:	23 2f       	mov	r18, r19
    1d0c:	34 2f       	mov	r19, r20
    1d0e:	44 27       	eor	r20, r20
    1d10:	58 5f       	subi	r21, 0xF8	; 248
    1d12:	f3 cf       	rjmp	.-26     	; 0x1cfa <__addsf3x+0x34>
    1d14:	46 95       	lsr	r20
    1d16:	37 95       	ror	r19
    1d18:	27 95       	ror	r18
    1d1a:	a7 95       	ror	r26
    1d1c:	f0 40       	sbci	r31, 0x00	; 0
    1d1e:	53 95       	inc	r21
    1d20:	c9 f7       	brne	.-14     	; 0x1d14 <__addsf3x+0x4e>
    1d22:	7e f4       	brtc	.+30     	; 0x1d42 <__addsf3x+0x7c>
    1d24:	1f 16       	cp	r1, r31
    1d26:	ba 0b       	sbc	r27, r26
    1d28:	62 0b       	sbc	r22, r18
    1d2a:	73 0b       	sbc	r23, r19
    1d2c:	84 0b       	sbc	r24, r20
    1d2e:	ba f0       	brmi	.+46     	; 0x1d5e <__addsf3x+0x98>
    1d30:	91 50       	subi	r25, 0x01	; 1
    1d32:	a1 f0       	breq	.+40     	; 0x1d5c <__addsf3x+0x96>
    1d34:	ff 0f       	add	r31, r31
    1d36:	bb 1f       	adc	r27, r27
    1d38:	66 1f       	adc	r22, r22
    1d3a:	77 1f       	adc	r23, r23
    1d3c:	88 1f       	adc	r24, r24
    1d3e:	c2 f7       	brpl	.-16     	; 0x1d30 <__addsf3x+0x6a>
    1d40:	0e c0       	rjmp	.+28     	; 0x1d5e <__addsf3x+0x98>
    1d42:	ba 0f       	add	r27, r26
    1d44:	62 1f       	adc	r22, r18
    1d46:	73 1f       	adc	r23, r19
    1d48:	84 1f       	adc	r24, r20
    1d4a:	48 f4       	brcc	.+18     	; 0x1d5e <__addsf3x+0x98>
    1d4c:	87 95       	ror	r24
    1d4e:	77 95       	ror	r23
    1d50:	67 95       	ror	r22
    1d52:	b7 95       	ror	r27
    1d54:	f7 95       	ror	r31
    1d56:	9e 3f       	cpi	r25, 0xFE	; 254
    1d58:	08 f0       	brcs	.+2      	; 0x1d5c <__addsf3x+0x96>
    1d5a:	b3 cf       	rjmp	.-154    	; 0x1cc2 <__addsf3+0x1e>
    1d5c:	93 95       	inc	r25
    1d5e:	88 0f       	add	r24, r24
    1d60:	08 f0       	brcs	.+2      	; 0x1d64 <__addsf3x+0x9e>
    1d62:	99 27       	eor	r25, r25
    1d64:	ee 0f       	add	r30, r30
    1d66:	97 95       	ror	r25
    1d68:	87 95       	ror	r24
    1d6a:	08 95       	ret

00001d6c <atan>:
    1d6c:	df 93       	push	r29
    1d6e:	dd 27       	eor	r29, r29
    1d70:	b9 2f       	mov	r27, r25
    1d72:	bf 77       	andi	r27, 0x7F	; 127
    1d74:	40 e8       	ldi	r20, 0x80	; 128
    1d76:	5f e3       	ldi	r21, 0x3F	; 63
    1d78:	16 16       	cp	r1, r22
    1d7a:	17 06       	cpc	r1, r23
    1d7c:	48 07       	cpc	r20, r24
    1d7e:	5b 07       	cpc	r21, r27
    1d80:	10 f4       	brcc	.+4      	; 0x1d86 <atan+0x1a>
    1d82:	d9 2f       	mov	r29, r25
    1d84:	cf d1       	rcall	.+926    	; 0x2124 <inverse>
    1d86:	9f 93       	push	r25
    1d88:	8f 93       	push	r24
    1d8a:	7f 93       	push	r23
    1d8c:	6f 93       	push	r22
    1d8e:	34 d2       	rcall	.+1128   	; 0x21f8 <square>
    1d90:	ec e8       	ldi	r30, 0x8C	; 140
    1d92:	f0 e0       	ldi	r31, 0x00	; 0
    1d94:	1d d1       	rcall	.+570    	; 0x1fd0 <__fp_powser>
    1d96:	77 d1       	rcall	.+750    	; 0x2086 <__fp_round>
    1d98:	2f 91       	pop	r18
    1d9a:	3f 91       	pop	r19
    1d9c:	4f 91       	pop	r20
    1d9e:	5f 91       	pop	r21
    1da0:	d4 d1       	rcall	.+936    	; 0x214a <__mulsf3x>
    1da2:	dd 23       	and	r29, r29
    1da4:	49 f0       	breq	.+18     	; 0x1db8 <atan+0x4c>
    1da6:	90 58       	subi	r25, 0x80	; 128
    1da8:	a2 ea       	ldi	r26, 0xA2	; 162
    1daa:	2a ed       	ldi	r18, 0xDA	; 218
    1dac:	3f e0       	ldi	r19, 0x0F	; 15
    1dae:	49 ec       	ldi	r20, 0xC9	; 201
    1db0:	5f e3       	ldi	r21, 0x3F	; 63
    1db2:	d0 78       	andi	r29, 0x80	; 128
    1db4:	5d 27       	eor	r21, r29
    1db6:	87 df       	rcall	.-242    	; 0x1cc6 <__addsf3x>
    1db8:	df 91       	pop	r29
    1dba:	65 c1       	rjmp	.+714    	; 0x2086 <__fp_round>

00001dbc <__cmpsf2>:
    1dbc:	dc d0       	rcall	.+440    	; 0x1f76 <__fp_cmp>
    1dbe:	08 f4       	brcc	.+2      	; 0x1dc2 <__cmpsf2+0x6>
    1dc0:	81 e0       	ldi	r24, 0x01	; 1
    1dc2:	08 95       	ret

00001dc4 <cos>:
    1dc4:	39 d1       	rcall	.+626    	; 0x2038 <__fp_rempio2>
    1dc6:	e3 95       	inc	r30
    1dc8:	6f c1       	rjmp	.+734    	; 0x20a8 <__fp_sinus>

00001dca <__divsf3>:
    1dca:	0c d0       	rcall	.+24     	; 0x1de4 <__divsf3x>
    1dcc:	5c c1       	rjmp	.+696    	; 0x2086 <__fp_round>
    1dce:	2c d1       	rcall	.+600    	; 0x2028 <__fp_pscB>
    1dd0:	40 f0       	brcs	.+16     	; 0x1de2 <__divsf3+0x18>
    1dd2:	23 d1       	rcall	.+582    	; 0x201a <__fp_pscA>
    1dd4:	30 f0       	brcs	.+12     	; 0x1de2 <__divsf3+0x18>
    1dd6:	21 f4       	brne	.+8      	; 0x1de0 <__divsf3+0x16>
    1dd8:	5f 3f       	cpi	r21, 0xFF	; 255
    1dda:	19 f0       	breq	.+6      	; 0x1de2 <__divsf3+0x18>
    1ddc:	f0 c0       	rjmp	.+480    	; 0x1fbe <__fp_inf>
    1dde:	51 11       	cpse	r21, r1
    1de0:	97 c1       	rjmp	.+814    	; 0x2110 <__fp_szero>
    1de2:	f3 c0       	rjmp	.+486    	; 0x1fca <__fp_nan>

00001de4 <__divsf3x>:
    1de4:	72 d1       	rcall	.+740    	; 0x20ca <__fp_split3>
    1de6:	98 f3       	brcs	.-26     	; 0x1dce <__divsf3+0x4>

00001de8 <__divsf3_pse>:
    1de8:	99 23       	and	r25, r25
    1dea:	c9 f3       	breq	.-14     	; 0x1dde <__divsf3+0x14>
    1dec:	55 23       	and	r21, r21
    1dee:	b1 f3       	breq	.-20     	; 0x1ddc <__divsf3+0x12>
    1df0:	95 1b       	sub	r25, r21
    1df2:	55 0b       	sbc	r21, r21
    1df4:	bb 27       	eor	r27, r27
    1df6:	aa 27       	eor	r26, r26
    1df8:	62 17       	cp	r22, r18
    1dfa:	73 07       	cpc	r23, r19
    1dfc:	84 07       	cpc	r24, r20
    1dfe:	38 f0       	brcs	.+14     	; 0x1e0e <__divsf3_pse+0x26>
    1e00:	9f 5f       	subi	r25, 0xFF	; 255
    1e02:	5f 4f       	sbci	r21, 0xFF	; 255
    1e04:	22 0f       	add	r18, r18
    1e06:	33 1f       	adc	r19, r19
    1e08:	44 1f       	adc	r20, r20
    1e0a:	aa 1f       	adc	r26, r26
    1e0c:	a9 f3       	breq	.-22     	; 0x1df8 <__divsf3_pse+0x10>
    1e0e:	33 d0       	rcall	.+102    	; 0x1e76 <__divsf3_pse+0x8e>
    1e10:	0e 2e       	mov	r0, r30
    1e12:	3a f0       	brmi	.+14     	; 0x1e22 <__divsf3_pse+0x3a>
    1e14:	e0 e8       	ldi	r30, 0x80	; 128
    1e16:	30 d0       	rcall	.+96     	; 0x1e78 <__divsf3_pse+0x90>
    1e18:	91 50       	subi	r25, 0x01	; 1
    1e1a:	50 40       	sbci	r21, 0x00	; 0
    1e1c:	e6 95       	lsr	r30
    1e1e:	00 1c       	adc	r0, r0
    1e20:	ca f7       	brpl	.-14     	; 0x1e14 <__divsf3_pse+0x2c>
    1e22:	29 d0       	rcall	.+82     	; 0x1e76 <__divsf3_pse+0x8e>
    1e24:	fe 2f       	mov	r31, r30
    1e26:	27 d0       	rcall	.+78     	; 0x1e76 <__divsf3_pse+0x8e>
    1e28:	66 0f       	add	r22, r22
    1e2a:	77 1f       	adc	r23, r23
    1e2c:	88 1f       	adc	r24, r24
    1e2e:	bb 1f       	adc	r27, r27
    1e30:	26 17       	cp	r18, r22
    1e32:	37 07       	cpc	r19, r23
    1e34:	48 07       	cpc	r20, r24
    1e36:	ab 07       	cpc	r26, r27
    1e38:	b0 e8       	ldi	r27, 0x80	; 128
    1e3a:	09 f0       	breq	.+2      	; 0x1e3e <__divsf3_pse+0x56>
    1e3c:	bb 0b       	sbc	r27, r27
    1e3e:	80 2d       	mov	r24, r0
    1e40:	bf 01       	movw	r22, r30
    1e42:	ff 27       	eor	r31, r31
    1e44:	93 58       	subi	r25, 0x83	; 131
    1e46:	5f 4f       	sbci	r21, 0xFF	; 255
    1e48:	2a f0       	brmi	.+10     	; 0x1e54 <__divsf3_pse+0x6c>
    1e4a:	9e 3f       	cpi	r25, 0xFE	; 254
    1e4c:	51 05       	cpc	r21, r1
    1e4e:	68 f0       	brcs	.+26     	; 0x1e6a <__divsf3_pse+0x82>
    1e50:	b6 c0       	rjmp	.+364    	; 0x1fbe <__fp_inf>
    1e52:	5e c1       	rjmp	.+700    	; 0x2110 <__fp_szero>
    1e54:	5f 3f       	cpi	r21, 0xFF	; 255
    1e56:	ec f3       	brlt	.-6      	; 0x1e52 <__divsf3_pse+0x6a>
    1e58:	98 3e       	cpi	r25, 0xE8	; 232
    1e5a:	dc f3       	brlt	.-10     	; 0x1e52 <__divsf3_pse+0x6a>
    1e5c:	86 95       	lsr	r24
    1e5e:	77 95       	ror	r23
    1e60:	67 95       	ror	r22
    1e62:	b7 95       	ror	r27
    1e64:	f7 95       	ror	r31
    1e66:	9f 5f       	subi	r25, 0xFF	; 255
    1e68:	c9 f7       	brne	.-14     	; 0x1e5c <__divsf3_pse+0x74>
    1e6a:	88 0f       	add	r24, r24
    1e6c:	91 1d       	adc	r25, r1
    1e6e:	96 95       	lsr	r25
    1e70:	87 95       	ror	r24
    1e72:	97 f9       	bld	r25, 7
    1e74:	08 95       	ret
    1e76:	e1 e0       	ldi	r30, 0x01	; 1
    1e78:	66 0f       	add	r22, r22
    1e7a:	77 1f       	adc	r23, r23
    1e7c:	88 1f       	adc	r24, r24
    1e7e:	bb 1f       	adc	r27, r27
    1e80:	62 17       	cp	r22, r18
    1e82:	73 07       	cpc	r23, r19
    1e84:	84 07       	cpc	r24, r20
    1e86:	ba 07       	cpc	r27, r26
    1e88:	20 f0       	brcs	.+8      	; 0x1e92 <__divsf3_pse+0xaa>
    1e8a:	62 1b       	sub	r22, r18
    1e8c:	73 0b       	sbc	r23, r19
    1e8e:	84 0b       	sbc	r24, r20
    1e90:	ba 0b       	sbc	r27, r26
    1e92:	ee 1f       	adc	r30, r30
    1e94:	88 f7       	brcc	.-30     	; 0x1e78 <__divsf3_pse+0x90>
    1e96:	e0 95       	com	r30
    1e98:	08 95       	ret

00001e9a <__fixsfsi>:
    1e9a:	04 d0       	rcall	.+8      	; 0x1ea4 <__fixunssfsi>
    1e9c:	68 94       	set
    1e9e:	b1 11       	cpse	r27, r1
    1ea0:	37 c1       	rjmp	.+622    	; 0x2110 <__fp_szero>
    1ea2:	08 95       	ret

00001ea4 <__fixunssfsi>:
    1ea4:	1a d1       	rcall	.+564    	; 0x20da <__fp_splitA>
    1ea6:	88 f0       	brcs	.+34     	; 0x1eca <__fixunssfsi+0x26>
    1ea8:	9f 57       	subi	r25, 0x7F	; 127
    1eaa:	90 f0       	brcs	.+36     	; 0x1ed0 <__fixunssfsi+0x2c>
    1eac:	b9 2f       	mov	r27, r25
    1eae:	99 27       	eor	r25, r25
    1eb0:	b7 51       	subi	r27, 0x17	; 23
    1eb2:	a0 f0       	brcs	.+40     	; 0x1edc <__fixunssfsi+0x38>
    1eb4:	d1 f0       	breq	.+52     	; 0x1eea <__fixunssfsi+0x46>
    1eb6:	66 0f       	add	r22, r22
    1eb8:	77 1f       	adc	r23, r23
    1eba:	88 1f       	adc	r24, r24
    1ebc:	99 1f       	adc	r25, r25
    1ebe:	1a f0       	brmi	.+6      	; 0x1ec6 <__fixunssfsi+0x22>
    1ec0:	ba 95       	dec	r27
    1ec2:	c9 f7       	brne	.-14     	; 0x1eb6 <__fixunssfsi+0x12>
    1ec4:	12 c0       	rjmp	.+36     	; 0x1eea <__fixunssfsi+0x46>
    1ec6:	b1 30       	cpi	r27, 0x01	; 1
    1ec8:	81 f0       	breq	.+32     	; 0x1eea <__fixunssfsi+0x46>
    1eca:	21 d1       	rcall	.+578    	; 0x210e <__fp_zero>
    1ecc:	b1 e0       	ldi	r27, 0x01	; 1
    1ece:	08 95       	ret
    1ed0:	1e c1       	rjmp	.+572    	; 0x210e <__fp_zero>
    1ed2:	67 2f       	mov	r22, r23
    1ed4:	78 2f       	mov	r23, r24
    1ed6:	88 27       	eor	r24, r24
    1ed8:	b8 5f       	subi	r27, 0xF8	; 248
    1eda:	39 f0       	breq	.+14     	; 0x1eea <__fixunssfsi+0x46>
    1edc:	b9 3f       	cpi	r27, 0xF9	; 249
    1ede:	cc f3       	brlt	.-14     	; 0x1ed2 <__fixunssfsi+0x2e>
    1ee0:	86 95       	lsr	r24
    1ee2:	77 95       	ror	r23
    1ee4:	67 95       	ror	r22
    1ee6:	b3 95       	inc	r27
    1ee8:	d9 f7       	brne	.-10     	; 0x1ee0 <__fixunssfsi+0x3c>
    1eea:	3e f4       	brtc	.+14     	; 0x1efa <__fixunssfsi+0x56>
    1eec:	90 95       	com	r25
    1eee:	80 95       	com	r24
    1ef0:	70 95       	com	r23
    1ef2:	61 95       	neg	r22
    1ef4:	7f 4f       	sbci	r23, 0xFF	; 255
    1ef6:	8f 4f       	sbci	r24, 0xFF	; 255
    1ef8:	9f 4f       	sbci	r25, 0xFF	; 255
    1efa:	08 95       	ret

00001efc <__floatunsisf>:
    1efc:	e8 94       	clt
    1efe:	09 c0       	rjmp	.+18     	; 0x1f12 <__floatsisf+0x12>

00001f00 <__floatsisf>:
    1f00:	97 fb       	bst	r25, 7
    1f02:	3e f4       	brtc	.+14     	; 0x1f12 <__floatsisf+0x12>
    1f04:	90 95       	com	r25
    1f06:	80 95       	com	r24
    1f08:	70 95       	com	r23
    1f0a:	61 95       	neg	r22
    1f0c:	7f 4f       	sbci	r23, 0xFF	; 255
    1f0e:	8f 4f       	sbci	r24, 0xFF	; 255
    1f10:	9f 4f       	sbci	r25, 0xFF	; 255
    1f12:	99 23       	and	r25, r25
    1f14:	a9 f0       	breq	.+42     	; 0x1f40 <__floatsisf+0x40>
    1f16:	f9 2f       	mov	r31, r25
    1f18:	96 e9       	ldi	r25, 0x96	; 150
    1f1a:	bb 27       	eor	r27, r27
    1f1c:	93 95       	inc	r25
    1f1e:	f6 95       	lsr	r31
    1f20:	87 95       	ror	r24
    1f22:	77 95       	ror	r23
    1f24:	67 95       	ror	r22
    1f26:	b7 95       	ror	r27
    1f28:	f1 11       	cpse	r31, r1
    1f2a:	f8 cf       	rjmp	.-16     	; 0x1f1c <__floatsisf+0x1c>
    1f2c:	fa f4       	brpl	.+62     	; 0x1f6c <__floatsisf+0x6c>
    1f2e:	bb 0f       	add	r27, r27
    1f30:	11 f4       	brne	.+4      	; 0x1f36 <__floatsisf+0x36>
    1f32:	60 ff       	sbrs	r22, 0
    1f34:	1b c0       	rjmp	.+54     	; 0x1f6c <__floatsisf+0x6c>
    1f36:	6f 5f       	subi	r22, 0xFF	; 255
    1f38:	7f 4f       	sbci	r23, 0xFF	; 255
    1f3a:	8f 4f       	sbci	r24, 0xFF	; 255
    1f3c:	9f 4f       	sbci	r25, 0xFF	; 255
    1f3e:	16 c0       	rjmp	.+44     	; 0x1f6c <__floatsisf+0x6c>
    1f40:	88 23       	and	r24, r24
    1f42:	11 f0       	breq	.+4      	; 0x1f48 <__floatsisf+0x48>
    1f44:	96 e9       	ldi	r25, 0x96	; 150
    1f46:	11 c0       	rjmp	.+34     	; 0x1f6a <__floatsisf+0x6a>
    1f48:	77 23       	and	r23, r23
    1f4a:	21 f0       	breq	.+8      	; 0x1f54 <__floatsisf+0x54>
    1f4c:	9e e8       	ldi	r25, 0x8E	; 142
    1f4e:	87 2f       	mov	r24, r23
    1f50:	76 2f       	mov	r23, r22
    1f52:	05 c0       	rjmp	.+10     	; 0x1f5e <__floatsisf+0x5e>
    1f54:	66 23       	and	r22, r22
    1f56:	71 f0       	breq	.+28     	; 0x1f74 <__floatsisf+0x74>
    1f58:	96 e8       	ldi	r25, 0x86	; 134
    1f5a:	86 2f       	mov	r24, r22
    1f5c:	70 e0       	ldi	r23, 0x00	; 0
    1f5e:	60 e0       	ldi	r22, 0x00	; 0
    1f60:	2a f0       	brmi	.+10     	; 0x1f6c <__floatsisf+0x6c>
    1f62:	9a 95       	dec	r25
    1f64:	66 0f       	add	r22, r22
    1f66:	77 1f       	adc	r23, r23
    1f68:	88 1f       	adc	r24, r24
    1f6a:	da f7       	brpl	.-10     	; 0x1f62 <__floatsisf+0x62>
    1f6c:	88 0f       	add	r24, r24
    1f6e:	96 95       	lsr	r25
    1f70:	87 95       	ror	r24
    1f72:	97 f9       	bld	r25, 7
    1f74:	08 95       	ret

00001f76 <__fp_cmp>:
    1f76:	99 0f       	add	r25, r25
    1f78:	00 08       	sbc	r0, r0
    1f7a:	55 0f       	add	r21, r21
    1f7c:	aa 0b       	sbc	r26, r26
    1f7e:	e0 e8       	ldi	r30, 0x80	; 128
    1f80:	fe ef       	ldi	r31, 0xFE	; 254
    1f82:	16 16       	cp	r1, r22
    1f84:	17 06       	cpc	r1, r23
    1f86:	e8 07       	cpc	r30, r24
    1f88:	f9 07       	cpc	r31, r25
    1f8a:	c0 f0       	brcs	.+48     	; 0x1fbc <__fp_cmp+0x46>
    1f8c:	12 16       	cp	r1, r18
    1f8e:	13 06       	cpc	r1, r19
    1f90:	e4 07       	cpc	r30, r20
    1f92:	f5 07       	cpc	r31, r21
    1f94:	98 f0       	brcs	.+38     	; 0x1fbc <__fp_cmp+0x46>
    1f96:	62 1b       	sub	r22, r18
    1f98:	73 0b       	sbc	r23, r19
    1f9a:	84 0b       	sbc	r24, r20
    1f9c:	95 0b       	sbc	r25, r21
    1f9e:	39 f4       	brne	.+14     	; 0x1fae <__fp_cmp+0x38>
    1fa0:	0a 26       	eor	r0, r26
    1fa2:	61 f0       	breq	.+24     	; 0x1fbc <__fp_cmp+0x46>
    1fa4:	23 2b       	or	r18, r19
    1fa6:	24 2b       	or	r18, r20
    1fa8:	25 2b       	or	r18, r21
    1faa:	21 f4       	brne	.+8      	; 0x1fb4 <__fp_cmp+0x3e>
    1fac:	08 95       	ret
    1fae:	0a 26       	eor	r0, r26
    1fb0:	09 f4       	brne	.+2      	; 0x1fb4 <__fp_cmp+0x3e>
    1fb2:	a1 40       	sbci	r26, 0x01	; 1
    1fb4:	a6 95       	lsr	r26
    1fb6:	8f ef       	ldi	r24, 0xFF	; 255
    1fb8:	81 1d       	adc	r24, r1
    1fba:	81 1d       	adc	r24, r1
    1fbc:	08 95       	ret

00001fbe <__fp_inf>:
    1fbe:	97 f9       	bld	r25, 7
    1fc0:	9f 67       	ori	r25, 0x7F	; 127
    1fc2:	80 e8       	ldi	r24, 0x80	; 128
    1fc4:	70 e0       	ldi	r23, 0x00	; 0
    1fc6:	60 e0       	ldi	r22, 0x00	; 0
    1fc8:	08 95       	ret

00001fca <__fp_nan>:
    1fca:	9f ef       	ldi	r25, 0xFF	; 255
    1fcc:	80 ec       	ldi	r24, 0xC0	; 192
    1fce:	08 95       	ret

00001fd0 <__fp_powser>:
    1fd0:	df 93       	push	r29
    1fd2:	cf 93       	push	r28
    1fd4:	1f 93       	push	r17
    1fd6:	0f 93       	push	r16
    1fd8:	ff 92       	push	r15
    1fda:	ef 92       	push	r14
    1fdc:	df 92       	push	r13
    1fde:	7b 01       	movw	r14, r22
    1fe0:	8c 01       	movw	r16, r24
    1fe2:	68 94       	set
    1fe4:	05 c0       	rjmp	.+10     	; 0x1ff0 <__fp_powser+0x20>
    1fe6:	da 2e       	mov	r13, r26
    1fe8:	ef 01       	movw	r28, r30
    1fea:	af d0       	rcall	.+350    	; 0x214a <__mulsf3x>
    1fec:	fe 01       	movw	r30, r28
    1fee:	e8 94       	clt
    1ff0:	a5 91       	lpm	r26, Z+
    1ff2:	25 91       	lpm	r18, Z+
    1ff4:	35 91       	lpm	r19, Z+
    1ff6:	45 91       	lpm	r20, Z+
    1ff8:	55 91       	lpm	r21, Z+
    1ffa:	ae f3       	brts	.-22     	; 0x1fe6 <__fp_powser+0x16>
    1ffc:	ef 01       	movw	r28, r30
    1ffe:	63 de       	rcall	.-826    	; 0x1cc6 <__addsf3x>
    2000:	fe 01       	movw	r30, r28
    2002:	97 01       	movw	r18, r14
    2004:	a8 01       	movw	r20, r16
    2006:	da 94       	dec	r13
    2008:	79 f7       	brne	.-34     	; 0x1fe8 <__fp_powser+0x18>
    200a:	df 90       	pop	r13
    200c:	ef 90       	pop	r14
    200e:	ff 90       	pop	r15
    2010:	0f 91       	pop	r16
    2012:	1f 91       	pop	r17
    2014:	cf 91       	pop	r28
    2016:	df 91       	pop	r29
    2018:	08 95       	ret

0000201a <__fp_pscA>:
    201a:	00 24       	eor	r0, r0
    201c:	0a 94       	dec	r0
    201e:	16 16       	cp	r1, r22
    2020:	17 06       	cpc	r1, r23
    2022:	18 06       	cpc	r1, r24
    2024:	09 06       	cpc	r0, r25
    2026:	08 95       	ret

00002028 <__fp_pscB>:
    2028:	00 24       	eor	r0, r0
    202a:	0a 94       	dec	r0
    202c:	12 16       	cp	r1, r18
    202e:	13 06       	cpc	r1, r19
    2030:	14 06       	cpc	r1, r20
    2032:	05 06       	cpc	r0, r21
    2034:	08 95       	ret
    2036:	c9 cf       	rjmp	.-110    	; 0x1fca <__fp_nan>

00002038 <__fp_rempio2>:
    2038:	50 d0       	rcall	.+160    	; 0x20da <__fp_splitA>
    203a:	e8 f3       	brcs	.-6      	; 0x2036 <__fp_pscB+0xe>
    203c:	e8 94       	clt
    203e:	e0 e0       	ldi	r30, 0x00	; 0
    2040:	bb 27       	eor	r27, r27
    2042:	9f 57       	subi	r25, 0x7F	; 127
    2044:	f0 f0       	brcs	.+60     	; 0x2082 <__fp_rempio2+0x4a>
    2046:	2a ed       	ldi	r18, 0xDA	; 218
    2048:	3f e0       	ldi	r19, 0x0F	; 15
    204a:	49 ec       	ldi	r20, 0xC9	; 201
    204c:	06 c0       	rjmp	.+12     	; 0x205a <__fp_rempio2+0x22>
    204e:	ee 0f       	add	r30, r30
    2050:	bb 0f       	add	r27, r27
    2052:	66 1f       	adc	r22, r22
    2054:	77 1f       	adc	r23, r23
    2056:	88 1f       	adc	r24, r24
    2058:	28 f0       	brcs	.+10     	; 0x2064 <__fp_rempio2+0x2c>
    205a:	b2 3a       	cpi	r27, 0xA2	; 162
    205c:	62 07       	cpc	r22, r18
    205e:	73 07       	cpc	r23, r19
    2060:	84 07       	cpc	r24, r20
    2062:	28 f0       	brcs	.+10     	; 0x206e <__fp_rempio2+0x36>
    2064:	b2 5a       	subi	r27, 0xA2	; 162
    2066:	62 0b       	sbc	r22, r18
    2068:	73 0b       	sbc	r23, r19
    206a:	84 0b       	sbc	r24, r20
    206c:	e3 95       	inc	r30
    206e:	9a 95       	dec	r25
    2070:	72 f7       	brpl	.-36     	; 0x204e <__fp_rempio2+0x16>
    2072:	80 38       	cpi	r24, 0x80	; 128
    2074:	30 f4       	brcc	.+12     	; 0x2082 <__fp_rempio2+0x4a>
    2076:	9a 95       	dec	r25
    2078:	bb 0f       	add	r27, r27
    207a:	66 1f       	adc	r22, r22
    207c:	77 1f       	adc	r23, r23
    207e:	88 1f       	adc	r24, r24
    2080:	d2 f7       	brpl	.-12     	; 0x2076 <__fp_rempio2+0x3e>
    2082:	90 48       	sbci	r25, 0x80	; 128
    2084:	be c0       	rjmp	.+380    	; 0x2202 <__fp_mpack_finite>

00002086 <__fp_round>:
    2086:	09 2e       	mov	r0, r25
    2088:	03 94       	inc	r0
    208a:	00 0c       	add	r0, r0
    208c:	11 f4       	brne	.+4      	; 0x2092 <__fp_round+0xc>
    208e:	88 23       	and	r24, r24
    2090:	52 f0       	brmi	.+20     	; 0x20a6 <__fp_round+0x20>
    2092:	bb 0f       	add	r27, r27
    2094:	40 f4       	brcc	.+16     	; 0x20a6 <__fp_round+0x20>
    2096:	bf 2b       	or	r27, r31
    2098:	11 f4       	brne	.+4      	; 0x209e <__fp_round+0x18>
    209a:	60 ff       	sbrs	r22, 0
    209c:	04 c0       	rjmp	.+8      	; 0x20a6 <__fp_round+0x20>
    209e:	6f 5f       	subi	r22, 0xFF	; 255
    20a0:	7f 4f       	sbci	r23, 0xFF	; 255
    20a2:	8f 4f       	sbci	r24, 0xFF	; 255
    20a4:	9f 4f       	sbci	r25, 0xFF	; 255
    20a6:	08 95       	ret

000020a8 <__fp_sinus>:
    20a8:	ef 93       	push	r30
    20aa:	e0 ff       	sbrs	r30, 0
    20ac:	06 c0       	rjmp	.+12     	; 0x20ba <__fp_sinus+0x12>
    20ae:	a2 ea       	ldi	r26, 0xA2	; 162
    20b0:	2a ed       	ldi	r18, 0xDA	; 218
    20b2:	3f e0       	ldi	r19, 0x0F	; 15
    20b4:	49 ec       	ldi	r20, 0xC9	; 201
    20b6:	5f eb       	ldi	r21, 0xBF	; 191
    20b8:	06 de       	rcall	.-1012   	; 0x1cc6 <__addsf3x>
    20ba:	e5 df       	rcall	.-54     	; 0x2086 <__fp_round>
    20bc:	0f 90       	pop	r0
    20be:	03 94       	inc	r0
    20c0:	01 fc       	sbrc	r0, 1
    20c2:	90 58       	subi	r25, 0x80	; 128
    20c4:	e9 eb       	ldi	r30, 0xB9	; 185
    20c6:	f0 e0       	ldi	r31, 0x00	; 0
    20c8:	a8 c0       	rjmp	.+336    	; 0x221a <__fp_powsodd>

000020ca <__fp_split3>:
    20ca:	57 fd       	sbrc	r21, 7
    20cc:	90 58       	subi	r25, 0x80	; 128
    20ce:	44 0f       	add	r20, r20
    20d0:	55 1f       	adc	r21, r21
    20d2:	59 f0       	breq	.+22     	; 0x20ea <__fp_splitA+0x10>
    20d4:	5f 3f       	cpi	r21, 0xFF	; 255
    20d6:	71 f0       	breq	.+28     	; 0x20f4 <__fp_splitA+0x1a>
    20d8:	47 95       	ror	r20

000020da <__fp_splitA>:
    20da:	88 0f       	add	r24, r24
    20dc:	97 fb       	bst	r25, 7
    20de:	99 1f       	adc	r25, r25
    20e0:	61 f0       	breq	.+24     	; 0x20fa <__fp_splitA+0x20>
    20e2:	9f 3f       	cpi	r25, 0xFF	; 255
    20e4:	79 f0       	breq	.+30     	; 0x2104 <__fp_splitA+0x2a>
    20e6:	87 95       	ror	r24
    20e8:	08 95       	ret
    20ea:	12 16       	cp	r1, r18
    20ec:	13 06       	cpc	r1, r19
    20ee:	14 06       	cpc	r1, r20
    20f0:	55 1f       	adc	r21, r21
    20f2:	f2 cf       	rjmp	.-28     	; 0x20d8 <__fp_split3+0xe>
    20f4:	46 95       	lsr	r20
    20f6:	f1 df       	rcall	.-30     	; 0x20da <__fp_splitA>
    20f8:	08 c0       	rjmp	.+16     	; 0x210a <__fp_splitA+0x30>
    20fa:	16 16       	cp	r1, r22
    20fc:	17 06       	cpc	r1, r23
    20fe:	18 06       	cpc	r1, r24
    2100:	99 1f       	adc	r25, r25
    2102:	f1 cf       	rjmp	.-30     	; 0x20e6 <__fp_splitA+0xc>
    2104:	86 95       	lsr	r24
    2106:	71 05       	cpc	r23, r1
    2108:	61 05       	cpc	r22, r1
    210a:	08 94       	sec
    210c:	08 95       	ret

0000210e <__fp_zero>:
    210e:	e8 94       	clt

00002110 <__fp_szero>:
    2110:	bb 27       	eor	r27, r27
    2112:	66 27       	eor	r22, r22
    2114:	77 27       	eor	r23, r23
    2116:	cb 01       	movw	r24, r22
    2118:	97 f9       	bld	r25, 7
    211a:	08 95       	ret

0000211c <__gesf2>:
    211c:	2c df       	rcall	.-424    	; 0x1f76 <__fp_cmp>
    211e:	08 f4       	brcc	.+2      	; 0x2122 <__gesf2+0x6>
    2120:	8f ef       	ldi	r24, 0xFF	; 255
    2122:	08 95       	ret

00002124 <inverse>:
    2124:	9b 01       	movw	r18, r22
    2126:	ac 01       	movw	r20, r24
    2128:	60 e0       	ldi	r22, 0x00	; 0
    212a:	70 e0       	ldi	r23, 0x00	; 0
    212c:	80 e8       	ldi	r24, 0x80	; 128
    212e:	9f e3       	ldi	r25, 0x3F	; 63
    2130:	4c ce       	rjmp	.-872    	; 0x1dca <__divsf3>

00002132 <__mulsf3>:
    2132:	0b d0       	rcall	.+22     	; 0x214a <__mulsf3x>
    2134:	a8 cf       	rjmp	.-176    	; 0x2086 <__fp_round>
    2136:	71 df       	rcall	.-286    	; 0x201a <__fp_pscA>
    2138:	28 f0       	brcs	.+10     	; 0x2144 <__mulsf3+0x12>
    213a:	76 df       	rcall	.-276    	; 0x2028 <__fp_pscB>
    213c:	18 f0       	brcs	.+6      	; 0x2144 <__mulsf3+0x12>
    213e:	95 23       	and	r25, r21
    2140:	09 f0       	breq	.+2      	; 0x2144 <__mulsf3+0x12>
    2142:	3d cf       	rjmp	.-390    	; 0x1fbe <__fp_inf>
    2144:	42 cf       	rjmp	.-380    	; 0x1fca <__fp_nan>
    2146:	11 24       	eor	r1, r1
    2148:	e3 cf       	rjmp	.-58     	; 0x2110 <__fp_szero>

0000214a <__mulsf3x>:
    214a:	bf df       	rcall	.-130    	; 0x20ca <__fp_split3>
    214c:	a0 f3       	brcs	.-24     	; 0x2136 <__mulsf3+0x4>

0000214e <__mulsf3_pse>:
    214e:	95 9f       	mul	r25, r21
    2150:	d1 f3       	breq	.-12     	; 0x2146 <__mulsf3+0x14>
    2152:	95 0f       	add	r25, r21
    2154:	50 e0       	ldi	r21, 0x00	; 0
    2156:	55 1f       	adc	r21, r21
    2158:	62 9f       	mul	r22, r18
    215a:	f0 01       	movw	r30, r0
    215c:	72 9f       	mul	r23, r18
    215e:	bb 27       	eor	r27, r27
    2160:	f0 0d       	add	r31, r0
    2162:	b1 1d       	adc	r27, r1
    2164:	63 9f       	mul	r22, r19
    2166:	aa 27       	eor	r26, r26
    2168:	f0 0d       	add	r31, r0
    216a:	b1 1d       	adc	r27, r1
    216c:	aa 1f       	adc	r26, r26
    216e:	64 9f       	mul	r22, r20
    2170:	66 27       	eor	r22, r22
    2172:	b0 0d       	add	r27, r0
    2174:	a1 1d       	adc	r26, r1
    2176:	66 1f       	adc	r22, r22
    2178:	82 9f       	mul	r24, r18
    217a:	22 27       	eor	r18, r18
    217c:	b0 0d       	add	r27, r0
    217e:	a1 1d       	adc	r26, r1
    2180:	62 1f       	adc	r22, r18
    2182:	73 9f       	mul	r23, r19
    2184:	b0 0d       	add	r27, r0
    2186:	a1 1d       	adc	r26, r1
    2188:	62 1f       	adc	r22, r18
    218a:	83 9f       	mul	r24, r19
    218c:	a0 0d       	add	r26, r0
    218e:	61 1d       	adc	r22, r1
    2190:	22 1f       	adc	r18, r18
    2192:	74 9f       	mul	r23, r20
    2194:	33 27       	eor	r19, r19
    2196:	a0 0d       	add	r26, r0
    2198:	61 1d       	adc	r22, r1
    219a:	23 1f       	adc	r18, r19
    219c:	84 9f       	mul	r24, r20
    219e:	60 0d       	add	r22, r0
    21a0:	21 1d       	adc	r18, r1
    21a2:	82 2f       	mov	r24, r18
    21a4:	76 2f       	mov	r23, r22
    21a6:	6a 2f       	mov	r22, r26
    21a8:	11 24       	eor	r1, r1
    21aa:	9f 57       	subi	r25, 0x7F	; 127
    21ac:	50 40       	sbci	r21, 0x00	; 0
    21ae:	8a f0       	brmi	.+34     	; 0x21d2 <__mulsf3_pse+0x84>
    21b0:	e1 f0       	breq	.+56     	; 0x21ea <__mulsf3_pse+0x9c>
    21b2:	88 23       	and	r24, r24
    21b4:	4a f0       	brmi	.+18     	; 0x21c8 <__mulsf3_pse+0x7a>
    21b6:	ee 0f       	add	r30, r30
    21b8:	ff 1f       	adc	r31, r31
    21ba:	bb 1f       	adc	r27, r27
    21bc:	66 1f       	adc	r22, r22
    21be:	77 1f       	adc	r23, r23
    21c0:	88 1f       	adc	r24, r24
    21c2:	91 50       	subi	r25, 0x01	; 1
    21c4:	50 40       	sbci	r21, 0x00	; 0
    21c6:	a9 f7       	brne	.-22     	; 0x21b2 <__mulsf3_pse+0x64>
    21c8:	9e 3f       	cpi	r25, 0xFE	; 254
    21ca:	51 05       	cpc	r21, r1
    21cc:	70 f0       	brcs	.+28     	; 0x21ea <__mulsf3_pse+0x9c>
    21ce:	f7 ce       	rjmp	.-530    	; 0x1fbe <__fp_inf>
    21d0:	9f cf       	rjmp	.-194    	; 0x2110 <__fp_szero>
    21d2:	5f 3f       	cpi	r21, 0xFF	; 255
    21d4:	ec f3       	brlt	.-6      	; 0x21d0 <__mulsf3_pse+0x82>
    21d6:	98 3e       	cpi	r25, 0xE8	; 232
    21d8:	dc f3       	brlt	.-10     	; 0x21d0 <__mulsf3_pse+0x82>
    21da:	86 95       	lsr	r24
    21dc:	77 95       	ror	r23
    21de:	67 95       	ror	r22
    21e0:	b7 95       	ror	r27
    21e2:	f7 95       	ror	r31
    21e4:	e7 95       	ror	r30
    21e6:	9f 5f       	subi	r25, 0xFF	; 255
    21e8:	c1 f7       	brne	.-16     	; 0x21da <__mulsf3_pse+0x8c>
    21ea:	fe 2b       	or	r31, r30
    21ec:	88 0f       	add	r24, r24
    21ee:	91 1d       	adc	r25, r1
    21f0:	96 95       	lsr	r25
    21f2:	87 95       	ror	r24
    21f4:	97 f9       	bld	r25, 7
    21f6:	08 95       	ret

000021f8 <square>:
    21f8:	9b 01       	movw	r18, r22
    21fa:	ac 01       	movw	r20, r24
    21fc:	9a cf       	rjmp	.-204    	; 0x2132 <__mulsf3>

000021fe <__fp_mpack>:
    21fe:	9f 3f       	cpi	r25, 0xFF	; 255
    2200:	31 f0       	breq	.+12     	; 0x220e <__fp_mpack_finite+0xc>

00002202 <__fp_mpack_finite>:
    2202:	91 50       	subi	r25, 0x01	; 1
    2204:	20 f4       	brcc	.+8      	; 0x220e <__fp_mpack_finite+0xc>
    2206:	87 95       	ror	r24
    2208:	77 95       	ror	r23
    220a:	67 95       	ror	r22
    220c:	b7 95       	ror	r27
    220e:	88 0f       	add	r24, r24
    2210:	91 1d       	adc	r25, r1
    2212:	96 95       	lsr	r25
    2214:	87 95       	ror	r24
    2216:	97 f9       	bld	r25, 7
    2218:	08 95       	ret

0000221a <__fp_powsodd>:
    221a:	9f 93       	push	r25
    221c:	8f 93       	push	r24
    221e:	7f 93       	push	r23
    2220:	6f 93       	push	r22
    2222:	ff 93       	push	r31
    2224:	ef 93       	push	r30
    2226:	9b 01       	movw	r18, r22
    2228:	ac 01       	movw	r20, r24
    222a:	83 df       	rcall	.-250    	; 0x2132 <__mulsf3>
    222c:	ef 91       	pop	r30
    222e:	ff 91       	pop	r31
    2230:	cf de       	rcall	.-610    	; 0x1fd0 <__fp_powser>
    2232:	2f 91       	pop	r18
    2234:	3f 91       	pop	r19
    2236:	4f 91       	pop	r20
    2238:	5f 91       	pop	r21
    223a:	7b cf       	rjmp	.-266    	; 0x2132 <__mulsf3>

0000223c <_exit>:
    223c:	f8 94       	cli

0000223e <__stop_program>:
    223e:	ff cf       	rjmp	.-2      	; 0x223e <__stop_program>
