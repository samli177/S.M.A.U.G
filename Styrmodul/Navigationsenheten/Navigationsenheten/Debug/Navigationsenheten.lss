
Navigationsenheten.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000021ba  00800100  00001dbc  00001e50  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001dbc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000067a  008022ba  008022ba  0000400a  2**0
                  ALLOC
  3 .stab         00002e68  00000000  00000000  0000400c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000d48  00000000  00000000  00006e74  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00007bbc  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000398  00000000  00000000  00007beb  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000034ab  00000000  00000000  00007f83  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000f06  00000000  00000000  0000b42e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00002125  00000000  00000000  0000c334  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000ae4  00000000  00000000  0000e45c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000c2c  00000000  00000000  0000ef40  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000021fa  00000000  00000000  0000fb6c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000418  00000000  00000000  00011d66  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	6b c0       	rjmp	.+214    	; 0xd8 <__ctors_end>
       2:	00 00       	nop
       4:	a0 c4       	rjmp	.+2368   	; 0x946 <__vector_1>
       6:	00 00       	nop
       8:	c8 c4       	rjmp	.+2448   	; 0x99a <__vector_2>
       a:	00 00       	nop
       c:	83 c0       	rjmp	.+262    	; 0x114 <__bad_interrupt>
       e:	00 00       	nop
      10:	81 c0       	rjmp	.+258    	; 0x114 <__bad_interrupt>
      12:	00 00       	nop
      14:	7f c0       	rjmp	.+254    	; 0x114 <__bad_interrupt>
      16:	00 00       	nop
      18:	7d c0       	rjmp	.+250    	; 0x114 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	7b c0       	rjmp	.+246    	; 0x114 <__bad_interrupt>
      1e:	00 00       	nop
      20:	79 c0       	rjmp	.+242    	; 0x114 <__bad_interrupt>
      22:	00 00       	nop
      24:	77 c0       	rjmp	.+238    	; 0x114 <__bad_interrupt>
      26:	00 00       	nop
      28:	75 c0       	rjmp	.+234    	; 0x114 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	73 c0       	rjmp	.+230    	; 0x114 <__bad_interrupt>
      2e:	00 00       	nop
      30:	71 c0       	rjmp	.+226    	; 0x114 <__bad_interrupt>
      32:	00 00       	nop
      34:	1a c5       	rjmp	.+2612   	; 0xa6a <__vector_13>
      36:	00 00       	nop
      38:	6d c0       	rjmp	.+218    	; 0x114 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	6b c0       	rjmp	.+214    	; 0x114 <__bad_interrupt>
      3e:	00 00       	nop
      40:	69 c0       	rjmp	.+210    	; 0x114 <__bad_interrupt>
      42:	00 00       	nop
      44:	67 c0       	rjmp	.+206    	; 0x114 <__bad_interrupt>
      46:	00 00       	nop
      48:	65 c0       	rjmp	.+202    	; 0x114 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	63 c0       	rjmp	.+198    	; 0x114 <__bad_interrupt>
      4e:	00 00       	nop
      50:	0c 94 7a 0b 	jmp	0x16f4	; 0x16f4 <__vector_20>
      54:	5f c0       	rjmp	.+190    	; 0x114 <__bad_interrupt>
      56:	00 00       	nop
      58:	5d c0       	rjmp	.+186    	; 0x114 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	5b c0       	rjmp	.+182    	; 0x114 <__bad_interrupt>
      5e:	00 00       	nop
      60:	59 c0       	rjmp	.+178    	; 0x114 <__bad_interrupt>
      62:	00 00       	nop
      64:	57 c0       	rjmp	.+174    	; 0x114 <__bad_interrupt>
      66:	00 00       	nop
      68:	69 c7       	rjmp	.+3794   	; 0xf3c <__vector_26>
      6a:	00 00       	nop
      6c:	53 c0       	rjmp	.+166    	; 0x114 <__bad_interrupt>
      6e:	00 00       	nop
      70:	51 c0       	rjmp	.+162    	; 0x114 <__bad_interrupt>
      72:	00 00       	nop
      74:	4f c0       	rjmp	.+158    	; 0x114 <__bad_interrupt>
      76:	00 00       	nop
      78:	4d c0       	rjmp	.+154    	; 0x114 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	4b c0       	rjmp	.+150    	; 0x114 <__bad_interrupt>
      7e:	00 00       	nop
      80:	02 c5       	rjmp	.+2564   	; 0xa86 <__vector_32>
      82:	00 00       	nop
      84:	47 c0       	rjmp	.+142    	; 0x114 <__bad_interrupt>
      86:	00 00       	nop
      88:	45 c0       	rjmp	.+138    	; 0x114 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	08 4a       	sbci	r16, 0xA8	; 168
      8e:	d7 3b       	cpi	r29, 0xB7	; 183
      90:	3b ce       	rjmp	.-906    	; 0xfffffd08 <__eeprom_end+0xff7efd08>
      92:	01 6e       	ori	r16, 0xE1	; 225
      94:	84 bc       	out	0x24, r8	; 36
      96:	bf fd       	.word	0xfdbf	; ????
      98:	c1 2f       	mov	r28, r17
      9a:	3d 6c       	ori	r19, 0xCD	; 205
      9c:	74 31       	cpi	r23, 0x14	; 20
      9e:	9a bd       	out	0x2a, r25	; 42
      a0:	56 83       	std	Z+6, r21	; 0x06
      a2:	3d da       	rcall	.-2950   	; 0xfffff51e <__eeprom_end+0xff7ef51e>
      a4:	3d 00       	.word	0x003d	; ????
      a6:	c7 7f       	andi	r28, 0xF7	; 247
      a8:	11 be       	out	0x31, r1	; 49
      aa:	d9 e4       	ldi	r29, 0x49	; 73
      ac:	bb 4c       	sbci	r27, 0xCB	; 203
      ae:	3e 91       	ld	r19, -X
      b0:	6b aa       	std	Y+51, r6	; 0x33
      b2:	aa be       	out	0x3a, r10	; 58
      b4:	00 00       	nop
      b6:	00 80       	ld	r0, Z
      b8:	3f 05       	cpc	r19, r15
      ba:	a8 4c       	sbci	r26, 0xC8	; 200
      bc:	cd b2       	in	r12, 0x1d	; 29
      be:	d4 4e       	sbci	r29, 0xE4	; 228
      c0:	b9 38       	cpi	r27, 0x89	; 137
      c2:	36 a9       	ldd	r19, Z+54	; 0x36
      c4:	02 0c       	add	r0, r2
      c6:	50 b9       	out	0x00, r21	; 0
      c8:	91 86       	std	Z+9, r9	; 0x09
      ca:	88 08       	sbc	r8, r8
      cc:	3c a6       	std	Y+44, r3	; 0x2c
      ce:	aa aa       	std	Y+50, r10	; 0x32
      d0:	2a be       	out	0x3a, r2	; 58
      d2:	00 00       	nop
      d4:	00 80       	ld	r0, Z
      d6:	3f 00       	.word	0x003f	; ????

000000d8 <__ctors_end>:
      d8:	11 24       	eor	r1, r1
      da:	1f be       	out	0x3f, r1	; 63
      dc:	cf ef       	ldi	r28, 0xFF	; 255
      de:	d0 e4       	ldi	r29, 0x40	; 64
      e0:	de bf       	out	0x3e, r29	; 62
      e2:	cd bf       	out	0x3d, r28	; 61

000000e4 <__do_copy_data>:
      e4:	12 e2       	ldi	r17, 0x22	; 34
      e6:	a0 e0       	ldi	r26, 0x00	; 0
      e8:	b1 e0       	ldi	r27, 0x01	; 1
      ea:	ec eb       	ldi	r30, 0xBC	; 188
      ec:	fd e1       	ldi	r31, 0x1D	; 29
      ee:	00 e0       	ldi	r16, 0x00	; 0
      f0:	0b bf       	out	0x3b, r16	; 59
      f2:	02 c0       	rjmp	.+4      	; 0xf8 <__do_copy_data+0x14>
      f4:	07 90       	elpm	r0, Z+
      f6:	0d 92       	st	X+, r0
      f8:	aa 3b       	cpi	r26, 0xBA	; 186
      fa:	b1 07       	cpc	r27, r17
      fc:	d9 f7       	brne	.-10     	; 0xf4 <__do_copy_data+0x10>

000000fe <__do_clear_bss>:
      fe:	29 e2       	ldi	r18, 0x29	; 41
     100:	aa eb       	ldi	r26, 0xBA	; 186
     102:	b2 e2       	ldi	r27, 0x22	; 34
     104:	01 c0       	rjmp	.+2      	; 0x108 <.do_clear_bss_start>

00000106 <.do_clear_bss_loop>:
     106:	1d 92       	st	X+, r1

00000108 <.do_clear_bss_start>:
     108:	a4 33       	cpi	r26, 0x34	; 52
     10a:	b2 07       	cpc	r27, r18
     10c:	e1 f7       	brne	.-8      	; 0x106 <.do_clear_bss_loop>
     10e:	6f d4       	rcall	.+2270   	; 0x9ee <main>
     110:	0c 94 dc 0e 	jmp	0x1db8	; 0x1db8 <_exit>

00000114 <__bad_interrupt>:
     114:	75 cf       	rjmp	.-278    	; 0x0 <__vectors>

00000116 <turn_around>:
	}
}

void turn_around()
{
	if(gStatus)
     116:	80 91 00 01 	lds	r24, 0x0100
     11a:	88 23       	and	r24, r24
     11c:	99 f0       	breq	.+38     	; 0x144 <turn_around+0x2e>
	{
		TWI_send_string(C_ADDRESS, "Starting to turn around.");
     11e:	68 e1       	ldi	r22, 0x18	; 24
     120:	71 e2       	ldi	r23, 0x21	; 33
     122:	80 e8       	ldi	r24, 0x80	; 128
     124:	c4 d5       	rcall	.+2952   	; 0xcae <TWI_send_string>
     126:	0e c0       	rjmp	.+28     	; 0x144 <turn_around+0x2e>
	{
		if(gStatus)
		{
			//TWI_send_string(C_ADDRESS, "Turning around.");
		}
		USART_send_command_parameters(0, MAX_ROTATION_COUNTER_CLOCKWISE, 0);
     128:	40 e0       	ldi	r20, 0x00	; 0
     12a:	6e e1       	ldi	r22, 0x1E	; 30
     12c:	80 e0       	ldi	r24, 0x00	; 0
     12e:	0e 94 06 0c 	call	0x180c	; 0x180c <USART_send_command_parameters>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     132:	2f ef       	ldi	r18, 0xFF	; 255
     134:	83 ed       	ldi	r24, 0xD3	; 211
     136:	90 e3       	ldi	r25, 0x30	; 48
     138:	21 50       	subi	r18, 0x01	; 1
     13a:	80 40       	sbci	r24, 0x00	; 0
     13c:	90 40       	sbci	r25, 0x00	; 0
     13e:	e1 f7       	brne	.-8      	; 0x138 <turn_around+0x22>
     140:	00 c0       	rjmp	.+0      	; 0x142 <turn_around+0x2c>
     142:	00 00       	nop
{
	if(gStatus)
	{
		TWI_send_string(C_ADDRESS, "Starting to turn around.");
	}
	while(navigation_get_sensor(4) < CORRIDOR_WIDTH)
     144:	84 e0       	ldi	r24, 0x04	; 4
     146:	90 e0       	ldi	r25, 0x00	; 0
     148:	93 d2       	rcall	.+1318   	; 0x670 <navigation_get_sensor>
     14a:	80 35       	cpi	r24, 0x50	; 80
     14c:	68 f3       	brcs	.-38     	; 0x128 <turn_around+0x12>
			//TWI_send_string(C_ADDRESS, "Turning around.");
		}
		USART_send_command_parameters(0, MAX_ROTATION_COUNTER_CLOCKWISE, 0);
		_delay_ms(STEPPING_TIME);
	}
	if(gStatus)
     14e:	80 91 00 01 	lds	r24, 0x0100
     152:	88 23       	and	r24, r24
     154:	21 f0       	breq	.+8      	; 0x15e <turn_around+0x48>
	{
		TWI_send_string(C_ADDRESS, "Corridor ahead, done turning around.");
     156:	61 e3       	ldi	r22, 0x31	; 49
     158:	71 e2       	ldi	r23, 0x21	; 33
     15a:	80 e8       	ldi	r24, 0x80	; 128
     15c:	a8 c5       	rjmp	.+2896   	; 0xcae <TWI_send_string>
     15e:	08 95       	ret

00000160 <walk_forward>:
	}
}

void walk_forward()
{
     160:	8f 92       	push	r8
     162:	9f 92       	push	r9
     164:	af 92       	push	r10
     166:	bf 92       	push	r11
     168:	cf 92       	push	r12
     16a:	df 92       	push	r13
     16c:	ef 92       	push	r14
     16e:	ff 92       	push	r15
     170:	cf 93       	push	r28
     172:	df 93       	push	r29
	if(gStatus)
	{
		//TWI_send_string(C_ADDRESS, "Finding regulation parameters.");
	}
	float angleOffset = navigation_angle_offset();
     174:	83 d3       	rcall	.+1798   	; 0x87c <navigation_angle_offset>
     176:	4b 01       	movw	r8, r22
     178:	5c 01       	movw	r10, r24
	float directionCompensationAngle = navigation_direction_regulation(angleOffset);
     17a:	a6 d2       	rcall	.+1356   	; 0x6c8 <navigation_direction_regulation>
     17c:	6b 01       	movw	r12, r22
     17e:	7c 01       	movw	r14, r24
	if(gStatus)
	{
		//TWI_send_string(C_ADDRESS, "Found regulation parameters.");
	}
	int adjustmentRotation = (50 + 50 * angleOffset * (2.0/PI + fabs(directionCompensationAngle)));
     180:	20 e0       	ldi	r18, 0x00	; 0
     182:	30 e0       	ldi	r19, 0x00	; 0
     184:	48 e4       	ldi	r20, 0x48	; 72
     186:	52 e4       	ldi	r21, 0x42	; 66
     188:	c5 01       	movw	r24, r10
     18a:	b4 01       	movw	r22, r8
     18c:	0e 94 57 0e 	call	0x1cae	; 0x1cae <__mulsf3>
     190:	4b 01       	movw	r8, r22
     192:	5c 01       	movw	r10, r24
     194:	c7 01       	movw	r24, r14
     196:	b6 01       	movw	r22, r12
     198:	9f 77       	andi	r25, 0x7F	; 127
     19a:	23 e8       	ldi	r18, 0x83	; 131
     19c:	39 ef       	ldi	r19, 0xF9	; 249
     19e:	42 e2       	ldi	r20, 0x22	; 34
     1a0:	5f e3       	ldi	r21, 0x3F	; 63
     1a2:	0e 94 10 0c 	call	0x1820	; 0x1820 <__addsf3>
     1a6:	9b 01       	movw	r18, r22
     1a8:	ac 01       	movw	r20, r24
     1aa:	c5 01       	movw	r24, r10
     1ac:	b4 01       	movw	r22, r8
     1ae:	0e 94 57 0e 	call	0x1cae	; 0x1cae <__mulsf3>
     1b2:	20 e0       	ldi	r18, 0x00	; 0
     1b4:	30 e0       	ldi	r19, 0x00	; 0
     1b6:	48 e4       	ldi	r20, 0x48	; 72
     1b8:	52 e4       	ldi	r21, 0x42	; 66
     1ba:	0e 94 10 0c 	call	0x1820	; 0x1820 <__addsf3>
     1be:	0e 94 0b 0d 	call	0x1a16	; 0x1a16 <__fixsfsi>
	if (adjustmentRotation >= 100)
     1c2:	64 36       	cpi	r22, 0x64	; 100
     1c4:	71 05       	cpc	r23, r1
     1c6:	34 f4       	brge	.+12     	; 0x1d4 <walk_forward+0x74>
     1c8:	eb 01       	movw	r28, r22
     1ca:	dd 23       	and	r29, r29
     1cc:	2c f4       	brge	.+10     	; 0x1d8 <walk_forward+0x78>
     1ce:	c0 e0       	ldi	r28, 0x00	; 0
     1d0:	d0 e0       	ldi	r29, 0x00	; 0
     1d2:	02 c0       	rjmp	.+4      	; 0x1d8 <walk_forward+0x78>
	{
		adjustmentRotation = 100;
     1d4:	c4 e6       	ldi	r28, 0x64	; 100
     1d6:	d0 e0       	ldi	r29, 0x00	; 0
	}
	else if(adjustmentRotation <= 0)
	{
		adjustmentRotation = 0;
	}
	int adjustmentDirection = 90 * directionCompensationAngle/(2*PI);
     1d8:	20 e0       	ldi	r18, 0x00	; 0
     1da:	30 e0       	ldi	r19, 0x00	; 0
     1dc:	44 eb       	ldi	r20, 0xB4	; 180
     1de:	52 e4       	ldi	r21, 0x42	; 66
     1e0:	c7 01       	movw	r24, r14
     1e2:	b6 01       	movw	r22, r12
     1e4:	0e 94 57 0e 	call	0x1cae	; 0x1cae <__mulsf3>
     1e8:	2b ed       	ldi	r18, 0xDB	; 219
     1ea:	3f e0       	ldi	r19, 0x0F	; 15
     1ec:	49 ec       	ldi	r20, 0xC9	; 201
     1ee:	50 e4       	ldi	r21, 0x40	; 64
     1f0:	0e 94 a3 0c 	call	0x1946	; 0x1946 <__divsf3>
     1f4:	0e 94 0b 0d 	call	0x1a16	; 0x1a16 <__fixsfsi>
     1f8:	26 2f       	mov	r18, r22
	if(gStatus)
	{
		//TWI_send_string(C_ADDRESS, "Taking a step.");
	}
	USART_send_command_parameters((uint8_t)adjustmentDirection, (uint8_t)adjustmentRotation, gSpeed);
     1fa:	40 91 01 01 	lds	r20, 0x0101
     1fe:	6c 2f       	mov	r22, r28
     200:	82 2f       	mov	r24, r18
     202:	0e 94 06 0c 	call	0x180c	; 0x180c <USART_send_command_parameters>
     206:	2f ef       	ldi	r18, 0xFF	; 255
     208:	89 e6       	ldi	r24, 0x69	; 105
     20a:	98 e1       	ldi	r25, 0x18	; 24
     20c:	21 50       	subi	r18, 0x01	; 1
     20e:	80 40       	sbci	r24, 0x00	; 0
     210:	90 40       	sbci	r25, 0x00	; 0
     212:	e1 f7       	brne	.-8      	; 0x20c <walk_forward+0xac>
     214:	00 c0       	rjmp	.+0      	; 0x216 <walk_forward+0xb6>
     216:	00 00       	nop
	//TWI_send_float(C_ADDRESS, adjustmentDirection);
	_delay_ms(STEPPING_TIME / 2);
	TWI_send_float(C_ADDRESS, adjustmentRotation);
     218:	be 01       	movw	r22, r28
     21a:	88 27       	eor	r24, r24
     21c:	77 fd       	sbrc	r23, 7
     21e:	80 95       	com	r24
     220:	98 2f       	mov	r25, r24
     222:	0e 94 3e 0d 	call	0x1a7c	; 0x1a7c <__floatsisf>
     226:	ab 01       	movw	r20, r22
     228:	bc 01       	movw	r22, r24
     22a:	80 e8       	ldi	r24, 0x80	; 128
     22c:	c4 d5       	rcall	.+2952   	; 0xdb6 <TWI_send_float>
     22e:	2f ef       	ldi	r18, 0xFF	; 255
     230:	89 e6       	ldi	r24, 0x69	; 105
     232:	98 e1       	ldi	r25, 0x18	; 24
     234:	21 50       	subi	r18, 0x01	; 1
     236:	80 40       	sbci	r24, 0x00	; 0
     238:	90 40       	sbci	r25, 0x00	; 0
     23a:	e1 f7       	brne	.-8      	; 0x234 <walk_forward+0xd4>
     23c:	00 c0       	rjmp	.+0      	; 0x23e <walk_forward+0xde>
     23e:	00 00       	nop
	_delay_ms(STEPPING_TIME / 2);
}
     240:	df 91       	pop	r29
     242:	cf 91       	pop	r28
     244:	ff 90       	pop	r15
     246:	ef 90       	pop	r14
     248:	df 90       	pop	r13
     24a:	cf 90       	pop	r12
     24c:	bf 90       	pop	r11
     24e:	af 90       	pop	r10
     250:	9f 90       	pop	r9
     252:	8f 90       	pop	r8
     254:	08 95       	ret

00000256 <turn_right>:
	}
}

void turn_right()
{
	if(gStatus)
     256:	80 91 00 01 	lds	r24, 0x0100
     25a:	88 23       	and	r24, r24
     25c:	21 f0       	breq	.+8      	; 0x266 <turn_right+0x10>
	{
		TWI_send_string(C_ADDRESS, "Starting turning right.");
     25e:	66 e5       	ldi	r22, 0x56	; 86
     260:	71 e2       	ldi	r23, 0x21	; 33
     262:	80 e8       	ldi	r24, 0x80	; 128
     264:	24 d5       	rcall	.+2632   	; 0xcae <TWI_send_string>
	}
	walk_forward();
     266:	7c df       	rcall	.-264    	; 0x160 <walk_forward>
     268:	2f ef       	ldi	r18, 0xFF	; 255
     26a:	83 ed       	ldi	r24, 0xD3	; 211
     26c:	90 e3       	ldi	r25, 0x30	; 48
     26e:	21 50       	subi	r18, 0x01	; 1
     270:	80 40       	sbci	r24, 0x00	; 0
     272:	90 40       	sbci	r25, 0x00	; 0
     274:	e1 f7       	brne	.-8      	; 0x26e <turn_right+0x18>
     276:	00 c0       	rjmp	.+0      	; 0x278 <turn_right+0x22>
     278:	00 00       	nop
     27a:	0e c0       	rjmp	.+28     	; 0x298 <turn_right+0x42>
	{
		if(gStatus)
		{
			//TWI_send_string(C_ADDRESS, "Rotating right.");
		}
		USART_send_command_parameters(0, MAX_ROTATION_CLOCKWISE, 0);
     27c:	40 e0       	ldi	r20, 0x00	; 0
     27e:	66 e4       	ldi	r22, 0x46	; 70
     280:	80 e0       	ldi	r24, 0x00	; 0
     282:	0e 94 06 0c 	call	0x180c	; 0x180c <USART_send_command_parameters>
     286:	2f ef       	ldi	r18, 0xFF	; 255
     288:	83 ed       	ldi	r24, 0xD3	; 211
     28a:	90 e3       	ldi	r25, 0x30	; 48
     28c:	21 50       	subi	r18, 0x01	; 1
     28e:	80 40       	sbci	r24, 0x00	; 0
     290:	90 40       	sbci	r25, 0x00	; 0
     292:	e1 f7       	brne	.-8      	; 0x28c <turn_right+0x36>
     294:	00 c0       	rjmp	.+0      	; 0x296 <turn_right+0x40>
     296:	00 00       	nop
	{
		TWI_send_string(C_ADDRESS, "Starting turning right.");
	}
	walk_forward();
	_delay_ms(STEPPING_TIME);
	while(navigation_get_sensor(4) < (CORRIDOR_WIDTH - 20) || (navigation_get_sensor(2) > (CORRIDOR_WIDTH - 20) && navigation_get_sensor(4) > (CORRIDOR_WIDTH - 20) && navigation_get_sensor(5) > (CORRIDOR_WIDTH / 2))|| (navigation_get_sensor(2) > (CORRIDOR_WIDTH / 2) && navigation_get_sensor(5) > (CORRIDOR_WIDTH - 20)))
     298:	84 e0       	ldi	r24, 0x04	; 4
     29a:	90 e0       	ldi	r25, 0x00	; 0
     29c:	e9 d1       	rcall	.+978    	; 0x670 <navigation_get_sensor>
     29e:	8c 33       	cpi	r24, 0x3C	; 60
     2a0:	68 f3       	brcs	.-38     	; 0x27c <turn_right+0x26>
     2a2:	82 e0       	ldi	r24, 0x02	; 2
     2a4:	90 e0       	ldi	r25, 0x00	; 0
     2a6:	e4 d1       	rcall	.+968    	; 0x670 <navigation_get_sensor>
     2a8:	8d 33       	cpi	r24, 0x3D	; 61
     2aa:	50 f0       	brcs	.+20     	; 0x2c0 <turn_right+0x6a>
     2ac:	84 e0       	ldi	r24, 0x04	; 4
     2ae:	90 e0       	ldi	r25, 0x00	; 0
     2b0:	df d1       	rcall	.+958    	; 0x670 <navigation_get_sensor>
     2b2:	8d 33       	cpi	r24, 0x3D	; 61
     2b4:	28 f0       	brcs	.+10     	; 0x2c0 <turn_right+0x6a>
     2b6:	85 e0       	ldi	r24, 0x05	; 5
     2b8:	90 e0       	ldi	r25, 0x00	; 0
     2ba:	da d1       	rcall	.+948    	; 0x670 <navigation_get_sensor>
     2bc:	89 32       	cpi	r24, 0x29	; 41
     2be:	f0 f6       	brcc	.-68     	; 0x27c <turn_right+0x26>
     2c0:	82 e0       	ldi	r24, 0x02	; 2
     2c2:	90 e0       	ldi	r25, 0x00	; 0
     2c4:	d5 d1       	rcall	.+938    	; 0x670 <navigation_get_sensor>
     2c6:	89 32       	cpi	r24, 0x29	; 41
     2c8:	50 f0       	brcs	.+20     	; 0x2de <turn_right+0x88>
     2ca:	85 e0       	ldi	r24, 0x05	; 5
     2cc:	90 e0       	ldi	r25, 0x00	; 0
     2ce:	d0 d1       	rcall	.+928    	; 0x670 <navigation_get_sensor>
     2d0:	8d 33       	cpi	r24, 0x3D	; 61
     2d2:	a0 f6       	brcc	.-88     	; 0x27c <turn_right+0x26>
     2d4:	04 c0       	rjmp	.+8      	; 0x2de <turn_right+0x88>
	{
		walk_forward();
	}
	if(gStatus)
	{
		TWI_send_string(C_ADDRESS, "Done turning right.");
     2d6:	6e e6       	ldi	r22, 0x6E	; 110
     2d8:	71 e2       	ldi	r23, 0x21	; 33
     2da:	80 e8       	ldi	r24, 0x80	; 128
     2dc:	e8 c4       	rjmp	.+2512   	; 0xcae <TWI_send_string>
		USART_send_command_parameters(0, MAX_ROTATION_CLOCKWISE, 0);
		_delay_ms(STEPPING_TIME);
	}
	for(int i = 0; i < 8; ++i)
	{
		walk_forward();
     2de:	40 df       	rcall	.-384    	; 0x160 <walk_forward>
     2e0:	3f df       	rcall	.-386    	; 0x160 <walk_forward>
     2e2:	3e df       	rcall	.-388    	; 0x160 <walk_forward>
     2e4:	3d df       	rcall	.-390    	; 0x160 <walk_forward>
     2e6:	3c df       	rcall	.-392    	; 0x160 <walk_forward>
     2e8:	3b df       	rcall	.-394    	; 0x160 <walk_forward>
     2ea:	3a df       	rcall	.-396    	; 0x160 <walk_forward>
     2ec:	39 df       	rcall	.-398    	; 0x160 <walk_forward>
	}
	if(gStatus)
     2ee:	80 91 00 01 	lds	r24, 0x0100
     2f2:	81 11       	cpse	r24, r1
     2f4:	f0 cf       	rjmp	.-32     	; 0x2d6 <turn_right+0x80>
     2f6:	08 95       	ret

000002f8 <turn_left>:
	return gStatus;
}

void turn_left()
{
	if(gStatus)
     2f8:	80 91 00 01 	lds	r24, 0x0100
     2fc:	88 23       	and	r24, r24
     2fe:	21 f0       	breq	.+8      	; 0x308 <turn_left+0x10>
	{
		TWI_send_string(C_ADDRESS, "Starting turning left.");
     300:	62 e8       	ldi	r22, 0x82	; 130
     302:	71 e2       	ldi	r23, 0x21	; 33
     304:	80 e8       	ldi	r24, 0x80	; 128
     306:	d3 d4       	rcall	.+2470   	; 0xcae <TWI_send_string>
	}
	walk_forward();
     308:	2b df       	rcall	.-426    	; 0x160 <walk_forward>
     30a:	2f ef       	ldi	r18, 0xFF	; 255
     30c:	83 ed       	ldi	r24, 0xD3	; 211
     30e:	90 e3       	ldi	r25, 0x30	; 48
     310:	21 50       	subi	r18, 0x01	; 1
     312:	80 40       	sbci	r24, 0x00	; 0
     314:	90 40       	sbci	r25, 0x00	; 0
     316:	e1 f7       	brne	.-8      	; 0x310 <turn_left+0x18>
     318:	00 c0       	rjmp	.+0      	; 0x31a <turn_left+0x22>
     31a:	00 00       	nop
     31c:	0e c0       	rjmp	.+28     	; 0x33a <turn_left+0x42>
	{
		if(gStatus)
		{
			//TWI_send_string(C_ADDRESS, "Rotating left.");
		}
		USART_send_command_parameters(0, MAX_ROTATION_COUNTER_CLOCKWISE, 0);
     31e:	40 e0       	ldi	r20, 0x00	; 0
     320:	6e e1       	ldi	r22, 0x1E	; 30
     322:	80 e0       	ldi	r24, 0x00	; 0
     324:	0e 94 06 0c 	call	0x180c	; 0x180c <USART_send_command_parameters>
     328:	2f ef       	ldi	r18, 0xFF	; 255
     32a:	83 ed       	ldi	r24, 0xD3	; 211
     32c:	90 e3       	ldi	r25, 0x30	; 48
     32e:	21 50       	subi	r18, 0x01	; 1
     330:	80 40       	sbci	r24, 0x00	; 0
     332:	90 40       	sbci	r25, 0x00	; 0
     334:	e1 f7       	brne	.-8      	; 0x32e <turn_left+0x36>
     336:	00 c0       	rjmp	.+0      	; 0x338 <turn_left+0x40>
     338:	00 00       	nop
	{
		TWI_send_string(C_ADDRESS, "Starting turning left.");
	}
	walk_forward();
	_delay_ms(STEPPING_TIME);
	while(navigation_get_sensor(4) < (CORRIDOR_WIDTH - 20) ||  (navigation_get_sensor(3) > (CORRIDOR_WIDTH - 20) && navigation_get_sensor(4) > (CORRIDOR_WIDTH - 20) && navigation_get_sensor(5) > (CORRIDOR_WIDTH / 2)) || (navigation_get_sensor(3) > (CORRIDOR_WIDTH / 2) && navigation_get_sensor(5) > (CORRIDOR_WIDTH - 20)))
     33a:	84 e0       	ldi	r24, 0x04	; 4
     33c:	90 e0       	ldi	r25, 0x00	; 0
     33e:	98 d1       	rcall	.+816    	; 0x670 <navigation_get_sensor>
     340:	8c 33       	cpi	r24, 0x3C	; 60
     342:	68 f3       	brcs	.-38     	; 0x31e <turn_left+0x26>
     344:	83 e0       	ldi	r24, 0x03	; 3
     346:	90 e0       	ldi	r25, 0x00	; 0
     348:	93 d1       	rcall	.+806    	; 0x670 <navigation_get_sensor>
     34a:	8d 33       	cpi	r24, 0x3D	; 61
     34c:	50 f0       	brcs	.+20     	; 0x362 <turn_left+0x6a>
     34e:	84 e0       	ldi	r24, 0x04	; 4
     350:	90 e0       	ldi	r25, 0x00	; 0
     352:	8e d1       	rcall	.+796    	; 0x670 <navigation_get_sensor>
     354:	8d 33       	cpi	r24, 0x3D	; 61
     356:	28 f0       	brcs	.+10     	; 0x362 <turn_left+0x6a>
     358:	85 e0       	ldi	r24, 0x05	; 5
     35a:	90 e0       	ldi	r25, 0x00	; 0
     35c:	89 d1       	rcall	.+786    	; 0x670 <navigation_get_sensor>
     35e:	89 32       	cpi	r24, 0x29	; 41
     360:	f0 f6       	brcc	.-68     	; 0x31e <turn_left+0x26>
     362:	83 e0       	ldi	r24, 0x03	; 3
     364:	90 e0       	ldi	r25, 0x00	; 0
     366:	84 d1       	rcall	.+776    	; 0x670 <navigation_get_sensor>
     368:	89 32       	cpi	r24, 0x29	; 41
     36a:	50 f0       	brcs	.+20     	; 0x380 <turn_left+0x88>
     36c:	85 e0       	ldi	r24, 0x05	; 5
     36e:	90 e0       	ldi	r25, 0x00	; 0
     370:	7f d1       	rcall	.+766    	; 0x670 <navigation_get_sensor>
     372:	8d 33       	cpi	r24, 0x3D	; 61
     374:	a0 f6       	brcc	.-88     	; 0x31e <turn_left+0x26>
     376:	04 c0       	rjmp	.+8      	; 0x380 <turn_left+0x88>
	{
		walk_forward();
	}
	if(gStatus)
	{
		TWI_send_string(C_ADDRESS, "Done turning left.");
     378:	69 e9       	ldi	r22, 0x99	; 153
     37a:	71 e2       	ldi	r23, 0x21	; 33
     37c:	80 e8       	ldi	r24, 0x80	; 128
     37e:	97 c4       	rjmp	.+2350   	; 0xcae <TWI_send_string>
		USART_send_command_parameters(0, MAX_ROTATION_COUNTER_CLOCKWISE, 0);
		_delay_ms(STEPPING_TIME);
	}
	for(int i = 0; i < 8; ++i)
	{
		walk_forward();
     380:	ef de       	rcall	.-546    	; 0x160 <walk_forward>
     382:	ee de       	rcall	.-548    	; 0x160 <walk_forward>
     384:	ed de       	rcall	.-550    	; 0x160 <walk_forward>
     386:	ec de       	rcall	.-552    	; 0x160 <walk_forward>
     388:	eb de       	rcall	.-554    	; 0x160 <walk_forward>
     38a:	ea de       	rcall	.-556    	; 0x160 <walk_forward>
     38c:	e9 de       	rcall	.-558    	; 0x160 <walk_forward>
     38e:	e8 de       	rcall	.-560    	; 0x160 <walk_forward>
	}
	if(gStatus)
     390:	80 91 00 01 	lds	r24, 0x0100
     394:	81 11       	cpse	r24, r1
     396:	f0 cf       	rjmp	.-32     	; 0x378 <turn_left+0x80>
     398:	08 95       	ret

0000039a <autonomouswalk_walk>:
	_delay_ms(STEPPING_TIME / 2);
}

void autonomouswalk_walk()
{
	if(navigation_left_algorithm())
     39a:	c1 d0       	rcall	.+386    	; 0x51e <navigation_left_algorithm>
     39c:	88 23       	and	r24, r24
     39e:	79 f0       	breq	.+30     	; 0x3be <autonomouswalk_walk+0x24>
	{
		if(navigation_check_left_turn() == 2)
     3a0:	7e d1       	rcall	.+764    	; 0x69e <navigation_check_left_turn>
     3a2:	82 30       	cpi	r24, 0x02	; 2
     3a4:	09 f4       	brne	.+2      	; 0x3a8 <autonomouswalk_walk+0xe>
		{
			turn_left();
     3a6:	a8 cf       	rjmp	.-176    	; 0x2f8 <turn_left>
		}
		else if(navigation_get_sensor(4) > CORRIDOR_WIDTH / 2 - 10)
     3a8:	84 e0       	ldi	r24, 0x04	; 4
     3aa:	90 e0       	ldi	r25, 0x00	; 0
     3ac:	61 d1       	rcall	.+706    	; 0x670 <navigation_get_sensor>
     3ae:	8f 31       	cpi	r24, 0x1F	; 31
     3b0:	08 f0       	brcs	.+2      	; 0x3b4 <autonomouswalk_walk+0x1a>
		{
			walk_forward();
     3b2:	d6 ce       	rjmp	.-596    	; 0x160 <walk_forward>
		}
		else if(navigation_check_right_turn() == 2)
     3b4:	5f d1       	rcall	.+702    	; 0x674 <navigation_check_right_turn>
     3b6:	82 30       	cpi	r24, 0x02	; 2
     3b8:	09 f4       	brne	.+2      	; 0x3bc <autonomouswalk_walk+0x22>
		{
			turn_right();
     3ba:	4d cf       	rjmp	.-358    	; 0x256 <turn_right>
		}
		else
		{
			turn_around();
     3bc:	ac ce       	rjmp	.-680    	; 0x116 <turn_around>
		}
	}
	else
	{
		if(navigation_check_right_turn() == 2)
     3be:	5a d1       	rcall	.+692    	; 0x674 <navigation_check_right_turn>
     3c0:	82 30       	cpi	r24, 0x02	; 2
     3c2:	09 f4       	brne	.+2      	; 0x3c6 <autonomouswalk_walk+0x2c>
		{
			turn_right();
     3c4:	48 cf       	rjmp	.-368    	; 0x256 <turn_right>
		}
		else if(navigation_get_sensor(4) > CORRIDOR_WIDTH / 2 - 10)
     3c6:	84 e0       	ldi	r24, 0x04	; 4
     3c8:	90 e0       	ldi	r25, 0x00	; 0
     3ca:	52 d1       	rcall	.+676    	; 0x670 <navigation_get_sensor>
     3cc:	8f 31       	cpi	r24, 0x1F	; 31
     3ce:	08 f0       	brcs	.+2      	; 0x3d2 <autonomouswalk_walk+0x38>
		{
			walk_forward();
     3d0:	c7 ce       	rjmp	.-626    	; 0x160 <walk_forward>
		}
		else if(navigation_check_left_turn() == 2)
     3d2:	65 d1       	rcall	.+714    	; 0x69e <navigation_check_left_turn>
     3d4:	82 30       	cpi	r24, 0x02	; 2
     3d6:	09 f4       	brne	.+2      	; 0x3da <autonomouswalk_walk+0x40>
		{
			turn_left();
     3d8:	8f cf       	rjmp	.-226    	; 0x2f8 <turn_left>
		}
		else
		{
			turn_around();
     3da:	9d ce       	rjmp	.-710    	; 0x116 <turn_around>

000003dc <set_counter_1>:
	TCNT3 = 0;
}

void set_counter_1(uint16_t delay)
{
	delay = 15.625 * delay;
     3dc:	bc 01       	movw	r22, r24
     3de:	80 e0       	ldi	r24, 0x00	; 0
     3e0:	90 e0       	ldi	r25, 0x00	; 0
     3e2:	0e 94 3c 0d 	call	0x1a78	; 0x1a78 <__floatunsisf>
     3e6:	20 e0       	ldi	r18, 0x00	; 0
     3e8:	30 e0       	ldi	r19, 0x00	; 0
     3ea:	4a e7       	ldi	r20, 0x7A	; 122
     3ec:	51 e4       	ldi	r21, 0x41	; 65
     3ee:	0e 94 57 0e 	call	0x1cae	; 0x1cae <__mulsf3>
     3f2:	0e 94 10 0d 	call	0x1a20	; 0x1a20 <__fixunssfsi>
	OCR1A = delay;
     3f6:	70 93 89 00 	sts	0x0089, r23
     3fa:	60 93 88 00 	sts	0x0088, r22
     3fe:	08 95       	ret

00000400 <set_counter_2>:
}

void set_counter_2(uint16_t delay)
{
	delay = 15.625 * delay;
     400:	bc 01       	movw	r22, r24
     402:	80 e0       	ldi	r24, 0x00	; 0
     404:	90 e0       	ldi	r25, 0x00	; 0
     406:	0e 94 3c 0d 	call	0x1a78	; 0x1a78 <__floatunsisf>
     40a:	20 e0       	ldi	r18, 0x00	; 0
     40c:	30 e0       	ldi	r19, 0x00	; 0
     40e:	4a e7       	ldi	r20, 0x7A	; 122
     410:	51 e4       	ldi	r21, 0x41	; 65
     412:	0e 94 57 0e 	call	0x1cae	; 0x1cae <__mulsf3>
     416:	0e 94 10 0d 	call	0x1a20	; 0x1a20 <__fixunssfsi>
	OCR3A = delay;
     41a:	70 93 99 00 	sts	0x0099, r23
     41e:	60 93 98 00 	sts	0x0098, r22
     422:	08 95       	ret

00000424 <init_counters>:

//---------------------------------------COUNTERS/TIMERS-----------
void init_counters()
{
	// WGMn3:0 = 4 (OCRnA) or 12 (OCRn), where top value is read from.
	TCCR1B |= 0b00000101; // clock 1, prescaler 1024
     424:	e1 e8       	ldi	r30, 0x81	; 129
     426:	f0 e0       	ldi	r31, 0x00	; 0
     428:	80 81       	ld	r24, Z
     42a:	85 60       	ori	r24, 0x05	; 5
     42c:	80 83       	st	Z, r24
	TCCR3B |= 0b00000101; // clock 2, prescaler 1024
     42e:	e1 e9       	ldi	r30, 0x91	; 145
     430:	f0 e0       	ldi	r31, 0x00	; 0
     432:	80 81       	ld	r24, Z
     434:	85 60       	ori	r24, 0x05	; 5
     436:	80 83       	st	Z, r24
	
	// standardvalue for interrupt is 1000ms
	set_counter_1(1000);
     438:	88 ee       	ldi	r24, 0xE8	; 232
     43a:	93 e0       	ldi	r25, 0x03	; 3
     43c:	cf df       	rcall	.-98     	; 0x3dc <set_counter_1>
	set_counter_2(1000);
     43e:	88 ee       	ldi	r24, 0xE8	; 232
     440:	93 e0       	ldi	r25, 0x03	; 3
     442:	de df       	rcall	.-68     	; 0x400 <set_counter_2>
	
	TIMSK1 |= 0b00000010; // Enable interrupts when OCF1A, in TIFR1, is set.
     444:	ef e6       	ldi	r30, 0x6F	; 111
     446:	f0 e0       	ldi	r31, 0x00	; 0
     448:	80 81       	ld	r24, Z
     44a:	82 60       	ori	r24, 0x02	; 2
     44c:	80 83       	st	Z, r24
	TIMSK3 |= 0b00000010; // Enable interrupts when OCF2A, in TIFR2, is set.
     44e:	e1 e7       	ldi	r30, 0x71	; 113
     450:	f0 e0       	ldi	r31, 0x00	; 0
     452:	80 81       	ld	r24, Z
     454:	82 60       	ori	r24, 0x02	; 2
     456:	80 83       	st	Z, r24
	// OCF1A (or ICFn) Flag, in TIFR1, can be used to generate interrupts.
	TCNT1 = 0;
     458:	10 92 85 00 	sts	0x0085, r1
     45c:	10 92 84 00 	sts	0x0084, r1
	TCNT3 = 0;
     460:	10 92 95 00 	sts	0x0095, r1
     464:	10 92 94 00 	sts	0x0094, r1
     468:	08 95       	ret

0000046a <FifoDataLength>:
     46a:	fc 01       	movw	r30, r24
     46c:	90 81       	ld	r25, Z
     46e:	91 50       	subi	r25, 0x01	; 1
     470:	84 81       	ldd	r24, Z+4	; 0x04
     472:	22 81       	ldd	r18, Z+2	; 0x02
     474:	82 1b       	sub	r24, r18
     476:	89 23       	and	r24, r25
     478:	08 95       	ret

0000047a <FifoWrite>:
     47a:	1f 93       	push	r17
     47c:	cf 93       	push	r28
     47e:	df 93       	push	r29
     480:	ec 01       	movw	r28, r24
     482:	16 2f       	mov	r17, r22
     484:	f2 df       	rcall	.-28     	; 0x46a <FifoDataLength>
     486:	28 81       	ld	r18, Y
     488:	39 81       	ldd	r19, Y+1	; 0x01
     48a:	21 50       	subi	r18, 0x01	; 1
     48c:	31 09       	sbc	r19, r1
     48e:	90 e0       	ldi	r25, 0x00	; 0
     490:	82 17       	cp	r24, r18
     492:	93 07       	cpc	r25, r19
     494:	69 f0       	breq	.+26     	; 0x4b0 <FifoWrite+0x36>
     496:	8c 81       	ldd	r24, Y+4	; 0x04
     498:	9d 81       	ldd	r25, Y+5	; 0x05
     49a:	fe 01       	movw	r30, r28
     49c:	e8 0f       	add	r30, r24
     49e:	f9 1f       	adc	r31, r25
     4a0:	16 83       	std	Z+6, r17	; 0x06
     4a2:	01 96       	adiw	r24, 0x01	; 1
     4a4:	28 23       	and	r18, r24
     4a6:	39 23       	and	r19, r25
     4a8:	3d 83       	std	Y+5, r19	; 0x05
     4aa:	2c 83       	std	Y+4, r18	; 0x04
     4ac:	80 e0       	ldi	r24, 0x00	; 0
     4ae:	01 c0       	rjmp	.+2      	; 0x4b2 <FifoWrite+0x38>
     4b0:	81 e0       	ldi	r24, 0x01	; 1
     4b2:	df 91       	pop	r29
     4b4:	cf 91       	pop	r28
     4b6:	1f 91       	pop	r17
     4b8:	08 95       	ret

000004ba <FifoRead>:
     4ba:	0f 93       	push	r16
     4bc:	1f 93       	push	r17
     4be:	cf 93       	push	r28
     4c0:	df 93       	push	r29
     4c2:	ec 01       	movw	r28, r24
     4c4:	8b 01       	movw	r16, r22
     4c6:	d1 df       	rcall	.-94     	; 0x46a <FifoDataLength>
     4c8:	88 23       	and	r24, r24
     4ca:	a1 f0       	breq	.+40     	; 0x4f4 <FifoRead+0x3a>
     4cc:	ea 81       	ldd	r30, Y+2	; 0x02
     4ce:	fb 81       	ldd	r31, Y+3	; 0x03
     4d0:	ec 0f       	add	r30, r28
     4d2:	fd 1f       	adc	r31, r29
     4d4:	86 81       	ldd	r24, Z+6	; 0x06
     4d6:	f8 01       	movw	r30, r16
     4d8:	80 83       	st	Z, r24
     4da:	28 81       	ld	r18, Y
     4dc:	39 81       	ldd	r19, Y+1	; 0x01
     4de:	21 50       	subi	r18, 0x01	; 1
     4e0:	31 09       	sbc	r19, r1
     4e2:	8a 81       	ldd	r24, Y+2	; 0x02
     4e4:	9b 81       	ldd	r25, Y+3	; 0x03
     4e6:	01 96       	adiw	r24, 0x01	; 1
     4e8:	82 23       	and	r24, r18
     4ea:	93 23       	and	r25, r19
     4ec:	9b 83       	std	Y+3, r25	; 0x03
     4ee:	8a 83       	std	Y+2, r24	; 0x02
     4f0:	80 e0       	ldi	r24, 0x00	; 0
     4f2:	01 c0       	rjmp	.+2      	; 0x4f6 <FifoRead+0x3c>
     4f4:	81 e0       	ldi	r24, 0x01	; 1
     4f6:	df 91       	pop	r29
     4f8:	cf 91       	pop	r28
     4fa:	1f 91       	pop	r17
     4fc:	0f 91       	pop	r16
     4fe:	08 95       	ret

00000500 <navigation_set_Kp>:
	}
	else
	{
		return 0;
	}
}
     500:	68 2f       	mov	r22, r24
     502:	70 e0       	ldi	r23, 0x00	; 0
     504:	80 e0       	ldi	r24, 0x00	; 0
     506:	90 e0       	ldi	r25, 0x00	; 0
     508:	0e 94 3c 0d 	call	0x1a78	; 0x1a78 <__floatunsisf>
     50c:	60 93 03 01 	sts	0x0103, r22
     510:	70 93 04 01 	sts	0x0104, r23
     514:	80 93 05 01 	sts	0x0105, r24
     518:	90 93 06 01 	sts	0x0106, r25
     51c:	08 95       	ret

0000051e <navigation_left_algorithm>:
     51e:	80 91 07 01 	lds	r24, 0x0107
     522:	08 95       	ret

00000524 <navigation_set_algorithm>:
     524:	80 93 07 01 	sts	0x0107, r24
     528:	08 95       	ret

0000052a <navigation_autonomous_walk>:
     52a:	80 91 02 01 	lds	r24, 0x0102
     52e:	08 95       	ret

00000530 <navigation_set_autonomous_walk>:
     530:	80 93 02 01 	sts	0x0102, r24
     534:	08 95       	ret

00000536 <navigation_fill_buffer>:
     536:	6f 92       	push	r6
     538:	7f 92       	push	r7
     53a:	8f 92       	push	r8
     53c:	9f 92       	push	r9
     53e:	af 92       	push	r10
     540:	bf 92       	push	r11
     542:	cf 92       	push	r12
     544:	df 92       	push	r13
     546:	ef 92       	push	r14
     548:	ff 92       	push	r15
     54a:	0f 93       	push	r16
     54c:	1f 93       	push	r17
     54e:	cf 93       	push	r28
     550:	df 93       	push	r29
     552:	cd b7       	in	r28, 0x3d	; 61
     554:	de b7       	in	r29, 0x3e	; 62
     556:	27 97       	sbiw	r28, 0x07	; 7
     558:	0f b6       	in	r0, 0x3f	; 63
     55a:	f8 94       	cli
     55c:	de bf       	out	0x3e, r29	; 62
     55e:	0f be       	out	0x3f, r0	; 63
     560:	cd bf       	out	0x3d, r28	; 61
     562:	00 e0       	ldi	r16, 0x00	; 0
     564:	10 e0       	ldi	r17, 0x00	; 0
     566:	e0 90 ba 22 	lds	r14, 0x22BA
     56a:	f1 2c       	mov	r15, r1
     56c:	c8 01       	movw	r24, r16
     56e:	70 d4       	rcall	.+2272   	; 0xe50 <TWI_get_sensor>
     570:	f8 01       	movw	r30, r16
     572:	ee 0f       	add	r30, r30
     574:	ff 1f       	adc	r31, r31
     576:	ee 0f       	add	r30, r30
     578:	ff 1f       	adc	r31, r31
     57a:	ee 0f       	add	r30, r30
     57c:	ff 1f       	adc	r31, r31
     57e:	e0 1b       	sub	r30, r16
     580:	f1 0b       	sbc	r31, r17
     582:	ee 0d       	add	r30, r14
     584:	ff 1d       	adc	r31, r15
     586:	e3 53       	subi	r30, 0x33	; 51
     588:	fd 4d       	sbci	r31, 0xDD	; 221
     58a:	80 83       	st	Z, r24
     58c:	0f 5f       	subi	r16, 0xFF	; 255
     58e:	1f 4f       	sbci	r17, 0xFF	; 255
     590:	08 30       	cpi	r16, 0x08	; 8
     592:	11 05       	cpc	r17, r1
     594:	41 f7       	brne	.-48     	; 0x566 <navigation_fill_buffer+0x30>
     596:	80 91 ba 22 	lds	r24, 0x22BA
     59a:	86 30       	cpi	r24, 0x06	; 6
     59c:	19 f4       	brne	.+6      	; 0x5a4 <navigation_fill_buffer+0x6e>
     59e:	10 92 ba 22 	sts	0x22BA, r1
     5a2:	38 c0       	rjmp	.+112    	; 0x614 <navigation_fill_buffer+0xde>
     5a4:	8f 5f       	subi	r24, 0xFF	; 255
     5a6:	80 93 ba 22 	sts	0x22BA, r24
     5aa:	34 c0       	rjmp	.+104    	; 0x614 <navigation_fill_buffer+0xde>
     5ac:	8d 91       	ld	r24, X+
     5ae:	81 93       	st	Z+, r24
     5b0:	e4 17       	cp	r30, r20
     5b2:	f5 07       	cpc	r31, r21
     5b4:	d9 f7       	brne	.-10     	; 0x5ac <navigation_fill_buffer+0x76>
     5b6:	95 01       	movw	r18, r10
     5b8:	0e c0       	rjmp	.+28     	; 0x5d6 <navigation_fill_buffer+0xa0>
     5ba:	71 90       	ld	r7, Z+
     5bc:	60 80       	ld	r6, Z
     5be:	67 14       	cp	r6, r7
     5c0:	20 f4       	brcc	.+8      	; 0x5ca <navigation_fill_buffer+0x94>
     5c2:	df 01       	movw	r26, r30
     5c4:	11 97       	sbiw	r26, 0x01	; 1
     5c6:	6c 92       	st	X, r6
     5c8:	70 82       	st	Z, r7
     5ca:	e8 17       	cp	r30, r24
     5cc:	f9 07       	cpc	r31, r25
     5ce:	a9 f7       	brne	.-22     	; 0x5ba <navigation_fill_buffer+0x84>
     5d0:	21 50       	subi	r18, 0x01	; 1
     5d2:	31 09       	sbc	r19, r1
     5d4:	49 f0       	breq	.+18     	; 0x5e8 <navigation_fill_buffer+0xb2>
     5d6:	12 16       	cp	r1, r18
     5d8:	13 06       	cpc	r1, r19
     5da:	d4 f7       	brge	.-12     	; 0x5d0 <navigation_fill_buffer+0x9a>
     5dc:	cb 01       	movw	r24, r22
     5de:	82 0f       	add	r24, r18
     5e0:	93 1f       	adc	r25, r19
     5e2:	e8 2d       	mov	r30, r8
     5e4:	f9 2d       	mov	r31, r9
     5e6:	e9 cf       	rjmp	.-46     	; 0x5ba <navigation_fill_buffer+0x84>
     5e8:	8c 81       	ldd	r24, Y+4	; 0x04
     5ea:	f7 01       	movw	r30, r14
     5ec:	81 93       	st	Z+, r24
     5ee:	7f 01       	movw	r14, r30
     5f0:	0f 5f       	subi	r16, 0xFF	; 255
     5f2:	1f 4f       	sbci	r17, 0xFF	; 255
     5f4:	08 30       	cpi	r16, 0x08	; 8
     5f6:	11 05       	cpc	r17, r1
     5f8:	31 f1       	breq	.+76     	; 0x646 <navigation_fill_buffer+0x110>
     5fa:	d8 01       	movw	r26, r16
     5fc:	aa 0f       	add	r26, r26
     5fe:	bb 1f       	adc	r27, r27
     600:	aa 0f       	add	r26, r26
     602:	bb 1f       	adc	r27, r27
     604:	aa 0f       	add	r26, r26
     606:	bb 1f       	adc	r27, r27
     608:	a0 1b       	sub	r26, r16
     60a:	b1 0b       	sbc	r27, r17
     60c:	a3 53       	subi	r26, 0x33	; 51
     60e:	bd 4d       	sbci	r27, 0xDD	; 221
     610:	f6 01       	movw	r30, r12
     612:	cc cf       	rjmp	.-104    	; 0x5ac <navigation_fill_buffer+0x76>
     614:	0f 2e       	mov	r0, r31
     616:	f5 ec       	ldi	r31, 0xC5	; 197
     618:	ef 2e       	mov	r14, r31
     61a:	f2 e2       	ldi	r31, 0x22	; 34
     61c:	ff 2e       	mov	r15, r31
     61e:	f0 2d       	mov	r31, r0
     620:	00 e0       	ldi	r16, 0x00	; 0
     622:	10 e0       	ldi	r17, 0x00	; 0
     624:	cc 24       	eor	r12, r12
     626:	c3 94       	inc	r12
     628:	d1 2c       	mov	r13, r1
     62a:	cc 0e       	add	r12, r28
     62c:	dd 1e       	adc	r13, r29
     62e:	b6 01       	movw	r22, r12
     630:	ae 01       	movw	r20, r28
     632:	48 5f       	subi	r20, 0xF8	; 248
     634:	5f 4f       	sbci	r21, 0xFF	; 255
     636:	0f 2e       	mov	r0, r31
     638:	f6 e0       	ldi	r31, 0x06	; 6
     63a:	af 2e       	mov	r10, r31
     63c:	b1 2c       	mov	r11, r1
     63e:	f0 2d       	mov	r31, r0
     640:	8c 2c       	mov	r8, r12
     642:	97 2e       	mov	r9, r23
     644:	da cf       	rjmp	.-76     	; 0x5fa <navigation_fill_buffer+0xc4>
     646:	27 96       	adiw	r28, 0x07	; 7
     648:	0f b6       	in	r0, 0x3f	; 63
     64a:	f8 94       	cli
     64c:	de bf       	out	0x3e, r29	; 62
     64e:	0f be       	out	0x3f, r0	; 63
     650:	cd bf       	out	0x3d, r28	; 61
     652:	df 91       	pop	r29
     654:	cf 91       	pop	r28
     656:	1f 91       	pop	r17
     658:	0f 91       	pop	r16
     65a:	ff 90       	pop	r15
     65c:	ef 90       	pop	r14
     65e:	df 90       	pop	r13
     660:	cf 90       	pop	r12
     662:	bf 90       	pop	r11
     664:	af 90       	pop	r10
     666:	9f 90       	pop	r9
     668:	8f 90       	pop	r8
     66a:	7f 90       	pop	r7
     66c:	6f 90       	pop	r6
     66e:	08 95       	ret

00000670 <navigation_get_sensor>:
     670:	ef c3       	rjmp	.+2014   	; 0xe50 <TWI_get_sensor>
     672:	08 95       	ret

00000674 <navigation_check_right_turn>:
	}
}

uint8_t navigation_check_right_turn()
{
	if(navigation_get_sensor(1) >= (CORRIDOR_WIDTH / 2 + 10) && navigation_get_sensor(3) >= (CORRIDOR_WIDTH / 2 + 10))
     674:	81 e0       	ldi	r24, 0x01	; 1
     676:	90 e0       	ldi	r25, 0x00	; 0
     678:	fb df       	rcall	.-10     	; 0x670 <navigation_get_sensor>
     67a:	82 33       	cpi	r24, 0x32	; 50
     67c:	28 f0       	brcs	.+10     	; 0x688 <navigation_check_right_turn+0x14>
     67e:	83 e0       	ldi	r24, 0x03	; 3
     680:	90 e0       	ldi	r25, 0x00	; 0
     682:	f6 df       	rcall	.-20     	; 0x670 <navigation_get_sensor>
     684:	82 33       	cpi	r24, 0x32	; 50
     686:	40 f4       	brcc	.+16     	; 0x698 <navigation_check_right_turn+0x24>
	{
		return 2;
	}
	else if(navigation_get_sensor(1) >= (CORRIDOR_WIDTH - 10))
     688:	81 e0       	ldi	r24, 0x01	; 1
     68a:	90 e0       	ldi	r25, 0x00	; 0
     68c:	f1 df       	rcall	.-30     	; 0x670 <navigation_get_sensor>
     68e:	91 e0       	ldi	r25, 0x01	; 1
     690:	86 34       	cpi	r24, 0x46	; 70
     692:	18 f4       	brcc	.+6      	; 0x69a <navigation_check_right_turn+0x26>
     694:	90 e0       	ldi	r25, 0x00	; 0
     696:	01 c0       	rjmp	.+2      	; 0x69a <navigation_check_right_turn+0x26>

uint8_t navigation_check_right_turn()
{
	if(navigation_get_sensor(1) >= (CORRIDOR_WIDTH / 2 + 10) && navigation_get_sensor(3) >= (CORRIDOR_WIDTH / 2 + 10))
	{
		return 2;
     698:	92 e0       	ldi	r25, 0x02	; 2
	}
	else
	{
		return 0;
	}
}
     69a:	89 2f       	mov	r24, r25
     69c:	08 95       	ret

0000069e <navigation_check_left_turn>:
	}
}

uint8_t navigation_check_left_turn()
{
	if(navigation_get_sensor(0) >= (CORRIDOR_WIDTH / 2 + 10) && navigation_get_sensor(2) >= (CORRIDOR_WIDTH / 2 + 10))
     69e:	80 e0       	ldi	r24, 0x00	; 0
     6a0:	90 e0       	ldi	r25, 0x00	; 0
     6a2:	e6 df       	rcall	.-52     	; 0x670 <navigation_get_sensor>
     6a4:	82 33       	cpi	r24, 0x32	; 50
     6a6:	28 f0       	brcs	.+10     	; 0x6b2 <navigation_check_left_turn+0x14>
     6a8:	82 e0       	ldi	r24, 0x02	; 2
     6aa:	90 e0       	ldi	r25, 0x00	; 0
     6ac:	e1 df       	rcall	.-62     	; 0x670 <navigation_get_sensor>
     6ae:	82 33       	cpi	r24, 0x32	; 50
     6b0:	40 f4       	brcc	.+16     	; 0x6c2 <navigation_check_left_turn+0x24>
	{
		return 2;
	}
	else if(navigation_get_sensor(0) >= (CORRIDOR_WIDTH - 10))
     6b2:	80 e0       	ldi	r24, 0x00	; 0
     6b4:	90 e0       	ldi	r25, 0x00	; 0
     6b6:	dc df       	rcall	.-72     	; 0x670 <navigation_get_sensor>
     6b8:	91 e0       	ldi	r25, 0x01	; 1
     6ba:	86 34       	cpi	r24, 0x46	; 70
     6bc:	18 f4       	brcc	.+6      	; 0x6c4 <navigation_check_left_turn+0x26>
     6be:	90 e0       	ldi	r25, 0x00	; 0
     6c0:	01 c0       	rjmp	.+2      	; 0x6c4 <navigation_check_left_turn+0x26>

uint8_t navigation_check_left_turn()
{
	if(navigation_get_sensor(0) >= (CORRIDOR_WIDTH / 2 + 10) && navigation_get_sensor(2) >= (CORRIDOR_WIDTH / 2 + 10))
	{
		return 2;
     6c2:	92 e0       	ldi	r25, 0x02	; 2
	}
	else
	{
		return 0;
	}
}
     6c4:	89 2f       	mov	r24, r25
     6c6:	08 95       	ret

000006c8 <navigation_direction_regulation>:
		return 0;
	}
}

float navigation_direction_regulation(float angleOffset)
{
     6c8:	cf 92       	push	r12
     6ca:	df 92       	push	r13
     6cc:	ef 92       	push	r14
     6ce:	ff 92       	push	r15
     6d0:	cf 93       	push	r28
     6d2:	df 93       	push	r29
     6d4:	6b 01       	movw	r12, r22
     6d6:	7c 01       	movw	r14, r24
	int d = 0;
	if(gAlgorithm)
     6d8:	80 91 07 01 	lds	r24, 0x0107
     6dc:	88 23       	and	r24, r24
     6de:	b9 f1       	breq	.+110    	; 0x74e <navigation_direction_regulation+0x86>
	{
		if(navigation_get_sensor(0) < CORRIDOR_WIDTH / 2 + 10)
     6e0:	80 e0       	ldi	r24, 0x00	; 0
     6e2:	90 e0       	ldi	r25, 0x00	; 0
     6e4:	c5 df       	rcall	.-118    	; 0x670 <navigation_get_sensor>
     6e6:	82 33       	cpi	r24, 0x32	; 50
     6e8:	08 f0       	brcs	.+2      	; 0x6ec <navigation_direction_regulation+0x24>
     6ea:	b9 c0       	rjmp	.+370    	; 0x85e <navigation_direction_regulation+0x196>
		{
			d = ((navigation_get_sensor(2) + navigation_get_sensor(0)) / 2.0 + DISTANCE_MIDDLE_TO_SIDE) * cosf(angleOffset) - CORRIDOR_WIDTH / 2;
     6ec:	82 e0       	ldi	r24, 0x02	; 2
     6ee:	90 e0       	ldi	r25, 0x00	; 0
     6f0:	bf df       	rcall	.-130    	; 0x670 <navigation_get_sensor>
     6f2:	c8 2f       	mov	r28, r24
     6f4:	80 e0       	ldi	r24, 0x00	; 0
     6f6:	90 e0       	ldi	r25, 0x00	; 0
     6f8:	bb df       	rcall	.-138    	; 0x670 <navigation_get_sensor>
     6fa:	d8 2f       	mov	r29, r24
     6fc:	c7 01       	movw	r24, r14
     6fe:	b6 01       	movw	r22, r12
     700:	0e 94 a0 0c 	call	0x1940	; 0x1940 <cos>
     704:	6b 01       	movw	r12, r22
     706:	7c 01       	movw	r14, r24
     708:	6d 2f       	mov	r22, r29
     70a:	70 e0       	ldi	r23, 0x00	; 0
     70c:	6c 0f       	add	r22, r28
     70e:	71 1d       	adc	r23, r1
     710:	88 27       	eor	r24, r24
     712:	77 fd       	sbrc	r23, 7
     714:	80 95       	com	r24
     716:	98 2f       	mov	r25, r24
     718:	0e 94 3e 0d 	call	0x1a7c	; 0x1a7c <__floatsisf>
     71c:	20 e0       	ldi	r18, 0x00	; 0
     71e:	30 e0       	ldi	r19, 0x00	; 0
     720:	40 e0       	ldi	r20, 0x00	; 0
     722:	5f e3       	ldi	r21, 0x3F	; 63
     724:	0e 94 57 0e 	call	0x1cae	; 0x1cae <__mulsf3>
     728:	20 e0       	ldi	r18, 0x00	; 0
     72a:	30 e0       	ldi	r19, 0x00	; 0
     72c:	40 ef       	ldi	r20, 0xF0	; 240
     72e:	50 e4       	ldi	r21, 0x40	; 64
     730:	0e 94 10 0c 	call	0x1820	; 0x1820 <__addsf3>
     734:	a7 01       	movw	r20, r14
     736:	96 01       	movw	r18, r12
     738:	0e 94 57 0e 	call	0x1cae	; 0x1cae <__mulsf3>
     73c:	20 e0       	ldi	r18, 0x00	; 0
     73e:	30 e0       	ldi	r19, 0x00	; 0
     740:	40 e2       	ldi	r20, 0x20	; 32
     742:	52 e4       	ldi	r21, 0x42	; 66
     744:	0e 94 0f 0c 	call	0x181e	; 0x181e <__subsf3>
     748:	0e 94 0b 0d 	call	0x1a16	; 0x1a16 <__fixsfsi>
     74c:	38 c0       	rjmp	.+112    	; 0x7be <navigation_direction_regulation+0xf6>
		}
	}
	else 
	{
		if(navigation_get_sensor(1) < CORRIDOR_WIDTH / 2 + 10)
     74e:	81 e0       	ldi	r24, 0x01	; 1
     750:	90 e0       	ldi	r25, 0x00	; 0
     752:	8e df       	rcall	.-228    	; 0x670 <navigation_get_sensor>
     754:	82 33       	cpi	r24, 0x32	; 50
     756:	08 f0       	brcs	.+2      	; 0x75a <navigation_direction_regulation+0x92>
     758:	82 c0       	rjmp	.+260    	; 0x85e <navigation_direction_regulation+0x196>
		{
			d = CORRIDOR_WIDTH / 2 - ((navigation_get_sensor(1) + navigation_get_sensor(3)) / 2.0 + DISTANCE_MIDDLE_TO_SIDE) * cosf(angleOffset);
     75a:	81 e0       	ldi	r24, 0x01	; 1
     75c:	90 e0       	ldi	r25, 0x00	; 0
     75e:	88 df       	rcall	.-240    	; 0x670 <navigation_get_sensor>
     760:	c8 2f       	mov	r28, r24
     762:	83 e0       	ldi	r24, 0x03	; 3
     764:	90 e0       	ldi	r25, 0x00	; 0
     766:	84 df       	rcall	.-248    	; 0x670 <navigation_get_sensor>
     768:	d8 2f       	mov	r29, r24
     76a:	c7 01       	movw	r24, r14
     76c:	b6 01       	movw	r22, r12
     76e:	0e 94 a0 0c 	call	0x1940	; 0x1940 <cos>
     772:	6b 01       	movw	r12, r22
     774:	7c 01       	movw	r14, r24
     776:	6d 2f       	mov	r22, r29
     778:	70 e0       	ldi	r23, 0x00	; 0
     77a:	6c 0f       	add	r22, r28
     77c:	71 1d       	adc	r23, r1
     77e:	88 27       	eor	r24, r24
     780:	77 fd       	sbrc	r23, 7
     782:	80 95       	com	r24
     784:	98 2f       	mov	r25, r24
     786:	0e 94 3e 0d 	call	0x1a7c	; 0x1a7c <__floatsisf>
     78a:	20 e0       	ldi	r18, 0x00	; 0
     78c:	30 e0       	ldi	r19, 0x00	; 0
     78e:	40 e0       	ldi	r20, 0x00	; 0
     790:	5f e3       	ldi	r21, 0x3F	; 63
     792:	0e 94 57 0e 	call	0x1cae	; 0x1cae <__mulsf3>
     796:	20 e0       	ldi	r18, 0x00	; 0
     798:	30 e0       	ldi	r19, 0x00	; 0
     79a:	40 ef       	ldi	r20, 0xF0	; 240
     79c:	50 e4       	ldi	r21, 0x40	; 64
     79e:	0e 94 10 0c 	call	0x1820	; 0x1820 <__addsf3>
     7a2:	a7 01       	movw	r20, r14
     7a4:	96 01       	movw	r18, r12
     7a6:	0e 94 57 0e 	call	0x1cae	; 0x1cae <__mulsf3>
     7aa:	9b 01       	movw	r18, r22
     7ac:	ac 01       	movw	r20, r24
     7ae:	60 e0       	ldi	r22, 0x00	; 0
     7b0:	70 e0       	ldi	r23, 0x00	; 0
     7b2:	80 e2       	ldi	r24, 0x20	; 32
     7b4:	92 e4       	ldi	r25, 0x42	; 66
     7b6:	0e 94 0f 0c 	call	0x181e	; 0x181e <__subsf3>
     7ba:	0e 94 0b 0d 	call	0x1a16	; 0x1a16 <__fixsfsi>
		}
	}
	
	if(abs(d) < ACCEPTABLE_DISTANCE_OFFSET)
     7be:	cb 01       	movw	r24, r22
     7c0:	03 96       	adiw	r24, 0x03	; 3
     7c2:	07 97       	sbiw	r24, 0x07	; 7
     7c4:	08 f4       	brcc	.+2      	; 0x7c8 <navigation_direction_regulation+0x100>
     7c6:	46 c0       	rjmp	.+140    	; 0x854 <navigation_direction_regulation+0x18c>
	{
		return 0;
	}
	else
	{
		float dir = atanf(d * gKp);
     7c8:	88 27       	eor	r24, r24
     7ca:	77 fd       	sbrc	r23, 7
     7cc:	80 95       	com	r24
     7ce:	98 2f       	mov	r25, r24
     7d0:	0e 94 3e 0d 	call	0x1a7c	; 0x1a7c <__floatsisf>
     7d4:	20 91 03 01 	lds	r18, 0x0103
     7d8:	30 91 04 01 	lds	r19, 0x0104
     7dc:	40 91 05 01 	lds	r20, 0x0105
     7e0:	50 91 06 01 	lds	r21, 0x0106
     7e4:	0e 94 57 0e 	call	0x1cae	; 0x1cae <__mulsf3>
     7e8:	0e 94 74 0c 	call	0x18e8	; 0x18e8 <atan>
     7ec:	c6 2e       	mov	r12, r22
     7ee:	d7 2e       	mov	r13, r23
     7f0:	e8 2e       	mov	r14, r24
     7f2:	f9 2e       	mov	r15, r25
		if(dir < 0)
     7f4:	20 e0       	ldi	r18, 0x00	; 0
     7f6:	30 e0       	ldi	r19, 0x00	; 0
     7f8:	a9 01       	movw	r20, r18
     7fa:	0e 94 9c 0c 	call	0x1938	; 0x1938 <__cmpsf2>
     7fe:	88 23       	and	r24, r24
     800:	7c f4       	brge	.+30     	; 0x820 <navigation_direction_regulation+0x158>
		{
			dir += 2*PI;
     802:	2b ed       	ldi	r18, 0xDB	; 219
     804:	3f e0       	ldi	r19, 0x0F	; 15
     806:	49 ec       	ldi	r20, 0xC9	; 201
     808:	50 e4       	ldi	r21, 0x40	; 64
     80a:	6c 2d       	mov	r22, r12
     80c:	7d 2d       	mov	r23, r13
     80e:	8e 2d       	mov	r24, r14
     810:	9f 2d       	mov	r25, r15
     812:	0e 94 10 0c 	call	0x1820	; 0x1820 <__addsf3>
     816:	c6 2e       	mov	r12, r22
     818:	d7 2e       	mov	r13, r23
     81a:	e8 2e       	mov	r14, r24
     81c:	f9 2e       	mov	r15, r25
     81e:	23 c0       	rjmp	.+70     	; 0x866 <navigation_direction_regulation+0x19e>
		} else if(dir >= 2*PI)
     820:	2b ed       	ldi	r18, 0xDB	; 219
     822:	3f e0       	ldi	r19, 0x0F	; 15
     824:	49 ec       	ldi	r20, 0xC9	; 201
     826:	50 e4       	ldi	r21, 0x40	; 64
     828:	6c 2d       	mov	r22, r12
     82a:	7d 2d       	mov	r23, r13
     82c:	8e 2d       	mov	r24, r14
     82e:	9f 2d       	mov	r25, r15
     830:	0e 94 4c 0e 	call	0x1c98	; 0x1c98 <__gesf2>
     834:	88 23       	and	r24, r24
     836:	bc f0       	brlt	.+46     	; 0x866 <navigation_direction_regulation+0x19e>
		{
			dir -= 2*PI;
     838:	2b ed       	ldi	r18, 0xDB	; 219
     83a:	3f e0       	ldi	r19, 0x0F	; 15
     83c:	49 ec       	ldi	r20, 0xC9	; 201
     83e:	50 e4       	ldi	r21, 0x40	; 64
     840:	6c 2d       	mov	r22, r12
     842:	7d 2d       	mov	r23, r13
     844:	8e 2d       	mov	r24, r14
     846:	9f 2d       	mov	r25, r15
     848:	ea d7       	rcall	.+4052   	; 0x181e <__subsf3>
     84a:	c6 2e       	mov	r12, r22
     84c:	d7 2e       	mov	r13, r23
     84e:	e8 2e       	mov	r14, r24
     850:	f9 2e       	mov	r15, r25
     852:	09 c0       	rjmp	.+18     	; 0x866 <navigation_direction_regulation+0x19e>
		}
	}
	
	if(abs(d) < ACCEPTABLE_DISTANCE_OFFSET)
	{
		return 0;
     854:	c1 2c       	mov	r12, r1
     856:	d1 2c       	mov	r13, r1
     858:	e1 2c       	mov	r14, r1
     85a:	f1 2c       	mov	r15, r1
     85c:	04 c0       	rjmp	.+8      	; 0x866 <navigation_direction_regulation+0x19e>
     85e:	c1 2c       	mov	r12, r1
     860:	d1 2c       	mov	r13, r1
     862:	e1 2c       	mov	r14, r1
     864:	f1 2c       	mov	r15, r1
			dir -= 2*PI;
		}
		// Dir is between 0 and 2*PI radians
		return dir;
	}
}
     866:	6c 2d       	mov	r22, r12
     868:	7d 2d       	mov	r23, r13
     86a:	8e 2d       	mov	r24, r14
     86c:	9f 2d       	mov	r25, r15
     86e:	df 91       	pop	r29
     870:	cf 91       	pop	r28
     872:	ff 90       	pop	r15
     874:	ef 90       	pop	r14
     876:	df 90       	pop	r13
     878:	cf 90       	pop	r12
     87a:	08 95       	ret

0000087c <navigation_angle_offset>:
{
	gAutonomousWalk = walk;
}

float navigation_angle_offset()
{
     87c:	cf 92       	push	r12
     87e:	df 92       	push	r13
     880:	ef 92       	push	r14
     882:	ff 92       	push	r15
	float angle = 0;
	if (gAlgorithm)
     884:	80 91 07 01 	lds	r24, 0x0107
     888:	88 23       	and	r24, r24
     88a:	11 f1       	breq	.+68     	; 0x8d0 <navigation_angle_offset+0x54>
	{
		if(navigation_get_sensor(0) < CORRIDOR_WIDTH / 2 + 10)
     88c:	80 e0       	ldi	r24, 0x00	; 0
     88e:	90 e0       	ldi	r25, 0x00	; 0
     890:	ef de       	rcall	.-546    	; 0x670 <navigation_get_sensor>
     892:	82 33       	cpi	r24, 0x32	; 50
     894:	08 f0       	brcs	.+2      	; 0x898 <navigation_angle_offset+0x1c>
     896:	4a c0       	rjmp	.+148    	; 0x92c <navigation_angle_offset+0xb0>
		{
			// Use wall to the left
			angle = atanf((navigation_get_sensor(2) - navigation_get_sensor(0))/DISTANCE_FRONT_TO_BACK);
     898:	82 e0       	ldi	r24, 0x02	; 2
     89a:	90 e0       	ldi	r25, 0x00	; 0
     89c:	e9 de       	rcall	.-558    	; 0x670 <navigation_get_sensor>
     89e:	f8 2e       	mov	r15, r24
     8a0:	80 e0       	ldi	r24, 0x00	; 0
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	e5 de       	rcall	.-566    	; 0x670 <navigation_get_sensor>
     8a6:	6f 2d       	mov	r22, r15
     8a8:	70 e0       	ldi	r23, 0x00	; 0
     8aa:	68 1b       	sub	r22, r24
     8ac:	71 09       	sbc	r23, r1
     8ae:	88 27       	eor	r24, r24
     8b0:	77 fd       	sbrc	r23, 7
     8b2:	80 95       	com	r24
     8b4:	98 2f       	mov	r25, r24
     8b6:	0e 94 3e 0d 	call	0x1a7c	; 0x1a7c <__floatsisf>
     8ba:	20 e0       	ldi	r18, 0x00	; 0
     8bc:	30 e0       	ldi	r19, 0x00	; 0
     8be:	48 e6       	ldi	r20, 0x68	; 104
     8c0:	51 e4       	ldi	r21, 0x41	; 65
     8c2:	0e 94 a3 0c 	call	0x1946	; 0x1946 <__divsf3>
     8c6:	0e 94 74 0c 	call	0x18e8	; 0x18e8 <atan>
     8ca:	6b 01       	movw	r12, r22
     8cc:	7c 01       	movw	r14, r24
     8ce:	1f c0       	rjmp	.+62     	; 0x90e <navigation_angle_offset+0x92>
		}
	}
	else 
	{
		if(navigation_get_sensor(1) < CORRIDOR_WIDTH / 2 + 10)
     8d0:	81 e0       	ldi	r24, 0x01	; 1
     8d2:	90 e0       	ldi	r25, 0x00	; 0
     8d4:	cd de       	rcall	.-614    	; 0x670 <navigation_get_sensor>
     8d6:	82 33       	cpi	r24, 0x32	; 50
     8d8:	48 f5       	brcc	.+82     	; 0x92c <navigation_angle_offset+0xb0>
		{
			// Use wall to the right
			angle = atanf((navigation_get_sensor(1) - navigation_get_sensor(3))/DISTANCE_FRONT_TO_BACK);
     8da:	81 e0       	ldi	r24, 0x01	; 1
     8dc:	90 e0       	ldi	r25, 0x00	; 0
     8de:	c8 de       	rcall	.-624    	; 0x670 <navigation_get_sensor>
     8e0:	f8 2e       	mov	r15, r24
     8e2:	83 e0       	ldi	r24, 0x03	; 3
     8e4:	90 e0       	ldi	r25, 0x00	; 0
     8e6:	c4 de       	rcall	.-632    	; 0x670 <navigation_get_sensor>
     8e8:	6f 2d       	mov	r22, r15
     8ea:	70 e0       	ldi	r23, 0x00	; 0
     8ec:	68 1b       	sub	r22, r24
     8ee:	71 09       	sbc	r23, r1
     8f0:	88 27       	eor	r24, r24
     8f2:	77 fd       	sbrc	r23, 7
     8f4:	80 95       	com	r24
     8f6:	98 2f       	mov	r25, r24
     8f8:	0e 94 3e 0d 	call	0x1a7c	; 0x1a7c <__floatsisf>
     8fc:	20 e0       	ldi	r18, 0x00	; 0
     8fe:	30 e0       	ldi	r19, 0x00	; 0
     900:	48 e6       	ldi	r20, 0x68	; 104
     902:	51 e4       	ldi	r21, 0x41	; 65
     904:	0e 94 a3 0c 	call	0x1946	; 0x1946 <__divsf3>
     908:	ef d7       	rcall	.+4062   	; 0x18e8 <atan>
     90a:	6b 01       	movw	r12, r22
     90c:	7c 01       	movw	r14, r24
		}
	}
	
	if(fabs(angle) > ACCEPTABLE_OFFSET_ANGLE)
     90e:	c7 01       	movw	r24, r14
     910:	b6 01       	movw	r22, r12
     912:	9f 77       	andi	r25, 0x7F	; 127
     914:	29 e2       	ldi	r18, 0x29	; 41
     916:	3c e5       	ldi	r19, 0x5C	; 92
     918:	4f e8       	ldi	r20, 0x8F	; 143
     91a:	5d e3       	ldi	r21, 0x3D	; 61
     91c:	0e 94 4c 0e 	call	0x1c98	; 0x1c98 <__gesf2>
     920:	18 16       	cp	r1, r24
     922:	3c f0       	brlt	.+14     	; 0x932 <navigation_angle_offset+0xb6>
	{
		return angle;
	}
	else
	{
		return 0;
     924:	c1 2c       	mov	r12, r1
     926:	d1 2c       	mov	r13, r1
     928:	76 01       	movw	r14, r12
     92a:	03 c0       	rjmp	.+6      	; 0x932 <navigation_angle_offset+0xb6>
     92c:	c1 2c       	mov	r12, r1
     92e:	d1 2c       	mov	r13, r1
     930:	76 01       	movw	r14, r12
     932:	7c 2d       	mov	r23, r12
	}
}
     934:	67 2f       	mov	r22, r23
     936:	7d 2d       	mov	r23, r13
     938:	8e 2d       	mov	r24, r14
     93a:	9f 2d       	mov	r25, r15
     93c:	ff 90       	pop	r15
     93e:	ef 90       	pop	r14
     940:	df 90       	pop	r13
     942:	cf 90       	pop	r12
     944:	08 95       	ret

00000946 <__vector_1>:

//-------------------------------Interrupts--------------------------------

//External interrupt INT0, to activate autonomous walk and set left hand navigation
ISR(INT0_vect)
{
     946:	1f 92       	push	r1
     948:	0f 92       	push	r0
     94a:	0f b6       	in	r0, 0x3f	; 63
     94c:	0f 92       	push	r0
     94e:	11 24       	eor	r1, r1
     950:	0b b6       	in	r0, 0x3b	; 59
     952:	0f 92       	push	r0
     954:	2f 93       	push	r18
     956:	3f 93       	push	r19
     958:	4f 93       	push	r20
     95a:	5f 93       	push	r21
     95c:	6f 93       	push	r22
     95e:	7f 93       	push	r23
     960:	8f 93       	push	r24
     962:	9f 93       	push	r25
     964:	af 93       	push	r26
     966:	bf 93       	push	r27
     968:	ef 93       	push	r30
     96a:	ff 93       	push	r31
	navigation_set_algorithm(1); //Left hand
     96c:	81 e0       	ldi	r24, 0x01	; 1
     96e:	da dd       	rcall	.-1100   	; 0x524 <navigation_set_algorithm>
	navigation_set_autonomous_walk(1);
     970:	81 e0       	ldi	r24, 0x01	; 1
     972:	de dd       	rcall	.-1092   	; 0x530 <navigation_set_autonomous_walk>
}
     974:	ff 91       	pop	r31
     976:	ef 91       	pop	r30
     978:	bf 91       	pop	r27
     97a:	af 91       	pop	r26
     97c:	9f 91       	pop	r25
     97e:	8f 91       	pop	r24
     980:	7f 91       	pop	r23
     982:	6f 91       	pop	r22
     984:	5f 91       	pop	r21
     986:	4f 91       	pop	r20
     988:	3f 91       	pop	r19
     98a:	2f 91       	pop	r18
     98c:	0f 90       	pop	r0
     98e:	0b be       	out	0x3b, r0	; 59
     990:	0f 90       	pop	r0
     992:	0f be       	out	0x3f, r0	; 63
     994:	0f 90       	pop	r0
     996:	1f 90       	pop	r1
     998:	18 95       	reti

0000099a <__vector_2>:

//External interrupt INT1, to activate autonomous walk and set right hand navigation
ISR(INT1_vect)
{
     99a:	1f 92       	push	r1
     99c:	0f 92       	push	r0
     99e:	0f b6       	in	r0, 0x3f	; 63
     9a0:	0f 92       	push	r0
     9a2:	11 24       	eor	r1, r1
     9a4:	0b b6       	in	r0, 0x3b	; 59
     9a6:	0f 92       	push	r0
     9a8:	2f 93       	push	r18
     9aa:	3f 93       	push	r19
     9ac:	4f 93       	push	r20
     9ae:	5f 93       	push	r21
     9b0:	6f 93       	push	r22
     9b2:	7f 93       	push	r23
     9b4:	8f 93       	push	r24
     9b6:	9f 93       	push	r25
     9b8:	af 93       	push	r26
     9ba:	bf 93       	push	r27
     9bc:	ef 93       	push	r30
     9be:	ff 93       	push	r31
	navigation_set_algorithm(0); //Right hand
     9c0:	80 e0       	ldi	r24, 0x00	; 0
     9c2:	b0 dd       	rcall	.-1184   	; 0x524 <navigation_set_algorithm>
	navigation_set_autonomous_walk(1);
     9c4:	81 e0       	ldi	r24, 0x01	; 1
     9c6:	b4 dd       	rcall	.-1176   	; 0x530 <navigation_set_autonomous_walk>
     9c8:	ff 91       	pop	r31
     9ca:	ef 91       	pop	r30
     9cc:	bf 91       	pop	r27
     9ce:	af 91       	pop	r26
     9d0:	9f 91       	pop	r25
     9d2:	8f 91       	pop	r24
     9d4:	7f 91       	pop	r23
     9d6:	6f 91       	pop	r22
     9d8:	5f 91       	pop	r21
     9da:	4f 91       	pop	r20
     9dc:	3f 91       	pop	r19
     9de:	2f 91       	pop	r18
     9e0:	0f 90       	pop	r0
     9e2:	0b be       	out	0x3b, r0	; 59
     9e4:	0f 90       	pop	r0
     9e6:	0f be       	out	0x3f, r0	; 63
     9e8:	0f 90       	pop	r0
     9ea:	1f 90       	pop	r1
     9ec:	18 95       	reti

000009ee <main>:
#include "Navigation.h"
#include "autonomouswalk.h"

int main(void)
{
	USART_init();
     9ee:	59 d4       	rcall	.+2226   	; 0x12a2 <USART_init>
	sei();
     9f0:	78 94       	sei
	TWI_init(ST_ADDRESS);
     9f2:	80 e2       	ldi	r24, 0x20	; 32
     9f4:	f1 d0       	rcall	.+482    	; 0xbd8 <TWI_init>
	init_counters();
     9f6:	16 dd       	rcall	.-1492   	; 0x424 <init_counters>
	DDRA |= (1<<PORTA0 | 1<<PORTA1);
     9f8:	81 b1       	in	r24, 0x01	; 1
     9fa:	83 60       	ori	r24, 0x03	; 3
     9fc:	81 b9       	out	0x01, r24	; 1
     9fe:	2f ef       	ldi	r18, 0xFF	; 255
     a00:	83 e2       	ldi	r24, 0x23	; 35
     a02:	94 ef       	ldi	r25, 0xF4	; 244
     a04:	21 50       	subi	r18, 0x01	; 1
     a06:	80 40       	sbci	r24, 0x00	; 0
     a08:	90 40       	sbci	r25, 0x00	; 0
     a0a:	e1 f7       	brne	.-8      	; 0xa04 <main+0x16>
     a0c:	00 c0       	rjmp	.+0      	; 0xa0e <main+0x20>
     a0e:	00 00       	nop
	
	_delay_ms(5000);
	navigation_set_autonomous_walk(1);
     a10:	81 e0       	ldi	r24, 0x01	; 1
     a12:	8e dd       	rcall	.-1252   	; 0x530 <navigation_set_autonomous_walk>
		}
		else
		{
			if(TWI_command_flag())
			{
				PORTA ^= (1<<PORTA1);
     a14:	c2 e0       	ldi	r28, 0x02	; 2
	
	_delay_ms(5000);
	navigation_set_autonomous_walk(1);
    while(1)
    {
		if(TWI_sensor_flag())
     a16:	29 d2       	rcall	.+1106   	; 0xe6a <TWI_sensor_flag>
     a18:	81 11       	cpse	r24, r1
		{
			
			navigation_fill_buffer();
     a1a:	8d dd       	rcall	.-1254   	; 0x536 <navigation_fill_buffer>
		}
		if(TWI_autonom_settings_flag())
     a1c:	44 d2       	rcall	.+1160   	; 0xea6 <TWI_autonom_settings_flag>
     a1e:	88 23       	and	r24, r24
     a20:	79 f0       	breq	.+30     	; 0xa40 <main+0x52>
		{
			uint8_t sett = TWI_get_autonom_settings();
     a22:	20 d2       	rcall	.+1088   	; 0xe64 <TWI_get_autonom_settings>
			if(sett == 0)
     a24:	81 11       	cpse	r24, r1
     a26:	02 c0       	rjmp	.+4      	; 0xa2c <main+0x3e>
			{
				navigation_set_autonomous_walk(0);
     a28:	83 dd       	rcall	.-1274   	; 0x530 <navigation_set_autonomous_walk>
     a2a:	0a c0       	rjmp	.+20     	; 0xa40 <main+0x52>
			}
			else if(sett == 1)
     a2c:	81 30       	cpi	r24, 0x01	; 1
     a2e:	21 f4       	brne	.+8      	; 0xa38 <main+0x4a>
			{
				navigation_set_autonomous_walk(1);
     a30:	7f dd       	rcall	.-1282   	; 0x530 <navigation_set_autonomous_walk>
				navigation_set_algorithm(1);
     a32:	81 e0       	ldi	r24, 0x01	; 1
     a34:	77 dd       	rcall	.-1298   	; 0x524 <navigation_set_algorithm>
     a36:	04 c0       	rjmp	.+8      	; 0xa40 <main+0x52>
			}
			else //sett == 2
			{
				navigation_set_autonomous_walk(1);
     a38:	81 e0       	ldi	r24, 0x01	; 1
     a3a:	7a dd       	rcall	.-1292   	; 0x530 <navigation_set_autonomous_walk>
				navigation_set_algorithm(0);
     a3c:	80 e0       	ldi	r24, 0x00	; 0
     a3e:	72 dd       	rcall	.-1308   	; 0x524 <navigation_set_algorithm>
			}
		}
		
		if(navigation_autonomous_walk() == 1)
     a40:	74 dd       	rcall	.-1304   	; 0x52a <navigation_autonomous_walk>
     a42:	81 30       	cpi	r24, 0x01	; 1
     a44:	49 f4       	brne	.+18     	; 0xa58 <main+0x6a>
		{
			if(TWI_control_settings_flag())
     a46:	25 d2       	rcall	.+1098   	; 0xe92 <TWI_control_settings_flag>
     a48:	88 23       	and	r24, r24
     a4a:	21 f0       	breq	.+8      	; 0xa54 <main+0x66>
			{
				navigation_set_Kp(TWI_get_control_setting(0));
     a4c:	80 e0       	ldi	r24, 0x00	; 0
     a4e:	90 e0       	ldi	r25, 0x00	; 0
     a50:	04 d2       	rcall	.+1032   	; 0xe5a <TWI_get_control_setting>
     a52:	56 dd       	rcall	.-1364   	; 0x500 <navigation_set_Kp>
			}
			autonomouswalk_walk();
     a54:	a2 dc       	rcall	.-1724   	; 0x39a <autonomouswalk_walk>
     a56:	07 c0       	rjmp	.+14     	; 0xa66 <main+0x78>
		}
		else
		{
			if(TWI_command_flag())
     a58:	12 d2       	rcall	.+1060   	; 0xe7e <TWI_command_flag>
     a5a:	88 23       	and	r24, r24
     a5c:	21 f0       	breq	.+8      	; 0xa66 <main+0x78>
			{
				PORTA ^= (1<<PORTA1);
     a5e:	82 b1       	in	r24, 0x02	; 2
     a60:	8c 27       	eor	r24, r28
     a62:	82 b9       	out	0x02, r24	; 2
				USART_SendCommand();
     a64:	f0 d4       	rcall	.+2528   	; 0x1446 <USART_SendCommand>
		_delay_ms(200);
		TWI_send_float(C_ADDRESS, 1023);
		
		_delay_ms(1000);
		*/
		USART_DecodeRxFIFO();
     a66:	27 d6       	rcall	.+3150   	; 0x16b6 <USART_DecodeRxFIFO>
    }
     a68:	d6 cf       	rjmp	.-84     	; 0xa16 <main+0x28>

00000a6a <__vector_13>:
}

//---------------------------------------COUNTERS/TIMERS interrupt vectors-----------

ISR(TIMER1_COMPA_vect)
{
     a6a:	1f 92       	push	r1
     a6c:	0f 92       	push	r0
     a6e:	0f b6       	in	r0, 0x3f	; 63
     a70:	0f 92       	push	r0
     a72:	11 24       	eor	r1, r1
	TCNT1 = 0;
     a74:	10 92 85 00 	sts	0x0085, r1
     a78:	10 92 84 00 	sts	0x0084, r1
	
	/*if(USART_ready())
	{
		PORTA ^= (1<<PORTA0);
	}*/
}
     a7c:	0f 90       	pop	r0
     a7e:	0f be       	out	0x3f, r0	; 63
     a80:	0f 90       	pop	r0
     a82:	1f 90       	pop	r1
     a84:	18 95       	reti

00000a86 <__vector_32>:

ISR(TIMER3_COMPA_vect)
{
     a86:	1f 92       	push	r1
     a88:	0f 92       	push	r0
     a8a:	0f b6       	in	r0, 0x3f	; 63
     a8c:	0f 92       	push	r0
     a8e:	11 24       	eor	r1, r1
	TCNT3 = 0;
     a90:	10 92 95 00 	sts	0x0095, r1
     a94:	10 92 94 00 	sts	0x0094, r1
     a98:	0f 90       	pop	r0
     a9a:	0f be       	out	0x3f, r0	; 63
     a9c:	0f 90       	pop	r0
     a9e:	1f 90       	pop	r1
     aa0:	18 95       	reti

00000aa2 <set_twi_reciever_enable>:
     aa2:	85 e4       	ldi	r24, 0x45	; 69
     aa4:	80 93 bc 00 	sts	0x00BC, r24
     aa8:	08 95       	ret

00000aaa <clear_int>:
     aaa:	81 ec       	ldi	r24, 0xC1	; 193
     aac:	80 93 bc 00 	sts	0x00BC, r24
     ab0:	08 95       	ret

00000ab2 <start_bus>:
     ab2:	84 ea       	ldi	r24, 0xA4	; 164
     ab4:	80 93 bc 00 	sts	0x00BC, r24
     ab8:	08 95       	ret

00000aba <stop_bus>:
     aba:	85 ed       	ldi	r24, 0xD5	; 213
     abc:	80 93 bc 00 	sts	0x00BC, r24
     ac0:	08 95       	ret

00000ac2 <Error>:
     ac2:	80 91 b9 00 	lds	r24, 0x00B9
     ac6:	88 7f       	andi	r24, 0xF8	; 248
     ac8:	88 33       	cpi	r24, 0x38	; 56
     aca:	09 f0       	breq	.+2      	; 0xace <Error+0xc>
     acc:	f6 cf       	rjmp	.-20     	; 0xaba <stop_bus>
     ace:	ed cf       	rjmp	.-38     	; 0xaaa <clear_int>

00000ad0 <get_data>:
     ad0:	80 91 bb 00 	lds	r24, 0x00BB
     ad4:	08 95       	ret

00000ad6 <wait_for_bus>:
     ad6:	ec eb       	ldi	r30, 0xBC	; 188
     ad8:	f0 e0       	ldi	r31, 0x00	; 0
     ada:	80 81       	ld	r24, Z
     adc:	88 23       	and	r24, r24
     ade:	ec f7       	brge	.-6      	; 0xada <wait_for_bus+0x4>
     ae0:	08 95       	ret

00000ae2 <send_data_and_wait>:
     ae2:	80 93 bb 00 	sts	0x00BB, r24
     ae6:	84 e8       	ldi	r24, 0x84	; 132
     ae8:	80 93 bc 00 	sts	0x00BC, r24
     aec:	f4 cf       	rjmp	.-24     	; 0xad6 <wait_for_bus>

00000aee <stop_twi>:
     aee:	10 92 18 24 	sts	0x2418, r1
     af2:	10 92 17 24 	sts	0x2417, r1
     af6:	10 92 22 24 	sts	0x2422, r1
     afa:	10 92 21 24 	sts	0x2421, r1
     afe:	10 92 0d 24 	sts	0x240D, r1
     b02:	10 92 0c 24 	sts	0x240C, r1
     b06:	10 92 12 24 	sts	0x2412, r1
     b0a:	10 92 11 24 	sts	0x2411, r1
     b0e:	10 92 15 24 	sts	0x2415, r1
     b12:	10 92 14 24 	sts	0x2414, r1
     b16:	08 95       	ret

00000b18 <reset_TWI>:
     b18:	ec eb       	ldi	r30, 0xBC	; 188
     b1a:	f0 e0       	ldi	r31, 0x00	; 0
     b1c:	80 81       	ld	r24, Z
     b1e:	80 6c       	ori	r24, 0xC0	; 192
     b20:	80 83       	st	Z, r24
     b22:	08 95       	ret

00000b24 <get_sensor_from_bus>:
     b24:	cf 93       	push	r28
     b26:	df 93       	push	r29
     b28:	c0 91 21 24 	lds	r28, 0x2421
     b2c:	d0 91 22 24 	lds	r29, 0x2422
     b30:	c8 30       	cpi	r28, 0x08	; 8
     b32:	d1 05       	cpc	r29, r1
     b34:	91 f4       	brne	.+36     	; 0xb5a <get_sensor_from_bus+0x36>
     b36:	ed ec       	ldi	r30, 0xCD	; 205
     b38:	f2 e2       	ldi	r31, 0x22	; 34
     b3a:	a3 e2       	ldi	r26, 0x23	; 35
     b3c:	b4 e2       	ldi	r27, 0x24	; 36
     b3e:	85 ed       	ldi	r24, 0xD5	; 213
     b40:	92 e2       	ldi	r25, 0x22	; 34
     b42:	21 91       	ld	r18, Z+
     b44:	2d 93       	st	X+, r18
     b46:	e8 17       	cp	r30, r24
     b48:	f9 07       	cpc	r31, r25
     b4a:	d9 f7       	brne	.-10     	; 0xb42 <get_sensor_from_bus+0x1e>
     b4c:	c1 df       	rcall	.-126    	; 0xad0 <get_data>
     b4e:	80 93 1b 24 	sts	0x241B, r24
     b52:	81 e0       	ldi	r24, 0x01	; 1
     b54:	80 93 c0 22 	sts	0x22C0, r24
     b58:	0d c0       	rjmp	.+26     	; 0xb74 <get_sensor_from_bus+0x50>
     b5a:	ba df       	rcall	.-140    	; 0xad0 <get_data>
     b5c:	c3 53       	subi	r28, 0x33	; 51
     b5e:	dd 4d       	sbci	r29, 0xDD	; 221
     b60:	88 83       	st	Y, r24
     b62:	80 91 21 24 	lds	r24, 0x2421
     b66:	90 91 22 24 	lds	r25, 0x2422
     b6a:	01 96       	adiw	r24, 0x01	; 1
     b6c:	90 93 22 24 	sts	0x2422, r25
     b70:	80 93 21 24 	sts	0x2421, r24
     b74:	df 91       	pop	r29
     b76:	cf 91       	pop	r28
     b78:	08 95       	ret

00000b7a <get_control_settings_from_bus>:
     b7a:	cf 93       	push	r28
     b7c:	df 93       	push	r29
     b7e:	c0 91 11 24 	lds	r28, 0x2411
     b82:	d0 91 12 24 	lds	r29, 0x2412
     b86:	a4 df       	rcall	.-184    	; 0xad0 <get_data>
     b88:	c2 5f       	subi	r28, 0xF2	; 242
     b8a:	db 4d       	sbci	r29, 0xDB	; 219
     b8c:	88 83       	st	Y, r24
     b8e:	10 92 12 24 	sts	0x2412, r1
     b92:	10 92 11 24 	sts	0x2411, r1
     b96:	df 91       	pop	r29
     b98:	cf 91       	pop	r28
     b9a:	08 95       	ret

00000b9c <get_autonom_settings_from_bus>:
     b9c:	99 df       	rcall	.-206    	; 0xad0 <get_data>
     b9e:	80 93 0c 23 	sts	0x230C, r24
     ba2:	08 95       	ret

00000ba4 <get_char_from_bus>:
     ba4:	cf 93       	push	r28
     ba6:	df 93       	push	r29
     ba8:	c0 91 0c 24 	lds	r28, 0x240C
     bac:	d0 91 0d 24 	lds	r29, 0x240D
     bb0:	8f df       	rcall	.-226    	; 0xad0 <get_data>
     bb2:	c3 5f       	subi	r28, 0xF3	; 243
     bb4:	dc 4d       	sbci	r29, 0xDC	; 220
     bb6:	88 83       	st	Y, r24
     bb8:	80 91 0c 24 	lds	r24, 0x240C
     bbc:	90 91 0d 24 	lds	r25, 0x240D
     bc0:	01 96       	adiw	r24, 0x01	; 1
     bc2:	90 93 0d 24 	sts	0x240D, r25
     bc6:	80 93 0c 24 	sts	0x240C, r24
     bca:	90 93 1d 24 	sts	0x241D, r25
     bce:	80 93 1c 24 	sts	0x241C, r24
     bd2:	df 91       	pop	r29
     bd4:	cf 91       	pop	r28
     bd6:	08 95       	ret

00000bd8 <TWI_init>:
     bd8:	80 93 13 24 	sts	0x2413, r24
     bdc:	80 34       	cpi	r24, 0x40	; 64
     bde:	79 f0       	breq	.+30     	; 0xbfe <TWI_init+0x26>
     be0:	80 38       	cpi	r24, 0x80	; 128
     be2:	19 f0       	breq	.+6      	; 0xbea <TWI_init+0x12>
     be4:	80 32       	cpi	r24, 0x20	; 32
     be6:	d1 f4       	brne	.+52     	; 0xc1c <TWI_init+0x44>
     be8:	12 c0       	rjmp	.+36     	; 0xc0e <TWI_init+0x36>
     bea:	83 e0       	ldi	r24, 0x03	; 3
     bec:	88 b9       	out	0x08, r24	; 8
     bee:	59 df       	rcall	.-334    	; 0xaa2 <set_twi_reciever_enable>
     bf0:	8f e3       	ldi	r24, 0x3F	; 63
     bf2:	80 93 b8 00 	sts	0x00B8, r24
     bf6:	81 e8       	ldi	r24, 0x81	; 129
     bf8:	80 93 ba 00 	sts	0x00BA, r24
     bfc:	08 95       	ret
     bfe:	8f e3       	ldi	r24, 0x3F	; 63
     c00:	80 93 b8 00 	sts	0x00B8, r24
     c04:	4e df       	rcall	.-356    	; 0xaa2 <set_twi_reciever_enable>
     c06:	80 e4       	ldi	r24, 0x40	; 64
     c08:	80 93 ba 00 	sts	0x00BA, r24
     c0c:	08 95       	ret
     c0e:	8f e3       	ldi	r24, 0x3F	; 63
     c10:	80 93 b8 00 	sts	0x00B8, r24
     c14:	46 df       	rcall	.-372    	; 0xaa2 <set_twi_reciever_enable>
     c16:	81 e2       	ldi	r24, 0x21	; 33
     c18:	80 93 ba 00 	sts	0x00BA, r24
     c1c:	08 95       	ret

00000c1e <TWI_send_command>:
     c1e:	1f 93       	push	r17
     c20:	cf 93       	push	r28
     c22:	df 93       	push	r29
     c24:	c8 2f       	mov	r28, r24
     c26:	d6 2f       	mov	r29, r22
     c28:	14 2f       	mov	r17, r20
     c2a:	43 df       	rcall	.-378    	; 0xab2 <start_bus>
     c2c:	54 df       	rcall	.-344    	; 0xad6 <wait_for_bus>
     c2e:	90 91 b9 00 	lds	r25, 0x00B9
     c32:	98 7f       	andi	r25, 0xF8	; 248
     c34:	98 30       	cpi	r25, 0x08	; 8
     c36:	19 f0       	breq	.+6      	; 0xc3e <TWI_send_command+0x20>
     c38:	44 df       	rcall	.-376    	; 0xac2 <Error>
     c3a:	80 e0       	ldi	r24, 0x00	; 0
     c3c:	34 c0       	rjmp	.+104    	; 0xca6 <TWI_send_command+0x88>
     c3e:	80 e2       	ldi	r24, 0x20	; 32
     c40:	50 df       	rcall	.-352    	; 0xae2 <send_data_and_wait>
     c42:	80 91 b9 00 	lds	r24, 0x00B9
     c46:	88 7f       	andi	r24, 0xF8	; 248
     c48:	88 31       	cpi	r24, 0x18	; 24
     c4a:	19 f0       	breq	.+6      	; 0xc52 <TWI_send_command+0x34>
     c4c:	3a df       	rcall	.-396    	; 0xac2 <Error>
     c4e:	80 e0       	ldi	r24, 0x00	; 0
     c50:	2a c0       	rjmp	.+84     	; 0xca6 <TWI_send_command+0x88>
     c52:	80 e0       	ldi	r24, 0x00	; 0
     c54:	46 df       	rcall	.-372    	; 0xae2 <send_data_and_wait>
     c56:	80 91 b9 00 	lds	r24, 0x00B9
     c5a:	88 7f       	andi	r24, 0xF8	; 248
     c5c:	88 32       	cpi	r24, 0x28	; 40
     c5e:	19 f0       	breq	.+6      	; 0xc66 <TWI_send_command+0x48>
     c60:	30 df       	rcall	.-416    	; 0xac2 <Error>
     c62:	80 e0       	ldi	r24, 0x00	; 0
     c64:	20 c0       	rjmp	.+64     	; 0xca6 <TWI_send_command+0x88>
     c66:	8c 2f       	mov	r24, r28
     c68:	3c df       	rcall	.-392    	; 0xae2 <send_data_and_wait>
     c6a:	80 91 b9 00 	lds	r24, 0x00B9
     c6e:	88 7f       	andi	r24, 0xF8	; 248
     c70:	88 32       	cpi	r24, 0x28	; 40
     c72:	19 f0       	breq	.+6      	; 0xc7a <TWI_send_command+0x5c>
     c74:	26 df       	rcall	.-436    	; 0xac2 <Error>
     c76:	80 e0       	ldi	r24, 0x00	; 0
     c78:	16 c0       	rjmp	.+44     	; 0xca6 <TWI_send_command+0x88>
     c7a:	8d 2f       	mov	r24, r29
     c7c:	32 df       	rcall	.-412    	; 0xae2 <send_data_and_wait>
     c7e:	80 91 b9 00 	lds	r24, 0x00B9
     c82:	88 7f       	andi	r24, 0xF8	; 248
     c84:	88 32       	cpi	r24, 0x28	; 40
     c86:	19 f0       	breq	.+6      	; 0xc8e <TWI_send_command+0x70>
     c88:	1c df       	rcall	.-456    	; 0xac2 <Error>
     c8a:	80 e0       	ldi	r24, 0x00	; 0
     c8c:	0c c0       	rjmp	.+24     	; 0xca6 <TWI_send_command+0x88>
     c8e:	81 2f       	mov	r24, r17
     c90:	28 df       	rcall	.-432    	; 0xae2 <send_data_and_wait>
     c92:	80 91 b9 00 	lds	r24, 0x00B9
     c96:	88 7f       	andi	r24, 0xF8	; 248
     c98:	88 32       	cpi	r24, 0x28	; 40
     c9a:	19 f0       	breq	.+6      	; 0xca2 <TWI_send_command+0x84>
     c9c:	12 df       	rcall	.-476    	; 0xac2 <Error>
     c9e:	80 e0       	ldi	r24, 0x00	; 0
     ca0:	02 c0       	rjmp	.+4      	; 0xca6 <TWI_send_command+0x88>
     ca2:	0b df       	rcall	.-490    	; 0xaba <stop_bus>
     ca4:	81 e0       	ldi	r24, 0x01	; 1
     ca6:	df 91       	pop	r29
     ca8:	cf 91       	pop	r28
     caa:	1f 91       	pop	r17
     cac:	08 95       	ret

00000cae <TWI_send_string>:
     cae:	ef 92       	push	r14
     cb0:	ff 92       	push	r15
     cb2:	0f 93       	push	r16
     cb4:	1f 93       	push	r17
     cb6:	cf 93       	push	r28
     cb8:	df 93       	push	r29
     cba:	c8 2f       	mov	r28, r24
     cbc:	e6 2e       	mov	r14, r22
     cbe:	f7 2e       	mov	r15, r23
     cc0:	f8 de       	rcall	.-528    	; 0xab2 <start_bus>
     cc2:	09 df       	rcall	.-494    	; 0xad6 <wait_for_bus>
     cc4:	90 91 b9 00 	lds	r25, 0x00B9
     cc8:	98 7f       	andi	r25, 0xF8	; 248
     cca:	98 30       	cpi	r25, 0x08	; 8
     ccc:	19 f0       	breq	.+6      	; 0xcd4 <TWI_send_string+0x26>
     cce:	f9 de       	rcall	.-526    	; 0xac2 <Error>
     cd0:	80 e0       	ldi	r24, 0x00	; 0
     cd2:	2c c0       	rjmp	.+88     	; 0xd2c <TWI_send_string+0x7e>
     cd4:	8c 2f       	mov	r24, r28
     cd6:	05 df       	rcall	.-502    	; 0xae2 <send_data_and_wait>
     cd8:	80 91 b9 00 	lds	r24, 0x00B9
     cdc:	88 7f       	andi	r24, 0xF8	; 248
     cde:	88 31       	cpi	r24, 0x18	; 24
     ce0:	19 f0       	breq	.+6      	; 0xce8 <TWI_send_string+0x3a>
     ce2:	ef de       	rcall	.-546    	; 0xac2 <Error>
     ce4:	80 e0       	ldi	r24, 0x00	; 0
     ce6:	22 c0       	rjmp	.+68     	; 0xd2c <TWI_send_string+0x7e>
     ce8:	89 e1       	ldi	r24, 0x19	; 25
     cea:	fb de       	rcall	.-522    	; 0xae2 <send_data_and_wait>
     cec:	80 91 b9 00 	lds	r24, 0x00B9
     cf0:	88 7f       	andi	r24, 0xF8	; 248
     cf2:	88 32       	cpi	r24, 0x28	; 40
     cf4:	29 f4       	brne	.+10     	; 0xd00 <TWI_send_string+0x52>
     cf6:	0e 2d       	mov	r16, r14
     cf8:	1f 2d       	mov	r17, r15
     cfa:	c0 e0       	ldi	r28, 0x00	; 0
     cfc:	d0 e0       	ldi	r29, 0x00	; 0
     cfe:	08 c0       	rjmp	.+16     	; 0xd10 <TWI_send_string+0x62>
     d00:	e0 de       	rcall	.-576    	; 0xac2 <Error>
     d02:	80 e0       	ldi	r24, 0x00	; 0
     d04:	13 c0       	rjmp	.+38     	; 0xd2c <TWI_send_string+0x7e>
     d06:	f8 01       	movw	r30, r16
     d08:	81 91       	ld	r24, Z+
     d0a:	8f 01       	movw	r16, r30
     d0c:	ea de       	rcall	.-556    	; 0xae2 <send_data_and_wait>
     d0e:	21 96       	adiw	r28, 0x01	; 1
     d10:	ee 2d       	mov	r30, r14
     d12:	ff 2d       	mov	r31, r15
     d14:	df 01       	movw	r26, r30
     d16:	0d 90       	ld	r0, X+
     d18:	00 20       	and	r0, r0
     d1a:	e9 f7       	brne	.-6      	; 0xd16 <TWI_send_string+0x68>
     d1c:	11 97       	sbiw	r26, 0x01	; 1
     d1e:	ae 1b       	sub	r26, r30
     d20:	bf 0b       	sbc	r27, r31
     d22:	ca 17       	cp	r28, r26
     d24:	db 07       	cpc	r29, r27
     d26:	78 f3       	brcs	.-34     	; 0xd06 <TWI_send_string+0x58>
     d28:	c8 de       	rcall	.-624    	; 0xaba <stop_bus>
     d2a:	81 e0       	ldi	r24, 0x01	; 1
     d2c:	df 91       	pop	r29
     d2e:	cf 91       	pop	r28
     d30:	1f 91       	pop	r17
     d32:	0f 91       	pop	r16
     d34:	ff 90       	pop	r15
     d36:	ef 90       	pop	r14
     d38:	08 95       	ret

00000d3a <TWI_send_string_fixed_length>:
     d3a:	ef 92       	push	r14
     d3c:	ff 92       	push	r15
     d3e:	0f 93       	push	r16
     d40:	1f 93       	push	r17
     d42:	cf 93       	push	r28
     d44:	df 93       	push	r29
     d46:	c8 2f       	mov	r28, r24
     d48:	e6 2e       	mov	r14, r22
     d4a:	f7 2e       	mov	r15, r23
     d4c:	8a 01       	movw	r16, r20
     d4e:	b1 de       	rcall	.-670    	; 0xab2 <start_bus>
     d50:	c2 de       	rcall	.-636    	; 0xad6 <wait_for_bus>
     d52:	90 91 b9 00 	lds	r25, 0x00B9
     d56:	98 7f       	andi	r25, 0xF8	; 248
     d58:	98 30       	cpi	r25, 0x08	; 8
     d5a:	19 f0       	breq	.+6      	; 0xd62 <TWI_send_string_fixed_length+0x28>
     d5c:	b2 de       	rcall	.-668    	; 0xac2 <Error>
     d5e:	80 e0       	ldi	r24, 0x00	; 0
     d60:	23 c0       	rjmp	.+70     	; 0xda8 <TWI_send_string_fixed_length+0x6e>
     d62:	8c 2f       	mov	r24, r28
     d64:	be de       	rcall	.-644    	; 0xae2 <send_data_and_wait>
     d66:	80 91 b9 00 	lds	r24, 0x00B9
     d6a:	88 7f       	andi	r24, 0xF8	; 248
     d6c:	88 31       	cpi	r24, 0x18	; 24
     d6e:	19 f0       	breq	.+6      	; 0xd76 <TWI_send_string_fixed_length+0x3c>
     d70:	a8 de       	rcall	.-688    	; 0xac2 <Error>
     d72:	80 e0       	ldi	r24, 0x00	; 0
     d74:	19 c0       	rjmp	.+50     	; 0xda8 <TWI_send_string_fixed_length+0x6e>
     d76:	89 e1       	ldi	r24, 0x19	; 25
     d78:	b4 de       	rcall	.-664    	; 0xae2 <send_data_and_wait>
     d7a:	80 91 b9 00 	lds	r24, 0x00B9
     d7e:	88 7f       	andi	r24, 0xF8	; 248
     d80:	88 32       	cpi	r24, 0x28	; 40
     d82:	21 f4       	brne	.+8      	; 0xd8c <TWI_send_string_fixed_length+0x52>
     d84:	10 16       	cp	r1, r16
     d86:	11 06       	cpc	r1, r17
     d88:	24 f0       	brlt	.+8      	; 0xd92 <TWI_send_string_fixed_length+0x58>
     d8a:	0c c0       	rjmp	.+24     	; 0xda4 <TWI_send_string_fixed_length+0x6a>
     d8c:	9a de       	rcall	.-716    	; 0xac2 <Error>
     d8e:	80 e0       	ldi	r24, 0x00	; 0
     d90:	0b c0       	rjmp	.+22     	; 0xda8 <TWI_send_string_fixed_length+0x6e>
     d92:	ce 2d       	mov	r28, r14
     d94:	df 2d       	mov	r29, r15
     d96:	0c 0f       	add	r16, r28
     d98:	1d 1f       	adc	r17, r29
     d9a:	89 91       	ld	r24, Y+
     d9c:	a2 de       	rcall	.-700    	; 0xae2 <send_data_and_wait>
     d9e:	c0 17       	cp	r28, r16
     da0:	d1 07       	cpc	r29, r17
     da2:	d9 f7       	brne	.-10     	; 0xd9a <TWI_send_string_fixed_length+0x60>
     da4:	8a de       	rcall	.-748    	; 0xaba <stop_bus>
     da6:	81 e0       	ldi	r24, 0x01	; 1
     da8:	df 91       	pop	r29
     daa:	cf 91       	pop	r28
     dac:	1f 91       	pop	r17
     dae:	0f 91       	pop	r16
     db0:	ff 90       	pop	r15
     db2:	ef 90       	pop	r14
     db4:	08 95       	ret

00000db6 <TWI_send_float>:
     db6:	ef 92       	push	r14
     db8:	ff 92       	push	r15
     dba:	0f 93       	push	r16
     dbc:	1f 93       	push	r17
     dbe:	cf 93       	push	r28
     dc0:	df 93       	push	r29
     dc2:	00 d0       	rcall	.+0      	; 0xdc4 <TWI_send_float+0xe>
     dc4:	00 d0       	rcall	.+0      	; 0xdc6 <TWI_send_float+0x10>
     dc6:	cd b7       	in	r28, 0x3d	; 61
     dc8:	de b7       	in	r29, 0x3e	; 62
     dca:	18 2f       	mov	r17, r24
     dcc:	49 83       	std	Y+1, r20	; 0x01
     dce:	5a 83       	std	Y+2, r21	; 0x02
     dd0:	6b 83       	std	Y+3, r22	; 0x03
     dd2:	7c 83       	std	Y+4, r23	; 0x04
     dd4:	6e de       	rcall	.-804    	; 0xab2 <start_bus>
     dd6:	7f de       	rcall	.-770    	; 0xad6 <wait_for_bus>
     dd8:	90 91 b9 00 	lds	r25, 0x00B9
     ddc:	98 7f       	andi	r25, 0xF8	; 248
     dde:	98 30       	cpi	r25, 0x08	; 8
     de0:	19 f0       	breq	.+6      	; 0xde8 <TWI_send_float+0x32>
     de2:	6f de       	rcall	.-802    	; 0xac2 <Error>
     de4:	80 e0       	ldi	r24, 0x00	; 0
     de6:	24 c0       	rjmp	.+72     	; 0xe30 <TWI_send_float+0x7a>
     de8:	81 2f       	mov	r24, r17
     dea:	7b de       	rcall	.-778    	; 0xae2 <send_data_and_wait>
     dec:	80 91 b9 00 	lds	r24, 0x00B9
     df0:	88 7f       	andi	r24, 0xF8	; 248
     df2:	88 31       	cpi	r24, 0x18	; 24
     df4:	19 f0       	breq	.+6      	; 0xdfc <TWI_send_float+0x46>
     df6:	65 de       	rcall	.-822    	; 0xac2 <Error>
     df8:	80 e0       	ldi	r24, 0x00	; 0
     dfa:	1a c0       	rjmp	.+52     	; 0xe30 <TWI_send_float+0x7a>
     dfc:	86 e0       	ldi	r24, 0x06	; 6
     dfe:	71 de       	rcall	.-798    	; 0xae2 <send_data_and_wait>
     e00:	80 91 b9 00 	lds	r24, 0x00B9
     e04:	88 7f       	andi	r24, 0xF8	; 248
     e06:	88 32       	cpi	r24, 0x28	; 40
     e08:	19 f0       	breq	.+6      	; 0xe10 <TWI_send_float+0x5a>
     e0a:	5b de       	rcall	.-842    	; 0xac2 <Error>
     e0c:	80 e0       	ldi	r24, 0x00	; 0
     e0e:	10 c0       	rjmp	.+32     	; 0xe30 <TWI_send_float+0x7a>
     e10:	8e 01       	movw	r16, r28
     e12:	0f 5f       	subi	r16, 0xFF	; 255
     e14:	1f 4f       	sbci	r17, 0xFF	; 255
     e16:	7e 01       	movw	r14, r28
     e18:	85 e0       	ldi	r24, 0x05	; 5
     e1a:	e8 0e       	add	r14, r24
     e1c:	f1 1c       	adc	r15, r1
     e1e:	f8 01       	movw	r30, r16
     e20:	81 91       	ld	r24, Z+
     e22:	8f 01       	movw	r16, r30
     e24:	5e de       	rcall	.-836    	; 0xae2 <send_data_and_wait>
     e26:	0e 15       	cp	r16, r14
     e28:	1f 05       	cpc	r17, r15
     e2a:	c9 f7       	brne	.-14     	; 0xe1e <TWI_send_float+0x68>
     e2c:	46 de       	rcall	.-884    	; 0xaba <stop_bus>
     e2e:	81 e0       	ldi	r24, 0x01	; 1
     e30:	0f 90       	pop	r0
     e32:	0f 90       	pop	r0
     e34:	0f 90       	pop	r0
     e36:	0f 90       	pop	r0
     e38:	df 91       	pop	r29
     e3a:	cf 91       	pop	r28
     e3c:	1f 91       	pop	r17
     e3e:	0f 91       	pop	r16
     e40:	ff 90       	pop	r15
     e42:	ef 90       	pop	r14
     e44:	08 95       	ret

00000e46 <TWI_get_command>:
     e46:	87 5f       	subi	r24, 0xF7	; 247
     e48:	9c 4d       	sbci	r25, 0xDC	; 220
     e4a:	fc 01       	movw	r30, r24
     e4c:	80 81       	ld	r24, Z
     e4e:	08 95       	ret

00000e50 <TWI_get_sensor>:
     e50:	8d 5d       	subi	r24, 0xDD	; 221
     e52:	9b 4d       	sbci	r25, 0xDB	; 219
     e54:	fc 01       	movw	r30, r24
     e56:	80 81       	ld	r24, Z
     e58:	08 95       	ret

00000e5a <TWI_get_control_setting>:
     e5a:	82 5f       	subi	r24, 0xF2	; 242
     e5c:	9b 4d       	sbci	r25, 0xDB	; 219
     e5e:	fc 01       	movw	r30, r24
     e60:	80 81       	ld	r24, Z
     e62:	08 95       	ret

00000e64 <TWI_get_autonom_settings>:
     e64:	80 91 0c 23 	lds	r24, 0x230C
     e68:	08 95       	ret

00000e6a <TWI_sensor_flag>:
     e6a:	80 91 c0 22 	lds	r24, 0x22C0
     e6e:	88 23       	and	r24, r24
     e70:	21 f0       	breq	.+8      	; 0xe7a <TWI_sensor_flag+0x10>
     e72:	10 92 c0 22 	sts	0x22C0, r1
     e76:	81 e0       	ldi	r24, 0x01	; 1
     e78:	08 95       	ret
     e7a:	80 e0       	ldi	r24, 0x00	; 0
     e7c:	08 95       	ret

00000e7e <TWI_command_flag>:
     e7e:	80 91 bf 22 	lds	r24, 0x22BF
     e82:	88 23       	and	r24, r24
     e84:	21 f0       	breq	.+8      	; 0xe8e <TWI_command_flag+0x10>
     e86:	10 92 bf 22 	sts	0x22BF, r1
     e8a:	81 e0       	ldi	r24, 0x01	; 1
     e8c:	08 95       	ret
     e8e:	80 e0       	ldi	r24, 0x00	; 0
     e90:	08 95       	ret

00000e92 <TWI_control_settings_flag>:
     e92:	80 91 be 22 	lds	r24, 0x22BE
     e96:	88 23       	and	r24, r24
     e98:	21 f0       	breq	.+8      	; 0xea2 <TWI_control_settings_flag+0x10>
     e9a:	10 92 be 22 	sts	0x22BE, r1
     e9e:	81 e0       	ldi	r24, 0x01	; 1
     ea0:	08 95       	ret
     ea2:	80 e0       	ldi	r24, 0x00	; 0
     ea4:	08 95       	ret

00000ea6 <TWI_autonom_settings_flag>:
     ea6:	80 91 bd 22 	lds	r24, 0x22BD
     eaa:	88 23       	and	r24, r24
     eac:	21 f0       	breq	.+8      	; 0xeb6 <TWI_autonom_settings_flag+0x10>
     eae:	10 92 bd 22 	sts	0x22BD, r1
     eb2:	81 e0       	ldi	r24, 0x01	; 1
     eb4:	08 95       	ret
     eb6:	80 e0       	ldi	r24, 0x00	; 0
     eb8:	08 95       	ret

00000eba <write_to_TwiFIFO>:
     eba:	ef 92       	push	r14
     ebc:	ff 92       	push	r15
     ebe:	0f 93       	push	r16
     ec0:	1f 93       	push	r17
     ec2:	cf 93       	push	r28
     ec4:	df 93       	push	r29
     ec6:	e8 2e       	mov	r14, r24
     ec8:	f9 2e       	mov	r15, r25
     eca:	e8 2f       	mov	r30, r24
     ecc:	f9 2f       	mov	r31, r25
     ece:	df 01       	movw	r26, r30
     ed0:	0d 90       	ld	r0, X+
     ed2:	00 20       	and	r0, r0
     ed4:	e9 f7       	brne	.-6      	; 0xed0 <write_to_TwiFIFO+0x16>
     ed6:	11 97       	sbiw	r26, 0x01	; 1
     ed8:	bd 01       	movw	r22, r26
     eda:	6e 1b       	sub	r22, r30
     edc:	7f 0b       	sbc	r23, r31
     ede:	80 91 08 01 	lds	r24, 0x0108
     ee2:	90 91 09 01 	lds	r25, 0x0109
     ee6:	c9 da       	rcall	.-2670   	; 0x47a <FifoWrite>
     ee8:	81 11       	cpse	r24, r1
     eea:	1e c0       	rjmp	.+60     	; 0xf28 <write_to_TwiFIFO+0x6e>
     eec:	0e 2d       	mov	r16, r14
     eee:	1f 2d       	mov	r17, r15
     ef0:	c0 e0       	ldi	r28, 0x00	; 0
     ef2:	d0 e0       	ldi	r29, 0x00	; 0
     ef4:	0b c0       	rjmp	.+22     	; 0xf0c <write_to_TwiFIFO+0x52>
     ef6:	f8 01       	movw	r30, r16
     ef8:	61 91       	ld	r22, Z+
     efa:	8f 01       	movw	r16, r30
     efc:	80 91 08 01 	lds	r24, 0x0108
     f00:	90 91 09 01 	lds	r25, 0x0109
     f04:	ba da       	rcall	.-2700   	; 0x47a <FifoWrite>
     f06:	81 11       	cpse	r24, r1
     f08:	11 c0       	rjmp	.+34     	; 0xf2c <write_to_TwiFIFO+0x72>
     f0a:	21 96       	adiw	r28, 0x01	; 1
     f0c:	ee 2d       	mov	r30, r14
     f0e:	ff 2d       	mov	r31, r15
     f10:	df 01       	movw	r26, r30
     f12:	0d 90       	ld	r0, X+
     f14:	00 20       	and	r0, r0
     f16:	e9 f7       	brne	.-6      	; 0xf12 <write_to_TwiFIFO+0x58>
     f18:	11 97       	sbiw	r26, 0x01	; 1
     f1a:	ae 1b       	sub	r26, r30
     f1c:	bf 0b       	sbc	r27, r31
     f1e:	ca 17       	cp	r28, r26
     f20:	db 07       	cpc	r29, r27
     f22:	48 f3       	brcs	.-46     	; 0xef6 <write_to_TwiFIFO+0x3c>
     f24:	80 e0       	ldi	r24, 0x00	; 0
     f26:	03 c0       	rjmp	.+6      	; 0xf2e <write_to_TwiFIFO+0x74>
     f28:	81 e0       	ldi	r24, 0x01	; 1
     f2a:	01 c0       	rjmp	.+2      	; 0xf2e <write_to_TwiFIFO+0x74>
     f2c:	81 e0       	ldi	r24, 0x01	; 1
     f2e:	df 91       	pop	r29
     f30:	cf 91       	pop	r28
     f32:	1f 91       	pop	r17
     f34:	0f 91       	pop	r16
     f36:	ff 90       	pop	r15
     f38:	ef 90       	pop	r14
     f3a:	08 95       	ret

00000f3c <__vector_26>:
     f3c:	1f 92       	push	r1
     f3e:	0f 92       	push	r0
     f40:	0f b6       	in	r0, 0x3f	; 63
     f42:	0f 92       	push	r0
     f44:	11 24       	eor	r1, r1
     f46:	0b b6       	in	r0, 0x3b	; 59
     f48:	0f 92       	push	r0
     f4a:	2f 93       	push	r18
     f4c:	3f 93       	push	r19
     f4e:	4f 93       	push	r20
     f50:	5f 93       	push	r21
     f52:	6f 93       	push	r22
     f54:	7f 93       	push	r23
     f56:	8f 93       	push	r24
     f58:	9f 93       	push	r25
     f5a:	af 93       	push	r26
     f5c:	bf 93       	push	r27
     f5e:	cf 93       	push	r28
     f60:	df 93       	push	r29
     f62:	ef 93       	push	r30
     f64:	ff 93       	push	r31
     f66:	80 91 13 24 	lds	r24, 0x2413
     f6a:	80 34       	cpi	r24, 0x40	; 64
     f6c:	09 f4       	brne	.+2      	; 0xf70 <__vector_26+0x34>
     f6e:	87 c0       	rjmp	.+270    	; 0x107e <__vector_26+0x142>
     f70:	80 38       	cpi	r24, 0x80	; 128
     f72:	21 f0       	breq	.+8      	; 0xf7c <__vector_26+0x40>
     f74:	80 32       	cpi	r24, 0x20	; 32
     f76:	09 f0       	breq	.+2      	; 0xf7a <__vector_26+0x3e>
     f78:	7f c1       	rjmp	.+766    	; 0x1278 <__vector_26+0x33c>
     f7a:	c9 c0       	rjmp	.+402    	; 0x110e <__vector_26+0x1d2>
     f7c:	80 91 b9 00 	lds	r24, 0x00B9
     f80:	88 7f       	andi	r24, 0xF8	; 248
     f82:	80 36       	cpi	r24, 0x60	; 96
     f84:	29 f0       	breq	.+10     	; 0xf90 <__vector_26+0x54>
     f86:	80 91 b9 00 	lds	r24, 0x00B9
     f8a:	88 7f       	andi	r24, 0xF8	; 248
     f8c:	88 36       	cpi	r24, 0x68	; 104
     f8e:	21 f4       	brne	.+8      	; 0xf98 <__vector_26+0x5c>
     f90:	81 e0       	ldi	r24, 0x01	; 1
     f92:	80 93 16 24 	sts	0x2416, r24
     f96:	71 c0       	rjmp	.+226    	; 0x107a <__vector_26+0x13e>
     f98:	80 91 b9 00 	lds	r24, 0x00B9
     f9c:	88 7f       	andi	r24, 0xF8	; 248
     f9e:	80 37       	cpi	r24, 0x70	; 112
     fa0:	29 f0       	breq	.+10     	; 0xfac <__vector_26+0x70>
     fa2:	80 91 b9 00 	lds	r24, 0x00B9
     fa6:	88 7f       	andi	r24, 0xF8	; 248
     fa8:	88 37       	cpi	r24, 0x78	; 120
     faa:	39 f4       	brne	.+14     	; 0xfba <__vector_26+0x7e>
     fac:	8f ef       	ldi	r24, 0xFF	; 255
     fae:	90 e0       	ldi	r25, 0x00	; 0
     fb0:	90 93 20 24 	sts	0x2420, r25
     fb4:	80 93 1f 24 	sts	0x241F, r24
     fb8:	60 c0       	rjmp	.+192    	; 0x107a <__vector_26+0x13e>
     fba:	80 91 b9 00 	lds	r24, 0x00B9
     fbe:	88 7f       	andi	r24, 0xF8	; 248
     fc0:	80 38       	cpi	r24, 0x80	; 128
     fc2:	b9 f5       	brne	.+110    	; 0x1032 <__vector_26+0xf6>
     fc4:	80 91 16 24 	lds	r24, 0x2416
     fc8:	88 23       	and	r24, r24
     fca:	41 f0       	breq	.+16     	; 0xfdc <__vector_26+0xa0>
     fcc:	81 dd       	rcall	.-1278   	; 0xad0 <get_data>
     fce:	80 93 1f 24 	sts	0x241F, r24
     fd2:	10 92 20 24 	sts	0x2420, r1
     fd6:	10 92 16 24 	sts	0x2416, r1
     fda:	4f c0       	rjmp	.+158    	; 0x107a <__vector_26+0x13e>
     fdc:	80 91 1f 24 	lds	r24, 0x241F
     fe0:	90 91 20 24 	lds	r25, 0x2420
     fe4:	85 30       	cpi	r24, 0x05	; 5
     fe6:	91 05       	cpc	r25, r1
     fe8:	71 f0       	breq	.+28     	; 0x1006 <__vector_26+0xca>
     fea:	24 f4       	brge	.+8      	; 0xff4 <__vector_26+0xb8>
     fec:	01 97       	sbiw	r24, 0x01	; 1
     fee:	09 f0       	breq	.+2      	; 0xff2 <__vector_26+0xb6>
     ff0:	44 c0       	rjmp	.+136    	; 0x107a <__vector_26+0x13e>
     ff2:	07 c0       	rjmp	.+14     	; 0x1002 <__vector_26+0xc6>
     ff4:	86 30       	cpi	r24, 0x06	; 6
     ff6:	91 05       	cpc	r25, r1
     ff8:	51 f0       	breq	.+20     	; 0x100e <__vector_26+0xd2>
     ffa:	49 97       	sbiw	r24, 0x19	; 25
     ffc:	09 f0       	breq	.+2      	; 0x1000 <__vector_26+0xc4>
     ffe:	3d c0       	rjmp	.+122    	; 0x107a <__vector_26+0x13e>
    1000:	04 c0       	rjmp	.+8      	; 0x100a <__vector_26+0xce>
    1002:	bb dd       	rcall	.-1162   	; 0xb7a <get_control_settings_from_bus>
    1004:	3a c0       	rjmp	.+116    	; 0x107a <__vector_26+0x13e>
    1006:	ca dd       	rcall	.-1132   	; 0xb9c <get_autonom_settings_from_bus>
    1008:	38 c0       	rjmp	.+112    	; 0x107a <__vector_26+0x13e>
    100a:	cc dd       	rcall	.-1128   	; 0xba4 <get_char_from_bus>
    100c:	36 c0       	rjmp	.+108    	; 0x107a <__vector_26+0x13e>
    100e:	c0 91 14 24 	lds	r28, 0x2414
    1012:	d0 91 15 24 	lds	r29, 0x2415
    1016:	5c dd       	rcall	.-1352   	; 0xad0 <get_data>
    1018:	cb 5f       	subi	r28, 0xFB	; 251
    101a:	dc 4d       	sbci	r29, 0xDC	; 220
    101c:	88 83       	st	Y, r24
    101e:	80 91 14 24 	lds	r24, 0x2414
    1022:	90 91 15 24 	lds	r25, 0x2415
    1026:	01 96       	adiw	r24, 0x01	; 1
    1028:	90 93 15 24 	sts	0x2415, r25
    102c:	80 93 14 24 	sts	0x2414, r24
    1030:	24 c0       	rjmp	.+72     	; 0x107a <__vector_26+0x13e>
    1032:	80 91 b9 00 	lds	r24, 0x00B9
    1036:	88 7f       	andi	r24, 0xF8	; 248
    1038:	80 39       	cpi	r24, 0x90	; 144
    103a:	11 f4       	brne	.+4      	; 0x1040 <__vector_26+0x104>
    103c:	73 dd       	rcall	.-1306   	; 0xb24 <get_sensor_from_bus>
    103e:	1d c0       	rjmp	.+58     	; 0x107a <__vector_26+0x13e>
    1040:	80 91 b9 00 	lds	r24, 0x00B9
    1044:	88 7f       	andi	r24, 0xF8	; 248
    1046:	80 3a       	cpi	r24, 0xA0	; 160
    1048:	c1 f4       	brne	.+48     	; 0x107a <__vector_26+0x13e>
    104a:	51 dd       	rcall	.-1374   	; 0xaee <stop_twi>
    104c:	80 91 1f 24 	lds	r24, 0x241F
    1050:	90 91 20 24 	lds	r25, 0x2420
    1054:	85 30       	cpi	r24, 0x05	; 5
    1056:	91 05       	cpc	r25, r1
    1058:	49 f0       	breq	.+18     	; 0x106c <__vector_26+0x130>
    105a:	89 31       	cpi	r24, 0x19	; 25
    105c:	91 05       	cpc	r25, r1
    105e:	51 f0       	breq	.+20     	; 0x1074 <__vector_26+0x138>
    1060:	01 97       	sbiw	r24, 0x01	; 1
    1062:	59 f4       	brne	.+22     	; 0x107a <__vector_26+0x13e>
    1064:	81 e0       	ldi	r24, 0x01	; 1
    1066:	80 93 be 22 	sts	0x22BE, r24
    106a:	07 c0       	rjmp	.+14     	; 0x107a <__vector_26+0x13e>
    106c:	81 e0       	ldi	r24, 0x01	; 1
    106e:	80 93 bd 22 	sts	0x22BD, r24
    1072:	03 c0       	rjmp	.+6      	; 0x107a <__vector_26+0x13e>
    1074:	8d e0       	ldi	r24, 0x0D	; 13
    1076:	93 e2       	ldi	r25, 0x23	; 35
    1078:	20 df       	rcall	.-448    	; 0xeba <write_to_TwiFIFO>
    107a:	4e dd       	rcall	.-1380   	; 0xb18 <reset_TWI>
    107c:	fd c0       	rjmp	.+506    	; 0x1278 <__vector_26+0x33c>
    107e:	80 91 b9 00 	lds	r24, 0x00B9
    1082:	88 7f       	andi	r24, 0xF8	; 248
    1084:	80 36       	cpi	r24, 0x60	; 96
    1086:	29 f0       	breq	.+10     	; 0x1092 <__vector_26+0x156>
    1088:	80 91 b9 00 	lds	r24, 0x00B9
    108c:	88 7f       	andi	r24, 0xF8	; 248
    108e:	88 36       	cpi	r24, 0x68	; 104
    1090:	21 f4       	brne	.+8      	; 0x109a <__vector_26+0x15e>
    1092:	81 e0       	ldi	r24, 0x01	; 1
    1094:	80 93 16 24 	sts	0x2416, r24
    1098:	38 c0       	rjmp	.+112    	; 0x110a <__vector_26+0x1ce>
    109a:	80 91 b9 00 	lds	r24, 0x00B9
    109e:	88 7f       	andi	r24, 0xF8	; 248
    10a0:	80 38       	cpi	r24, 0x80	; 128
    10a2:	e1 f4       	brne	.+56     	; 0x10dc <__vector_26+0x1a0>
    10a4:	80 91 16 24 	lds	r24, 0x2416
    10a8:	88 23       	and	r24, r24
    10aa:	41 f0       	breq	.+16     	; 0x10bc <__vector_26+0x180>
    10ac:	11 dd       	rcall	.-1502   	; 0xad0 <get_data>
    10ae:	80 93 1f 24 	sts	0x241F, r24
    10b2:	10 92 20 24 	sts	0x2420, r1
    10b6:	10 92 16 24 	sts	0x2416, r1
    10ba:	27 c0       	rjmp	.+78     	; 0x110a <__vector_26+0x1ce>
    10bc:	80 91 1f 24 	lds	r24, 0x241F
    10c0:	90 91 20 24 	lds	r25, 0x2420
    10c4:	82 30       	cpi	r24, 0x02	; 2
    10c6:	91 05       	cpc	r25, r1
    10c8:	19 f0       	breq	.+6      	; 0x10d0 <__vector_26+0x194>
    10ca:	49 97       	sbiw	r24, 0x19	; 25
    10cc:	f1 f4       	brne	.+60     	; 0x110a <__vector_26+0x1ce>
    10ce:	04 c0       	rjmp	.+8      	; 0x10d8 <__vector_26+0x19c>
    10d0:	ff dc       	rcall	.-1538   	; 0xad0 <get_data>
    10d2:	80 93 1e 24 	sts	0x241E, r24
    10d6:	19 c0       	rjmp	.+50     	; 0x110a <__vector_26+0x1ce>
    10d8:	65 dd       	rcall	.-1334   	; 0xba4 <get_char_from_bus>
    10da:	17 c0       	rjmp	.+46     	; 0x110a <__vector_26+0x1ce>
    10dc:	80 91 b9 00 	lds	r24, 0x00B9
    10e0:	88 7f       	andi	r24, 0xF8	; 248
    10e2:	80 3a       	cpi	r24, 0xA0	; 160
    10e4:	91 f4       	brne	.+36     	; 0x110a <__vector_26+0x1ce>
    10e6:	03 dd       	rcall	.-1530   	; 0xaee <stop_twi>
    10e8:	80 91 1f 24 	lds	r24, 0x241F
    10ec:	90 91 20 24 	lds	r25, 0x2420
    10f0:	82 30       	cpi	r24, 0x02	; 2
    10f2:	91 05       	cpc	r25, r1
    10f4:	19 f0       	breq	.+6      	; 0x10fc <__vector_26+0x1c0>
    10f6:	49 97       	sbiw	r24, 0x19	; 25
    10f8:	41 f4       	brne	.+16     	; 0x110a <__vector_26+0x1ce>
    10fa:	04 c0       	rjmp	.+8      	; 0x1104 <__vector_26+0x1c8>
    10fc:	81 e0       	ldi	r24, 0x01	; 1
    10fe:	80 93 bb 22 	sts	0x22BB, r24
    1102:	03 c0       	rjmp	.+6      	; 0x110a <__vector_26+0x1ce>
    1104:	8d e0       	ldi	r24, 0x0D	; 13
    1106:	93 e2       	ldi	r25, 0x23	; 35
    1108:	d8 de       	rcall	.-592    	; 0xeba <write_to_TwiFIFO>
    110a:	06 dd       	rcall	.-1524   	; 0xb18 <reset_TWI>
    110c:	b5 c0       	rjmp	.+362    	; 0x1278 <__vector_26+0x33c>
    110e:	80 91 b9 00 	lds	r24, 0x00B9
    1112:	88 7f       	andi	r24, 0xF8	; 248
    1114:	80 36       	cpi	r24, 0x60	; 96
    1116:	29 f0       	breq	.+10     	; 0x1122 <__vector_26+0x1e6>
    1118:	80 91 b9 00 	lds	r24, 0x00B9
    111c:	88 7f       	andi	r24, 0xF8	; 248
    111e:	88 36       	cpi	r24, 0x68	; 104
    1120:	21 f4       	brne	.+8      	; 0x112a <__vector_26+0x1ee>
    1122:	81 e0       	ldi	r24, 0x01	; 1
    1124:	80 93 16 24 	sts	0x2416, r24
    1128:	a6 c0       	rjmp	.+332    	; 0x1276 <__vector_26+0x33a>
    112a:	80 91 b9 00 	lds	r24, 0x00B9
    112e:	88 7f       	andi	r24, 0xF8	; 248
    1130:	80 37       	cpi	r24, 0x70	; 112
    1132:	29 f0       	breq	.+10     	; 0x113e <__vector_26+0x202>
    1134:	80 91 b9 00 	lds	r24, 0x00B9
    1138:	88 7f       	andi	r24, 0xF8	; 248
    113a:	88 37       	cpi	r24, 0x78	; 120
    113c:	39 f4       	brne	.+14     	; 0x114c <__vector_26+0x210>
    113e:	8f ef       	ldi	r24, 0xFF	; 255
    1140:	90 e0       	ldi	r25, 0x00	; 0
    1142:	90 93 20 24 	sts	0x2420, r25
    1146:	80 93 1f 24 	sts	0x241F, r24
    114a:	95 c0       	rjmp	.+298    	; 0x1276 <__vector_26+0x33a>
    114c:	80 91 b9 00 	lds	r24, 0x00B9
    1150:	88 7f       	andi	r24, 0xF8	; 248
    1152:	80 38       	cpi	r24, 0x80	; 128
    1154:	09 f0       	breq	.+2      	; 0x1158 <__vector_26+0x21c>
    1156:	62 c0       	rjmp	.+196    	; 0x121c <__vector_26+0x2e0>
    1158:	80 91 16 24 	lds	r24, 0x2416
    115c:	88 23       	and	r24, r24
    115e:	41 f0       	breq	.+16     	; 0x1170 <__vector_26+0x234>
    1160:	b7 dc       	rcall	.-1682   	; 0xad0 <get_data>
    1162:	80 93 1f 24 	sts	0x241F, r24
    1166:	10 92 20 24 	sts	0x2420, r1
    116a:	10 92 16 24 	sts	0x2416, r1
    116e:	83 c0       	rjmp	.+262    	; 0x1276 <__vector_26+0x33a>
    1170:	80 91 1f 24 	lds	r24, 0x241F
    1174:	90 91 20 24 	lds	r25, 0x2420
    1178:	81 30       	cpi	r24, 0x01	; 1
    117a:	91 05       	cpc	r25, r1
    117c:	09 f4       	brne	.+2      	; 0x1180 <__vector_26+0x244>
    117e:	4a c0       	rjmp	.+148    	; 0x1214 <__vector_26+0x2d8>
    1180:	1c f4       	brge	.+6      	; 0x1188 <__vector_26+0x24c>
    1182:	89 2b       	or	r24, r25
    1184:	41 f0       	breq	.+16     	; 0x1196 <__vector_26+0x25a>
    1186:	77 c0       	rjmp	.+238    	; 0x1276 <__vector_26+0x33a>
    1188:	84 30       	cpi	r24, 0x04	; 4
    118a:	91 05       	cpc	r25, r1
    118c:	b1 f0       	breq	.+44     	; 0x11ba <__vector_26+0x27e>
    118e:	05 97       	sbiw	r24, 0x05	; 5
    1190:	09 f0       	breq	.+2      	; 0x1194 <__vector_26+0x258>
    1192:	71 c0       	rjmp	.+226    	; 0x1276 <__vector_26+0x33a>
    1194:	41 c0       	rjmp	.+130    	; 0x1218 <__vector_26+0x2dc>
    1196:	c0 91 17 24 	lds	r28, 0x2417
    119a:	d0 91 18 24 	lds	r29, 0x2418
    119e:	98 dc       	rcall	.-1744   	; 0xad0 <get_data>
    11a0:	c7 5f       	subi	r28, 0xF7	; 247
    11a2:	dc 4d       	sbci	r29, 0xDC	; 220
    11a4:	88 83       	st	Y, r24
    11a6:	80 91 17 24 	lds	r24, 0x2417
    11aa:	90 91 18 24 	lds	r25, 0x2418
    11ae:	01 96       	adiw	r24, 0x01	; 1
    11b0:	90 93 18 24 	sts	0x2418, r25
    11b4:	80 93 17 24 	sts	0x2417, r24
    11b8:	5e c0       	rjmp	.+188    	; 0x1276 <__vector_26+0x33a>
    11ba:	8a dc       	rcall	.-1772   	; 0xad0 <get_data>
    11bc:	81 11       	cpse	r24, r1
    11be:	0a c0       	rjmp	.+20     	; 0x11d4 <__vector_26+0x298>
    11c0:	80 91 19 24 	lds	r24, 0x2419
    11c4:	90 91 1a 24 	lds	r25, 0x241A
    11c8:	01 97       	sbiw	r24, 0x01	; 1
    11ca:	90 93 1a 24 	sts	0x241A, r25
    11ce:	80 93 19 24 	sts	0x2419, r24
    11d2:	09 c0       	rjmp	.+18     	; 0x11e6 <__vector_26+0x2aa>
    11d4:	80 91 19 24 	lds	r24, 0x2419
    11d8:	90 91 1a 24 	lds	r25, 0x241A
    11dc:	01 96       	adiw	r24, 0x01	; 1
    11de:	90 93 1a 24 	sts	0x241A, r25
    11e2:	80 93 19 24 	sts	0x2419, r24
    11e6:	80 91 19 24 	lds	r24, 0x2419
    11ea:	90 91 1a 24 	lds	r25, 0x241A
    11ee:	18 16       	cp	r1, r24
    11f0:	19 06       	cpc	r1, r25
    11f2:	3c f0       	brlt	.+14     	; 0x1202 <__vector_26+0x2c6>
    11f4:	81 e0       	ldi	r24, 0x01	; 1
    11f6:	90 e0       	ldi	r25, 0x00	; 0
    11f8:	90 93 1a 24 	sts	0x241A, r25
    11fc:	80 93 19 24 	sts	0x2419, r24
    1200:	3a c0       	rjmp	.+116    	; 0x1276 <__vector_26+0x33a>
    1202:	08 97       	sbiw	r24, 0x08	; 8
    1204:	c4 f1       	brlt	.+112    	; 0x1276 <__vector_26+0x33a>
    1206:	87 e0       	ldi	r24, 0x07	; 7
    1208:	90 e0       	ldi	r25, 0x00	; 0
    120a:	90 93 1a 24 	sts	0x241A, r25
    120e:	80 93 19 24 	sts	0x2419, r24
    1212:	31 c0       	rjmp	.+98     	; 0x1276 <__vector_26+0x33a>
    1214:	b2 dc       	rcall	.-1692   	; 0xb7a <get_control_settings_from_bus>
    1216:	2f c0       	rjmp	.+94     	; 0x1276 <__vector_26+0x33a>
    1218:	c1 dc       	rcall	.-1662   	; 0xb9c <get_autonom_settings_from_bus>
    121a:	2d c0       	rjmp	.+90     	; 0x1276 <__vector_26+0x33a>
    121c:	80 91 b9 00 	lds	r24, 0x00B9
    1220:	88 7f       	andi	r24, 0xF8	; 248
    1222:	80 39       	cpi	r24, 0x90	; 144
    1224:	11 f4       	brne	.+4      	; 0x122a <__vector_26+0x2ee>
    1226:	7e dc       	rcall	.-1796   	; 0xb24 <get_sensor_from_bus>
    1228:	26 c0       	rjmp	.+76     	; 0x1276 <__vector_26+0x33a>
    122a:	80 91 b9 00 	lds	r24, 0x00B9
    122e:	88 7f       	andi	r24, 0xF8	; 248
    1230:	80 3a       	cpi	r24, 0xA0	; 160
    1232:	09 f5       	brne	.+66     	; 0x1276 <__vector_26+0x33a>
    1234:	5c dc       	rcall	.-1864   	; 0xaee <stop_twi>
    1236:	80 91 1f 24 	lds	r24, 0x241F
    123a:	90 91 20 24 	lds	r25, 0x2420
    123e:	81 30       	cpi	r24, 0x01	; 1
    1240:	91 05       	cpc	r25, r1
    1242:	91 f0       	breq	.+36     	; 0x1268 <__vector_26+0x32c>
    1244:	1c f4       	brge	.+6      	; 0x124c <__vector_26+0x310>
    1246:	89 2b       	or	r24, r25
    1248:	39 f0       	breq	.+14     	; 0x1258 <__vector_26+0x31c>
    124a:	15 c0       	rjmp	.+42     	; 0x1276 <__vector_26+0x33a>
    124c:	84 30       	cpi	r24, 0x04	; 4
    124e:	91 05       	cpc	r25, r1
    1250:	39 f0       	breq	.+14     	; 0x1260 <__vector_26+0x324>
    1252:	05 97       	sbiw	r24, 0x05	; 5
    1254:	81 f4       	brne	.+32     	; 0x1276 <__vector_26+0x33a>
    1256:	0c c0       	rjmp	.+24     	; 0x1270 <__vector_26+0x334>
    1258:	81 e0       	ldi	r24, 0x01	; 1
    125a:	80 93 bf 22 	sts	0x22BF, r24
    125e:	0b c0       	rjmp	.+22     	; 0x1276 <__vector_26+0x33a>
    1260:	81 e0       	ldi	r24, 0x01	; 1
    1262:	80 93 bc 22 	sts	0x22BC, r24
    1266:	07 c0       	rjmp	.+14     	; 0x1276 <__vector_26+0x33a>
    1268:	81 e0       	ldi	r24, 0x01	; 1
    126a:	80 93 be 22 	sts	0x22BE, r24
    126e:	03 c0       	rjmp	.+6      	; 0x1276 <__vector_26+0x33a>
    1270:	81 e0       	ldi	r24, 0x01	; 1
    1272:	80 93 bd 22 	sts	0x22BD, r24
    1276:	50 dc       	rcall	.-1888   	; 0xb18 <reset_TWI>
    1278:	ff 91       	pop	r31
    127a:	ef 91       	pop	r30
    127c:	df 91       	pop	r29
    127e:	cf 91       	pop	r28
    1280:	bf 91       	pop	r27
    1282:	af 91       	pop	r26
    1284:	9f 91       	pop	r25
    1286:	8f 91       	pop	r24
    1288:	7f 91       	pop	r23
    128a:	6f 91       	pop	r22
    128c:	5f 91       	pop	r21
    128e:	4f 91       	pop	r20
    1290:	3f 91       	pop	r19
    1292:	2f 91       	pop	r18
    1294:	0f 90       	pop	r0
    1296:	0b be       	out	0x3b, r0	; 59
    1298:	0f 90       	pop	r0
    129a:	0f be       	out	0x3f, r0	; 63
    129c:	0f 90       	pop	r0
    129e:	1f 90       	pop	r1
    12a0:	18 95       	reti

000012a2 <USART_init>:
    12a2:	10 92 c5 00 	sts	0x00C5, r1
    12a6:	87 e0       	ldi	r24, 0x07	; 7
    12a8:	80 93 c4 00 	sts	0x00C4, r24
    12ac:	88 e9       	ldi	r24, 0x98	; 152
    12ae:	80 93 c1 00 	sts	0x00C1, r24
    12b2:	86 e0       	ldi	r24, 0x06	; 6
    12b4:	80 93 c2 00 	sts	0x00C2, r24
    12b8:	08 95       	ret

000012ba <USART_CheckTxReady>:
    12ba:	80 91 c0 00 	lds	r24, 0x00C0
    12be:	80 72       	andi	r24, 0x20	; 32
    12c0:	08 95       	ret

000012c2 <USART_WriteByte>:
    12c2:	cf 93       	push	r28
    12c4:	c8 2f       	mov	r28, r24
    12c6:	f9 df       	rcall	.-14     	; 0x12ba <USART_CheckTxReady>
    12c8:	88 23       	and	r24, r24
    12ca:	e9 f3       	breq	.-6      	; 0x12c6 <USART_WriteByte+0x4>
    12cc:	c0 93 c6 00 	sts	0x00C6, r28
    12d0:	cf 91       	pop	r28
    12d2:	08 95       	ret

000012d4 <USART_crc16>:
    12d4:	cf 92       	push	r12
    12d6:	df 92       	push	r13
    12d8:	ef 92       	push	r14
    12da:	ff 92       	push	r15
    12dc:	0f 93       	push	r16
    12de:	1f 93       	push	r17
    12e0:	cf 93       	push	r28
    12e2:	df 93       	push	r29
    12e4:	66 23       	and	r22, r22
    12e6:	09 f4       	brne	.+2      	; 0x12ea <USART_crc16+0x16>
    12e8:	3e c0       	rjmp	.+124    	; 0x1366 <USART_crc16+0x92>
    12ea:	06 2f       	mov	r16, r22
    12ec:	10 e0       	ldi	r17, 0x00	; 0
    12ee:	4f ef       	ldi	r20, 0xFF	; 255
    12f0:	5f ef       	ldi	r21, 0xFF	; 255
    12f2:	ee ef       	ldi	r30, 0xFE	; 254
    12f4:	ff ef       	ldi	r31, 0xFF	; 255
    12f6:	c6 2e       	mov	r12, r22
    12f8:	d1 2c       	mov	r13, r1
    12fa:	e8 2e       	mov	r14, r24
    12fc:	f1 2c       	mov	r15, r1
    12fe:	c8 e0       	ldi	r28, 0x08	; 8
    1300:	d0 e0       	ldi	r29, 0x00	; 0
    1302:	ee 3f       	cpi	r30, 0xFE	; 254
    1304:	6f ef       	ldi	r22, 0xFF	; 255
    1306:	f6 07       	cpc	r31, r22
    1308:	19 f4       	brne	.+6      	; 0x1310 <USART_crc16+0x3c>
    130a:	8e 2d       	mov	r24, r14
    130c:	9f 2d       	mov	r25, r15
    130e:	30 c0       	rjmp	.+96     	; 0x1370 <USART_crc16+0x9c>
    1310:	ef 3f       	cpi	r30, 0xFF	; 255
    1312:	8f ef       	ldi	r24, 0xFF	; 255
    1314:	f8 07       	cpc	r31, r24
    1316:	19 f4       	brne	.+6      	; 0x131e <USART_crc16+0x4a>
    1318:	8c 2d       	mov	r24, r12
    131a:	9d 2d       	mov	r25, r13
    131c:	29 c0       	rjmp	.+82     	; 0x1370 <USART_crc16+0x9c>
    131e:	df 01       	movw	r26, r30
    1320:	a0 5d       	subi	r26, 0xD0	; 208
    1322:	b9 4d       	sbci	r27, 0xD9	; 217
    1324:	8c 91       	ld	r24, X
    1326:	90 e0       	ldi	r25, 0x00	; 0
    1328:	23 c0       	rjmp	.+70     	; 0x1370 <USART_crc16+0x9c>
    132a:	ba 01       	movw	r22, r20
    132c:	68 27       	eor	r22, r24
    132e:	79 27       	eor	r23, r25
    1330:	60 ff       	sbrs	r22, 0
    1332:	07 c0       	rjmp	.+14     	; 0x1342 <USART_crc16+0x6e>
    1334:	56 95       	lsr	r21
    1336:	47 95       	ror	r20
    1338:	68 e0       	ldi	r22, 0x08	; 8
    133a:	46 27       	eor	r20, r22
    133c:	64 e8       	ldi	r22, 0x84	; 132
    133e:	56 27       	eor	r21, r22
    1340:	02 c0       	rjmp	.+4      	; 0x1346 <USART_crc16+0x72>
    1342:	56 95       	lsr	r21
    1344:	47 95       	ror	r20
    1346:	96 95       	lsr	r25
    1348:	87 95       	ror	r24
    134a:	21 50       	subi	r18, 0x01	; 1
    134c:	31 09       	sbc	r19, r1
    134e:	69 f7       	brne	.-38     	; 0x132a <USART_crc16+0x56>
    1350:	31 96       	adiw	r30, 0x01	; 1
    1352:	e0 17       	cp	r30, r16
    1354:	f1 07       	cpc	r31, r17
    1356:	a9 f6       	brne	.-86     	; 0x1302 <USART_crc16+0x2e>
    1358:	9a 01       	movw	r18, r20
    135a:	20 95       	com	r18
    135c:	30 95       	com	r19
    135e:	32 27       	eor	r19, r18
    1360:	23 27       	eor	r18, r19
    1362:	32 27       	eor	r19, r18
    1364:	02 c0       	rjmp	.+4      	; 0x136a <USART_crc16+0x96>
    1366:	20 e0       	ldi	r18, 0x00	; 0
    1368:	30 e0       	ldi	r19, 0x00	; 0
    136a:	82 2f       	mov	r24, r18
    136c:	93 2f       	mov	r25, r19
    136e:	02 c0       	rjmp	.+4      	; 0x1374 <USART_crc16+0xa0>
    1370:	9e 01       	movw	r18, r28
    1372:	db cf       	rjmp	.-74     	; 0x132a <USART_crc16+0x56>
    1374:	df 91       	pop	r29
    1376:	cf 91       	pop	r28
    1378:	1f 91       	pop	r17
    137a:	0f 91       	pop	r16
    137c:	ff 90       	pop	r15
    137e:	ef 90       	pop	r14
    1380:	df 90       	pop	r13
    1382:	cf 90       	pop	r12
    1384:	08 95       	ret

00001386 <USART_SendPacket>:
    1386:	0f 93       	push	r16
    1388:	1f 93       	push	r17
    138a:	cf 93       	push	r28
    138c:	df 93       	push	r29
    138e:	9e e7       	ldi	r25, 0x7E	; 126
    1390:	90 93 2f 27 	sts	0x272F, r25
    1394:	80 93 30 27 	sts	0x2730, r24
    1398:	60 93 31 27 	sts	0x2731, r22
    139c:	26 2f       	mov	r18, r22
    139e:	30 e0       	ldi	r19, 0x00	; 0
    13a0:	12 16       	cp	r1, r18
    13a2:	13 06       	cpc	r1, r19
    13a4:	4c f5       	brge	.+82     	; 0x13f8 <USART_SendPacket+0x72>
    13a6:	e0 e3       	ldi	r30, 0x30	; 48
    13a8:	f6 e2       	ldi	r31, 0x26	; 38
    13aa:	03 e0       	ldi	r16, 0x03	; 3
    13ac:	10 e0       	ldi	r17, 0x00	; 0
    13ae:	c0 e0       	ldi	r28, 0x00	; 0
    13b0:	d0 e0       	ldi	r29, 0x00	; 0
    13b2:	7d e7       	ldi	r23, 0x7D	; 125
    13b4:	50 e2       	ldi	r21, 0x20	; 32
    13b6:	90 81       	ld	r25, Z
    13b8:	49 2f       	mov	r20, r25
    13ba:	4d 57       	subi	r20, 0x7D	; 125
    13bc:	42 30       	cpi	r20, 0x02	; 2
    13be:	80 f4       	brcc	.+32     	; 0x13e0 <USART_SendPacket+0x5a>
    13c0:	d8 01       	movw	r26, r16
    13c2:	a1 5d       	subi	r26, 0xD1	; 209
    13c4:	b8 4d       	sbci	r27, 0xD8	; 216
    13c6:	ac 0f       	add	r26, r28
    13c8:	bd 1f       	adc	r27, r29
    13ca:	7c 93       	st	X, r23
    13cc:	0f 5f       	subi	r16, 0xFF	; 255
    13ce:	1f 4f       	sbci	r17, 0xFF	; 255
    13d0:	d8 01       	movw	r26, r16
    13d2:	a1 5d       	subi	r26, 0xD1	; 209
    13d4:	b8 4d       	sbci	r27, 0xD8	; 216
    13d6:	ac 0f       	add	r26, r28
    13d8:	bd 1f       	adc	r27, r29
    13da:	95 27       	eor	r25, r21
    13dc:	9c 93       	st	X, r25
    13de:	06 c0       	rjmp	.+12     	; 0x13ec <USART_SendPacket+0x66>
    13e0:	d8 01       	movw	r26, r16
    13e2:	a1 5d       	subi	r26, 0xD1	; 209
    13e4:	b8 4d       	sbci	r27, 0xD8	; 216
    13e6:	ac 0f       	add	r26, r28
    13e8:	bd 1f       	adc	r27, r29
    13ea:	9c 93       	st	X, r25
    13ec:	21 96       	adiw	r28, 0x01	; 1
    13ee:	31 96       	adiw	r30, 0x01	; 1
    13f0:	c2 17       	cp	r28, r18
    13f2:	d3 07       	cpc	r29, r19
    13f4:	01 f7       	brne	.-64     	; 0x13b6 <USART_SendPacket+0x30>
    13f6:	04 c0       	rjmp	.+8      	; 0x1400 <USART_SendPacket+0x7a>
    13f8:	03 e0       	ldi	r16, 0x03	; 3
    13fa:	10 e0       	ldi	r17, 0x00	; 0
    13fc:	c0 e0       	ldi	r28, 0x00	; 0
    13fe:	d0 e0       	ldi	r29, 0x00	; 0
    1400:	69 df       	rcall	.-302    	; 0x12d4 <USART_crc16>
    1402:	f8 01       	movw	r30, r16
    1404:	e1 5d       	subi	r30, 0xD1	; 209
    1406:	f8 4d       	sbci	r31, 0xD8	; 216
    1408:	ec 0f       	add	r30, r28
    140a:	fd 1f       	adc	r31, r29
    140c:	90 83       	st	Z, r25
    140e:	81 83       	std	Z+1, r24	; 0x01
    1410:	22 96       	adiw	r28, 0x02	; 2
    1412:	0c 0f       	add	r16, r28
    1414:	1d 1f       	adc	r17, r29
    1416:	f8 01       	movw	r30, r16
    1418:	e1 5d       	subi	r30, 0xD1	; 209
    141a:	f8 4d       	sbci	r31, 0xD8	; 216
    141c:	8e e7       	ldi	r24, 0x7E	; 126
    141e:	80 83       	st	Z, r24
    1420:	c8 01       	movw	r24, r16
    1422:	01 96       	adiw	r24, 0x01	; 1
    1424:	18 16       	cp	r1, r24
    1426:	19 06       	cpc	r1, r25
    1428:	4c f4       	brge	.+18     	; 0x143c <USART_SendPacket+0xb6>
    142a:	cf e2       	ldi	r28, 0x2F	; 47
    142c:	d7 e2       	ldi	r29, 0x27	; 39
    142e:	00 5d       	subi	r16, 0xD0	; 208
    1430:	18 4d       	sbci	r17, 0xD8	; 216
    1432:	89 91       	ld	r24, Y+
    1434:	46 df       	rcall	.-372    	; 0x12c2 <USART_WriteByte>
    1436:	c0 17       	cp	r28, r16
    1438:	d1 07       	cpc	r29, r17
    143a:	d9 f7       	brne	.-10     	; 0x1432 <USART_SendPacket+0xac>
    143c:	df 91       	pop	r29
    143e:	cf 91       	pop	r28
    1440:	1f 91       	pop	r17
    1442:	0f 91       	pop	r16
    1444:	08 95       	ret

00001446 <USART_SendCommand>:
    1446:	80 e0       	ldi	r24, 0x00	; 0
    1448:	90 e0       	ldi	r25, 0x00	; 0
    144a:	fd dc       	rcall	.-1542   	; 0xe46 <TWI_get_command>
    144c:	80 93 30 26 	sts	0x2630, r24
    1450:	81 e0       	ldi	r24, 0x01	; 1
    1452:	90 e0       	ldi	r25, 0x00	; 0
    1454:	f8 dc       	rcall	.-1552   	; 0xe46 <TWI_get_command>
    1456:	80 93 31 26 	sts	0x2631, r24
    145a:	82 e0       	ldi	r24, 0x02	; 2
    145c:	90 e0       	ldi	r25, 0x00	; 0
    145e:	f3 dc       	rcall	.-1562   	; 0xe46 <TWI_get_command>
    1460:	80 93 32 26 	sts	0x2632, r24
    1464:	63 e0       	ldi	r22, 0x03	; 3
    1466:	83 e4       	ldi	r24, 0x43	; 67
    1468:	8e cf       	rjmp	.-228    	; 0x1386 <USART_SendPacket>

0000146a <USART_DecodeMessageRxFIFO>:
    146a:	8f 92       	push	r8
    146c:	9f 92       	push	r9
    146e:	af 92       	push	r10
    1470:	bf 92       	push	r11
    1472:	cf 92       	push	r12
    1474:	df 92       	push	r13
    1476:	ef 92       	push	r14
    1478:	ff 92       	push	r15
    147a:	0f 93       	push	r16
    147c:	1f 93       	push	r17
    147e:	cf 93       	push	r28
    1480:	df 93       	push	r29
    1482:	cd b7       	in	r28, 0x3d	; 61
    1484:	de b7       	in	r29, 0x3e	; 62
    1486:	ad b6       	in	r10, 0x3d	; 61
    1488:	be b6       	in	r11, 0x3e	; 62
    148a:	60 e0       	ldi	r22, 0x00	; 0
    148c:	70 e0       	ldi	r23, 0x00	; 0
    148e:	80 91 10 11 	lds	r24, 0x1110
    1492:	90 91 11 11 	lds	r25, 0x1111
    1496:	11 d8       	rcall	.-4062   	; 0x4ba <FifoRead>
    1498:	88 23       	and	r24, r24
    149a:	31 f0       	breq	.+12     	; 0x14a8 <USART_DecodeMessageRxFIFO+0x3e>
    149c:	6c ea       	ldi	r22, 0xAC	; 172
    149e:	71 e2       	ldi	r23, 0x21	; 33
    14a0:	80 e4       	ldi	r24, 0x40	; 64
    14a2:	05 dc       	rcall	.-2038   	; 0xcae <TWI_send_string>
    14a4:	81 e0       	ldi	r24, 0x01	; 1
    14a6:	44 c0       	rjmp	.+136    	; 0x1530 <USART_DecodeMessageRxFIFO+0xc6>
    14a8:	c0 90 00 00 	lds	r12, 0x0000
    14ac:	d1 2c       	mov	r13, r1
    14ae:	96 01       	movw	r18, r12
    14b0:	21 50       	subi	r18, 0x01	; 1
    14b2:	31 09       	sbc	r19, r1
    14b4:	81 e0       	ldi	r24, 0x01	; 1
    14b6:	90 e0       	ldi	r25, 0x00	; 0
    14b8:	c1 14       	cp	r12, r1
    14ba:	d1 04       	cpc	r13, r1
    14bc:	11 f0       	breq	.+4      	; 0x14c2 <USART_DecodeMessageRxFIFO+0x58>
    14be:	80 e0       	ldi	r24, 0x00	; 0
    14c0:	90 e0       	ldi	r25, 0x00	; 0
    14c2:	82 0f       	add	r24, r18
    14c4:	93 1f       	adc	r25, r19
    14c6:	2d b7       	in	r18, 0x3d	; 61
    14c8:	3e b7       	in	r19, 0x3e	; 62
    14ca:	28 1b       	sub	r18, r24
    14cc:	39 0b       	sbc	r19, r25
    14ce:	0f b6       	in	r0, 0x3f	; 63
    14d0:	f8 94       	cli
    14d2:	3e bf       	out	0x3e, r19	; 62
    14d4:	0f be       	out	0x3f, r0	; 63
    14d6:	2d bf       	out	0x3d, r18	; 61
    14d8:	8d b7       	in	r24, 0x3d	; 61
    14da:	9e b7       	in	r25, 0x3e	; 62
    14dc:	01 96       	adiw	r24, 0x01	; 1
    14de:	88 2e       	mov	r8, r24
    14e0:	99 2e       	mov	r9, r25
    14e2:	1c 14       	cp	r1, r12
    14e4:	1d 04       	cpc	r1, r13
    14e6:	f4 f4       	brge	.+60     	; 0x1524 <USART_DecodeMessageRxFIFO+0xba>
    14e8:	e8 2e       	mov	r14, r24
    14ea:	f9 2e       	mov	r15, r25
    14ec:	00 e0       	ldi	r16, 0x00	; 0
    14ee:	10 e0       	ldi	r17, 0x00	; 0
    14f0:	60 e0       	ldi	r22, 0x00	; 0
    14f2:	70 e0       	ldi	r23, 0x00	; 0
    14f4:	80 91 10 11 	lds	r24, 0x1110
    14f8:	90 91 11 11 	lds	r25, 0x1111
    14fc:	0e 94 5d 02 	call	0x4ba	; 0x4ba <FifoRead>
    1500:	88 23       	and	r24, r24
    1502:	31 f0       	breq	.+12     	; 0x1510 <USART_DecodeMessageRxFIFO+0xa6>
    1504:	6e ec       	ldi	r22, 0xCE	; 206
    1506:	71 e2       	ldi	r23, 0x21	; 33
    1508:	80 e4       	ldi	r24, 0x40	; 64
    150a:	d1 db       	rcall	.-2142   	; 0xcae <TWI_send_string>
    150c:	81 e0       	ldi	r24, 0x01	; 1
    150e:	10 c0       	rjmp	.+32     	; 0x1530 <USART_DecodeMessageRxFIFO+0xc6>
    1510:	80 91 00 00 	lds	r24, 0x0000
    1514:	f7 01       	movw	r30, r14
    1516:	81 93       	st	Z+, r24
    1518:	7f 01       	movw	r14, r30
    151a:	0f 5f       	subi	r16, 0xFF	; 255
    151c:	1f 4f       	sbci	r17, 0xFF	; 255
    151e:	0c 15       	cp	r16, r12
    1520:	1d 05       	cpc	r17, r13
    1522:	34 f3       	brlt	.-52     	; 0x14f0 <USART_DecodeMessageRxFIFO+0x86>
    1524:	a6 01       	movw	r20, r12
    1526:	68 2d       	mov	r22, r8
    1528:	79 2d       	mov	r23, r9
    152a:	80 e8       	ldi	r24, 0x80	; 128
    152c:	06 dc       	rcall	.-2036   	; 0xd3a <TWI_send_string_fixed_length>
    152e:	80 e0       	ldi	r24, 0x00	; 0
    1530:	0f b6       	in	r0, 0x3f	; 63
    1532:	f8 94       	cli
    1534:	be be       	out	0x3e, r11	; 62
    1536:	0f be       	out	0x3f, r0	; 63
    1538:	ad be       	out	0x3d, r10	; 61
    153a:	df 91       	pop	r29
    153c:	cf 91       	pop	r28
    153e:	1f 91       	pop	r17
    1540:	0f 91       	pop	r16
    1542:	ff 90       	pop	r15
    1544:	ef 90       	pop	r14
    1546:	df 90       	pop	r13
    1548:	cf 90       	pop	r12
    154a:	bf 90       	pop	r11
    154c:	af 90       	pop	r10
    154e:	9f 90       	pop	r9
    1550:	8f 90       	pop	r8
    1552:	08 95       	ret

00001554 <USART_DecodeCommandRxFIFO>:
    1554:	cf 93       	push	r28
    1556:	df 93       	push	r29
    1558:	60 e0       	ldi	r22, 0x00	; 0
    155a:	70 e0       	ldi	r23, 0x00	; 0
    155c:	80 91 10 11 	lds	r24, 0x1110
    1560:	90 91 11 11 	lds	r25, 0x1111
    1564:	0e 94 5d 02 	call	0x4ba	; 0x4ba <FifoRead>
    1568:	88 23       	and	r24, r24
    156a:	31 f0       	breq	.+12     	; 0x1578 <USART_DecodeCommandRxFIFO+0x24>
    156c:	61 ef       	ldi	r22, 0xF1	; 241
    156e:	71 e2       	ldi	r23, 0x21	; 33
    1570:	80 e4       	ldi	r24, 0x40	; 64
    1572:	9d db       	rcall	.-2246   	; 0xcae <TWI_send_string>
    1574:	81 e0       	ldi	r24, 0x01	; 1
    1576:	45 c0       	rjmp	.+138    	; 0x1602 <USART_DecodeCommandRxFIFO+0xae>
    1578:	80 91 00 00 	lds	r24, 0x0000
    157c:	83 30       	cpi	r24, 0x03	; 3
    157e:	09 f0       	breq	.+2      	; 0x1582 <USART_DecodeCommandRxFIFO+0x2e>
    1580:	3b c0       	rjmp	.+118    	; 0x15f8 <USART_DecodeCommandRxFIFO+0xa4>
    1582:	60 e0       	ldi	r22, 0x00	; 0
    1584:	70 e0       	ldi	r23, 0x00	; 0
    1586:	80 91 10 11 	lds	r24, 0x1110
    158a:	90 91 11 11 	lds	r25, 0x1111
    158e:	0e 94 5d 02 	call	0x4ba	; 0x4ba <FifoRead>
    1592:	88 23       	and	r24, r24
    1594:	31 f0       	breq	.+12     	; 0x15a2 <USART_DecodeCommandRxFIFO+0x4e>
    1596:	63 e1       	ldi	r22, 0x13	; 19
    1598:	72 e2       	ldi	r23, 0x22	; 34
    159a:	80 e4       	ldi	r24, 0x40	; 64
    159c:	88 db       	rcall	.-2288   	; 0xcae <TWI_send_string>
    159e:	81 e0       	ldi	r24, 0x01	; 1
    15a0:	30 c0       	rjmp	.+96     	; 0x1602 <USART_DecodeCommandRxFIFO+0xae>
    15a2:	c0 91 00 00 	lds	r28, 0x0000
    15a6:	60 e0       	ldi	r22, 0x00	; 0
    15a8:	70 e0       	ldi	r23, 0x00	; 0
    15aa:	80 91 10 11 	lds	r24, 0x1110
    15ae:	90 91 11 11 	lds	r25, 0x1111
    15b2:	0e 94 5d 02 	call	0x4ba	; 0x4ba <FifoRead>
    15b6:	88 23       	and	r24, r24
    15b8:	31 f0       	breq	.+12     	; 0x15c6 <USART_DecodeCommandRxFIFO+0x72>
    15ba:	6b e3       	ldi	r22, 0x3B	; 59
    15bc:	72 e2       	ldi	r23, 0x22	; 34
    15be:	80 e4       	ldi	r24, 0x40	; 64
    15c0:	76 db       	rcall	.-2324   	; 0xcae <TWI_send_string>
    15c2:	81 e0       	ldi	r24, 0x01	; 1
    15c4:	1e c0       	rjmp	.+60     	; 0x1602 <USART_DecodeCommandRxFIFO+0xae>
    15c6:	d0 91 00 00 	lds	r29, 0x0000
    15ca:	60 e0       	ldi	r22, 0x00	; 0
    15cc:	70 e0       	ldi	r23, 0x00	; 0
    15ce:	80 91 10 11 	lds	r24, 0x1110
    15d2:	90 91 11 11 	lds	r25, 0x1111
    15d6:	0e 94 5d 02 	call	0x4ba	; 0x4ba <FifoRead>
    15da:	88 23       	and	r24, r24
    15dc:	31 f0       	breq	.+12     	; 0x15ea <USART_DecodeCommandRxFIFO+0x96>
    15de:	62 e6       	ldi	r22, 0x62	; 98
    15e0:	72 e2       	ldi	r23, 0x22	; 34
    15e2:	80 e4       	ldi	r24, 0x40	; 64
    15e4:	64 db       	rcall	.-2360   	; 0xcae <TWI_send_string>
    15e6:	81 e0       	ldi	r24, 0x01	; 1
    15e8:	0c c0       	rjmp	.+24     	; 0x1602 <USART_DecodeCommandRxFIFO+0xae>
    15ea:	40 91 00 00 	lds	r20, 0x0000
    15ee:	6d 2f       	mov	r22, r29
    15f0:	8c 2f       	mov	r24, r28
    15f2:	15 db       	rcall	.-2518   	; 0xc1e <TWI_send_command>
    15f4:	80 e0       	ldi	r24, 0x00	; 0
    15f6:	05 c0       	rjmp	.+10     	; 0x1602 <USART_DecodeCommandRxFIFO+0xae>
    15f8:	66 e8       	ldi	r22, 0x86	; 134
    15fa:	72 e2       	ldi	r23, 0x22	; 34
    15fc:	80 e4       	ldi	r24, 0x40	; 64
    15fe:	57 db       	rcall	.-2386   	; 0xcae <TWI_send_string>
    1600:	81 e0       	ldi	r24, 0x01	; 1
    1602:	df 91       	pop	r29
    1604:	cf 91       	pop	r28
    1606:	08 95       	ret

00001608 <USART_DecodeValueFIFO>:
    1608:	ef 92       	push	r14
    160a:	ff 92       	push	r15
    160c:	0f 93       	push	r16
    160e:	1f 93       	push	r17
    1610:	cf 93       	push	r28
    1612:	df 93       	push	r29
    1614:	00 d0       	rcall	.+0      	; 0x1616 <USART_DecodeValueFIFO+0xe>
    1616:	00 d0       	rcall	.+0      	; 0x1618 <USART_DecodeValueFIFO+0x10>
    1618:	cd b7       	in	r28, 0x3d	; 61
    161a:	de b7       	in	r29, 0x3e	; 62
    161c:	60 e0       	ldi	r22, 0x00	; 0
    161e:	70 e0       	ldi	r23, 0x00	; 0
    1620:	80 91 10 11 	lds	r24, 0x1110
    1624:	90 91 11 11 	lds	r25, 0x1111
    1628:	0e 94 5d 02 	call	0x4ba	; 0x4ba <FifoRead>
    162c:	88 23       	and	r24, r24
    162e:	31 f0       	breq	.+12     	; 0x163c <USART_DecodeValueFIFO+0x34>
    1630:	61 ef       	ldi	r22, 0xF1	; 241
    1632:	71 e2       	ldi	r23, 0x21	; 33
    1634:	80 e4       	ldi	r24, 0x40	; 64
    1636:	3b db       	rcall	.-2442   	; 0xcae <TWI_send_string>
    1638:	81 e0       	ldi	r24, 0x01	; 1
    163a:	32 c0       	rjmp	.+100    	; 0x16a0 <USART_DecodeValueFIFO+0x98>
    163c:	80 91 00 00 	lds	r24, 0x0000
    1640:	84 30       	cpi	r24, 0x04	; 4
    1642:	59 f5       	brne	.+86     	; 0x169a <USART_DecodeValueFIFO+0x92>
    1644:	8e 01       	movw	r16, r28
    1646:	0f 5f       	subi	r16, 0xFF	; 255
    1648:	1f 4f       	sbci	r17, 0xFF	; 255
    164a:	7e 01       	movw	r14, r28
    164c:	85 e0       	ldi	r24, 0x05	; 5
    164e:	e8 0e       	add	r14, r24
    1650:	f1 1c       	adc	r15, r1
    1652:	60 e0       	ldi	r22, 0x00	; 0
    1654:	70 e0       	ldi	r23, 0x00	; 0
    1656:	80 91 10 11 	lds	r24, 0x1110
    165a:	90 91 11 11 	lds	r25, 0x1111
    165e:	0e 94 5d 02 	call	0x4ba	; 0x4ba <FifoRead>
    1662:	81 11       	cpse	r24, r1
    1664:	1c c0       	rjmp	.+56     	; 0x169e <USART_DecodeValueFIFO+0x96>
    1666:	e0 e0       	ldi	r30, 0x00	; 0
    1668:	f0 e0       	ldi	r31, 0x00	; 0
    166a:	80 81       	ld	r24, Z
    166c:	d8 01       	movw	r26, r16
    166e:	8d 93       	st	X+, r24
    1670:	8d 01       	movw	r16, r26
    1672:	60 81       	ld	r22, Z
    1674:	70 e0       	ldi	r23, 0x00	; 0
    1676:	80 e0       	ldi	r24, 0x00	; 0
    1678:	90 e0       	ldi	r25, 0x00	; 0
    167a:	fe d1       	rcall	.+1020   	; 0x1a78 <__floatunsisf>
    167c:	ab 01       	movw	r20, r22
    167e:	bc 01       	movw	r22, r24
    1680:	80 e8       	ldi	r24, 0x80	; 128
    1682:	99 db       	rcall	.-2254   	; 0xdb6 <TWI_send_float>
    1684:	0e 15       	cp	r16, r14
    1686:	1f 05       	cpc	r17, r15
    1688:	21 f7       	brne	.-56     	; 0x1652 <USART_DecodeValueFIFO+0x4a>
    168a:	49 81       	ldd	r20, Y+1	; 0x01
    168c:	5a 81       	ldd	r21, Y+2	; 0x02
    168e:	6b 81       	ldd	r22, Y+3	; 0x03
    1690:	7c 81       	ldd	r23, Y+4	; 0x04
    1692:	80 e8       	ldi	r24, 0x80	; 128
    1694:	90 db       	rcall	.-2272   	; 0xdb6 <TWI_send_float>
    1696:	80 e0       	ldi	r24, 0x00	; 0
    1698:	03 c0       	rjmp	.+6      	; 0x16a0 <USART_DecodeValueFIFO+0x98>
    169a:	81 e0       	ldi	r24, 0x01	; 1
    169c:	01 c0       	rjmp	.+2      	; 0x16a0 <USART_DecodeValueFIFO+0x98>
    169e:	81 e0       	ldi	r24, 0x01	; 1
    16a0:	0f 90       	pop	r0
    16a2:	0f 90       	pop	r0
    16a4:	0f 90       	pop	r0
    16a6:	0f 90       	pop	r0
    16a8:	df 91       	pop	r29
    16aa:	cf 91       	pop	r28
    16ac:	1f 91       	pop	r17
    16ae:	0f 91       	pop	r16
    16b0:	ff 90       	pop	r15
    16b2:	ef 90       	pop	r14
    16b4:	08 95       	ret

000016b6 <USART_DecodeRxFIFO>:
    16b6:	13 c0       	rjmp	.+38     	; 0x16de <USART_DecodeRxFIFO+0x28>
    16b8:	80 91 00 00 	lds	r24, 0x0000
    16bc:	8d 34       	cpi	r24, 0x4D	; 77
    16be:	29 f0       	breq	.+10     	; 0x16ca <USART_DecodeRxFIFO+0x14>
    16c0:	86 35       	cpi	r24, 0x56	; 86
    16c2:	51 f0       	breq	.+20     	; 0x16d8 <USART_DecodeRxFIFO+0x22>
    16c4:	83 34       	cpi	r24, 0x43	; 67
    16c6:	59 f4       	brne	.+22     	; 0x16de <USART_DecodeRxFIFO+0x28>
    16c8:	04 c0       	rjmp	.+8      	; 0x16d2 <USART_DecodeRxFIFO+0x1c>
    16ca:	cf de       	rcall	.-610    	; 0x146a <USART_DecodeMessageRxFIFO>
    16cc:	88 23       	and	r24, r24
    16ce:	39 f0       	breq	.+14     	; 0x16de <USART_DecodeRxFIFO+0x28>
    16d0:	08 95       	ret
    16d2:	40 df       	rcall	.-384    	; 0x1554 <USART_DecodeCommandRxFIFO>
    16d4:	81 11       	cpse	r24, r1
    16d6:	0d c0       	rjmp	.+26     	; 0x16f2 <USART_DecodeRxFIFO+0x3c>
    16d8:	97 df       	rcall	.-210    	; 0x1608 <USART_DecodeValueFIFO>
    16da:	81 11       	cpse	r24, r1
    16dc:	0a c0       	rjmp	.+20     	; 0x16f2 <USART_DecodeRxFIFO+0x3c>
    16de:	60 e0       	ldi	r22, 0x00	; 0
    16e0:	70 e0       	ldi	r23, 0x00	; 0
    16e2:	80 91 10 11 	lds	r24, 0x1110
    16e6:	90 91 11 11 	lds	r25, 0x1111
    16ea:	0e 94 5d 02 	call	0x4ba	; 0x4ba <FifoRead>
    16ee:	88 23       	and	r24, r24
    16f0:	19 f3       	breq	.-58     	; 0x16b8 <USART_DecodeRxFIFO+0x2>
    16f2:	08 95       	ret

000016f4 <__vector_20>:
    16f4:	1f 92       	push	r1
    16f6:	0f 92       	push	r0
    16f8:	0f b6       	in	r0, 0x3f	; 63
    16fa:	0f 92       	push	r0
    16fc:	11 24       	eor	r1, r1
    16fe:	0b b6       	in	r0, 0x3b	; 59
    1700:	0f 92       	push	r0
    1702:	ef 92       	push	r14
    1704:	ff 92       	push	r15
    1706:	0f 93       	push	r16
    1708:	1f 93       	push	r17
    170a:	2f 93       	push	r18
    170c:	3f 93       	push	r19
    170e:	4f 93       	push	r20
    1710:	5f 93       	push	r21
    1712:	6f 93       	push	r22
    1714:	7f 93       	push	r23
    1716:	8f 93       	push	r24
    1718:	9f 93       	push	r25
    171a:	af 93       	push	r26
    171c:	bf 93       	push	r27
    171e:	cf 93       	push	r28
    1720:	df 93       	push	r29
    1722:	ef 93       	push	r30
    1724:	ff 93       	push	r31
    1726:	20 91 c6 00 	lds	r18, 0x00C6
    172a:	2e 37       	cpi	r18, 0x7E	; 126
    172c:	09 f0       	breq	.+2      	; 0x1730 <__vector_20+0x3c>
    172e:	3f c0       	rjmp	.+126    	; 0x17ae <__vector_20+0xba>
    1730:	80 91 c3 22 	lds	r24, 0x22C3
    1734:	90 91 c4 22 	lds	r25, 0x22C4
    1738:	84 30       	cpi	r24, 0x04	; 4
    173a:	91 05       	cpc	r25, r1
    173c:	40 f4       	brcc	.+16     	; 0x174e <__vector_20+0x5a>
    173e:	20 91 2c 24 	lds	r18, 0x242C
    1742:	30 e0       	ldi	r19, 0x00	; 0
    1744:	2c 5f       	subi	r18, 0xFC	; 252
    1746:	3f 4f       	sbci	r19, 0xFF	; 255
    1748:	82 17       	cp	r24, r18
    174a:	93 07       	cpc	r25, r19
    174c:	59 f5       	brne	.+86     	; 0x17a4 <__vector_20+0xb0>
    174e:	80 91 c1 22 	lds	r24, 0x22C1
    1752:	90 91 c2 22 	lds	r25, 0x22C2
    1756:	89 2b       	or	r24, r25
    1758:	21 f0       	breq	.+8      	; 0x1762 <__vector_20+0x6e>
    175a:	10 92 c2 22 	sts	0x22C2, r1
    175e:	10 92 c1 22 	sts	0x22C1, r1
    1762:	0b e2       	ldi	r16, 0x2B	; 43
    1764:	14 e2       	ldi	r17, 0x24	; 36
    1766:	c0 e0       	ldi	r28, 0x00	; 0
    1768:	d0 e0       	ldi	r29, 0x00	; 0
    176a:	0f 2e       	mov	r0, r31
    176c:	fc e2       	ldi	r31, 0x2C	; 44
    176e:	ef 2e       	mov	r14, r31
    1770:	f4 e2       	ldi	r31, 0x24	; 36
    1772:	ff 2e       	mov	r15, r31
    1774:	f0 2d       	mov	r31, r0
    1776:	f8 01       	movw	r30, r16
    1778:	61 91       	ld	r22, Z+
    177a:	8f 01       	movw	r16, r30
    177c:	80 91 10 11 	lds	r24, 0x1110
    1780:	90 91 11 11 	lds	r25, 0x1111
    1784:	0e 94 3d 02 	call	0x47a	; 0x47a <FifoWrite>
    1788:	88 23       	and	r24, r24
    178a:	21 f0       	breq	.+8      	; 0x1794 <__vector_20+0xa0>
    178c:	6d ea       	ldi	r22, 0xAD	; 173
    178e:	72 e2       	ldi	r23, 0x22	; 34
    1790:	80 e4       	ldi	r24, 0x40	; 64
    1792:	8d da       	rcall	.-2790   	; 0xcae <TWI_send_string>
    1794:	21 96       	adiw	r28, 0x01	; 1
    1796:	f7 01       	movw	r30, r14
    1798:	80 81       	ld	r24, Z
    179a:	90 e0       	ldi	r25, 0x00	; 0
    179c:	02 96       	adiw	r24, 0x02	; 2
    179e:	c8 17       	cp	r28, r24
    17a0:	d9 07       	cpc	r29, r25
    17a2:	4c f3       	brlt	.-46     	; 0x1776 <__vector_20+0x82>
    17a4:	10 92 c4 22 	sts	0x22C4, r1
    17a8:	10 92 c3 22 	sts	0x22C3, r1
    17ac:	16 c0       	rjmp	.+44     	; 0x17da <__vector_20+0xe6>
    17ae:	2d 37       	cpi	r18, 0x7D	; 125
    17b0:	39 f4       	brne	.+14     	; 0x17c0 <__vector_20+0xcc>
    17b2:	81 e0       	ldi	r24, 0x01	; 1
    17b4:	90 e0       	ldi	r25, 0x00	; 0
    17b6:	90 93 c2 22 	sts	0x22C2, r25
    17ba:	80 93 c1 22 	sts	0x22C1, r24
    17be:	0d c0       	rjmp	.+26     	; 0x17da <__vector_20+0xe6>
    17c0:	80 91 c3 22 	lds	r24, 0x22C3
    17c4:	90 91 c4 22 	lds	r25, 0x22C4
    17c8:	fc 01       	movw	r30, r24
    17ca:	e5 5d       	subi	r30, 0xD5	; 213
    17cc:	fb 4d       	sbci	r31, 0xDB	; 219
    17ce:	20 83       	st	Z, r18
    17d0:	01 96       	adiw	r24, 0x01	; 1
    17d2:	90 93 c4 22 	sts	0x22C4, r25
    17d6:	80 93 c3 22 	sts	0x22C3, r24
    17da:	ff 91       	pop	r31
    17dc:	ef 91       	pop	r30
    17de:	df 91       	pop	r29
    17e0:	cf 91       	pop	r28
    17e2:	bf 91       	pop	r27
    17e4:	af 91       	pop	r26
    17e6:	9f 91       	pop	r25
    17e8:	8f 91       	pop	r24
    17ea:	7f 91       	pop	r23
    17ec:	6f 91       	pop	r22
    17ee:	5f 91       	pop	r21
    17f0:	4f 91       	pop	r20
    17f2:	3f 91       	pop	r19
    17f4:	2f 91       	pop	r18
    17f6:	1f 91       	pop	r17
    17f8:	0f 91       	pop	r16
    17fa:	ff 90       	pop	r15
    17fc:	ef 90       	pop	r14
    17fe:	0f 90       	pop	r0
    1800:	0b be       	out	0x3b, r0	; 59
    1802:	0f 90       	pop	r0
    1804:	0f be       	out	0x3f, r0	; 63
    1806:	0f 90       	pop	r0
    1808:	1f 90       	pop	r1
    180a:	18 95       	reti

0000180c <USART_send_command_parameters>:
    180c:	80 93 30 26 	sts	0x2630, r24
    1810:	60 93 31 26 	sts	0x2631, r22
    1814:	40 93 32 26 	sts	0x2632, r20
    1818:	63 e0       	ldi	r22, 0x03	; 3
    181a:	83 e4       	ldi	r24, 0x43	; 67
    181c:	b4 cd       	rjmp	.-1176   	; 0x1386 <USART_SendPacket>

0000181e <__subsf3>:
    181e:	50 58       	subi	r21, 0x80	; 128

00001820 <__addsf3>:
    1820:	bb 27       	eor	r27, r27
    1822:	aa 27       	eor	r26, r26
    1824:	0e d0       	rcall	.+28     	; 0x1842 <__addsf3x>
    1826:	ed c1       	rjmp	.+986    	; 0x1c02 <__fp_round>
    1828:	b6 d1       	rcall	.+876    	; 0x1b96 <__fp_pscA>
    182a:	30 f0       	brcs	.+12     	; 0x1838 <__addsf3+0x18>
    182c:	bb d1       	rcall	.+886    	; 0x1ba4 <__fp_pscB>
    182e:	20 f0       	brcs	.+8      	; 0x1838 <__addsf3+0x18>
    1830:	31 f4       	brne	.+12     	; 0x183e <__addsf3+0x1e>
    1832:	9f 3f       	cpi	r25, 0xFF	; 255
    1834:	11 f4       	brne	.+4      	; 0x183a <__addsf3+0x1a>
    1836:	1e f4       	brtc	.+6      	; 0x183e <__addsf3+0x1e>
    1838:	86 c1       	rjmp	.+780    	; 0x1b46 <__fp_nan>
    183a:	0e f4       	brtc	.+2      	; 0x183e <__addsf3+0x1e>
    183c:	e0 95       	com	r30
    183e:	e7 fb       	bst	r30, 7
    1840:	7c c1       	rjmp	.+760    	; 0x1b3a <__fp_inf>

00001842 <__addsf3x>:
    1842:	e9 2f       	mov	r30, r25
    1844:	00 d2       	rcall	.+1024   	; 0x1c46 <__fp_split3>
    1846:	80 f3       	brcs	.-32     	; 0x1828 <__addsf3+0x8>
    1848:	ba 17       	cp	r27, r26
    184a:	62 07       	cpc	r22, r18
    184c:	73 07       	cpc	r23, r19
    184e:	84 07       	cpc	r24, r20
    1850:	95 07       	cpc	r25, r21
    1852:	18 f0       	brcs	.+6      	; 0x185a <__addsf3x+0x18>
    1854:	71 f4       	brne	.+28     	; 0x1872 <__addsf3x+0x30>
    1856:	9e f5       	brtc	.+102    	; 0x18be <__addsf3x+0x7c>
    1858:	18 c2       	rjmp	.+1072   	; 0x1c8a <__fp_zero>
    185a:	0e f4       	brtc	.+2      	; 0x185e <__addsf3x+0x1c>
    185c:	e0 95       	com	r30
    185e:	0b 2e       	mov	r0, r27
    1860:	ba 2f       	mov	r27, r26
    1862:	a0 2d       	mov	r26, r0
    1864:	0b 01       	movw	r0, r22
    1866:	b9 01       	movw	r22, r18
    1868:	90 01       	movw	r18, r0
    186a:	0c 01       	movw	r0, r24
    186c:	ca 01       	movw	r24, r20
    186e:	a0 01       	movw	r20, r0
    1870:	11 24       	eor	r1, r1
    1872:	ff 27       	eor	r31, r31
    1874:	59 1b       	sub	r21, r25
    1876:	99 f0       	breq	.+38     	; 0x189e <__addsf3x+0x5c>
    1878:	59 3f       	cpi	r21, 0xF9	; 249
    187a:	50 f4       	brcc	.+20     	; 0x1890 <__addsf3x+0x4e>
    187c:	50 3e       	cpi	r21, 0xE0	; 224
    187e:	68 f1       	brcs	.+90     	; 0x18da <__addsf3x+0x98>
    1880:	1a 16       	cp	r1, r26
    1882:	f0 40       	sbci	r31, 0x00	; 0
    1884:	a2 2f       	mov	r26, r18
    1886:	23 2f       	mov	r18, r19
    1888:	34 2f       	mov	r19, r20
    188a:	44 27       	eor	r20, r20
    188c:	58 5f       	subi	r21, 0xF8	; 248
    188e:	f3 cf       	rjmp	.-26     	; 0x1876 <__addsf3x+0x34>
    1890:	46 95       	lsr	r20
    1892:	37 95       	ror	r19
    1894:	27 95       	ror	r18
    1896:	a7 95       	ror	r26
    1898:	f0 40       	sbci	r31, 0x00	; 0
    189a:	53 95       	inc	r21
    189c:	c9 f7       	brne	.-14     	; 0x1890 <__addsf3x+0x4e>
    189e:	7e f4       	brtc	.+30     	; 0x18be <__addsf3x+0x7c>
    18a0:	1f 16       	cp	r1, r31
    18a2:	ba 0b       	sbc	r27, r26
    18a4:	62 0b       	sbc	r22, r18
    18a6:	73 0b       	sbc	r23, r19
    18a8:	84 0b       	sbc	r24, r20
    18aa:	ba f0       	brmi	.+46     	; 0x18da <__addsf3x+0x98>
    18ac:	91 50       	subi	r25, 0x01	; 1
    18ae:	a1 f0       	breq	.+40     	; 0x18d8 <__addsf3x+0x96>
    18b0:	ff 0f       	add	r31, r31
    18b2:	bb 1f       	adc	r27, r27
    18b4:	66 1f       	adc	r22, r22
    18b6:	77 1f       	adc	r23, r23
    18b8:	88 1f       	adc	r24, r24
    18ba:	c2 f7       	brpl	.-16     	; 0x18ac <__addsf3x+0x6a>
    18bc:	0e c0       	rjmp	.+28     	; 0x18da <__addsf3x+0x98>
    18be:	ba 0f       	add	r27, r26
    18c0:	62 1f       	adc	r22, r18
    18c2:	73 1f       	adc	r23, r19
    18c4:	84 1f       	adc	r24, r20
    18c6:	48 f4       	brcc	.+18     	; 0x18da <__addsf3x+0x98>
    18c8:	87 95       	ror	r24
    18ca:	77 95       	ror	r23
    18cc:	67 95       	ror	r22
    18ce:	b7 95       	ror	r27
    18d0:	f7 95       	ror	r31
    18d2:	9e 3f       	cpi	r25, 0xFE	; 254
    18d4:	08 f0       	brcs	.+2      	; 0x18d8 <__addsf3x+0x96>
    18d6:	b3 cf       	rjmp	.-154    	; 0x183e <__addsf3+0x1e>
    18d8:	93 95       	inc	r25
    18da:	88 0f       	add	r24, r24
    18dc:	08 f0       	brcs	.+2      	; 0x18e0 <__addsf3x+0x9e>
    18de:	99 27       	eor	r25, r25
    18e0:	ee 0f       	add	r30, r30
    18e2:	97 95       	ror	r25
    18e4:	87 95       	ror	r24
    18e6:	08 95       	ret

000018e8 <atan>:
    18e8:	df 93       	push	r29
    18ea:	dd 27       	eor	r29, r29
    18ec:	b9 2f       	mov	r27, r25
    18ee:	bf 77       	andi	r27, 0x7F	; 127
    18f0:	40 e8       	ldi	r20, 0x80	; 128
    18f2:	5f e3       	ldi	r21, 0x3F	; 63
    18f4:	16 16       	cp	r1, r22
    18f6:	17 06       	cpc	r1, r23
    18f8:	48 07       	cpc	r20, r24
    18fa:	5b 07       	cpc	r21, r27
    18fc:	10 f4       	brcc	.+4      	; 0x1902 <atan+0x1a>
    18fe:	d9 2f       	mov	r29, r25
    1900:	cf d1       	rcall	.+926    	; 0x1ca0 <inverse>
    1902:	9f 93       	push	r25
    1904:	8f 93       	push	r24
    1906:	7f 93       	push	r23
    1908:	6f 93       	push	r22
    190a:	34 d2       	rcall	.+1128   	; 0x1d74 <square>
    190c:	ec e8       	ldi	r30, 0x8C	; 140
    190e:	f0 e0       	ldi	r31, 0x00	; 0
    1910:	1d d1       	rcall	.+570    	; 0x1b4c <__fp_powser>
    1912:	77 d1       	rcall	.+750    	; 0x1c02 <__fp_round>
    1914:	2f 91       	pop	r18
    1916:	3f 91       	pop	r19
    1918:	4f 91       	pop	r20
    191a:	5f 91       	pop	r21
    191c:	d4 d1       	rcall	.+936    	; 0x1cc6 <__mulsf3x>
    191e:	dd 23       	and	r29, r29
    1920:	49 f0       	breq	.+18     	; 0x1934 <atan+0x4c>
    1922:	90 58       	subi	r25, 0x80	; 128
    1924:	a2 ea       	ldi	r26, 0xA2	; 162
    1926:	2a ed       	ldi	r18, 0xDA	; 218
    1928:	3f e0       	ldi	r19, 0x0F	; 15
    192a:	49 ec       	ldi	r20, 0xC9	; 201
    192c:	5f e3       	ldi	r21, 0x3F	; 63
    192e:	d0 78       	andi	r29, 0x80	; 128
    1930:	5d 27       	eor	r21, r29
    1932:	87 df       	rcall	.-242    	; 0x1842 <__addsf3x>
    1934:	df 91       	pop	r29
    1936:	65 c1       	rjmp	.+714    	; 0x1c02 <__fp_round>

00001938 <__cmpsf2>:
    1938:	dc d0       	rcall	.+440    	; 0x1af2 <__fp_cmp>
    193a:	08 f4       	brcc	.+2      	; 0x193e <__cmpsf2+0x6>
    193c:	81 e0       	ldi	r24, 0x01	; 1
    193e:	08 95       	ret

00001940 <cos>:
    1940:	39 d1       	rcall	.+626    	; 0x1bb4 <__fp_rempio2>
    1942:	e3 95       	inc	r30
    1944:	6f c1       	rjmp	.+734    	; 0x1c24 <__fp_sinus>

00001946 <__divsf3>:
    1946:	0c d0       	rcall	.+24     	; 0x1960 <__divsf3x>
    1948:	5c c1       	rjmp	.+696    	; 0x1c02 <__fp_round>
    194a:	2c d1       	rcall	.+600    	; 0x1ba4 <__fp_pscB>
    194c:	40 f0       	brcs	.+16     	; 0x195e <__divsf3+0x18>
    194e:	23 d1       	rcall	.+582    	; 0x1b96 <__fp_pscA>
    1950:	30 f0       	brcs	.+12     	; 0x195e <__divsf3+0x18>
    1952:	21 f4       	brne	.+8      	; 0x195c <__divsf3+0x16>
    1954:	5f 3f       	cpi	r21, 0xFF	; 255
    1956:	19 f0       	breq	.+6      	; 0x195e <__divsf3+0x18>
    1958:	f0 c0       	rjmp	.+480    	; 0x1b3a <__fp_inf>
    195a:	51 11       	cpse	r21, r1
    195c:	97 c1       	rjmp	.+814    	; 0x1c8c <__fp_szero>
    195e:	f3 c0       	rjmp	.+486    	; 0x1b46 <__fp_nan>

00001960 <__divsf3x>:
    1960:	72 d1       	rcall	.+740    	; 0x1c46 <__fp_split3>
    1962:	98 f3       	brcs	.-26     	; 0x194a <__divsf3+0x4>

00001964 <__divsf3_pse>:
    1964:	99 23       	and	r25, r25
    1966:	c9 f3       	breq	.-14     	; 0x195a <__divsf3+0x14>
    1968:	55 23       	and	r21, r21
    196a:	b1 f3       	breq	.-20     	; 0x1958 <__divsf3+0x12>
    196c:	95 1b       	sub	r25, r21
    196e:	55 0b       	sbc	r21, r21
    1970:	bb 27       	eor	r27, r27
    1972:	aa 27       	eor	r26, r26
    1974:	62 17       	cp	r22, r18
    1976:	73 07       	cpc	r23, r19
    1978:	84 07       	cpc	r24, r20
    197a:	38 f0       	brcs	.+14     	; 0x198a <__divsf3_pse+0x26>
    197c:	9f 5f       	subi	r25, 0xFF	; 255
    197e:	5f 4f       	sbci	r21, 0xFF	; 255
    1980:	22 0f       	add	r18, r18
    1982:	33 1f       	adc	r19, r19
    1984:	44 1f       	adc	r20, r20
    1986:	aa 1f       	adc	r26, r26
    1988:	a9 f3       	breq	.-22     	; 0x1974 <__divsf3_pse+0x10>
    198a:	33 d0       	rcall	.+102    	; 0x19f2 <__divsf3_pse+0x8e>
    198c:	0e 2e       	mov	r0, r30
    198e:	3a f0       	brmi	.+14     	; 0x199e <__divsf3_pse+0x3a>
    1990:	e0 e8       	ldi	r30, 0x80	; 128
    1992:	30 d0       	rcall	.+96     	; 0x19f4 <__divsf3_pse+0x90>
    1994:	91 50       	subi	r25, 0x01	; 1
    1996:	50 40       	sbci	r21, 0x00	; 0
    1998:	e6 95       	lsr	r30
    199a:	00 1c       	adc	r0, r0
    199c:	ca f7       	brpl	.-14     	; 0x1990 <__divsf3_pse+0x2c>
    199e:	29 d0       	rcall	.+82     	; 0x19f2 <__divsf3_pse+0x8e>
    19a0:	fe 2f       	mov	r31, r30
    19a2:	27 d0       	rcall	.+78     	; 0x19f2 <__divsf3_pse+0x8e>
    19a4:	66 0f       	add	r22, r22
    19a6:	77 1f       	adc	r23, r23
    19a8:	88 1f       	adc	r24, r24
    19aa:	bb 1f       	adc	r27, r27
    19ac:	26 17       	cp	r18, r22
    19ae:	37 07       	cpc	r19, r23
    19b0:	48 07       	cpc	r20, r24
    19b2:	ab 07       	cpc	r26, r27
    19b4:	b0 e8       	ldi	r27, 0x80	; 128
    19b6:	09 f0       	breq	.+2      	; 0x19ba <__divsf3_pse+0x56>
    19b8:	bb 0b       	sbc	r27, r27
    19ba:	80 2d       	mov	r24, r0
    19bc:	bf 01       	movw	r22, r30
    19be:	ff 27       	eor	r31, r31
    19c0:	93 58       	subi	r25, 0x83	; 131
    19c2:	5f 4f       	sbci	r21, 0xFF	; 255
    19c4:	2a f0       	brmi	.+10     	; 0x19d0 <__divsf3_pse+0x6c>
    19c6:	9e 3f       	cpi	r25, 0xFE	; 254
    19c8:	51 05       	cpc	r21, r1
    19ca:	68 f0       	brcs	.+26     	; 0x19e6 <__divsf3_pse+0x82>
    19cc:	b6 c0       	rjmp	.+364    	; 0x1b3a <__fp_inf>
    19ce:	5e c1       	rjmp	.+700    	; 0x1c8c <__fp_szero>
    19d0:	5f 3f       	cpi	r21, 0xFF	; 255
    19d2:	ec f3       	brlt	.-6      	; 0x19ce <__divsf3_pse+0x6a>
    19d4:	98 3e       	cpi	r25, 0xE8	; 232
    19d6:	dc f3       	brlt	.-10     	; 0x19ce <__divsf3_pse+0x6a>
    19d8:	86 95       	lsr	r24
    19da:	77 95       	ror	r23
    19dc:	67 95       	ror	r22
    19de:	b7 95       	ror	r27
    19e0:	f7 95       	ror	r31
    19e2:	9f 5f       	subi	r25, 0xFF	; 255
    19e4:	c9 f7       	brne	.-14     	; 0x19d8 <__divsf3_pse+0x74>
    19e6:	88 0f       	add	r24, r24
    19e8:	91 1d       	adc	r25, r1
    19ea:	96 95       	lsr	r25
    19ec:	87 95       	ror	r24
    19ee:	97 f9       	bld	r25, 7
    19f0:	08 95       	ret
    19f2:	e1 e0       	ldi	r30, 0x01	; 1
    19f4:	66 0f       	add	r22, r22
    19f6:	77 1f       	adc	r23, r23
    19f8:	88 1f       	adc	r24, r24
    19fa:	bb 1f       	adc	r27, r27
    19fc:	62 17       	cp	r22, r18
    19fe:	73 07       	cpc	r23, r19
    1a00:	84 07       	cpc	r24, r20
    1a02:	ba 07       	cpc	r27, r26
    1a04:	20 f0       	brcs	.+8      	; 0x1a0e <__divsf3_pse+0xaa>
    1a06:	62 1b       	sub	r22, r18
    1a08:	73 0b       	sbc	r23, r19
    1a0a:	84 0b       	sbc	r24, r20
    1a0c:	ba 0b       	sbc	r27, r26
    1a0e:	ee 1f       	adc	r30, r30
    1a10:	88 f7       	brcc	.-30     	; 0x19f4 <__divsf3_pse+0x90>
    1a12:	e0 95       	com	r30
    1a14:	08 95       	ret

00001a16 <__fixsfsi>:
    1a16:	04 d0       	rcall	.+8      	; 0x1a20 <__fixunssfsi>
    1a18:	68 94       	set
    1a1a:	b1 11       	cpse	r27, r1
    1a1c:	37 c1       	rjmp	.+622    	; 0x1c8c <__fp_szero>
    1a1e:	08 95       	ret

00001a20 <__fixunssfsi>:
    1a20:	1a d1       	rcall	.+564    	; 0x1c56 <__fp_splitA>
    1a22:	88 f0       	brcs	.+34     	; 0x1a46 <__fixunssfsi+0x26>
    1a24:	9f 57       	subi	r25, 0x7F	; 127
    1a26:	90 f0       	brcs	.+36     	; 0x1a4c <__fixunssfsi+0x2c>
    1a28:	b9 2f       	mov	r27, r25
    1a2a:	99 27       	eor	r25, r25
    1a2c:	b7 51       	subi	r27, 0x17	; 23
    1a2e:	a0 f0       	brcs	.+40     	; 0x1a58 <__fixunssfsi+0x38>
    1a30:	d1 f0       	breq	.+52     	; 0x1a66 <__fixunssfsi+0x46>
    1a32:	66 0f       	add	r22, r22
    1a34:	77 1f       	adc	r23, r23
    1a36:	88 1f       	adc	r24, r24
    1a38:	99 1f       	adc	r25, r25
    1a3a:	1a f0       	brmi	.+6      	; 0x1a42 <__fixunssfsi+0x22>
    1a3c:	ba 95       	dec	r27
    1a3e:	c9 f7       	brne	.-14     	; 0x1a32 <__fixunssfsi+0x12>
    1a40:	12 c0       	rjmp	.+36     	; 0x1a66 <__fixunssfsi+0x46>
    1a42:	b1 30       	cpi	r27, 0x01	; 1
    1a44:	81 f0       	breq	.+32     	; 0x1a66 <__fixunssfsi+0x46>
    1a46:	21 d1       	rcall	.+578    	; 0x1c8a <__fp_zero>
    1a48:	b1 e0       	ldi	r27, 0x01	; 1
    1a4a:	08 95       	ret
    1a4c:	1e c1       	rjmp	.+572    	; 0x1c8a <__fp_zero>
    1a4e:	67 2f       	mov	r22, r23
    1a50:	78 2f       	mov	r23, r24
    1a52:	88 27       	eor	r24, r24
    1a54:	b8 5f       	subi	r27, 0xF8	; 248
    1a56:	39 f0       	breq	.+14     	; 0x1a66 <__fixunssfsi+0x46>
    1a58:	b9 3f       	cpi	r27, 0xF9	; 249
    1a5a:	cc f3       	brlt	.-14     	; 0x1a4e <__fixunssfsi+0x2e>
    1a5c:	86 95       	lsr	r24
    1a5e:	77 95       	ror	r23
    1a60:	67 95       	ror	r22
    1a62:	b3 95       	inc	r27
    1a64:	d9 f7       	brne	.-10     	; 0x1a5c <__fixunssfsi+0x3c>
    1a66:	3e f4       	brtc	.+14     	; 0x1a76 <__fixunssfsi+0x56>
    1a68:	90 95       	com	r25
    1a6a:	80 95       	com	r24
    1a6c:	70 95       	com	r23
    1a6e:	61 95       	neg	r22
    1a70:	7f 4f       	sbci	r23, 0xFF	; 255
    1a72:	8f 4f       	sbci	r24, 0xFF	; 255
    1a74:	9f 4f       	sbci	r25, 0xFF	; 255
    1a76:	08 95       	ret

00001a78 <__floatunsisf>:
    1a78:	e8 94       	clt
    1a7a:	09 c0       	rjmp	.+18     	; 0x1a8e <__floatsisf+0x12>

00001a7c <__floatsisf>:
    1a7c:	97 fb       	bst	r25, 7
    1a7e:	3e f4       	brtc	.+14     	; 0x1a8e <__floatsisf+0x12>
    1a80:	90 95       	com	r25
    1a82:	80 95       	com	r24
    1a84:	70 95       	com	r23
    1a86:	61 95       	neg	r22
    1a88:	7f 4f       	sbci	r23, 0xFF	; 255
    1a8a:	8f 4f       	sbci	r24, 0xFF	; 255
    1a8c:	9f 4f       	sbci	r25, 0xFF	; 255
    1a8e:	99 23       	and	r25, r25
    1a90:	a9 f0       	breq	.+42     	; 0x1abc <__floatsisf+0x40>
    1a92:	f9 2f       	mov	r31, r25
    1a94:	96 e9       	ldi	r25, 0x96	; 150
    1a96:	bb 27       	eor	r27, r27
    1a98:	93 95       	inc	r25
    1a9a:	f6 95       	lsr	r31
    1a9c:	87 95       	ror	r24
    1a9e:	77 95       	ror	r23
    1aa0:	67 95       	ror	r22
    1aa2:	b7 95       	ror	r27
    1aa4:	f1 11       	cpse	r31, r1
    1aa6:	f8 cf       	rjmp	.-16     	; 0x1a98 <__floatsisf+0x1c>
    1aa8:	fa f4       	brpl	.+62     	; 0x1ae8 <__floatsisf+0x6c>
    1aaa:	bb 0f       	add	r27, r27
    1aac:	11 f4       	brne	.+4      	; 0x1ab2 <__floatsisf+0x36>
    1aae:	60 ff       	sbrs	r22, 0
    1ab0:	1b c0       	rjmp	.+54     	; 0x1ae8 <__floatsisf+0x6c>
    1ab2:	6f 5f       	subi	r22, 0xFF	; 255
    1ab4:	7f 4f       	sbci	r23, 0xFF	; 255
    1ab6:	8f 4f       	sbci	r24, 0xFF	; 255
    1ab8:	9f 4f       	sbci	r25, 0xFF	; 255
    1aba:	16 c0       	rjmp	.+44     	; 0x1ae8 <__floatsisf+0x6c>
    1abc:	88 23       	and	r24, r24
    1abe:	11 f0       	breq	.+4      	; 0x1ac4 <__floatsisf+0x48>
    1ac0:	96 e9       	ldi	r25, 0x96	; 150
    1ac2:	11 c0       	rjmp	.+34     	; 0x1ae6 <__floatsisf+0x6a>
    1ac4:	77 23       	and	r23, r23
    1ac6:	21 f0       	breq	.+8      	; 0x1ad0 <__floatsisf+0x54>
    1ac8:	9e e8       	ldi	r25, 0x8E	; 142
    1aca:	87 2f       	mov	r24, r23
    1acc:	76 2f       	mov	r23, r22
    1ace:	05 c0       	rjmp	.+10     	; 0x1ada <__floatsisf+0x5e>
    1ad0:	66 23       	and	r22, r22
    1ad2:	71 f0       	breq	.+28     	; 0x1af0 <__floatsisf+0x74>
    1ad4:	96 e8       	ldi	r25, 0x86	; 134
    1ad6:	86 2f       	mov	r24, r22
    1ad8:	70 e0       	ldi	r23, 0x00	; 0
    1ada:	60 e0       	ldi	r22, 0x00	; 0
    1adc:	2a f0       	brmi	.+10     	; 0x1ae8 <__floatsisf+0x6c>
    1ade:	9a 95       	dec	r25
    1ae0:	66 0f       	add	r22, r22
    1ae2:	77 1f       	adc	r23, r23
    1ae4:	88 1f       	adc	r24, r24
    1ae6:	da f7       	brpl	.-10     	; 0x1ade <__floatsisf+0x62>
    1ae8:	88 0f       	add	r24, r24
    1aea:	96 95       	lsr	r25
    1aec:	87 95       	ror	r24
    1aee:	97 f9       	bld	r25, 7
    1af0:	08 95       	ret

00001af2 <__fp_cmp>:
    1af2:	99 0f       	add	r25, r25
    1af4:	00 08       	sbc	r0, r0
    1af6:	55 0f       	add	r21, r21
    1af8:	aa 0b       	sbc	r26, r26
    1afa:	e0 e8       	ldi	r30, 0x80	; 128
    1afc:	fe ef       	ldi	r31, 0xFE	; 254
    1afe:	16 16       	cp	r1, r22
    1b00:	17 06       	cpc	r1, r23
    1b02:	e8 07       	cpc	r30, r24
    1b04:	f9 07       	cpc	r31, r25
    1b06:	c0 f0       	brcs	.+48     	; 0x1b38 <__fp_cmp+0x46>
    1b08:	12 16       	cp	r1, r18
    1b0a:	13 06       	cpc	r1, r19
    1b0c:	e4 07       	cpc	r30, r20
    1b0e:	f5 07       	cpc	r31, r21
    1b10:	98 f0       	brcs	.+38     	; 0x1b38 <__fp_cmp+0x46>
    1b12:	62 1b       	sub	r22, r18
    1b14:	73 0b       	sbc	r23, r19
    1b16:	84 0b       	sbc	r24, r20
    1b18:	95 0b       	sbc	r25, r21
    1b1a:	39 f4       	brne	.+14     	; 0x1b2a <__fp_cmp+0x38>
    1b1c:	0a 26       	eor	r0, r26
    1b1e:	61 f0       	breq	.+24     	; 0x1b38 <__fp_cmp+0x46>
    1b20:	23 2b       	or	r18, r19
    1b22:	24 2b       	or	r18, r20
    1b24:	25 2b       	or	r18, r21
    1b26:	21 f4       	brne	.+8      	; 0x1b30 <__fp_cmp+0x3e>
    1b28:	08 95       	ret
    1b2a:	0a 26       	eor	r0, r26
    1b2c:	09 f4       	brne	.+2      	; 0x1b30 <__fp_cmp+0x3e>
    1b2e:	a1 40       	sbci	r26, 0x01	; 1
    1b30:	a6 95       	lsr	r26
    1b32:	8f ef       	ldi	r24, 0xFF	; 255
    1b34:	81 1d       	adc	r24, r1
    1b36:	81 1d       	adc	r24, r1
    1b38:	08 95       	ret

00001b3a <__fp_inf>:
    1b3a:	97 f9       	bld	r25, 7
    1b3c:	9f 67       	ori	r25, 0x7F	; 127
    1b3e:	80 e8       	ldi	r24, 0x80	; 128
    1b40:	70 e0       	ldi	r23, 0x00	; 0
    1b42:	60 e0       	ldi	r22, 0x00	; 0
    1b44:	08 95       	ret

00001b46 <__fp_nan>:
    1b46:	9f ef       	ldi	r25, 0xFF	; 255
    1b48:	80 ec       	ldi	r24, 0xC0	; 192
    1b4a:	08 95       	ret

00001b4c <__fp_powser>:
    1b4c:	df 93       	push	r29
    1b4e:	cf 93       	push	r28
    1b50:	1f 93       	push	r17
    1b52:	0f 93       	push	r16
    1b54:	ff 92       	push	r15
    1b56:	ef 92       	push	r14
    1b58:	df 92       	push	r13
    1b5a:	7b 01       	movw	r14, r22
    1b5c:	8c 01       	movw	r16, r24
    1b5e:	68 94       	set
    1b60:	05 c0       	rjmp	.+10     	; 0x1b6c <__fp_powser+0x20>
    1b62:	da 2e       	mov	r13, r26
    1b64:	ef 01       	movw	r28, r30
    1b66:	af d0       	rcall	.+350    	; 0x1cc6 <__mulsf3x>
    1b68:	fe 01       	movw	r30, r28
    1b6a:	e8 94       	clt
    1b6c:	a5 91       	lpm	r26, Z+
    1b6e:	25 91       	lpm	r18, Z+
    1b70:	35 91       	lpm	r19, Z+
    1b72:	45 91       	lpm	r20, Z+
    1b74:	55 91       	lpm	r21, Z+
    1b76:	ae f3       	brts	.-22     	; 0x1b62 <__fp_powser+0x16>
    1b78:	ef 01       	movw	r28, r30
    1b7a:	63 de       	rcall	.-826    	; 0x1842 <__addsf3x>
    1b7c:	fe 01       	movw	r30, r28
    1b7e:	97 01       	movw	r18, r14
    1b80:	a8 01       	movw	r20, r16
    1b82:	da 94       	dec	r13
    1b84:	79 f7       	brne	.-34     	; 0x1b64 <__fp_powser+0x18>
    1b86:	df 90       	pop	r13
    1b88:	ef 90       	pop	r14
    1b8a:	ff 90       	pop	r15
    1b8c:	0f 91       	pop	r16
    1b8e:	1f 91       	pop	r17
    1b90:	cf 91       	pop	r28
    1b92:	df 91       	pop	r29
    1b94:	08 95       	ret

00001b96 <__fp_pscA>:
    1b96:	00 24       	eor	r0, r0
    1b98:	0a 94       	dec	r0
    1b9a:	16 16       	cp	r1, r22
    1b9c:	17 06       	cpc	r1, r23
    1b9e:	18 06       	cpc	r1, r24
    1ba0:	09 06       	cpc	r0, r25
    1ba2:	08 95       	ret

00001ba4 <__fp_pscB>:
    1ba4:	00 24       	eor	r0, r0
    1ba6:	0a 94       	dec	r0
    1ba8:	12 16       	cp	r1, r18
    1baa:	13 06       	cpc	r1, r19
    1bac:	14 06       	cpc	r1, r20
    1bae:	05 06       	cpc	r0, r21
    1bb0:	08 95       	ret
    1bb2:	c9 cf       	rjmp	.-110    	; 0x1b46 <__fp_nan>

00001bb4 <__fp_rempio2>:
    1bb4:	50 d0       	rcall	.+160    	; 0x1c56 <__fp_splitA>
    1bb6:	e8 f3       	brcs	.-6      	; 0x1bb2 <__fp_pscB+0xe>
    1bb8:	e8 94       	clt
    1bba:	e0 e0       	ldi	r30, 0x00	; 0
    1bbc:	bb 27       	eor	r27, r27
    1bbe:	9f 57       	subi	r25, 0x7F	; 127
    1bc0:	f0 f0       	brcs	.+60     	; 0x1bfe <__fp_rempio2+0x4a>
    1bc2:	2a ed       	ldi	r18, 0xDA	; 218
    1bc4:	3f e0       	ldi	r19, 0x0F	; 15
    1bc6:	49 ec       	ldi	r20, 0xC9	; 201
    1bc8:	06 c0       	rjmp	.+12     	; 0x1bd6 <__fp_rempio2+0x22>
    1bca:	ee 0f       	add	r30, r30
    1bcc:	bb 0f       	add	r27, r27
    1bce:	66 1f       	adc	r22, r22
    1bd0:	77 1f       	adc	r23, r23
    1bd2:	88 1f       	adc	r24, r24
    1bd4:	28 f0       	brcs	.+10     	; 0x1be0 <__fp_rempio2+0x2c>
    1bd6:	b2 3a       	cpi	r27, 0xA2	; 162
    1bd8:	62 07       	cpc	r22, r18
    1bda:	73 07       	cpc	r23, r19
    1bdc:	84 07       	cpc	r24, r20
    1bde:	28 f0       	brcs	.+10     	; 0x1bea <__fp_rempio2+0x36>
    1be0:	b2 5a       	subi	r27, 0xA2	; 162
    1be2:	62 0b       	sbc	r22, r18
    1be4:	73 0b       	sbc	r23, r19
    1be6:	84 0b       	sbc	r24, r20
    1be8:	e3 95       	inc	r30
    1bea:	9a 95       	dec	r25
    1bec:	72 f7       	brpl	.-36     	; 0x1bca <__fp_rempio2+0x16>
    1bee:	80 38       	cpi	r24, 0x80	; 128
    1bf0:	30 f4       	brcc	.+12     	; 0x1bfe <__fp_rempio2+0x4a>
    1bf2:	9a 95       	dec	r25
    1bf4:	bb 0f       	add	r27, r27
    1bf6:	66 1f       	adc	r22, r22
    1bf8:	77 1f       	adc	r23, r23
    1bfa:	88 1f       	adc	r24, r24
    1bfc:	d2 f7       	brpl	.-12     	; 0x1bf2 <__fp_rempio2+0x3e>
    1bfe:	90 48       	sbci	r25, 0x80	; 128
    1c00:	be c0       	rjmp	.+380    	; 0x1d7e <__fp_mpack_finite>

00001c02 <__fp_round>:
    1c02:	09 2e       	mov	r0, r25
    1c04:	03 94       	inc	r0
    1c06:	00 0c       	add	r0, r0
    1c08:	11 f4       	brne	.+4      	; 0x1c0e <__fp_round+0xc>
    1c0a:	88 23       	and	r24, r24
    1c0c:	52 f0       	brmi	.+20     	; 0x1c22 <__fp_round+0x20>
    1c0e:	bb 0f       	add	r27, r27
    1c10:	40 f4       	brcc	.+16     	; 0x1c22 <__fp_round+0x20>
    1c12:	bf 2b       	or	r27, r31
    1c14:	11 f4       	brne	.+4      	; 0x1c1a <__fp_round+0x18>
    1c16:	60 ff       	sbrs	r22, 0
    1c18:	04 c0       	rjmp	.+8      	; 0x1c22 <__fp_round+0x20>
    1c1a:	6f 5f       	subi	r22, 0xFF	; 255
    1c1c:	7f 4f       	sbci	r23, 0xFF	; 255
    1c1e:	8f 4f       	sbci	r24, 0xFF	; 255
    1c20:	9f 4f       	sbci	r25, 0xFF	; 255
    1c22:	08 95       	ret

00001c24 <__fp_sinus>:
    1c24:	ef 93       	push	r30
    1c26:	e0 ff       	sbrs	r30, 0
    1c28:	06 c0       	rjmp	.+12     	; 0x1c36 <__fp_sinus+0x12>
    1c2a:	a2 ea       	ldi	r26, 0xA2	; 162
    1c2c:	2a ed       	ldi	r18, 0xDA	; 218
    1c2e:	3f e0       	ldi	r19, 0x0F	; 15
    1c30:	49 ec       	ldi	r20, 0xC9	; 201
    1c32:	5f eb       	ldi	r21, 0xBF	; 191
    1c34:	06 de       	rcall	.-1012   	; 0x1842 <__addsf3x>
    1c36:	e5 df       	rcall	.-54     	; 0x1c02 <__fp_round>
    1c38:	0f 90       	pop	r0
    1c3a:	03 94       	inc	r0
    1c3c:	01 fc       	sbrc	r0, 1
    1c3e:	90 58       	subi	r25, 0x80	; 128
    1c40:	e9 eb       	ldi	r30, 0xB9	; 185
    1c42:	f0 e0       	ldi	r31, 0x00	; 0
    1c44:	a8 c0       	rjmp	.+336    	; 0x1d96 <__fp_powsodd>

00001c46 <__fp_split3>:
    1c46:	57 fd       	sbrc	r21, 7
    1c48:	90 58       	subi	r25, 0x80	; 128
    1c4a:	44 0f       	add	r20, r20
    1c4c:	55 1f       	adc	r21, r21
    1c4e:	59 f0       	breq	.+22     	; 0x1c66 <__fp_splitA+0x10>
    1c50:	5f 3f       	cpi	r21, 0xFF	; 255
    1c52:	71 f0       	breq	.+28     	; 0x1c70 <__fp_splitA+0x1a>
    1c54:	47 95       	ror	r20

00001c56 <__fp_splitA>:
    1c56:	88 0f       	add	r24, r24
    1c58:	97 fb       	bst	r25, 7
    1c5a:	99 1f       	adc	r25, r25
    1c5c:	61 f0       	breq	.+24     	; 0x1c76 <__fp_splitA+0x20>
    1c5e:	9f 3f       	cpi	r25, 0xFF	; 255
    1c60:	79 f0       	breq	.+30     	; 0x1c80 <__fp_splitA+0x2a>
    1c62:	87 95       	ror	r24
    1c64:	08 95       	ret
    1c66:	12 16       	cp	r1, r18
    1c68:	13 06       	cpc	r1, r19
    1c6a:	14 06       	cpc	r1, r20
    1c6c:	55 1f       	adc	r21, r21
    1c6e:	f2 cf       	rjmp	.-28     	; 0x1c54 <__fp_split3+0xe>
    1c70:	46 95       	lsr	r20
    1c72:	f1 df       	rcall	.-30     	; 0x1c56 <__fp_splitA>
    1c74:	08 c0       	rjmp	.+16     	; 0x1c86 <__fp_splitA+0x30>
    1c76:	16 16       	cp	r1, r22
    1c78:	17 06       	cpc	r1, r23
    1c7a:	18 06       	cpc	r1, r24
    1c7c:	99 1f       	adc	r25, r25
    1c7e:	f1 cf       	rjmp	.-30     	; 0x1c62 <__fp_splitA+0xc>
    1c80:	86 95       	lsr	r24
    1c82:	71 05       	cpc	r23, r1
    1c84:	61 05       	cpc	r22, r1
    1c86:	08 94       	sec
    1c88:	08 95       	ret

00001c8a <__fp_zero>:
    1c8a:	e8 94       	clt

00001c8c <__fp_szero>:
    1c8c:	bb 27       	eor	r27, r27
    1c8e:	66 27       	eor	r22, r22
    1c90:	77 27       	eor	r23, r23
    1c92:	cb 01       	movw	r24, r22
    1c94:	97 f9       	bld	r25, 7
    1c96:	08 95       	ret

00001c98 <__gesf2>:
    1c98:	2c df       	rcall	.-424    	; 0x1af2 <__fp_cmp>
    1c9a:	08 f4       	brcc	.+2      	; 0x1c9e <__gesf2+0x6>
    1c9c:	8f ef       	ldi	r24, 0xFF	; 255
    1c9e:	08 95       	ret

00001ca0 <inverse>:
    1ca0:	9b 01       	movw	r18, r22
    1ca2:	ac 01       	movw	r20, r24
    1ca4:	60 e0       	ldi	r22, 0x00	; 0
    1ca6:	70 e0       	ldi	r23, 0x00	; 0
    1ca8:	80 e8       	ldi	r24, 0x80	; 128
    1caa:	9f e3       	ldi	r25, 0x3F	; 63
    1cac:	4c ce       	rjmp	.-872    	; 0x1946 <__divsf3>

00001cae <__mulsf3>:
    1cae:	0b d0       	rcall	.+22     	; 0x1cc6 <__mulsf3x>
    1cb0:	a8 cf       	rjmp	.-176    	; 0x1c02 <__fp_round>
    1cb2:	71 df       	rcall	.-286    	; 0x1b96 <__fp_pscA>
    1cb4:	28 f0       	brcs	.+10     	; 0x1cc0 <__mulsf3+0x12>
    1cb6:	76 df       	rcall	.-276    	; 0x1ba4 <__fp_pscB>
    1cb8:	18 f0       	brcs	.+6      	; 0x1cc0 <__mulsf3+0x12>
    1cba:	95 23       	and	r25, r21
    1cbc:	09 f0       	breq	.+2      	; 0x1cc0 <__mulsf3+0x12>
    1cbe:	3d cf       	rjmp	.-390    	; 0x1b3a <__fp_inf>
    1cc0:	42 cf       	rjmp	.-380    	; 0x1b46 <__fp_nan>
    1cc2:	11 24       	eor	r1, r1
    1cc4:	e3 cf       	rjmp	.-58     	; 0x1c8c <__fp_szero>

00001cc6 <__mulsf3x>:
    1cc6:	bf df       	rcall	.-130    	; 0x1c46 <__fp_split3>
    1cc8:	a0 f3       	brcs	.-24     	; 0x1cb2 <__mulsf3+0x4>

00001cca <__mulsf3_pse>:
    1cca:	95 9f       	mul	r25, r21
    1ccc:	d1 f3       	breq	.-12     	; 0x1cc2 <__mulsf3+0x14>
    1cce:	95 0f       	add	r25, r21
    1cd0:	50 e0       	ldi	r21, 0x00	; 0
    1cd2:	55 1f       	adc	r21, r21
    1cd4:	62 9f       	mul	r22, r18
    1cd6:	f0 01       	movw	r30, r0
    1cd8:	72 9f       	mul	r23, r18
    1cda:	bb 27       	eor	r27, r27
    1cdc:	f0 0d       	add	r31, r0
    1cde:	b1 1d       	adc	r27, r1
    1ce0:	63 9f       	mul	r22, r19
    1ce2:	aa 27       	eor	r26, r26
    1ce4:	f0 0d       	add	r31, r0
    1ce6:	b1 1d       	adc	r27, r1
    1ce8:	aa 1f       	adc	r26, r26
    1cea:	64 9f       	mul	r22, r20
    1cec:	66 27       	eor	r22, r22
    1cee:	b0 0d       	add	r27, r0
    1cf0:	a1 1d       	adc	r26, r1
    1cf2:	66 1f       	adc	r22, r22
    1cf4:	82 9f       	mul	r24, r18
    1cf6:	22 27       	eor	r18, r18
    1cf8:	b0 0d       	add	r27, r0
    1cfa:	a1 1d       	adc	r26, r1
    1cfc:	62 1f       	adc	r22, r18
    1cfe:	73 9f       	mul	r23, r19
    1d00:	b0 0d       	add	r27, r0
    1d02:	a1 1d       	adc	r26, r1
    1d04:	62 1f       	adc	r22, r18
    1d06:	83 9f       	mul	r24, r19
    1d08:	a0 0d       	add	r26, r0
    1d0a:	61 1d       	adc	r22, r1
    1d0c:	22 1f       	adc	r18, r18
    1d0e:	74 9f       	mul	r23, r20
    1d10:	33 27       	eor	r19, r19
    1d12:	a0 0d       	add	r26, r0
    1d14:	61 1d       	adc	r22, r1
    1d16:	23 1f       	adc	r18, r19
    1d18:	84 9f       	mul	r24, r20
    1d1a:	60 0d       	add	r22, r0
    1d1c:	21 1d       	adc	r18, r1
    1d1e:	82 2f       	mov	r24, r18
    1d20:	76 2f       	mov	r23, r22
    1d22:	6a 2f       	mov	r22, r26
    1d24:	11 24       	eor	r1, r1
    1d26:	9f 57       	subi	r25, 0x7F	; 127
    1d28:	50 40       	sbci	r21, 0x00	; 0
    1d2a:	8a f0       	brmi	.+34     	; 0x1d4e <__mulsf3_pse+0x84>
    1d2c:	e1 f0       	breq	.+56     	; 0x1d66 <__mulsf3_pse+0x9c>
    1d2e:	88 23       	and	r24, r24
    1d30:	4a f0       	brmi	.+18     	; 0x1d44 <__mulsf3_pse+0x7a>
    1d32:	ee 0f       	add	r30, r30
    1d34:	ff 1f       	adc	r31, r31
    1d36:	bb 1f       	adc	r27, r27
    1d38:	66 1f       	adc	r22, r22
    1d3a:	77 1f       	adc	r23, r23
    1d3c:	88 1f       	adc	r24, r24
    1d3e:	91 50       	subi	r25, 0x01	; 1
    1d40:	50 40       	sbci	r21, 0x00	; 0
    1d42:	a9 f7       	brne	.-22     	; 0x1d2e <__mulsf3_pse+0x64>
    1d44:	9e 3f       	cpi	r25, 0xFE	; 254
    1d46:	51 05       	cpc	r21, r1
    1d48:	70 f0       	brcs	.+28     	; 0x1d66 <__mulsf3_pse+0x9c>
    1d4a:	f7 ce       	rjmp	.-530    	; 0x1b3a <__fp_inf>
    1d4c:	9f cf       	rjmp	.-194    	; 0x1c8c <__fp_szero>
    1d4e:	5f 3f       	cpi	r21, 0xFF	; 255
    1d50:	ec f3       	brlt	.-6      	; 0x1d4c <__mulsf3_pse+0x82>
    1d52:	98 3e       	cpi	r25, 0xE8	; 232
    1d54:	dc f3       	brlt	.-10     	; 0x1d4c <__mulsf3_pse+0x82>
    1d56:	86 95       	lsr	r24
    1d58:	77 95       	ror	r23
    1d5a:	67 95       	ror	r22
    1d5c:	b7 95       	ror	r27
    1d5e:	f7 95       	ror	r31
    1d60:	e7 95       	ror	r30
    1d62:	9f 5f       	subi	r25, 0xFF	; 255
    1d64:	c1 f7       	brne	.-16     	; 0x1d56 <__mulsf3_pse+0x8c>
    1d66:	fe 2b       	or	r31, r30
    1d68:	88 0f       	add	r24, r24
    1d6a:	91 1d       	adc	r25, r1
    1d6c:	96 95       	lsr	r25
    1d6e:	87 95       	ror	r24
    1d70:	97 f9       	bld	r25, 7
    1d72:	08 95       	ret

00001d74 <square>:
    1d74:	9b 01       	movw	r18, r22
    1d76:	ac 01       	movw	r20, r24
    1d78:	9a cf       	rjmp	.-204    	; 0x1cae <__mulsf3>

00001d7a <__fp_mpack>:
    1d7a:	9f 3f       	cpi	r25, 0xFF	; 255
    1d7c:	31 f0       	breq	.+12     	; 0x1d8a <__fp_mpack_finite+0xc>

00001d7e <__fp_mpack_finite>:
    1d7e:	91 50       	subi	r25, 0x01	; 1
    1d80:	20 f4       	brcc	.+8      	; 0x1d8a <__fp_mpack_finite+0xc>
    1d82:	87 95       	ror	r24
    1d84:	77 95       	ror	r23
    1d86:	67 95       	ror	r22
    1d88:	b7 95       	ror	r27
    1d8a:	88 0f       	add	r24, r24
    1d8c:	91 1d       	adc	r25, r1
    1d8e:	96 95       	lsr	r25
    1d90:	87 95       	ror	r24
    1d92:	97 f9       	bld	r25, 7
    1d94:	08 95       	ret

00001d96 <__fp_powsodd>:
    1d96:	9f 93       	push	r25
    1d98:	8f 93       	push	r24
    1d9a:	7f 93       	push	r23
    1d9c:	6f 93       	push	r22
    1d9e:	ff 93       	push	r31
    1da0:	ef 93       	push	r30
    1da2:	9b 01       	movw	r18, r22
    1da4:	ac 01       	movw	r20, r24
    1da6:	83 df       	rcall	.-250    	; 0x1cae <__mulsf3>
    1da8:	ef 91       	pop	r30
    1daa:	ff 91       	pop	r31
    1dac:	cf de       	rcall	.-610    	; 0x1b4c <__fp_powser>
    1dae:	2f 91       	pop	r18
    1db0:	3f 91       	pop	r19
    1db2:	4f 91       	pop	r20
    1db4:	5f 91       	pop	r21
    1db6:	7b cf       	rjmp	.-266    	; 0x1cae <__mulsf3>

00001db8 <_exit>:
    1db8:	f8 94       	cli

00001dba <__stop_program>:
    1dba:	ff cf       	rjmp	.-2      	; 0x1dba <__stop_program>
