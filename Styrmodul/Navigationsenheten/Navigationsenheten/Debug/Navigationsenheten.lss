
Navigationsenheten.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00001224  00800100  00001ecc  00001f60  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001ecc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000653  00801324  00801324  00003184  2**0
                  ALLOC
  3 .stab         00002dfc  00000000  00000000  00003184  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000cd6  00000000  00000000  00005f80  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00006c56  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000003b0  00000000  00000000  00006c85  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000036a1  00000000  00000000  00007035  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000f77  00000000  00000000  0000a6d6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000223d  00000000  00000000  0000b64d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000ab8  00000000  00000000  0000d88c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000d86  00000000  00000000  0000e344  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00002793  00000000  00000000  0000f0ca  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000378  00000000  00000000  0001185d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	6b c0       	rjmp	.+214    	; 0xd8 <__ctors_end>
       2:	00 00       	nop
       4:	87 c0       	rjmp	.+270    	; 0x114 <__bad_interrupt>
       6:	00 00       	nop
       8:	85 c0       	rjmp	.+266    	; 0x114 <__bad_interrupt>
       a:	00 00       	nop
       c:	83 c0       	rjmp	.+262    	; 0x114 <__bad_interrupt>
       e:	00 00       	nop
      10:	81 c0       	rjmp	.+258    	; 0x114 <__bad_interrupt>
      12:	00 00       	nop
      14:	7f c0       	rjmp	.+254    	; 0x114 <__bad_interrupt>
      16:	00 00       	nop
      18:	7d c0       	rjmp	.+250    	; 0x114 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	7b c0       	rjmp	.+246    	; 0x114 <__bad_interrupt>
      1e:	00 00       	nop
      20:	79 c0       	rjmp	.+242    	; 0x114 <__bad_interrupt>
      22:	00 00       	nop
      24:	77 c0       	rjmp	.+238    	; 0x114 <__bad_interrupt>
      26:	00 00       	nop
      28:	75 c0       	rjmp	.+234    	; 0x114 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	73 c0       	rjmp	.+230    	; 0x114 <__bad_interrupt>
      2e:	00 00       	nop
      30:	71 c0       	rjmp	.+226    	; 0x114 <__bad_interrupt>
      32:	00 00       	nop
      34:	d3 c3       	rjmp	.+1958   	; 0x7dc <__vector_13>
      36:	00 00       	nop
      38:	6d c0       	rjmp	.+218    	; 0x114 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	6b c0       	rjmp	.+214    	; 0x114 <__bad_interrupt>
      3e:	00 00       	nop
      40:	69 c0       	rjmp	.+210    	; 0x114 <__bad_interrupt>
      42:	00 00       	nop
      44:	67 c0       	rjmp	.+206    	; 0x114 <__bad_interrupt>
      46:	00 00       	nop
      48:	65 c0       	rjmp	.+202    	; 0x114 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	63 c0       	rjmp	.+198    	; 0x114 <__bad_interrupt>
      4e:	00 00       	nop
      50:	0c 94 0b 0a 	jmp	0x1416	; 0x1416 <__vector_20>
      54:	5f c0       	rjmp	.+190    	; 0x114 <__bad_interrupt>
      56:	00 00       	nop
      58:	5d c0       	rjmp	.+186    	; 0x114 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	5b c0       	rjmp	.+182    	; 0x114 <__bad_interrupt>
      5e:	00 00       	nop
      60:	59 c0       	rjmp	.+178    	; 0x114 <__bad_interrupt>
      62:	00 00       	nop
      64:	57 c0       	rjmp	.+174    	; 0x114 <__bad_interrupt>
      66:	00 00       	nop
      68:	33 c6       	rjmp	.+3174   	; 0xcd0 <__vector_26>
      6a:	00 00       	nop
      6c:	53 c0       	rjmp	.+166    	; 0x114 <__bad_interrupt>
      6e:	00 00       	nop
      70:	51 c0       	rjmp	.+162    	; 0x114 <__bad_interrupt>
      72:	00 00       	nop
      74:	4f c0       	rjmp	.+158    	; 0x114 <__bad_interrupt>
      76:	00 00       	nop
      78:	4d c0       	rjmp	.+154    	; 0x114 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	4b c0       	rjmp	.+150    	; 0x114 <__bad_interrupt>
      7e:	00 00       	nop
      80:	da c3       	rjmp	.+1972   	; 0x836 <__vector_32>
      82:	00 00       	nop
      84:	47 c0       	rjmp	.+142    	; 0x114 <__bad_interrupt>
      86:	00 00       	nop
      88:	45 c0       	rjmp	.+138    	; 0x114 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	08 4a       	sbci	r16, 0xA8	; 168
      8e:	d7 3b       	cpi	r29, 0xB7	; 183
      90:	3b ce       	rjmp	.-906    	; 0xfffffd08 <__eeprom_end+0xff7efd08>
      92:	01 6e       	ori	r16, 0xE1	; 225
      94:	84 bc       	out	0x24, r8	; 36
      96:	bf fd       	.word	0xfdbf	; ????
      98:	c1 2f       	mov	r28, r17
      9a:	3d 6c       	ori	r19, 0xCD	; 205
      9c:	74 31       	cpi	r23, 0x14	; 20
      9e:	9a bd       	out	0x2a, r25	; 42
      a0:	56 83       	std	Z+6, r21	; 0x06
      a2:	3d da       	rcall	.-2950   	; 0xfffff51e <__eeprom_end+0xff7ef51e>
      a4:	3d 00       	.word	0x003d	; ????
      a6:	c7 7f       	andi	r28, 0xF7	; 247
      a8:	11 be       	out	0x31, r1	; 49
      aa:	d9 e4       	ldi	r29, 0x49	; 73
      ac:	bb 4c       	sbci	r27, 0xCB	; 203
      ae:	3e 91       	ld	r19, -X
      b0:	6b aa       	std	Y+51, r6	; 0x33
      b2:	aa be       	out	0x3a, r10	; 58
      b4:	00 00       	nop
      b6:	00 80       	ld	r0, Z
      b8:	3f 05       	cpc	r19, r15
      ba:	a8 4c       	sbci	r26, 0xC8	; 200
      bc:	cd b2       	in	r12, 0x1d	; 29
      be:	d4 4e       	sbci	r29, 0xE4	; 228
      c0:	b9 38       	cpi	r27, 0x89	; 137
      c2:	36 a9       	ldd	r19, Z+54	; 0x36
      c4:	02 0c       	add	r0, r2
      c6:	50 b9       	out	0x00, r21	; 0
      c8:	91 86       	std	Z+9, r9	; 0x09
      ca:	88 08       	sbc	r8, r8
      cc:	3c a6       	std	Y+44, r3	; 0x2c
      ce:	aa aa       	std	Y+50, r10	; 0x32
      d0:	2a be       	out	0x3a, r2	; 58
      d2:	00 00       	nop
      d4:	00 80       	ld	r0, Z
      d6:	3f 00       	.word	0x003f	; ????

000000d8 <__ctors_end>:
      d8:	11 24       	eor	r1, r1
      da:	1f be       	out	0x3f, r1	; 63
      dc:	cf ef       	ldi	r28, 0xFF	; 255
      de:	d0 e4       	ldi	r29, 0x40	; 64
      e0:	de bf       	out	0x3e, r29	; 62
      e2:	cd bf       	out	0x3d, r28	; 61

000000e4 <__do_copy_data>:
      e4:	13 e1       	ldi	r17, 0x13	; 19
      e6:	a0 e0       	ldi	r26, 0x00	; 0
      e8:	b1 e0       	ldi	r27, 0x01	; 1
      ea:	ec ec       	ldi	r30, 0xCC	; 204
      ec:	fe e1       	ldi	r31, 0x1E	; 30
      ee:	00 e0       	ldi	r16, 0x00	; 0
      f0:	0b bf       	out	0x3b, r16	; 59
      f2:	02 c0       	rjmp	.+4      	; 0xf8 <__do_copy_data+0x14>
      f4:	07 90       	elpm	r0, Z+
      f6:	0d 92       	st	X+, r0
      f8:	a4 32       	cpi	r26, 0x24	; 36
      fa:	b1 07       	cpc	r27, r17
      fc:	d9 f7       	brne	.-10     	; 0xf4 <__do_copy_data+0x10>

000000fe <__do_clear_bss>:
      fe:	29 e1       	ldi	r18, 0x19	; 25
     100:	a4 e2       	ldi	r26, 0x24	; 36
     102:	b3 e1       	ldi	r27, 0x13	; 19
     104:	01 c0       	rjmp	.+2      	; 0x108 <.do_clear_bss_start>

00000106 <.do_clear_bss_loop>:
     106:	1d 92       	st	X+, r1

00000108 <.do_clear_bss_start>:
     108:	a7 37       	cpi	r26, 0x77	; 119
     10a:	b2 07       	cpc	r27, r18
     10c:	e1 f7       	brne	.-8      	; 0x106 <.do_clear_bss_loop>
     10e:	a1 d3       	rcall	.+1858   	; 0x852 <main>
     110:	0c 94 64 0f 	jmp	0x1ec8	; 0x1ec8 <_exit>

00000114 <__bad_interrupt>:
     114:	75 cf       	rjmp	.-278    	; 0x0 <__vectors>

00000116 <turn_around>:
		walk_forward(sensors);
	}
}

void turn_around(uint8_t frontSensor)
{
     116:	cf 93       	push	r28
     118:	c8 2f       	mov	r28, r24
	if(gStatus)
     11a:	80 91 00 01 	lds	r24, 0x0100
     11e:	88 23       	and	r24, r24
     120:	21 f0       	breq	.+8      	; 0x12a <turn_around+0x14>
	{
		TWI_send_string(C_ADDRESS, "Starting to turn around.");
     122:	60 e1       	ldi	r22, 0x10	; 16
     124:	71 e1       	ldi	r23, 0x11	; 17
     126:	80 e8       	ldi	r24, 0x80	; 128
     128:	e9 d4       	rcall	.+2514   	; 0xafc <TWI_send_string>
	}
	while (frontSensor < CORRIDOR_WIDTH)
     12a:	c0 35       	cpi	r28, 0x50	; 80
     12c:	48 f4       	brcc	.+18     	; 0x140 <turn_around+0x2a>
	{
		if(gStatus)
     12e:	80 91 00 01 	lds	r24, 0x0100
     132:	88 23       	and	r24, r24
     134:	71 f0       	breq	.+28     	; 0x152 <turn_around+0x3c>
		{
			TWI_send_string(C_ADDRESS, "Turning around.");
     136:	69 e2       	ldi	r22, 0x29	; 41
     138:	71 e1       	ldi	r23, 0x11	; 17
     13a:	80 e8       	ldi	r24, 0x80	; 128
     13c:	df d4       	rcall	.+2494   	; 0xafc <TWI_send_string>
     13e:	09 c0       	rjmp	.+18     	; 0x152 <turn_around+0x3c>
		}
		USART_send_command_parameters(0, MAX_ROTATION_COUNTER_CLOCKWISE, gSpeed);
		_delay_ms(STEPPING_TIME);
	}
	if(gStatus)
     140:	80 91 00 01 	lds	r24, 0x0100
     144:	88 23       	and	r24, r24
     146:	a9 f0       	breq	.+42     	; 0x172 <turn_around+0x5c>
	{
		TWI_send_string(C_ADDRESS, "Corridor ahead, done turning around.");
     148:	69 e3       	ldi	r22, 0x39	; 57
     14a:	71 e1       	ldi	r23, 0x11	; 17
     14c:	80 e8       	ldi	r24, 0x80	; 128
     14e:	d6 d4       	rcall	.+2476   	; 0xafc <TWI_send_string>
     150:	10 c0       	rjmp	.+32     	; 0x172 <turn_around+0x5c>
	{
		if(gStatus)
		{
			TWI_send_string(C_ADDRESS, "Turning around.");
		}
		USART_send_command_parameters(0, MAX_ROTATION_COUNTER_CLOCKWISE, gSpeed);
     152:	40 91 01 01 	lds	r20, 0x0101
     156:	6a e0       	ldi	r22, 0x0A	; 10
     158:	80 e0       	ldi	r24, 0x00	; 0
     15a:	0e 94 97 0a 	call	0x152e	; 0x152e <USART_send_command_parameters>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     15e:	2f ef       	ldi	r18, 0xFF	; 255
     160:	87 ea       	ldi	r24, 0xA7	; 167
     162:	91 e6       	ldi	r25, 0x61	; 97
     164:	21 50       	subi	r18, 0x01	; 1
     166:	80 40       	sbci	r24, 0x00	; 0
     168:	90 40       	sbci	r25, 0x00	; 0
     16a:	e1 f7       	brne	.-8      	; 0x164 <turn_around+0x4e>
     16c:	00 c0       	rjmp	.+0      	; 0x16e <turn_around+0x58>
     16e:	00 00       	nop
     170:	de cf       	rjmp	.-68     	; 0x12e <turn_around+0x18>
	}
	if(gStatus)
	{
		TWI_send_string(C_ADDRESS, "Corridor ahead, done turning around.");
	}
}
     172:	cf 91       	pop	r28
     174:	08 95       	ret

00000176 <walk_forward>:

void walk_forward(uint8_t sensors[5])
{
     176:	8f 92       	push	r8
     178:	9f 92       	push	r9
     17a:	af 92       	push	r10
     17c:	bf 92       	push	r11
     17e:	cf 92       	push	r12
     180:	df 92       	push	r13
     182:	ef 92       	push	r14
     184:	ff 92       	push	r15
     186:	cf 93       	push	r28
     188:	df 93       	push	r29
     18a:	ec 01       	movw	r28, r24
	if(gStatus)
     18c:	80 91 00 01 	lds	r24, 0x0100
     190:	88 23       	and	r24, r24
     192:	21 f0       	breq	.+8      	; 0x19c <walk_forward+0x26>
	{
		TWI_send_string(C_ADDRESS, "Finding regulation parameters.");
     194:	6e e5       	ldi	r22, 0x5E	; 94
     196:	71 e1       	ldi	r23, 0x11	; 17
     198:	80 e8       	ldi	r24, 0x80	; 128
     19a:	b0 d4       	rcall	.+2400   	; 0xafc <TWI_send_string>
	}
	float angleOffset = navigation_angle_offset(sensors);
     19c:	ce 01       	movw	r24, r28
     19e:	cf d1       	rcall	.+926    	; 0x53e <navigation_angle_offset>
     1a0:	6b 01       	movw	r12, r22
     1a2:	7c 01       	movw	r14, r24
	float directionCompensationAngle = navigation_direction_regulation(sensors, angleOffset);
     1a4:	ab 01       	movw	r20, r22
     1a6:	bc 01       	movw	r22, r24
     1a8:	ce 01       	movw	r24, r28
     1aa:	2f d2       	rcall	.+1118   	; 0x60a <navigation_direction_regulation>
     1ac:	4b 01       	movw	r8, r22
     1ae:	5c 01       	movw	r10, r24
	if(gStatus)
     1b0:	80 91 00 01 	lds	r24, 0x0100
     1b4:	88 23       	and	r24, r24
     1b6:	21 f0       	breq	.+8      	; 0x1c0 <walk_forward+0x4a>
	{
		TWI_send_string(C_ADDRESS, "Found regulation parameters.");
     1b8:	6d e7       	ldi	r22, 0x7D	; 125
     1ba:	71 e1       	ldi	r23, 0x11	; 17
     1bc:	80 e8       	ldi	r24, 0x80	; 128
     1be:	9e d4       	rcall	.+2364   	; 0xafc <TWI_send_string>
	}
	int adjustmentRotation = (50 + 50 * angleOffset/MAX_ROTATION_RADIANS);
     1c0:	20 e0       	ldi	r18, 0x00	; 0
     1c2:	30 e0       	ldi	r19, 0x00	; 0
     1c4:	48 e4       	ldi	r20, 0x48	; 72
     1c6:	52 e4       	ldi	r21, 0x42	; 66
     1c8:	c7 01       	movw	r24, r14
     1ca:	b6 01       	movw	r22, r12
     1cc:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__mulsf3>
     1d0:	26 e5       	ldi	r18, 0x56	; 86
     1d2:	3e e0       	ldi	r19, 0x0E	; 14
     1d4:	49 e4       	ldi	r20, 0x49	; 73
     1d6:	50 e4       	ldi	r21, 0x40	; 64
     1d8:	0e 94 30 0b 	call	0x1660	; 0x1660 <__divsf3>
     1dc:	20 e0       	ldi	r18, 0x00	; 0
     1de:	30 e0       	ldi	r19, 0x00	; 0
     1e0:	40 ec       	ldi	r20, 0xC0	; 192
     1e2:	50 e4       	ldi	r21, 0x40	; 64
     1e4:	0e 94 30 0b 	call	0x1660	; 0x1660 <__divsf3>
     1e8:	20 e0       	ldi	r18, 0x00	; 0
     1ea:	30 e0       	ldi	r19, 0x00	; 0
     1ec:	48 e4       	ldi	r20, 0x48	; 72
     1ee:	52 e4       	ldi	r21, 0x42	; 66
     1f0:	0e 94 a1 0a 	call	0x1542	; 0x1542 <__addsf3>
     1f4:	0e 94 98 0b 	call	0x1730	; 0x1730 <__fixsfsi>
	if (adjustmentRotation >= 100)
     1f8:	64 36       	cpi	r22, 0x64	; 100
     1fa:	71 05       	cpc	r23, r1
     1fc:	34 f4       	brge	.+12     	; 0x20a <walk_forward+0x94>
     1fe:	eb 01       	movw	r28, r22
     200:	dd 23       	and	r29, r29
     202:	2c f4       	brge	.+10     	; 0x20e <walk_forward+0x98>
     204:	c0 e0       	ldi	r28, 0x00	; 0
     206:	d0 e0       	ldi	r29, 0x00	; 0
     208:	02 c0       	rjmp	.+4      	; 0x20e <walk_forward+0x98>
	{
		adjustmentRotation = 100;
     20a:	c4 e6       	ldi	r28, 0x64	; 100
     20c:	d0 e0       	ldi	r29, 0x00	; 0
	}
	else if(adjustmentRotation<=0)
	{
		adjustmentRotation = 0;
	}
	int adjustmentDirection = 90* directionCompensationAngle/(2*PI);
     20e:	20 e0       	ldi	r18, 0x00	; 0
     210:	30 e0       	ldi	r19, 0x00	; 0
     212:	44 eb       	ldi	r20, 0xB4	; 180
     214:	52 e4       	ldi	r21, 0x42	; 66
     216:	c5 01       	movw	r24, r10
     218:	b4 01       	movw	r22, r8
     21a:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__mulsf3>
     21e:	2b ed       	ldi	r18, 0xDB	; 219
     220:	3f e0       	ldi	r19, 0x0F	; 15
     222:	49 ec       	ldi	r20, 0xC9	; 201
     224:	50 e4       	ldi	r21, 0x40	; 64
     226:	0e 94 30 0b 	call	0x1660	; 0x1660 <__divsf3>
     22a:	0e 94 98 0b 	call	0x1730	; 0x1730 <__fixsfsi>
     22e:	7b 01       	movw	r14, r22
	if(adjustmentDirection < 0)
     230:	77 23       	and	r23, r23
     232:	1c f4       	brge	.+6      	; 0x23a <walk_forward+0xc4>
	{
		adjustmentDirection = 90 + adjustmentDirection;
     234:	2a e5       	ldi	r18, 0x5A	; 90
     236:	e2 0e       	add	r14, r18
     238:	f1 1c       	adc	r15, r1
	}
	if(gStatus)
     23a:	80 91 00 01 	lds	r24, 0x0100
     23e:	88 23       	and	r24, r24
     240:	21 f0       	breq	.+8      	; 0x24a <walk_forward+0xd4>
	{
		TWI_send_string(C_ADDRESS, "Taking a step.");
     242:	6a e9       	ldi	r22, 0x9A	; 154
     244:	71 e1       	ldi	r23, 0x11	; 17
     246:	80 e8       	ldi	r24, 0x80	; 128
     248:	59 d4       	rcall	.+2226   	; 0xafc <TWI_send_string>
	}
	USART_send_command_parameters((uint8_t)adjustmentDirection, (uint8_t)adjustmentRotation, gSpeed);
     24a:	40 91 01 01 	lds	r20, 0x0101
     24e:	6c 2f       	mov	r22, r28
     250:	8e 2d       	mov	r24, r14
     252:	0e 94 97 0a 	call	0x152e	; 0x152e <USART_send_command_parameters>
     256:	8f ef       	ldi	r24, 0xFF	; 255
     258:	97 ea       	ldi	r25, 0xA7	; 167
     25a:	21 e6       	ldi	r18, 0x61	; 97
     25c:	81 50       	subi	r24, 0x01	; 1
     25e:	90 40       	sbci	r25, 0x00	; 0
     260:	20 40       	sbci	r18, 0x00	; 0
     262:	e1 f7       	brne	.-8      	; 0x25c <walk_forward+0xe6>
     264:	00 c0       	rjmp	.+0      	; 0x266 <walk_forward+0xf0>
     266:	00 00       	nop
	_delay_ms(STEPPING_TIME);
}
     268:	df 91       	pop	r29
     26a:	cf 91       	pop	r28
     26c:	ff 90       	pop	r15
     26e:	ef 90       	pop	r14
     270:	df 90       	pop	r13
     272:	cf 90       	pop	r12
     274:	bf 90       	pop	r11
     276:	af 90       	pop	r10
     278:	9f 90       	pop	r9
     27a:	8f 90       	pop	r8
     27c:	08 95       	ret

0000027e <turn_right>:
		walk_forward(sensors);
	}
}

void turn_right(uint8_t sensors[6])
{
     27e:	cf 93       	push	r28
     280:	df 93       	push	r29
     282:	ec 01       	movw	r28, r24
	if(gStatus)
     284:	80 91 00 01 	lds	r24, 0x0100
     288:	88 23       	and	r24, r24
     28a:	21 f0       	breq	.+8      	; 0x294 <turn_right+0x16>
	{
		TWI_send_string(C_ADDRESS, "Starting turning right.");
     28c:	69 ea       	ldi	r22, 0xA9	; 169
     28e:	71 e1       	ldi	r23, 0x11	; 17
     290:	80 e8       	ldi	r24, 0x80	; 128
     292:	34 d4       	rcall	.+2152   	; 0xafc <TWI_send_string>
	}
	walk_forward(sensors);
     294:	ce 01       	movw	r24, r28
     296:	6f df       	rcall	.-290    	; 0x176 <walk_forward>
     298:	2f ef       	ldi	r18, 0xFF	; 255
     29a:	87 ea       	ldi	r24, 0xA7	; 167
     29c:	91 e6       	ldi	r25, 0x61	; 97
     29e:	21 50       	subi	r18, 0x01	; 1
     2a0:	80 40       	sbci	r24, 0x00	; 0
     2a2:	90 40       	sbci	r25, 0x00	; 0
     2a4:	e1 f7       	brne	.-8      	; 0x29e <turn_right+0x20>
     2a6:	00 c0       	rjmp	.+0      	; 0x2a8 <turn_right+0x2a>
     2a8:	00 00       	nop
	_delay_ms(STEPPING_TIME);
	while(sensors[4] < CORRIDOR_WIDTH && sensors[5] > (CORRIDOR_WIDTH/2))
     2aa:	8c 81       	ldd	r24, Y+4	; 0x04
     2ac:	80 35       	cpi	r24, 0x50	; 80
     2ae:	00 f5       	brcc	.+64     	; 0x2f0 <turn_right+0x72>
     2b0:	8d 81       	ldd	r24, Y+5	; 0x05
     2b2:	89 32       	cpi	r24, 0x29	; 41
     2b4:	e8 f0       	brcs	.+58     	; 0x2f0 <turn_right+0x72>
	{
		if(gStatus)
     2b6:	80 91 00 01 	lds	r24, 0x0100
     2ba:	88 23       	and	r24, r24
     2bc:	21 f0       	breq	.+8      	; 0x2c6 <turn_right+0x48>
		{
			TWI_send_string(C_ADDRESS, "Rotating right.");
     2be:	61 ec       	ldi	r22, 0xC1	; 193
     2c0:	71 e1       	ldi	r23, 0x11	; 17
     2c2:	80 e8       	ldi	r24, 0x80	; 128
     2c4:	1b d4       	rcall	.+2102   	; 0xafc <TWI_send_string>
		}
		USART_send_command_parameters(0, MAX_ROTATION_CLOCKWISE, gSpeed);
     2c6:	40 91 01 01 	lds	r20, 0x0101
     2ca:	6a e5       	ldi	r22, 0x5A	; 90
     2cc:	80 e0       	ldi	r24, 0x00	; 0
     2ce:	0e 94 97 0a 	call	0x152e	; 0x152e <USART_send_command_parameters>
     2d2:	2f ef       	ldi	r18, 0xFF	; 255
     2d4:	87 ea       	ldi	r24, 0xA7	; 167
     2d6:	91 e6       	ldi	r25, 0x61	; 97
     2d8:	21 50       	subi	r18, 0x01	; 1
     2da:	80 40       	sbci	r24, 0x00	; 0
     2dc:	90 40       	sbci	r25, 0x00	; 0
     2de:	e1 f7       	brne	.-8      	; 0x2d8 <turn_right+0x5a>
     2e0:	00 c0       	rjmp	.+0      	; 0x2e2 <turn_right+0x64>
     2e2:	00 00       	nop
	{
		TWI_send_string(C_ADDRESS, "Starting turning right.");
	}
	walk_forward(sensors);
	_delay_ms(STEPPING_TIME);
	while(sensors[4] < CORRIDOR_WIDTH && sensors[5] > (CORRIDOR_WIDTH/2))
     2e4:	8c 81       	ldd	r24, Y+4	; 0x04
     2e6:	80 35       	cpi	r24, 0x50	; 80
     2e8:	18 f4       	brcc	.+6      	; 0x2f0 <turn_right+0x72>
     2ea:	8d 81       	ldd	r24, Y+5	; 0x05
     2ec:	89 32       	cpi	r24, 0x29	; 41
     2ee:	18 f7       	brcc	.-58     	; 0x2b6 <turn_right+0x38>
		USART_send_command_parameters(0, MAX_ROTATION_CLOCKWISE, gSpeed);
		_delay_ms(STEPPING_TIME);
	}
	for(int i=0; i < 3; ++i)
	{
		walk_forward(sensors);
     2f0:	ce 01       	movw	r24, r28
     2f2:	41 df       	rcall	.-382    	; 0x176 <walk_forward>
     2f4:	ce 01       	movw	r24, r28
     2f6:	3f df       	rcall	.-386    	; 0x176 <walk_forward>
     2f8:	ce 01       	movw	r24, r28
     2fa:	3d df       	rcall	.-390    	; 0x176 <walk_forward>
	}
}
     2fc:	df 91       	pop	r29
     2fe:	cf 91       	pop	r28
     300:	08 95       	ret

00000302 <turn_left>:
{
	return gStatus;
}

void turn_left(uint8_t sensors[6])
{
     302:	cf 93       	push	r28
     304:	df 93       	push	r29
     306:	ec 01       	movw	r28, r24
	if(gStatus)
     308:	80 91 00 01 	lds	r24, 0x0100
     30c:	88 23       	and	r24, r24
     30e:	21 f0       	breq	.+8      	; 0x318 <turn_left+0x16>
	{
		TWI_send_string(C_ADDRESS, "Starting turning left.");
     310:	61 ed       	ldi	r22, 0xD1	; 209
     312:	71 e1       	ldi	r23, 0x11	; 17
     314:	80 e8       	ldi	r24, 0x80	; 128
     316:	f2 d3       	rcall	.+2020   	; 0xafc <TWI_send_string>
	}
	walk_forward(sensors);
     318:	ce 01       	movw	r24, r28
     31a:	2d df       	rcall	.-422    	; 0x176 <walk_forward>
     31c:	2f ef       	ldi	r18, 0xFF	; 255
     31e:	87 ea       	ldi	r24, 0xA7	; 167
     320:	91 e6       	ldi	r25, 0x61	; 97
     322:	21 50       	subi	r18, 0x01	; 1
     324:	80 40       	sbci	r24, 0x00	; 0
     326:	90 40       	sbci	r25, 0x00	; 0
     328:	e1 f7       	brne	.-8      	; 0x322 <turn_left+0x20>
     32a:	00 c0       	rjmp	.+0      	; 0x32c <turn_left+0x2a>
     32c:	00 00       	nop
	_delay_ms(STEPPING_TIME);
	while(sensors[4] < CORRIDOR_WIDTH && sensors[5] > (CORRIDOR_WIDTH/2))
     32e:	8c 81       	ldd	r24, Y+4	; 0x04
     330:	80 35       	cpi	r24, 0x50	; 80
     332:	00 f5       	brcc	.+64     	; 0x374 <turn_left+0x72>
     334:	8d 81       	ldd	r24, Y+5	; 0x05
     336:	89 32       	cpi	r24, 0x29	; 41
     338:	e8 f0       	brcs	.+58     	; 0x374 <turn_left+0x72>
	{
		if(gStatus)
     33a:	80 91 00 01 	lds	r24, 0x0100
     33e:	88 23       	and	r24, r24
     340:	21 f0       	breq	.+8      	; 0x34a <turn_left+0x48>
		{
			TWI_send_string(C_ADDRESS, "Rotating left.");
     342:	68 ee       	ldi	r22, 0xE8	; 232
     344:	71 e1       	ldi	r23, 0x11	; 17
     346:	80 e8       	ldi	r24, 0x80	; 128
     348:	d9 d3       	rcall	.+1970   	; 0xafc <TWI_send_string>
		}
		USART_send_command_parameters(0, MAX_ROTATION_COUNTER_CLOCKWISE, gSpeed);
     34a:	40 91 01 01 	lds	r20, 0x0101
     34e:	6a e0       	ldi	r22, 0x0A	; 10
     350:	80 e0       	ldi	r24, 0x00	; 0
     352:	0e 94 97 0a 	call	0x152e	; 0x152e <USART_send_command_parameters>
     356:	2f ef       	ldi	r18, 0xFF	; 255
     358:	87 ea       	ldi	r24, 0xA7	; 167
     35a:	91 e6       	ldi	r25, 0x61	; 97
     35c:	21 50       	subi	r18, 0x01	; 1
     35e:	80 40       	sbci	r24, 0x00	; 0
     360:	90 40       	sbci	r25, 0x00	; 0
     362:	e1 f7       	brne	.-8      	; 0x35c <turn_left+0x5a>
     364:	00 c0       	rjmp	.+0      	; 0x366 <turn_left+0x64>
     366:	00 00       	nop
	{
		TWI_send_string(C_ADDRESS, "Starting turning left.");
	}
	walk_forward(sensors);
	_delay_ms(STEPPING_TIME);
	while(sensors[4] < CORRIDOR_WIDTH && sensors[5] > (CORRIDOR_WIDTH/2))
     368:	8c 81       	ldd	r24, Y+4	; 0x04
     36a:	80 35       	cpi	r24, 0x50	; 80
     36c:	18 f4       	brcc	.+6      	; 0x374 <turn_left+0x72>
     36e:	8d 81       	ldd	r24, Y+5	; 0x05
     370:	89 32       	cpi	r24, 0x29	; 41
     372:	18 f7       	brcc	.-58     	; 0x33a <turn_left+0x38>
		USART_send_command_parameters(0, MAX_ROTATION_COUNTER_CLOCKWISE, gSpeed);
		_delay_ms(STEPPING_TIME);
	}
	for(int i=0; i < 3; ++i)
	{
		walk_forward(sensors);
     374:	ce 01       	movw	r24, r28
     376:	ff de       	rcall	.-514    	; 0x176 <walk_forward>
     378:	ce 01       	movw	r24, r28
     37a:	fd de       	rcall	.-518    	; 0x176 <walk_forward>
     37c:	ce 01       	movw	r24, r28
     37e:	fb de       	rcall	.-522    	; 0x176 <walk_forward>
	}
}
     380:	df 91       	pop	r29
     382:	cf 91       	pop	r28
     384:	08 95       	ret

00000386 <autonomouswalk_walk>:
	USART_send_command_parameters((uint8_t)adjustmentDirection, (uint8_t)adjustmentRotation, gSpeed);
	_delay_ms(STEPPING_TIME);
}

void autonomouswalk_walk(uint8_t sensors[6])
{
     386:	cf 93       	push	r28
     388:	df 93       	push	r29
     38a:	ec 01       	movw	r28, r24
	uint8_t leftSideAlgorithm = navigation_left_algorithm();
     38c:	d2 d0       	rcall	.+420    	; 0x532 <navigation_left_algorithm>
	if(leftSideAlgorithm)
     38e:	88 23       	and	r24, r24
     390:	c9 f0       	breq	.+50     	; 0x3c4 <autonomouswalk_walk+0x3e>
	{
		if(navigation_check_left_turn(sensors[0], sensors[2]) == 2)
     392:	6a 81       	ldd	r22, Y+2	; 0x02
     394:	88 81       	ld	r24, Y
     396:	8a d1       	rcall	.+788    	; 0x6ac <navigation_check_left_turn>
     398:	82 30       	cpi	r24, 0x02	; 2
     39a:	19 f4       	brne	.+6      	; 0x3a2 <autonomouswalk_walk+0x1c>
		{
			turn_left(sensors);
     39c:	ce 01       	movw	r24, r28
     39e:	b1 df       	rcall	.-158    	; 0x302 <turn_left>
     3a0:	29 c0       	rjmp	.+82     	; 0x3f4 <autonomouswalk_walk+0x6e>
		}
		else if(sensors[4] > CORRIDOR_WIDTH)
     3a2:	8c 81       	ldd	r24, Y+4	; 0x04
     3a4:	81 35       	cpi	r24, 0x51	; 81
     3a6:	18 f0       	brcs	.+6      	; 0x3ae <autonomouswalk_walk+0x28>
		{
			walk_forward(sensors);
     3a8:	ce 01       	movw	r24, r28
     3aa:	e5 de       	rcall	.-566    	; 0x176 <walk_forward>
     3ac:	23 c0       	rjmp	.+70     	; 0x3f4 <autonomouswalk_walk+0x6e>
		}
		else if(navigation_check_right_turn(sensors[1], sensors[3]) == 2)
     3ae:	6b 81       	ldd	r22, Y+3	; 0x03
     3b0:	89 81       	ldd	r24, Y+1	; 0x01
     3b2:	88 d1       	rcall	.+784    	; 0x6c4 <navigation_check_right_turn>
     3b4:	82 30       	cpi	r24, 0x02	; 2
     3b6:	19 f4       	brne	.+6      	; 0x3be <autonomouswalk_walk+0x38>
		{
			turn_right(sensors);
     3b8:	ce 01       	movw	r24, r28
     3ba:	61 df       	rcall	.-318    	; 0x27e <turn_right>
     3bc:	1b c0       	rjmp	.+54     	; 0x3f4 <autonomouswalk_walk+0x6e>
		}
		else
		{
			turn_around(sensors[4]);
     3be:	8c 81       	ldd	r24, Y+4	; 0x04
     3c0:	aa de       	rcall	.-684    	; 0x116 <turn_around>
     3c2:	18 c0       	rjmp	.+48     	; 0x3f4 <autonomouswalk_walk+0x6e>
		}
	}
	else
	{
		if(navigation_check_right_turn(sensors[1], sensors[3]) == 2)
     3c4:	6b 81       	ldd	r22, Y+3	; 0x03
     3c6:	89 81       	ldd	r24, Y+1	; 0x01
     3c8:	7d d1       	rcall	.+762    	; 0x6c4 <navigation_check_right_turn>
     3ca:	82 30       	cpi	r24, 0x02	; 2
     3cc:	19 f4       	brne	.+6      	; 0x3d4 <autonomouswalk_walk+0x4e>
		{
			turn_left(sensors);
     3ce:	ce 01       	movw	r24, r28
     3d0:	98 df       	rcall	.-208    	; 0x302 <turn_left>
     3d2:	10 c0       	rjmp	.+32     	; 0x3f4 <autonomouswalk_walk+0x6e>
		}
		else if(sensors[4] > CORRIDOR_WIDTH)
     3d4:	8c 81       	ldd	r24, Y+4	; 0x04
     3d6:	81 35       	cpi	r24, 0x51	; 81
     3d8:	18 f0       	brcs	.+6      	; 0x3e0 <autonomouswalk_walk+0x5a>
		{
			walk_forward(sensors);
     3da:	ce 01       	movw	r24, r28
     3dc:	cc de       	rcall	.-616    	; 0x176 <walk_forward>
     3de:	0a c0       	rjmp	.+20     	; 0x3f4 <autonomouswalk_walk+0x6e>
		}
		else if(navigation_check_left_turn(sensors[0], sensors[2]) == 2)
     3e0:	6a 81       	ldd	r22, Y+2	; 0x02
     3e2:	88 81       	ld	r24, Y
     3e4:	63 d1       	rcall	.+710    	; 0x6ac <navigation_check_left_turn>
     3e6:	82 30       	cpi	r24, 0x02	; 2
     3e8:	19 f4       	brne	.+6      	; 0x3f0 <autonomouswalk_walk+0x6a>
		{
			turn_right(sensors);
     3ea:	ce 01       	movw	r24, r28
     3ec:	48 df       	rcall	.-368    	; 0x27e <turn_right>
     3ee:	02 c0       	rjmp	.+4      	; 0x3f4 <autonomouswalk_walk+0x6e>
		}
		else
		{
			turn_around(sensors[4]);
     3f0:	8c 81       	ldd	r24, Y+4	; 0x04
     3f2:	91 de       	rcall	.-734    	; 0x116 <turn_around>
		}
	}
     3f4:	df 91       	pop	r29
     3f6:	cf 91       	pop	r28
     3f8:	08 95       	ret

000003fa <set_counter_1>:
     3fa:	bc 01       	movw	r22, r24
     3fc:	80 e0       	ldi	r24, 0x00	; 0
     3fe:	90 e0       	ldi	r25, 0x00	; 0
     400:	0e 94 c9 0b 	call	0x1792	; 0x1792 <__floatunsisf>
     404:	20 e0       	ldi	r18, 0x00	; 0
     406:	30 e0       	ldi	r19, 0x00	; 0
     408:	4a e7       	ldi	r20, 0x7A	; 122
     40a:	51 e4       	ldi	r21, 0x41	; 65
     40c:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__mulsf3>
     410:	0e 94 9d 0b 	call	0x173a	; 0x173a <__fixunssfsi>
     414:	70 93 89 00 	sts	0x0089, r23
     418:	60 93 88 00 	sts	0x0088, r22
     41c:	08 95       	ret

0000041e <set_counter_2>:
     41e:	bc 01       	movw	r22, r24
     420:	80 e0       	ldi	r24, 0x00	; 0
     422:	90 e0       	ldi	r25, 0x00	; 0
     424:	0e 94 c9 0b 	call	0x1792	; 0x1792 <__floatunsisf>
     428:	20 e0       	ldi	r18, 0x00	; 0
     42a:	30 e0       	ldi	r19, 0x00	; 0
     42c:	4a e7       	ldi	r20, 0x7A	; 122
     42e:	51 e4       	ldi	r21, 0x41	; 65
     430:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__mulsf3>
     434:	0e 94 9d 0b 	call	0x173a	; 0x173a <__fixunssfsi>
     438:	70 93 99 00 	sts	0x0099, r23
     43c:	60 93 98 00 	sts	0x0098, r22
     440:	08 95       	ret

00000442 <init_counters>:
     442:	e1 e8       	ldi	r30, 0x81	; 129
     444:	f0 e0       	ldi	r31, 0x00	; 0
     446:	80 81       	ld	r24, Z
     448:	85 60       	ori	r24, 0x05	; 5
     44a:	80 83       	st	Z, r24
     44c:	e1 e9       	ldi	r30, 0x91	; 145
     44e:	f0 e0       	ldi	r31, 0x00	; 0
     450:	80 81       	ld	r24, Z
     452:	85 60       	ori	r24, 0x05	; 5
     454:	80 83       	st	Z, r24
     456:	88 ee       	ldi	r24, 0xE8	; 232
     458:	93 e0       	ldi	r25, 0x03	; 3
     45a:	cf df       	rcall	.-98     	; 0x3fa <set_counter_1>
     45c:	88 ee       	ldi	r24, 0xE8	; 232
     45e:	93 e0       	ldi	r25, 0x03	; 3
     460:	de df       	rcall	.-68     	; 0x41e <set_counter_2>
     462:	ef e6       	ldi	r30, 0x6F	; 111
     464:	f0 e0       	ldi	r31, 0x00	; 0
     466:	80 81       	ld	r24, Z
     468:	82 60       	ori	r24, 0x02	; 2
     46a:	80 83       	st	Z, r24
     46c:	e1 e7       	ldi	r30, 0x71	; 113
     46e:	f0 e0       	ldi	r31, 0x00	; 0
     470:	80 81       	ld	r24, Z
     472:	82 60       	ori	r24, 0x02	; 2
     474:	80 83       	st	Z, r24
     476:	10 92 85 00 	sts	0x0085, r1
     47a:	10 92 84 00 	sts	0x0084, r1
     47e:	10 92 95 00 	sts	0x0095, r1
     482:	10 92 94 00 	sts	0x0094, r1
     486:	08 95       	ret

00000488 <FifoDataLength>:
     488:	fc 01       	movw	r30, r24
     48a:	90 81       	ld	r25, Z
     48c:	91 50       	subi	r25, 0x01	; 1
     48e:	84 81       	ldd	r24, Z+4	; 0x04
     490:	22 81       	ldd	r18, Z+2	; 0x02
     492:	82 1b       	sub	r24, r18
     494:	89 23       	and	r24, r25
     496:	08 95       	ret

00000498 <FifoWrite>:
     498:	1f 93       	push	r17
     49a:	cf 93       	push	r28
     49c:	df 93       	push	r29
     49e:	ec 01       	movw	r28, r24
     4a0:	16 2f       	mov	r17, r22
     4a2:	f2 df       	rcall	.-28     	; 0x488 <FifoDataLength>
     4a4:	28 81       	ld	r18, Y
     4a6:	39 81       	ldd	r19, Y+1	; 0x01
     4a8:	21 50       	subi	r18, 0x01	; 1
     4aa:	31 09       	sbc	r19, r1
     4ac:	90 e0       	ldi	r25, 0x00	; 0
     4ae:	82 17       	cp	r24, r18
     4b0:	93 07       	cpc	r25, r19
     4b2:	69 f0       	breq	.+26     	; 0x4ce <FifoWrite+0x36>
     4b4:	8c 81       	ldd	r24, Y+4	; 0x04
     4b6:	9d 81       	ldd	r25, Y+5	; 0x05
     4b8:	fe 01       	movw	r30, r28
     4ba:	e8 0f       	add	r30, r24
     4bc:	f9 1f       	adc	r31, r25
     4be:	16 83       	std	Z+6, r17	; 0x06
     4c0:	01 96       	adiw	r24, 0x01	; 1
     4c2:	28 23       	and	r18, r24
     4c4:	39 23       	and	r19, r25
     4c6:	3d 83       	std	Y+5, r19	; 0x05
     4c8:	2c 83       	std	Y+4, r18	; 0x04
     4ca:	80 e0       	ldi	r24, 0x00	; 0
     4cc:	01 c0       	rjmp	.+2      	; 0x4d0 <FifoWrite+0x38>
     4ce:	81 e0       	ldi	r24, 0x01	; 1
     4d0:	df 91       	pop	r29
     4d2:	cf 91       	pop	r28
     4d4:	1f 91       	pop	r17
     4d6:	08 95       	ret

000004d8 <FifoRead>:
     4d8:	0f 93       	push	r16
     4da:	1f 93       	push	r17
     4dc:	cf 93       	push	r28
     4de:	df 93       	push	r29
     4e0:	ec 01       	movw	r28, r24
     4e2:	8b 01       	movw	r16, r22
     4e4:	d1 df       	rcall	.-94     	; 0x488 <FifoDataLength>
     4e6:	88 23       	and	r24, r24
     4e8:	a1 f0       	breq	.+40     	; 0x512 <FifoRead+0x3a>
     4ea:	ea 81       	ldd	r30, Y+2	; 0x02
     4ec:	fb 81       	ldd	r31, Y+3	; 0x03
     4ee:	ec 0f       	add	r30, r28
     4f0:	fd 1f       	adc	r31, r29
     4f2:	86 81       	ldd	r24, Z+6	; 0x06
     4f4:	f8 01       	movw	r30, r16
     4f6:	80 83       	st	Z, r24
     4f8:	28 81       	ld	r18, Y
     4fa:	39 81       	ldd	r19, Y+1	; 0x01
     4fc:	21 50       	subi	r18, 0x01	; 1
     4fe:	31 09       	sbc	r19, r1
     500:	8a 81       	ldd	r24, Y+2	; 0x02
     502:	9b 81       	ldd	r25, Y+3	; 0x03
     504:	01 96       	adiw	r24, 0x01	; 1
     506:	82 23       	and	r24, r18
     508:	93 23       	and	r25, r19
     50a:	9b 83       	std	Y+3, r25	; 0x03
     50c:	8a 83       	std	Y+2, r24	; 0x02
     50e:	80 e0       	ldi	r24, 0x00	; 0
     510:	01 c0       	rjmp	.+2      	; 0x514 <FifoRead+0x3c>
     512:	81 e0       	ldi	r24, 0x01	; 1
     514:	df 91       	pop	r29
     516:	cf 91       	pop	r28
     518:	1f 91       	pop	r17
     51a:	0f 91       	pop	r16
     51c:	08 95       	ret

0000051e <compare>:
     51e:	fc 01       	movw	r30, r24
     520:	20 81       	ld	r18, Z
     522:	30 e0       	ldi	r19, 0x00	; 0
     524:	fb 01       	movw	r30, r22
     526:	80 81       	ld	r24, Z
     528:	28 1b       	sub	r18, r24
     52a:	31 09       	sbc	r19, r1
     52c:	82 2f       	mov	r24, r18
     52e:	93 2f       	mov	r25, r19
     530:	08 95       	ret

00000532 <navigation_left_algorithm>:
     532:	80 91 05 01 	lds	r24, 0x0105
     536:	08 95       	ret

00000538 <navigation_autonomous_walk>:
     538:	80 91 24 13 	lds	r24, 0x1324
     53c:	08 95       	ret

0000053e <navigation_angle_offset>:
     53e:	fc 01       	movw	r30, r24
     540:	80 91 05 01 	lds	r24, 0x0105
     544:	88 23       	and	r24, r24
     546:	71 f1       	breq	.+92     	; 0x5a4 <navigation_angle_offset+0x66>
     548:	82 81       	ldd	r24, Z+2	; 0x02
     54a:	90 e0       	ldi	r25, 0x00	; 0
     54c:	20 81       	ld	r18, Z
     54e:	30 e0       	ldi	r19, 0x00	; 0
     550:	ac 01       	movw	r20, r24
     552:	42 0f       	add	r20, r18
     554:	53 1f       	adc	r21, r19
     556:	44 36       	cpi	r20, 0x64	; 100
     558:	51 05       	cpc	r21, r1
     55a:	7c f4       	brge	.+30     	; 0x57a <navigation_angle_offset+0x3c>
     55c:	82 1b       	sub	r24, r18
     55e:	93 0b       	sbc	r25, r19
     560:	60 e9       	ldi	r22, 0x90	; 144
     562:	71 e0       	ldi	r23, 0x01	; 1
     564:	0e 94 41 0d 	call	0x1a82	; 0x1a82 <__divmodhi4>
     568:	88 27       	eor	r24, r24
     56a:	77 fd       	sbrc	r23, 7
     56c:	80 95       	com	r24
     56e:	98 2f       	mov	r25, r24
     570:	0e 94 cb 0b 	call	0x1796	; 0x1796 <__floatsisf>
     574:	0e 94 05 0b 	call	0x160a	; 0x160a <atan>
     578:	47 c0       	rjmp	.+142    	; 0x608 <navigation_angle_offset+0xca>
     57a:	84 81       	ldd	r24, Z+4	; 0x04
     57c:	81 35       	cpi	r24, 0x51	; 81
     57e:	90 f0       	brcs	.+36     	; 0x5a4 <navigation_angle_offset+0x66>
     580:	81 81       	ldd	r24, Z+1	; 0x01
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	23 81       	ldd	r18, Z+3	; 0x03
     586:	82 1b       	sub	r24, r18
     588:	91 09       	sbc	r25, r1
     58a:	60 e9       	ldi	r22, 0x90	; 144
     58c:	71 e0       	ldi	r23, 0x01	; 1
     58e:	0e 94 41 0d 	call	0x1a82	; 0x1a82 <__divmodhi4>
     592:	88 27       	eor	r24, r24
     594:	77 fd       	sbrc	r23, 7
     596:	80 95       	com	r24
     598:	98 2f       	mov	r25, r24
     59a:	0e 94 cb 0b 	call	0x1796	; 0x1796 <__floatsisf>
     59e:	0e 94 05 0b 	call	0x160a	; 0x160a <atan>
     5a2:	32 c0       	rjmp	.+100    	; 0x608 <navigation_angle_offset+0xca>
     5a4:	81 81       	ldd	r24, Z+1	; 0x01
     5a6:	90 e0       	ldi	r25, 0x00	; 0
     5a8:	23 81       	ldd	r18, Z+3	; 0x03
     5aa:	30 e0       	ldi	r19, 0x00	; 0
     5ac:	ac 01       	movw	r20, r24
     5ae:	42 0f       	add	r20, r18
     5b0:	53 1f       	adc	r21, r19
     5b2:	44 36       	cpi	r20, 0x64	; 100
     5b4:	51 05       	cpc	r21, r1
     5b6:	7c f4       	brge	.+30     	; 0x5d6 <navigation_angle_offset+0x98>
     5b8:	82 1b       	sub	r24, r18
     5ba:	93 0b       	sbc	r25, r19
     5bc:	60 e9       	ldi	r22, 0x90	; 144
     5be:	71 e0       	ldi	r23, 0x01	; 1
     5c0:	0e 94 41 0d 	call	0x1a82	; 0x1a82 <__divmodhi4>
     5c4:	88 27       	eor	r24, r24
     5c6:	77 fd       	sbrc	r23, 7
     5c8:	80 95       	com	r24
     5ca:	98 2f       	mov	r25, r24
     5cc:	0e 94 cb 0b 	call	0x1796	; 0x1796 <__floatsisf>
     5d0:	0e 94 05 0b 	call	0x160a	; 0x160a <atan>
     5d4:	19 c0       	rjmp	.+50     	; 0x608 <navigation_angle_offset+0xca>
     5d6:	84 81       	ldd	r24, Z+4	; 0x04
     5d8:	81 35       	cpi	r24, 0x51	; 81
     5da:	90 f0       	brcs	.+36     	; 0x600 <navigation_angle_offset+0xc2>
     5dc:	82 81       	ldd	r24, Z+2	; 0x02
     5de:	90 e0       	ldi	r25, 0x00	; 0
     5e0:	20 81       	ld	r18, Z
     5e2:	82 1b       	sub	r24, r18
     5e4:	91 09       	sbc	r25, r1
     5e6:	60 e9       	ldi	r22, 0x90	; 144
     5e8:	71 e0       	ldi	r23, 0x01	; 1
     5ea:	0e 94 41 0d 	call	0x1a82	; 0x1a82 <__divmodhi4>
     5ee:	88 27       	eor	r24, r24
     5f0:	77 fd       	sbrc	r23, 7
     5f2:	80 95       	com	r24
     5f4:	98 2f       	mov	r25, r24
     5f6:	0e 94 cb 0b 	call	0x1796	; 0x1796 <__floatsisf>
     5fa:	0e 94 05 0b 	call	0x160a	; 0x160a <atan>
     5fe:	04 c0       	rjmp	.+8      	; 0x608 <navigation_angle_offset+0xca>
     600:	60 e0       	ldi	r22, 0x00	; 0
     602:	70 e0       	ldi	r23, 0x00	; 0
     604:	80 e0       	ldi	r24, 0x00	; 0
     606:	90 e0       	ldi	r25, 0x00	; 0
     608:	08 95       	ret

0000060a <navigation_direction_regulation>:
     60a:	20 91 05 01 	lds	r18, 0x0105
     60e:	22 23       	and	r18, r18
     610:	89 f0       	breq	.+34     	; 0x634 <navigation_direction_regulation+0x2a>
     612:	fc 01       	movw	r30, r24
     614:	84 81       	ldd	r24, Z+4	; 0x04
     616:	81 35       	cpi	r24, 0x51	; 81
     618:	d0 f1       	brcs	.+116    	; 0x68e <navigation_direction_regulation+0x84>
     61a:	cb 01       	movw	r24, r22
     61c:	ba 01       	movw	r22, r20
     61e:	0e 94 2d 0b 	call	0x165a	; 0x165a <cos>
     622:	20 e0       	ldi	r18, 0x00	; 0
     624:	30 e0       	ldi	r19, 0x00	; 0
     626:	48 e4       	ldi	r20, 0x48	; 72
     628:	53 e4       	ldi	r21, 0x43	; 67
     62a:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__mulsf3>
     62e:	0e 94 98 0b 	call	0x1730	; 0x1730 <__fixsfsi>
     632:	17 c0       	rjmp	.+46     	; 0x662 <navigation_direction_regulation+0x58>
     634:	fc 01       	movw	r30, r24
     636:	84 81       	ldd	r24, Z+4	; 0x04
     638:	81 35       	cpi	r24, 0x51	; 81
     63a:	70 f1       	brcs	.+92     	; 0x698 <navigation_direction_regulation+0x8e>
     63c:	cb 01       	movw	r24, r22
     63e:	ba 01       	movw	r22, r20
     640:	0e 94 2d 0b 	call	0x165a	; 0x165a <cos>
     644:	20 e0       	ldi	r18, 0x00	; 0
     646:	30 e0       	ldi	r19, 0x00	; 0
     648:	48 e4       	ldi	r20, 0x48	; 72
     64a:	53 e4       	ldi	r21, 0x43	; 67
     64c:	0e 94 bc 0c 	call	0x1978	; 0x1978 <__mulsf3>
     650:	9b 01       	movw	r18, r22
     652:	ac 01       	movw	r20, r24
     654:	60 e0       	ldi	r22, 0x00	; 0
     656:	70 e0       	ldi	r23, 0x00	; 0
     658:	80 ea       	ldi	r24, 0xA0	; 160
     65a:	92 e4       	ldi	r25, 0x42	; 66
     65c:	71 d7       	rcall	.+3810   	; 0x1540 <__subsf3>
     65e:	0e 94 98 0b 	call	0x1730	; 0x1730 <__fixsfsi>
     662:	88 e2       	ldi	r24, 0x28	; 40
     664:	90 e0       	ldi	r25, 0x00	; 0
     666:	86 1b       	sub	r24, r22
     668:	97 0b       	sbc	r25, r23
     66a:	85 30       	cpi	r24, 0x05	; 5
     66c:	91 05       	cpc	r25, r1
     66e:	cc f0       	brlt	.+50     	; 0x6a2 <navigation_direction_regulation+0x98>
     670:	20 91 04 01 	lds	r18, 0x0104
     674:	28 9f       	mul	r18, r24
     676:	b0 01       	movw	r22, r0
     678:	29 9f       	mul	r18, r25
     67a:	70 0d       	add	r23, r0
     67c:	11 24       	eor	r1, r1
     67e:	88 27       	eor	r24, r24
     680:	77 fd       	sbrc	r23, 7
     682:	80 95       	com	r24
     684:	98 2f       	mov	r25, r24
     686:	0e 94 cb 0b 	call	0x1796	; 0x1796 <__floatsisf>
     68a:	bf d7       	rcall	.+3966   	; 0x160a <atan>
     68c:	0e c0       	rjmp	.+28     	; 0x6aa <navigation_direction_regulation+0xa0>
     68e:	60 e0       	ldi	r22, 0x00	; 0
     690:	70 e0       	ldi	r23, 0x00	; 0
     692:	80 e0       	ldi	r24, 0x00	; 0
     694:	90 e0       	ldi	r25, 0x00	; 0
     696:	09 c0       	rjmp	.+18     	; 0x6aa <navigation_direction_regulation+0xa0>
     698:	60 e0       	ldi	r22, 0x00	; 0
     69a:	70 e0       	ldi	r23, 0x00	; 0
     69c:	80 e0       	ldi	r24, 0x00	; 0
     69e:	90 e0       	ldi	r25, 0x00	; 0
     6a0:	04 c0       	rjmp	.+8      	; 0x6aa <navigation_direction_regulation+0xa0>
     6a2:	60 e0       	ldi	r22, 0x00	; 0
     6a4:	70 e0       	ldi	r23, 0x00	; 0
     6a6:	80 e0       	ldi	r24, 0x00	; 0
     6a8:	90 e0       	ldi	r25, 0x00	; 0
     6aa:	08 95       	ret

000006ac <navigation_check_left_turn>:
     6ac:	81 35       	cpi	r24, 0x51	; 81
     6ae:	10 f0       	brcs	.+4      	; 0x6b4 <navigation_check_left_turn+0x8>
     6b0:	61 35       	cpi	r22, 0x51	; 81
     6b2:	28 f4       	brcc	.+10     	; 0x6be <navigation_check_left_turn+0x12>
     6b4:	91 e0       	ldi	r25, 0x01	; 1
     6b6:	81 35       	cpi	r24, 0x51	; 81
     6b8:	18 f4       	brcc	.+6      	; 0x6c0 <navigation_check_left_turn+0x14>
     6ba:	90 e0       	ldi	r25, 0x00	; 0
     6bc:	01 c0       	rjmp	.+2      	; 0x6c0 <navigation_check_left_turn+0x14>
     6be:	92 e0       	ldi	r25, 0x02	; 2
     6c0:	89 2f       	mov	r24, r25
     6c2:	08 95       	ret

000006c4 <navigation_check_right_turn>:
     6c4:	81 35       	cpi	r24, 0x51	; 81
     6c6:	10 f0       	brcs	.+4      	; 0x6cc <navigation_check_right_turn+0x8>
     6c8:	61 35       	cpi	r22, 0x51	; 81
     6ca:	28 f4       	brcc	.+10     	; 0x6d6 <navigation_check_right_turn+0x12>
     6cc:	91 e0       	ldi	r25, 0x01	; 1
     6ce:	81 35       	cpi	r24, 0x51	; 81
     6d0:	18 f4       	brcc	.+6      	; 0x6d8 <navigation_check_right_turn+0x14>
     6d2:	90 e0       	ldi	r25, 0x00	; 0
     6d4:	01 c0       	rjmp	.+2      	; 0x6d8 <navigation_check_right_turn+0x14>
     6d6:	92 e0       	ldi	r25, 0x02	; 2
     6d8:	89 2f       	mov	r24, r25
     6da:	08 95       	ret

000006dc <navigation_get_sensor>:
     6dc:	ef 92       	push	r14
     6de:	ff 92       	push	r15
     6e0:	0f 93       	push	r16
     6e2:	1f 93       	push	r17
     6e4:	cf 93       	push	r28
     6e6:	df 93       	push	r29
     6e8:	cd b7       	in	r28, 0x3d	; 61
     6ea:	de b7       	in	r29, 0x3e	; 62
     6ec:	ed b6       	in	r14, 0x3d	; 61
     6ee:	fe b6       	in	r15, 0x3e	; 62
     6f0:	60 91 02 01 	lds	r22, 0x0102
     6f4:	70 91 03 01 	lds	r23, 0x0103
     6f8:	2d b7       	in	r18, 0x3d	; 61
     6fa:	3e b7       	in	r19, 0x3e	; 62
     6fc:	26 1b       	sub	r18, r22
     6fe:	37 0b       	sbc	r19, r23
     700:	0f b6       	in	r0, 0x3f	; 63
     702:	f8 94       	cli
     704:	3e bf       	out	0x3e, r19	; 62
     706:	0f be       	out	0x3f, r0	; 63
     708:	2d bf       	out	0x3d, r18	; 61
     70a:	0d b7       	in	r16, 0x3d	; 61
     70c:	1e b7       	in	r17, 0x3e	; 62
     70e:	0f 5f       	subi	r16, 0xFF	; 255
     710:	1f 4f       	sbci	r17, 0xFF	; 255
     712:	16 16       	cp	r1, r22
     714:	17 06       	cpc	r1, r23
     716:	84 f4       	brge	.+32     	; 0x738 <navigation_get_sensor+0x5c>
     718:	dc 01       	movw	r26, r24
     71a:	aa 0f       	add	r26, r26
     71c:	bb 1f       	adc	r27, r27
     71e:	a8 0f       	add	r26, r24
     720:	b9 1f       	adc	r27, r25
     722:	a0 5d       	subi	r26, 0xD0	; 208
     724:	bc 4e       	sbci	r27, 0xEC	; 236
     726:	f8 01       	movw	r30, r16
     728:	c8 01       	movw	r24, r16
     72a:	86 0f       	add	r24, r22
     72c:	97 1f       	adc	r25, r23
     72e:	2d 91       	ld	r18, X+
     730:	21 93       	st	Z+, r18
     732:	e8 17       	cp	r30, r24
     734:	f9 07       	cpc	r31, r25
     736:	d9 f7       	brne	.-10     	; 0x72e <navigation_get_sensor+0x52>
     738:	2f e8       	ldi	r18, 0x8F	; 143
     73a:	32 e0       	ldi	r19, 0x02	; 2
     73c:	41 e0       	ldi	r20, 0x01	; 1
     73e:	50 e0       	ldi	r21, 0x00	; 0
     740:	c8 01       	movw	r24, r16
     742:	0e 94 aa 0d 	call	0x1b54	; 0x1b54 <qsort>
     746:	20 91 02 01 	lds	r18, 0x0102
     74a:	30 91 03 01 	lds	r19, 0x0103
     74e:	33 23       	and	r19, r19
     750:	14 f4       	brge	.+4      	; 0x756 <navigation_get_sensor+0x7a>
     752:	2f 5f       	subi	r18, 0xFF	; 255
     754:	3f 4f       	sbci	r19, 0xFF	; 255
     756:	35 95       	asr	r19
     758:	27 95       	ror	r18
     75a:	f8 01       	movw	r30, r16
     75c:	e2 0f       	add	r30, r18
     75e:	f3 1f       	adc	r31, r19
     760:	80 81       	ld	r24, Z
     762:	0f b6       	in	r0, 0x3f	; 63
     764:	f8 94       	cli
     766:	fe be       	out	0x3e, r15	; 62
     768:	0f be       	out	0x3f, r0	; 63
     76a:	ed be       	out	0x3d, r14	; 61
     76c:	df 91       	pop	r29
     76e:	cf 91       	pop	r28
     770:	1f 91       	pop	r17
     772:	0f 91       	pop	r16
     774:	ff 90       	pop	r15
     776:	ef 90       	pop	r14
     778:	08 95       	ret

0000077a <navigation_fill_buffer>:
     77a:	0f 93       	push	r16
     77c:	1f 93       	push	r17
     77e:	cf 93       	push	r28
     780:	df 93       	push	r29
     782:	c0 e0       	ldi	r28, 0x00	; 0
     784:	d0 e0       	ldi	r29, 0x00	; 0
     786:	00 91 2f 13 	lds	r16, 0x132F
     78a:	10 e0       	ldi	r17, 0x00	; 0
     78c:	ce 01       	movw	r24, r28
     78e:	87 d2       	rcall	.+1294   	; 0xc9e <TWI_get_sensor>
     790:	fe 01       	movw	r30, r28
     792:	ee 0f       	add	r30, r30
     794:	ff 1f       	adc	r31, r31
     796:	ec 0f       	add	r30, r28
     798:	fd 1f       	adc	r31, r29
     79a:	0e 0f       	add	r16, r30
     79c:	1f 1f       	adc	r17, r31
     79e:	f8 01       	movw	r30, r16
     7a0:	e0 5d       	subi	r30, 0xD0	; 208
     7a2:	fc 4e       	sbci	r31, 0xEC	; 236
     7a4:	80 83       	st	Z, r24
     7a6:	21 96       	adiw	r28, 0x01	; 1
     7a8:	c8 30       	cpi	r28, 0x08	; 8
     7aa:	d1 05       	cpc	r29, r1
     7ac:	61 f7       	brne	.-40     	; 0x786 <navigation_fill_buffer+0xc>
     7ae:	40 91 2f 13 	lds	r20, 0x132F
     7b2:	24 2f       	mov	r18, r20
     7b4:	30 e0       	ldi	r19, 0x00	; 0
     7b6:	80 91 02 01 	lds	r24, 0x0102
     7ba:	90 91 03 01 	lds	r25, 0x0103
     7be:	01 97       	sbiw	r24, 0x01	; 1
     7c0:	28 17       	cp	r18, r24
     7c2:	39 07       	cpc	r19, r25
     7c4:	19 f4       	brne	.+6      	; 0x7cc <navigation_fill_buffer+0x52>
     7c6:	10 92 2f 13 	sts	0x132F, r1
     7ca:	03 c0       	rjmp	.+6      	; 0x7d2 <navigation_fill_buffer+0x58>
     7cc:	4f 5f       	subi	r20, 0xFF	; 255
     7ce:	40 93 2f 13 	sts	0x132F, r20
     7d2:	df 91       	pop	r29
     7d4:	cf 91       	pop	r28
     7d6:	1f 91       	pop	r17
     7d8:	0f 91       	pop	r16
     7da:	08 95       	ret

000007dc <__vector_13>:
     7dc:	1f 92       	push	r1
     7de:	0f 92       	push	r0
     7e0:	0f b6       	in	r0, 0x3f	; 63
     7e2:	0f 92       	push	r0
     7e4:	11 24       	eor	r1, r1
     7e6:	0b b6       	in	r0, 0x3b	; 59
     7e8:	0f 92       	push	r0
     7ea:	2f 93       	push	r18
     7ec:	3f 93       	push	r19
     7ee:	4f 93       	push	r20
     7f0:	5f 93       	push	r21
     7f2:	6f 93       	push	r22
     7f4:	7f 93       	push	r23
     7f6:	8f 93       	push	r24
     7f8:	9f 93       	push	r25
     7fa:	af 93       	push	r26
     7fc:	bf 93       	push	r27
     7fe:	ef 93       	push	r30
     800:	ff 93       	push	r31
     802:	52 d2       	rcall	.+1188   	; 0xca8 <TWI_sensor_flag>
     804:	81 11       	cpse	r24, r1
     806:	b9 df       	rcall	.-142    	; 0x77a <navigation_fill_buffer>
     808:	10 92 85 00 	sts	0x0085, r1
     80c:	10 92 84 00 	sts	0x0084, r1
     810:	ff 91       	pop	r31
     812:	ef 91       	pop	r30
     814:	bf 91       	pop	r27
     816:	af 91       	pop	r26
     818:	9f 91       	pop	r25
     81a:	8f 91       	pop	r24
     81c:	7f 91       	pop	r23
     81e:	6f 91       	pop	r22
     820:	5f 91       	pop	r21
     822:	4f 91       	pop	r20
     824:	3f 91       	pop	r19
     826:	2f 91       	pop	r18
     828:	0f 90       	pop	r0
     82a:	0b be       	out	0x3b, r0	; 59
     82c:	0f 90       	pop	r0
     82e:	0f be       	out	0x3f, r0	; 63
     830:	0f 90       	pop	r0
     832:	1f 90       	pop	r1
     834:	18 95       	reti

00000836 <__vector_32>:
     836:	1f 92       	push	r1
     838:	0f 92       	push	r0
     83a:	0f b6       	in	r0, 0x3f	; 63
     83c:	0f 92       	push	r0
     83e:	11 24       	eor	r1, r1
     840:	10 92 95 00 	sts	0x0095, r1
     844:	10 92 94 00 	sts	0x0094, r1
     848:	0f 90       	pop	r0
     84a:	0f be       	out	0x3f, r0	; 63
     84c:	0f 90       	pop	r0
     84e:	1f 90       	pop	r1
     850:	18 95       	reti

00000852 <main>:
#include "counter.h"
#include "Navigation.h"
#include "autonomouswalk.h"

int main(void)
{
     852:	cf 93       	push	r28
     854:	df 93       	push	r29
     856:	00 d0       	rcall	.+0      	; 0x858 <main+0x6>
     858:	00 d0       	rcall	.+0      	; 0x85a <main+0x8>
     85a:	00 d0       	rcall	.+0      	; 0x85c <main+0xa>
     85c:	cd b7       	in	r28, 0x3d	; 61
     85e:	de b7       	in	r29, 0x3e	; 62
	USART_init();
     860:	ae d3       	rcall	.+1884   	; 0xfbe <USART_init>
	USART_set_twi_message_destination(C_ADDRESS); // send messages from gang to the display, not the computer
     862:	80 e8       	ldi	r24, 0x80	; 128
     864:	90 e0       	ldi	r25, 0x00	; 0
     866:	b7 d3       	rcall	.+1902   	; 0xfd6 <USART_set_twi_message_destination>
	sei();
     868:	78 94       	sei
	TWI_init(ST_ADDRESS);
     86a:	80 e2       	ldi	r24, 0x20	; 32
     86c:	d5 d0       	rcall	.+426    	; 0xa18 <TWI_init>
	init_counters();
     86e:	e9 dd       	rcall	.-1070   	; 0x442 <init_counters>
	DDRA |= (1<<PORTA0 | 1<<PORTA1);
     870:	81 b1       	in	r24, 0x01	; 1
     872:	83 60       	ori	r24, 0x03	; 3
     874:	81 b9       	out	0x01, r24	; 1
     876:	2f ef       	ldi	r18, 0xFF	; 255
     878:	83 ed       	ldi	r24, 0xD3	; 211
     87a:	90 e3       	ldi	r25, 0x30	; 48
     87c:	21 50       	subi	r18, 0x01	; 1
     87e:	80 40       	sbci	r24, 0x00	; 0
     880:	90 40       	sbci	r25, 0x00	; 0
     882:	e1 f7       	brne	.-8      	; 0x87c <main+0x2a>
     884:	00 c0       	rjmp	.+0      	; 0x886 <main+0x34>
     886:	00 00       	nop
	
	_delay_ms(1000);
	USART_send_command_parameters(0,50,100);
     888:	44 e6       	ldi	r20, 0x64	; 100
     88a:	62 e3       	ldi	r22, 0x32	; 50
     88c:	80 e0       	ldi	r24, 0x00	; 0
     88e:	4f d6       	rcall	.+3230   	; 0x152e <USART_send_command_parameters>
			autonomouswalk_walk(sensors);
		}
		else
		{
			if(TWI_command_flag()){
				PORTA ^= (1<<PORTA1);
     890:	12 e0       	ldi	r17, 0x02	; 2
		*/
		
		//USART_send_command_parameters(0,50,100);
		//_delay_ms(1000);
		
		if(navigation_autonomous_walk() == 1)
     892:	52 de       	rcall	.-860    	; 0x538 <navigation_autonomous_walk>
     894:	81 30       	cpi	r24, 0x01	; 1
     896:	e1 f4       	brne	.+56     	; 0x8d0 <main+0x7e>
		{
			uint8_t sensors[6];
			sensors[0]=navigation_get_sensor(0);
     898:	80 e0       	ldi	r24, 0x00	; 0
     89a:	90 e0       	ldi	r25, 0x00	; 0
     89c:	1f df       	rcall	.-450    	; 0x6dc <navigation_get_sensor>
     89e:	89 83       	std	Y+1, r24	; 0x01
			sensors[1]=navigation_get_sensor(1);
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	1b df       	rcall	.-458    	; 0x6dc <navigation_get_sensor>
     8a6:	8a 83       	std	Y+2, r24	; 0x02
			sensors[2]=navigation_get_sensor(2);
     8a8:	82 e0       	ldi	r24, 0x02	; 2
     8aa:	90 e0       	ldi	r25, 0x00	; 0
     8ac:	17 df       	rcall	.-466    	; 0x6dc <navigation_get_sensor>
     8ae:	8b 83       	std	Y+3, r24	; 0x03
			sensors[3]=navigation_get_sensor(3);
     8b0:	83 e0       	ldi	r24, 0x03	; 3
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	13 df       	rcall	.-474    	; 0x6dc <navigation_get_sensor>
     8b6:	8c 83       	std	Y+4, r24	; 0x04
			sensors[4]=navigation_get_sensor(4);
     8b8:	84 e0       	ldi	r24, 0x04	; 4
     8ba:	90 e0       	ldi	r25, 0x00	; 0
     8bc:	0f df       	rcall	.-482    	; 0x6dc <navigation_get_sensor>
     8be:	8d 83       	std	Y+5, r24	; 0x05
			sensors[5]=navigation_get_sensor(5);
     8c0:	85 e0       	ldi	r24, 0x05	; 5
     8c2:	90 e0       	ldi	r25, 0x00	; 0
     8c4:	0b df       	rcall	.-490    	; 0x6dc <navigation_get_sensor>
     8c6:	8e 83       	std	Y+6, r24	; 0x06
			autonomouswalk_walk(sensors);
     8c8:	ce 01       	movw	r24, r28
     8ca:	01 96       	adiw	r24, 0x01	; 1
     8cc:	5c dd       	rcall	.-1352   	; 0x386 <autonomouswalk_walk>
     8ce:	07 c0       	rjmp	.+14     	; 0x8de <main+0x8c>
		}
		else
		{
			if(TWI_command_flag()){
     8d0:	f5 d1       	rcall	.+1002   	; 0xcbc <TWI_command_flag>
     8d2:	88 23       	and	r24, r24
     8d4:	21 f0       	breq	.+8      	; 0x8de <main+0x8c>
				PORTA ^= (1<<PORTA1);
     8d6:	82 b1       	in	r24, 0x02	; 2
     8d8:	81 27       	eor	r24, r17
     8da:	82 b9       	out	0x02, r24	; 2
				USART_SendCommand();
     8dc:	47 d4       	rcall	.+2190   	; 0x116c <USART_SendCommand>
			}
		}
		USART_DecodeRxFIFO();
     8de:	7c d5       	rcall	.+2808   	; 0x13d8 <USART_DecodeRxFIFO>
    }
     8e0:	d8 cf       	rjmp	.-80     	; 0x892 <main+0x40>

000008e2 <set_twi_reciever_enable>:
     8e2:	85 e4       	ldi	r24, 0x45	; 69
     8e4:	80 93 bc 00 	sts	0x00BC, r24
     8e8:	08 95       	ret

000008ea <clear_int>:
     8ea:	81 ec       	ldi	r24, 0xC1	; 193
     8ec:	80 93 bc 00 	sts	0x00BC, r24
     8f0:	08 95       	ret

000008f2 <start_bus>:
     8f2:	84 ea       	ldi	r24, 0xA4	; 164
     8f4:	80 93 bc 00 	sts	0x00BC, r24
     8f8:	08 95       	ret

000008fa <stop_bus>:
     8fa:	85 ed       	ldi	r24, 0xD5	; 213
     8fc:	80 93 bc 00 	sts	0x00BC, r24
     900:	08 95       	ret

00000902 <Error>:
     902:	80 91 b9 00 	lds	r24, 0x00B9
     906:	88 7f       	andi	r24, 0xF8	; 248
     908:	88 33       	cpi	r24, 0x38	; 56
     90a:	09 f0       	breq	.+2      	; 0x90e <Error+0xc>
     90c:	f6 cf       	rjmp	.-20     	; 0x8fa <stop_bus>
     90e:	ed cf       	rjmp	.-38     	; 0x8ea <clear_int>

00000910 <get_data>:
     910:	80 91 bb 00 	lds	r24, 0x00BB
     914:	08 95       	ret

00000916 <wait_for_bus>:
     916:	ec eb       	ldi	r30, 0xBC	; 188
     918:	f0 e0       	ldi	r31, 0x00	; 0
     91a:	80 81       	ld	r24, Z
     91c:	88 23       	and	r24, r24
     91e:	ec f7       	brge	.-6      	; 0x91a <wait_for_bus+0x4>
     920:	08 95       	ret

00000922 <send_data_and_wait>:
     922:	80 93 bb 00 	sts	0x00BB, r24
     926:	84 e8       	ldi	r24, 0x84	; 132
     928:	80 93 bc 00 	sts	0x00BC, r24
     92c:	f4 cf       	rjmp	.-24     	; 0x916 <wait_for_bus>

0000092e <stop_twi>:
     92e:	10 92 5b 14 	sts	0x145B, r1
     932:	10 92 5a 14 	sts	0x145A, r1
     936:	10 92 65 14 	sts	0x1465, r1
     93a:	10 92 64 14 	sts	0x1464, r1
     93e:	10 92 50 14 	sts	0x1450, r1
     942:	10 92 4f 14 	sts	0x144F, r1
     946:	10 92 55 14 	sts	0x1455, r1
     94a:	10 92 54 14 	sts	0x1454, r1
     94e:	10 92 58 14 	sts	0x1458, r1
     952:	10 92 57 14 	sts	0x1457, r1
     956:	08 95       	ret

00000958 <reset_TWI>:
     958:	ec eb       	ldi	r30, 0xBC	; 188
     95a:	f0 e0       	ldi	r31, 0x00	; 0
     95c:	80 81       	ld	r24, Z
     95e:	80 6c       	ori	r24, 0xC0	; 192
     960:	80 83       	st	Z, r24
     962:	08 95       	ret

00000964 <get_sensor_from_bus>:
     964:	cf 93       	push	r28
     966:	df 93       	push	r29
     968:	c0 91 64 14 	lds	r28, 0x1464
     96c:	d0 91 65 14 	lds	r29, 0x1465
     970:	c8 30       	cpi	r28, 0x08	; 8
     972:	d1 05       	cpc	r29, r1
     974:	91 f4       	brne	.+36     	; 0x99a <get_sensor_from_bus+0x36>
     976:	e0 e3       	ldi	r30, 0x30	; 48
     978:	f3 e1       	ldi	r31, 0x13	; 19
     97a:	a6 e6       	ldi	r26, 0x66	; 102
     97c:	b4 e1       	ldi	r27, 0x14	; 20
     97e:	88 e3       	ldi	r24, 0x38	; 56
     980:	93 e1       	ldi	r25, 0x13	; 19
     982:	21 91       	ld	r18, Z+
     984:	2d 93       	st	X+, r18
     986:	e8 17       	cp	r30, r24
     988:	f9 07       	cpc	r31, r25
     98a:	d9 f7       	brne	.-10     	; 0x982 <get_sensor_from_bus+0x1e>
     98c:	c1 df       	rcall	.-126    	; 0x910 <get_data>
     98e:	80 93 5e 14 	sts	0x145E, r24
     992:	81 e0       	ldi	r24, 0x01	; 1
     994:	80 93 2a 13 	sts	0x132A, r24
     998:	0d c0       	rjmp	.+26     	; 0x9b4 <get_sensor_from_bus+0x50>
     99a:	ba df       	rcall	.-140    	; 0x910 <get_data>
     99c:	c0 5d       	subi	r28, 0xD0	; 208
     99e:	dc 4e       	sbci	r29, 0xEC	; 236
     9a0:	88 83       	st	Y, r24
     9a2:	80 91 64 14 	lds	r24, 0x1464
     9a6:	90 91 65 14 	lds	r25, 0x1465
     9aa:	01 96       	adiw	r24, 0x01	; 1
     9ac:	90 93 65 14 	sts	0x1465, r25
     9b0:	80 93 64 14 	sts	0x1464, r24
     9b4:	df 91       	pop	r29
     9b6:	cf 91       	pop	r28
     9b8:	08 95       	ret

000009ba <get_control_settings_from_bus>:
     9ba:	cf 93       	push	r28
     9bc:	df 93       	push	r29
     9be:	c0 91 54 14 	lds	r28, 0x1454
     9c2:	d0 91 55 14 	lds	r29, 0x1455
     9c6:	a4 df       	rcall	.-184    	; 0x910 <get_data>
     9c8:	cf 5a       	subi	r28, 0xAF	; 175
     9ca:	db 4e       	sbci	r29, 0xEB	; 235
     9cc:	88 83       	st	Y, r24
     9ce:	10 92 55 14 	sts	0x1455, r1
     9d2:	10 92 54 14 	sts	0x1454, r1
     9d6:	df 91       	pop	r29
     9d8:	cf 91       	pop	r28
     9da:	08 95       	ret

000009dc <get_autonom_settings_from_bus>:
     9dc:	99 df       	rcall	.-206    	; 0x910 <get_data>
     9de:	80 93 4f 13 	sts	0x134F, r24
     9e2:	08 95       	ret

000009e4 <get_char_from_bus>:
     9e4:	cf 93       	push	r28
     9e6:	df 93       	push	r29
     9e8:	c0 91 4f 14 	lds	r28, 0x144F
     9ec:	d0 91 50 14 	lds	r29, 0x1450
     9f0:	8f df       	rcall	.-226    	; 0x910 <get_data>
     9f2:	c0 5b       	subi	r28, 0xB0	; 176
     9f4:	dc 4e       	sbci	r29, 0xEC	; 236
     9f6:	88 83       	st	Y, r24
     9f8:	80 91 4f 14 	lds	r24, 0x144F
     9fc:	90 91 50 14 	lds	r25, 0x1450
     a00:	01 96       	adiw	r24, 0x01	; 1
     a02:	90 93 50 14 	sts	0x1450, r25
     a06:	80 93 4f 14 	sts	0x144F, r24
     a0a:	90 93 60 14 	sts	0x1460, r25
     a0e:	80 93 5f 14 	sts	0x145F, r24
     a12:	df 91       	pop	r29
     a14:	cf 91       	pop	r28
     a16:	08 95       	ret

00000a18 <TWI_init>:
     a18:	80 93 56 14 	sts	0x1456, r24
     a1c:	80 34       	cpi	r24, 0x40	; 64
     a1e:	79 f0       	breq	.+30     	; 0xa3e <TWI_init+0x26>
     a20:	80 38       	cpi	r24, 0x80	; 128
     a22:	19 f0       	breq	.+6      	; 0xa2a <TWI_init+0x12>
     a24:	80 32       	cpi	r24, 0x20	; 32
     a26:	d1 f4       	brne	.+52     	; 0xa5c <TWI_init+0x44>
     a28:	12 c0       	rjmp	.+36     	; 0xa4e <TWI_init+0x36>
     a2a:	83 e0       	ldi	r24, 0x03	; 3
     a2c:	88 b9       	out	0x08, r24	; 8
     a2e:	59 df       	rcall	.-334    	; 0x8e2 <set_twi_reciever_enable>
     a30:	8f e3       	ldi	r24, 0x3F	; 63
     a32:	80 93 b8 00 	sts	0x00B8, r24
     a36:	81 e8       	ldi	r24, 0x81	; 129
     a38:	80 93 ba 00 	sts	0x00BA, r24
     a3c:	0f c0       	rjmp	.+30     	; 0xa5c <TWI_init+0x44>
     a3e:	8f e3       	ldi	r24, 0x3F	; 63
     a40:	80 93 b8 00 	sts	0x00B8, r24
     a44:	4e df       	rcall	.-356    	; 0x8e2 <set_twi_reciever_enable>
     a46:	80 e4       	ldi	r24, 0x40	; 64
     a48:	80 93 ba 00 	sts	0x00BA, r24
     a4c:	07 c0       	rjmp	.+14     	; 0xa5c <TWI_init+0x44>
     a4e:	8f e3       	ldi	r24, 0x3F	; 63
     a50:	80 93 b8 00 	sts	0x00B8, r24
     a54:	46 df       	rcall	.-372    	; 0x8e2 <set_twi_reciever_enable>
     a56:	81 e2       	ldi	r24, 0x21	; 33
     a58:	80 93 ba 00 	sts	0x00BA, r24
     a5c:	10 92 4c 13 	sts	0x134C, r1
     a60:	82 e3       	ldi	r24, 0x32	; 50
     a62:	80 93 4d 13 	sts	0x134D, r24
     a66:	10 92 4e 13 	sts	0x134E, r1
     a6a:	08 95       	ret

00000a6c <TWI_send_command>:
     a6c:	1f 93       	push	r17
     a6e:	cf 93       	push	r28
     a70:	df 93       	push	r29
     a72:	c8 2f       	mov	r28, r24
     a74:	d6 2f       	mov	r29, r22
     a76:	14 2f       	mov	r17, r20
     a78:	3c df       	rcall	.-392    	; 0x8f2 <start_bus>
     a7a:	4d df       	rcall	.-358    	; 0x916 <wait_for_bus>
     a7c:	90 91 b9 00 	lds	r25, 0x00B9
     a80:	98 7f       	andi	r25, 0xF8	; 248
     a82:	98 30       	cpi	r25, 0x08	; 8
     a84:	19 f0       	breq	.+6      	; 0xa8c <TWI_send_command+0x20>
     a86:	3d df       	rcall	.-390    	; 0x902 <Error>
     a88:	80 e0       	ldi	r24, 0x00	; 0
     a8a:	34 c0       	rjmp	.+104    	; 0xaf4 <TWI_send_command+0x88>
     a8c:	80 e2       	ldi	r24, 0x20	; 32
     a8e:	49 df       	rcall	.-366    	; 0x922 <send_data_and_wait>
     a90:	80 91 b9 00 	lds	r24, 0x00B9
     a94:	88 7f       	andi	r24, 0xF8	; 248
     a96:	88 31       	cpi	r24, 0x18	; 24
     a98:	19 f0       	breq	.+6      	; 0xaa0 <TWI_send_command+0x34>
     a9a:	33 df       	rcall	.-410    	; 0x902 <Error>
     a9c:	80 e0       	ldi	r24, 0x00	; 0
     a9e:	2a c0       	rjmp	.+84     	; 0xaf4 <TWI_send_command+0x88>
     aa0:	80 e0       	ldi	r24, 0x00	; 0
     aa2:	3f df       	rcall	.-386    	; 0x922 <send_data_and_wait>
     aa4:	80 91 b9 00 	lds	r24, 0x00B9
     aa8:	88 7f       	andi	r24, 0xF8	; 248
     aaa:	88 32       	cpi	r24, 0x28	; 40
     aac:	19 f0       	breq	.+6      	; 0xab4 <TWI_send_command+0x48>
     aae:	29 df       	rcall	.-430    	; 0x902 <Error>
     ab0:	80 e0       	ldi	r24, 0x00	; 0
     ab2:	20 c0       	rjmp	.+64     	; 0xaf4 <TWI_send_command+0x88>
     ab4:	8c 2f       	mov	r24, r28
     ab6:	35 df       	rcall	.-406    	; 0x922 <send_data_and_wait>
     ab8:	80 91 b9 00 	lds	r24, 0x00B9
     abc:	88 7f       	andi	r24, 0xF8	; 248
     abe:	88 32       	cpi	r24, 0x28	; 40
     ac0:	19 f0       	breq	.+6      	; 0xac8 <TWI_send_command+0x5c>
     ac2:	1f df       	rcall	.-450    	; 0x902 <Error>
     ac4:	80 e0       	ldi	r24, 0x00	; 0
     ac6:	16 c0       	rjmp	.+44     	; 0xaf4 <TWI_send_command+0x88>
     ac8:	8d 2f       	mov	r24, r29
     aca:	2b df       	rcall	.-426    	; 0x922 <send_data_and_wait>
     acc:	80 91 b9 00 	lds	r24, 0x00B9
     ad0:	88 7f       	andi	r24, 0xF8	; 248
     ad2:	88 32       	cpi	r24, 0x28	; 40
     ad4:	19 f0       	breq	.+6      	; 0xadc <TWI_send_command+0x70>
     ad6:	15 df       	rcall	.-470    	; 0x902 <Error>
     ad8:	80 e0       	ldi	r24, 0x00	; 0
     ada:	0c c0       	rjmp	.+24     	; 0xaf4 <TWI_send_command+0x88>
     adc:	81 2f       	mov	r24, r17
     ade:	21 df       	rcall	.-446    	; 0x922 <send_data_and_wait>
     ae0:	80 91 b9 00 	lds	r24, 0x00B9
     ae4:	88 7f       	andi	r24, 0xF8	; 248
     ae6:	88 32       	cpi	r24, 0x28	; 40
     ae8:	19 f0       	breq	.+6      	; 0xaf0 <TWI_send_command+0x84>
     aea:	0b df       	rcall	.-490    	; 0x902 <Error>
     aec:	80 e0       	ldi	r24, 0x00	; 0
     aee:	02 c0       	rjmp	.+4      	; 0xaf4 <TWI_send_command+0x88>
     af0:	04 df       	rcall	.-504    	; 0x8fa <stop_bus>
     af2:	81 e0       	ldi	r24, 0x01	; 1
     af4:	df 91       	pop	r29
     af6:	cf 91       	pop	r28
     af8:	1f 91       	pop	r17
     afa:	08 95       	ret

00000afc <TWI_send_string>:
     afc:	ef 92       	push	r14
     afe:	ff 92       	push	r15
     b00:	0f 93       	push	r16
     b02:	1f 93       	push	r17
     b04:	cf 93       	push	r28
     b06:	df 93       	push	r29
     b08:	c8 2f       	mov	r28, r24
     b0a:	e6 2e       	mov	r14, r22
     b0c:	f7 2e       	mov	r15, r23
     b0e:	f1 de       	rcall	.-542    	; 0x8f2 <start_bus>
     b10:	02 df       	rcall	.-508    	; 0x916 <wait_for_bus>
     b12:	90 91 b9 00 	lds	r25, 0x00B9
     b16:	98 7f       	andi	r25, 0xF8	; 248
     b18:	98 30       	cpi	r25, 0x08	; 8
     b1a:	19 f0       	breq	.+6      	; 0xb22 <TWI_send_string+0x26>
     b1c:	f2 de       	rcall	.-540    	; 0x902 <Error>
     b1e:	80 e0       	ldi	r24, 0x00	; 0
     b20:	2c c0       	rjmp	.+88     	; 0xb7a <TWI_send_string+0x7e>
     b22:	8c 2f       	mov	r24, r28
     b24:	fe de       	rcall	.-516    	; 0x922 <send_data_and_wait>
     b26:	80 91 b9 00 	lds	r24, 0x00B9
     b2a:	88 7f       	andi	r24, 0xF8	; 248
     b2c:	88 31       	cpi	r24, 0x18	; 24
     b2e:	19 f0       	breq	.+6      	; 0xb36 <TWI_send_string+0x3a>
     b30:	e8 de       	rcall	.-560    	; 0x902 <Error>
     b32:	80 e0       	ldi	r24, 0x00	; 0
     b34:	22 c0       	rjmp	.+68     	; 0xb7a <TWI_send_string+0x7e>
     b36:	89 e1       	ldi	r24, 0x19	; 25
     b38:	f4 de       	rcall	.-536    	; 0x922 <send_data_and_wait>
     b3a:	80 91 b9 00 	lds	r24, 0x00B9
     b3e:	88 7f       	andi	r24, 0xF8	; 248
     b40:	88 32       	cpi	r24, 0x28	; 40
     b42:	29 f4       	brne	.+10     	; 0xb4e <TWI_send_string+0x52>
     b44:	0e 2d       	mov	r16, r14
     b46:	1f 2d       	mov	r17, r15
     b48:	c0 e0       	ldi	r28, 0x00	; 0
     b4a:	d0 e0       	ldi	r29, 0x00	; 0
     b4c:	08 c0       	rjmp	.+16     	; 0xb5e <TWI_send_string+0x62>
     b4e:	d9 de       	rcall	.-590    	; 0x902 <Error>
     b50:	80 e0       	ldi	r24, 0x00	; 0
     b52:	13 c0       	rjmp	.+38     	; 0xb7a <TWI_send_string+0x7e>
     b54:	f8 01       	movw	r30, r16
     b56:	81 91       	ld	r24, Z+
     b58:	8f 01       	movw	r16, r30
     b5a:	e3 de       	rcall	.-570    	; 0x922 <send_data_and_wait>
     b5c:	21 96       	adiw	r28, 0x01	; 1
     b5e:	ee 2d       	mov	r30, r14
     b60:	ff 2d       	mov	r31, r15
     b62:	df 01       	movw	r26, r30
     b64:	0d 90       	ld	r0, X+
     b66:	00 20       	and	r0, r0
     b68:	e9 f7       	brne	.-6      	; 0xb64 <TWI_send_string+0x68>
     b6a:	11 97       	sbiw	r26, 0x01	; 1
     b6c:	ae 1b       	sub	r26, r30
     b6e:	bf 0b       	sbc	r27, r31
     b70:	ca 17       	cp	r28, r26
     b72:	db 07       	cpc	r29, r27
     b74:	78 f3       	brcs	.-34     	; 0xb54 <TWI_send_string+0x58>
     b76:	c1 de       	rcall	.-638    	; 0x8fa <stop_bus>
     b78:	81 e0       	ldi	r24, 0x01	; 1
     b7a:	df 91       	pop	r29
     b7c:	cf 91       	pop	r28
     b7e:	1f 91       	pop	r17
     b80:	0f 91       	pop	r16
     b82:	ff 90       	pop	r15
     b84:	ef 90       	pop	r14
     b86:	08 95       	ret

00000b88 <TWI_send_string_fixed_length>:
     b88:	ef 92       	push	r14
     b8a:	ff 92       	push	r15
     b8c:	0f 93       	push	r16
     b8e:	1f 93       	push	r17
     b90:	cf 93       	push	r28
     b92:	df 93       	push	r29
     b94:	c8 2f       	mov	r28, r24
     b96:	e6 2e       	mov	r14, r22
     b98:	f7 2e       	mov	r15, r23
     b9a:	8a 01       	movw	r16, r20
     b9c:	aa de       	rcall	.-684    	; 0x8f2 <start_bus>
     b9e:	bb de       	rcall	.-650    	; 0x916 <wait_for_bus>
     ba0:	90 91 b9 00 	lds	r25, 0x00B9
     ba4:	98 7f       	andi	r25, 0xF8	; 248
     ba6:	98 30       	cpi	r25, 0x08	; 8
     ba8:	19 f0       	breq	.+6      	; 0xbb0 <TWI_send_string_fixed_length+0x28>
     baa:	ab de       	rcall	.-682    	; 0x902 <Error>
     bac:	80 e0       	ldi	r24, 0x00	; 0
     bae:	23 c0       	rjmp	.+70     	; 0xbf6 <TWI_send_string_fixed_length+0x6e>
     bb0:	8c 2f       	mov	r24, r28
     bb2:	b7 de       	rcall	.-658    	; 0x922 <send_data_and_wait>
     bb4:	80 91 b9 00 	lds	r24, 0x00B9
     bb8:	88 7f       	andi	r24, 0xF8	; 248
     bba:	88 31       	cpi	r24, 0x18	; 24
     bbc:	19 f0       	breq	.+6      	; 0xbc4 <TWI_send_string_fixed_length+0x3c>
     bbe:	a1 de       	rcall	.-702    	; 0x902 <Error>
     bc0:	80 e0       	ldi	r24, 0x00	; 0
     bc2:	19 c0       	rjmp	.+50     	; 0xbf6 <TWI_send_string_fixed_length+0x6e>
     bc4:	89 e1       	ldi	r24, 0x19	; 25
     bc6:	ad de       	rcall	.-678    	; 0x922 <send_data_and_wait>
     bc8:	80 91 b9 00 	lds	r24, 0x00B9
     bcc:	88 7f       	andi	r24, 0xF8	; 248
     bce:	88 32       	cpi	r24, 0x28	; 40
     bd0:	21 f4       	brne	.+8      	; 0xbda <TWI_send_string_fixed_length+0x52>
     bd2:	10 16       	cp	r1, r16
     bd4:	11 06       	cpc	r1, r17
     bd6:	24 f0       	brlt	.+8      	; 0xbe0 <TWI_send_string_fixed_length+0x58>
     bd8:	0c c0       	rjmp	.+24     	; 0xbf2 <TWI_send_string_fixed_length+0x6a>
     bda:	93 de       	rcall	.-730    	; 0x902 <Error>
     bdc:	80 e0       	ldi	r24, 0x00	; 0
     bde:	0b c0       	rjmp	.+22     	; 0xbf6 <TWI_send_string_fixed_length+0x6e>
     be0:	ce 2d       	mov	r28, r14
     be2:	df 2d       	mov	r29, r15
     be4:	0c 0f       	add	r16, r28
     be6:	1d 1f       	adc	r17, r29
     be8:	89 91       	ld	r24, Y+
     bea:	9b de       	rcall	.-714    	; 0x922 <send_data_and_wait>
     bec:	c0 17       	cp	r28, r16
     bee:	d1 07       	cpc	r29, r17
     bf0:	d9 f7       	brne	.-10     	; 0xbe8 <TWI_send_string_fixed_length+0x60>
     bf2:	83 de       	rcall	.-762    	; 0x8fa <stop_bus>
     bf4:	81 e0       	ldi	r24, 0x01	; 1
     bf6:	df 91       	pop	r29
     bf8:	cf 91       	pop	r28
     bfa:	1f 91       	pop	r17
     bfc:	0f 91       	pop	r16
     bfe:	ff 90       	pop	r15
     c00:	ef 90       	pop	r14
     c02:	08 95       	ret

00000c04 <TWI_send_float>:
     c04:	ef 92       	push	r14
     c06:	ff 92       	push	r15
     c08:	0f 93       	push	r16
     c0a:	1f 93       	push	r17
     c0c:	cf 93       	push	r28
     c0e:	df 93       	push	r29
     c10:	00 d0       	rcall	.+0      	; 0xc12 <TWI_send_float+0xe>
     c12:	00 d0       	rcall	.+0      	; 0xc14 <TWI_send_float+0x10>
     c14:	cd b7       	in	r28, 0x3d	; 61
     c16:	de b7       	in	r29, 0x3e	; 62
     c18:	18 2f       	mov	r17, r24
     c1a:	49 83       	std	Y+1, r20	; 0x01
     c1c:	5a 83       	std	Y+2, r21	; 0x02
     c1e:	6b 83       	std	Y+3, r22	; 0x03
     c20:	7c 83       	std	Y+4, r23	; 0x04
     c22:	67 de       	rcall	.-818    	; 0x8f2 <start_bus>
     c24:	78 de       	rcall	.-784    	; 0x916 <wait_for_bus>
     c26:	90 91 b9 00 	lds	r25, 0x00B9
     c2a:	98 7f       	andi	r25, 0xF8	; 248
     c2c:	98 30       	cpi	r25, 0x08	; 8
     c2e:	19 f0       	breq	.+6      	; 0xc36 <TWI_send_float+0x32>
     c30:	68 de       	rcall	.-816    	; 0x902 <Error>
     c32:	80 e0       	ldi	r24, 0x00	; 0
     c34:	24 c0       	rjmp	.+72     	; 0xc7e <TWI_send_float+0x7a>
     c36:	81 2f       	mov	r24, r17
     c38:	74 de       	rcall	.-792    	; 0x922 <send_data_and_wait>
     c3a:	80 91 b9 00 	lds	r24, 0x00B9
     c3e:	88 7f       	andi	r24, 0xF8	; 248
     c40:	88 31       	cpi	r24, 0x18	; 24
     c42:	19 f0       	breq	.+6      	; 0xc4a <TWI_send_float+0x46>
     c44:	5e de       	rcall	.-836    	; 0x902 <Error>
     c46:	80 e0       	ldi	r24, 0x00	; 0
     c48:	1a c0       	rjmp	.+52     	; 0xc7e <TWI_send_float+0x7a>
     c4a:	86 e0       	ldi	r24, 0x06	; 6
     c4c:	6a de       	rcall	.-812    	; 0x922 <send_data_and_wait>
     c4e:	80 91 b9 00 	lds	r24, 0x00B9
     c52:	88 7f       	andi	r24, 0xF8	; 248
     c54:	88 32       	cpi	r24, 0x28	; 40
     c56:	19 f0       	breq	.+6      	; 0xc5e <TWI_send_float+0x5a>
     c58:	54 de       	rcall	.-856    	; 0x902 <Error>
     c5a:	80 e0       	ldi	r24, 0x00	; 0
     c5c:	10 c0       	rjmp	.+32     	; 0xc7e <TWI_send_float+0x7a>
     c5e:	8e 01       	movw	r16, r28
     c60:	0f 5f       	subi	r16, 0xFF	; 255
     c62:	1f 4f       	sbci	r17, 0xFF	; 255
     c64:	7e 01       	movw	r14, r28
     c66:	85 e0       	ldi	r24, 0x05	; 5
     c68:	e8 0e       	add	r14, r24
     c6a:	f1 1c       	adc	r15, r1
     c6c:	f8 01       	movw	r30, r16
     c6e:	81 91       	ld	r24, Z+
     c70:	8f 01       	movw	r16, r30
     c72:	57 de       	rcall	.-850    	; 0x922 <send_data_and_wait>
     c74:	0e 15       	cp	r16, r14
     c76:	1f 05       	cpc	r17, r15
     c78:	c9 f7       	brne	.-14     	; 0xc6c <TWI_send_float+0x68>
     c7a:	3f de       	rcall	.-898    	; 0x8fa <stop_bus>
     c7c:	81 e0       	ldi	r24, 0x01	; 1
     c7e:	0f 90       	pop	r0
     c80:	0f 90       	pop	r0
     c82:	0f 90       	pop	r0
     c84:	0f 90       	pop	r0
     c86:	df 91       	pop	r29
     c88:	cf 91       	pop	r28
     c8a:	1f 91       	pop	r17
     c8c:	0f 91       	pop	r16
     c8e:	ff 90       	pop	r15
     c90:	ef 90       	pop	r14
     c92:	08 95       	ret

00000c94 <TWI_get_command>:
     c94:	84 5b       	subi	r24, 0xB4	; 180
     c96:	9c 4e       	sbci	r25, 0xEC	; 236
     c98:	fc 01       	movw	r30, r24
     c9a:	80 81       	ld	r24, Z
     c9c:	08 95       	ret

00000c9e <TWI_get_sensor>:
     c9e:	8a 59       	subi	r24, 0x9A	; 154
     ca0:	9b 4e       	sbci	r25, 0xEB	; 235
     ca2:	fc 01       	movw	r30, r24
     ca4:	80 81       	ld	r24, Z
     ca6:	08 95       	ret

00000ca8 <TWI_sensor_flag>:
     ca8:	80 91 2a 13 	lds	r24, 0x132A
     cac:	88 23       	and	r24, r24
     cae:	21 f0       	breq	.+8      	; 0xcb8 <TWI_sensor_flag+0x10>
     cb0:	10 92 2a 13 	sts	0x132A, r1
     cb4:	81 e0       	ldi	r24, 0x01	; 1
     cb6:	08 95       	ret
     cb8:	80 e0       	ldi	r24, 0x00	; 0
     cba:	08 95       	ret

00000cbc <TWI_command_flag>:
     cbc:	80 91 29 13 	lds	r24, 0x1329
     cc0:	88 23       	and	r24, r24
     cc2:	21 f0       	breq	.+8      	; 0xccc <TWI_command_flag+0x10>
     cc4:	10 92 29 13 	sts	0x1329, r1
     cc8:	81 e0       	ldi	r24, 0x01	; 1
     cca:	08 95       	ret
     ccc:	80 e0       	ldi	r24, 0x00	; 0
     cce:	08 95       	ret

00000cd0 <__vector_26>:
     cd0:	1f 92       	push	r1
     cd2:	0f 92       	push	r0
     cd4:	0f b6       	in	r0, 0x3f	; 63
     cd6:	0f 92       	push	r0
     cd8:	11 24       	eor	r1, r1
     cda:	0b b6       	in	r0, 0x3b	; 59
     cdc:	0f 92       	push	r0
     cde:	2f 93       	push	r18
     ce0:	3f 93       	push	r19
     ce2:	4f 93       	push	r20
     ce4:	5f 93       	push	r21
     ce6:	6f 93       	push	r22
     ce8:	7f 93       	push	r23
     cea:	8f 93       	push	r24
     cec:	9f 93       	push	r25
     cee:	af 93       	push	r26
     cf0:	bf 93       	push	r27
     cf2:	cf 93       	push	r28
     cf4:	df 93       	push	r29
     cf6:	ef 93       	push	r30
     cf8:	ff 93       	push	r31
     cfa:	80 91 56 14 	lds	r24, 0x1456
     cfe:	80 34       	cpi	r24, 0x40	; 64
     d00:	09 f4       	brne	.+2      	; 0xd04 <__vector_26+0x34>
     d02:	6f c0       	rjmp	.+222    	; 0xde2 <__vector_26+0x112>
     d04:	80 38       	cpi	r24, 0x80	; 128
     d06:	21 f0       	breq	.+8      	; 0xd10 <__vector_26+0x40>
     d08:	80 32       	cpi	r24, 0x20	; 32
     d0a:	09 f0       	breq	.+2      	; 0xd0e <__vector_26+0x3e>
     d0c:	43 c1       	rjmp	.+646    	; 0xf94 <__vector_26+0x2c4>
     d0e:	a9 c0       	rjmp	.+338    	; 0xe62 <__vector_26+0x192>
     d10:	80 91 b9 00 	lds	r24, 0x00B9
     d14:	88 7f       	andi	r24, 0xF8	; 248
     d16:	80 36       	cpi	r24, 0x60	; 96
     d18:	29 f0       	breq	.+10     	; 0xd24 <__vector_26+0x54>
     d1a:	80 91 b9 00 	lds	r24, 0x00B9
     d1e:	88 7f       	andi	r24, 0xF8	; 248
     d20:	88 36       	cpi	r24, 0x68	; 104
     d22:	21 f4       	brne	.+8      	; 0xd2c <__vector_26+0x5c>
     d24:	81 e0       	ldi	r24, 0x01	; 1
     d26:	80 93 59 14 	sts	0x1459, r24
     d2a:	59 c0       	rjmp	.+178    	; 0xdde <__vector_26+0x10e>
     d2c:	80 91 b9 00 	lds	r24, 0x00B9
     d30:	88 7f       	andi	r24, 0xF8	; 248
     d32:	80 38       	cpi	r24, 0x80	; 128
     d34:	b1 f5       	brne	.+108    	; 0xda2 <__vector_26+0xd2>
     d36:	80 91 59 14 	lds	r24, 0x1459
     d3a:	88 23       	and	r24, r24
     d3c:	41 f0       	breq	.+16     	; 0xd4e <__vector_26+0x7e>
     d3e:	e8 dd       	rcall	.-1072   	; 0x910 <get_data>
     d40:	80 93 62 14 	sts	0x1462, r24
     d44:	10 92 63 14 	sts	0x1463, r1
     d48:	10 92 59 14 	sts	0x1459, r1
     d4c:	48 c0       	rjmp	.+144    	; 0xdde <__vector_26+0x10e>
     d4e:	80 91 62 14 	lds	r24, 0x1462
     d52:	90 91 63 14 	lds	r25, 0x1463
     d56:	85 30       	cpi	r24, 0x05	; 5
     d58:	91 05       	cpc	r25, r1
     d5a:	69 f0       	breq	.+26     	; 0xd76 <__vector_26+0xa6>
     d5c:	24 f4       	brge	.+8      	; 0xd66 <__vector_26+0x96>
     d5e:	01 97       	sbiw	r24, 0x01	; 1
     d60:	09 f0       	breq	.+2      	; 0xd64 <__vector_26+0x94>
     d62:	3d c0       	rjmp	.+122    	; 0xdde <__vector_26+0x10e>
     d64:	06 c0       	rjmp	.+12     	; 0xd72 <__vector_26+0xa2>
     d66:	86 30       	cpi	r24, 0x06	; 6
     d68:	91 05       	cpc	r25, r1
     d6a:	49 f0       	breq	.+18     	; 0xd7e <__vector_26+0xae>
     d6c:	49 97       	sbiw	r24, 0x19	; 25
     d6e:	b9 f5       	brne	.+110    	; 0xdde <__vector_26+0x10e>
     d70:	04 c0       	rjmp	.+8      	; 0xd7a <__vector_26+0xaa>
     d72:	23 de       	rcall	.-954    	; 0x9ba <get_control_settings_from_bus>
     d74:	34 c0       	rjmp	.+104    	; 0xdde <__vector_26+0x10e>
     d76:	32 de       	rcall	.-924    	; 0x9dc <get_autonom_settings_from_bus>
     d78:	32 c0       	rjmp	.+100    	; 0xdde <__vector_26+0x10e>
     d7a:	34 de       	rcall	.-920    	; 0x9e4 <get_char_from_bus>
     d7c:	30 c0       	rjmp	.+96     	; 0xdde <__vector_26+0x10e>
     d7e:	c0 91 57 14 	lds	r28, 0x1457
     d82:	d0 91 58 14 	lds	r29, 0x1458
     d86:	c4 dd       	rcall	.-1144   	; 0x910 <get_data>
     d88:	c8 5b       	subi	r28, 0xB8	; 184
     d8a:	dc 4e       	sbci	r29, 0xEC	; 236
     d8c:	88 83       	st	Y, r24
     d8e:	80 91 57 14 	lds	r24, 0x1457
     d92:	90 91 58 14 	lds	r25, 0x1458
     d96:	01 96       	adiw	r24, 0x01	; 1
     d98:	90 93 58 14 	sts	0x1458, r25
     d9c:	80 93 57 14 	sts	0x1457, r24
     da0:	1e c0       	rjmp	.+60     	; 0xdde <__vector_26+0x10e>
     da2:	80 91 b9 00 	lds	r24, 0x00B9
     da6:	88 7f       	andi	r24, 0xF8	; 248
     da8:	80 39       	cpi	r24, 0x90	; 144
     daa:	11 f4       	brne	.+4      	; 0xdb0 <__vector_26+0xe0>
     dac:	db dd       	rcall	.-1098   	; 0x964 <get_sensor_from_bus>
     dae:	17 c0       	rjmp	.+46     	; 0xdde <__vector_26+0x10e>
     db0:	80 91 b9 00 	lds	r24, 0x00B9
     db4:	88 7f       	andi	r24, 0xF8	; 248
     db6:	80 3a       	cpi	r24, 0xA0	; 160
     db8:	91 f4       	brne	.+36     	; 0xdde <__vector_26+0x10e>
     dba:	b9 dd       	rcall	.-1166   	; 0x92e <stop_twi>
     dbc:	80 91 62 14 	lds	r24, 0x1462
     dc0:	90 91 63 14 	lds	r25, 0x1463
     dc4:	81 30       	cpi	r24, 0x01	; 1
     dc6:	91 05       	cpc	r25, r1
     dc8:	19 f0       	breq	.+6      	; 0xdd0 <__vector_26+0x100>
     dca:	05 97       	sbiw	r24, 0x05	; 5
     dcc:	41 f4       	brne	.+16     	; 0xdde <__vector_26+0x10e>
     dce:	04 c0       	rjmp	.+8      	; 0xdd8 <__vector_26+0x108>
     dd0:	81 e0       	ldi	r24, 0x01	; 1
     dd2:	80 93 28 13 	sts	0x1328, r24
     dd6:	03 c0       	rjmp	.+6      	; 0xdde <__vector_26+0x10e>
     dd8:	81 e0       	ldi	r24, 0x01	; 1
     dda:	80 93 27 13 	sts	0x1327, r24
     dde:	bc dd       	rcall	.-1160   	; 0x958 <reset_TWI>
     de0:	d9 c0       	rjmp	.+434    	; 0xf94 <__vector_26+0x2c4>
     de2:	80 91 b9 00 	lds	r24, 0x00B9
     de6:	88 7f       	andi	r24, 0xF8	; 248
     de8:	80 36       	cpi	r24, 0x60	; 96
     dea:	29 f0       	breq	.+10     	; 0xdf6 <__vector_26+0x126>
     dec:	80 91 b9 00 	lds	r24, 0x00B9
     df0:	88 7f       	andi	r24, 0xF8	; 248
     df2:	88 36       	cpi	r24, 0x68	; 104
     df4:	21 f4       	brne	.+8      	; 0xdfe <__vector_26+0x12e>
     df6:	81 e0       	ldi	r24, 0x01	; 1
     df8:	80 93 59 14 	sts	0x1459, r24
     dfc:	30 c0       	rjmp	.+96     	; 0xe5e <__vector_26+0x18e>
     dfe:	80 91 b9 00 	lds	r24, 0x00B9
     e02:	88 7f       	andi	r24, 0xF8	; 248
     e04:	80 38       	cpi	r24, 0x80	; 128
     e06:	e1 f4       	brne	.+56     	; 0xe40 <__vector_26+0x170>
     e08:	80 91 59 14 	lds	r24, 0x1459
     e0c:	88 23       	and	r24, r24
     e0e:	41 f0       	breq	.+16     	; 0xe20 <__vector_26+0x150>
     e10:	7f dd       	rcall	.-1282   	; 0x910 <get_data>
     e12:	80 93 62 14 	sts	0x1462, r24
     e16:	10 92 63 14 	sts	0x1463, r1
     e1a:	10 92 59 14 	sts	0x1459, r1
     e1e:	1f c0       	rjmp	.+62     	; 0xe5e <__vector_26+0x18e>
     e20:	80 91 62 14 	lds	r24, 0x1462
     e24:	90 91 63 14 	lds	r25, 0x1463
     e28:	82 30       	cpi	r24, 0x02	; 2
     e2a:	91 05       	cpc	r25, r1
     e2c:	19 f0       	breq	.+6      	; 0xe34 <__vector_26+0x164>
     e2e:	49 97       	sbiw	r24, 0x19	; 25
     e30:	b1 f4       	brne	.+44     	; 0xe5e <__vector_26+0x18e>
     e32:	04 c0       	rjmp	.+8      	; 0xe3c <__vector_26+0x16c>
     e34:	6d dd       	rcall	.-1318   	; 0x910 <get_data>
     e36:	80 93 61 14 	sts	0x1461, r24
     e3a:	11 c0       	rjmp	.+34     	; 0xe5e <__vector_26+0x18e>
     e3c:	d3 dd       	rcall	.-1114   	; 0x9e4 <get_char_from_bus>
     e3e:	0f c0       	rjmp	.+30     	; 0xe5e <__vector_26+0x18e>
     e40:	80 91 b9 00 	lds	r24, 0x00B9
     e44:	88 7f       	andi	r24, 0xF8	; 248
     e46:	80 3a       	cpi	r24, 0xA0	; 160
     e48:	51 f4       	brne	.+20     	; 0xe5e <__vector_26+0x18e>
     e4a:	71 dd       	rcall	.-1310   	; 0x92e <stop_twi>
     e4c:	80 91 62 14 	lds	r24, 0x1462
     e50:	90 91 63 14 	lds	r25, 0x1463
     e54:	02 97       	sbiw	r24, 0x02	; 2
     e56:	19 f4       	brne	.+6      	; 0xe5e <__vector_26+0x18e>
     e58:	81 e0       	ldi	r24, 0x01	; 1
     e5a:	80 93 25 13 	sts	0x1325, r24
     e5e:	7c dd       	rcall	.-1288   	; 0x958 <reset_TWI>
     e60:	99 c0       	rjmp	.+306    	; 0xf94 <__vector_26+0x2c4>
     e62:	80 91 b9 00 	lds	r24, 0x00B9
     e66:	88 7f       	andi	r24, 0xF8	; 248
     e68:	80 36       	cpi	r24, 0x60	; 96
     e6a:	29 f0       	breq	.+10     	; 0xe76 <__vector_26+0x1a6>
     e6c:	80 91 b9 00 	lds	r24, 0x00B9
     e70:	88 7f       	andi	r24, 0xF8	; 248
     e72:	88 36       	cpi	r24, 0x68	; 104
     e74:	21 f4       	brne	.+8      	; 0xe7e <__vector_26+0x1ae>
     e76:	81 e0       	ldi	r24, 0x01	; 1
     e78:	80 93 59 14 	sts	0x1459, r24
     e7c:	8a c0       	rjmp	.+276    	; 0xf92 <__vector_26+0x2c2>
     e7e:	80 91 b9 00 	lds	r24, 0x00B9
     e82:	88 7f       	andi	r24, 0xF8	; 248
     e84:	80 38       	cpi	r24, 0x80	; 128
     e86:	09 f0       	breq	.+2      	; 0xe8a <__vector_26+0x1ba>
     e88:	57 c0       	rjmp	.+174    	; 0xf38 <__vector_26+0x268>
     e8a:	80 91 59 14 	lds	r24, 0x1459
     e8e:	88 23       	and	r24, r24
     e90:	41 f0       	breq	.+16     	; 0xea2 <__vector_26+0x1d2>
     e92:	3e dd       	rcall	.-1412   	; 0x910 <get_data>
     e94:	80 93 62 14 	sts	0x1462, r24
     e98:	10 92 63 14 	sts	0x1463, r1
     e9c:	10 92 59 14 	sts	0x1459, r1
     ea0:	78 c0       	rjmp	.+240    	; 0xf92 <__vector_26+0x2c2>
     ea2:	80 91 62 14 	lds	r24, 0x1462
     ea6:	90 91 63 14 	lds	r25, 0x1463
     eaa:	81 30       	cpi	r24, 0x01	; 1
     eac:	91 05       	cpc	r25, r1
     eae:	09 f4       	brne	.+2      	; 0xeb2 <__vector_26+0x1e2>
     eb0:	3f c0       	rjmp	.+126    	; 0xf30 <__vector_26+0x260>
     eb2:	1c f4       	brge	.+6      	; 0xeba <__vector_26+0x1ea>
     eb4:	89 2b       	or	r24, r25
     eb6:	41 f0       	breq	.+16     	; 0xec8 <__vector_26+0x1f8>
     eb8:	6c c0       	rjmp	.+216    	; 0xf92 <__vector_26+0x2c2>
     eba:	84 30       	cpi	r24, 0x04	; 4
     ebc:	91 05       	cpc	r25, r1
     ebe:	b1 f0       	breq	.+44     	; 0xeec <__vector_26+0x21c>
     ec0:	05 97       	sbiw	r24, 0x05	; 5
     ec2:	09 f0       	breq	.+2      	; 0xec6 <__vector_26+0x1f6>
     ec4:	66 c0       	rjmp	.+204    	; 0xf92 <__vector_26+0x2c2>
     ec6:	36 c0       	rjmp	.+108    	; 0xf34 <__vector_26+0x264>
     ec8:	c0 91 5a 14 	lds	r28, 0x145A
     ecc:	d0 91 5b 14 	lds	r29, 0x145B
     ed0:	1f dd       	rcall	.-1474   	; 0x910 <get_data>
     ed2:	c4 5b       	subi	r28, 0xB4	; 180
     ed4:	dc 4e       	sbci	r29, 0xEC	; 236
     ed6:	88 83       	st	Y, r24
     ed8:	80 91 5a 14 	lds	r24, 0x145A
     edc:	90 91 5b 14 	lds	r25, 0x145B
     ee0:	01 96       	adiw	r24, 0x01	; 1
     ee2:	90 93 5b 14 	sts	0x145B, r25
     ee6:	80 93 5a 14 	sts	0x145A, r24
     eea:	53 c0       	rjmp	.+166    	; 0xf92 <__vector_26+0x2c2>
     eec:	11 dd       	rcall	.-1502   	; 0x910 <get_data>
     eee:	20 91 5c 14 	lds	r18, 0x145C
     ef2:	30 91 5d 14 	lds	r19, 0x145D
     ef6:	a9 01       	movw	r20, r18
     ef8:	48 0f       	add	r20, r24
     efa:	51 1d       	adc	r21, r1
     efc:	ca 01       	movw	r24, r20
     efe:	18 16       	cp	r1, r24
     f00:	19 06       	cpc	r1, r25
     f02:	3c f0       	brlt	.+14     	; 0xf12 <__vector_26+0x242>
     f04:	81 e0       	ldi	r24, 0x01	; 1
     f06:	90 e0       	ldi	r25, 0x00	; 0
     f08:	90 93 5d 14 	sts	0x145D, r25
     f0c:	80 93 5c 14 	sts	0x145C, r24
     f10:	40 c0       	rjmp	.+128    	; 0xf92 <__vector_26+0x2c2>
     f12:	48 30       	cpi	r20, 0x08	; 8
     f14:	51 05       	cpc	r21, r1
     f16:	2c f4       	brge	.+10     	; 0xf22 <__vector_26+0x252>
     f18:	50 93 5d 14 	sts	0x145D, r21
     f1c:	40 93 5c 14 	sts	0x145C, r20
     f20:	38 c0       	rjmp	.+112    	; 0xf92 <__vector_26+0x2c2>
     f22:	87 e0       	ldi	r24, 0x07	; 7
     f24:	90 e0       	ldi	r25, 0x00	; 0
     f26:	90 93 5d 14 	sts	0x145D, r25
     f2a:	80 93 5c 14 	sts	0x145C, r24
     f2e:	31 c0       	rjmp	.+98     	; 0xf92 <__vector_26+0x2c2>
     f30:	44 dd       	rcall	.-1400   	; 0x9ba <get_control_settings_from_bus>
     f32:	2f c0       	rjmp	.+94     	; 0xf92 <__vector_26+0x2c2>
     f34:	53 dd       	rcall	.-1370   	; 0x9dc <get_autonom_settings_from_bus>
     f36:	2d c0       	rjmp	.+90     	; 0xf92 <__vector_26+0x2c2>
     f38:	80 91 b9 00 	lds	r24, 0x00B9
     f3c:	88 7f       	andi	r24, 0xF8	; 248
     f3e:	80 39       	cpi	r24, 0x90	; 144
     f40:	11 f4       	brne	.+4      	; 0xf46 <__vector_26+0x276>
     f42:	10 dd       	rcall	.-1504   	; 0x964 <get_sensor_from_bus>
     f44:	26 c0       	rjmp	.+76     	; 0xf92 <__vector_26+0x2c2>
     f46:	80 91 b9 00 	lds	r24, 0x00B9
     f4a:	88 7f       	andi	r24, 0xF8	; 248
     f4c:	80 3a       	cpi	r24, 0xA0	; 160
     f4e:	09 f5       	brne	.+66     	; 0xf92 <__vector_26+0x2c2>
     f50:	ee dc       	rcall	.-1572   	; 0x92e <stop_twi>
     f52:	80 91 62 14 	lds	r24, 0x1462
     f56:	90 91 63 14 	lds	r25, 0x1463
     f5a:	81 30       	cpi	r24, 0x01	; 1
     f5c:	91 05       	cpc	r25, r1
     f5e:	91 f0       	breq	.+36     	; 0xf84 <__vector_26+0x2b4>
     f60:	1c f4       	brge	.+6      	; 0xf68 <__vector_26+0x298>
     f62:	89 2b       	or	r24, r25
     f64:	39 f0       	breq	.+14     	; 0xf74 <__vector_26+0x2a4>
     f66:	15 c0       	rjmp	.+42     	; 0xf92 <__vector_26+0x2c2>
     f68:	84 30       	cpi	r24, 0x04	; 4
     f6a:	91 05       	cpc	r25, r1
     f6c:	39 f0       	breq	.+14     	; 0xf7c <__vector_26+0x2ac>
     f6e:	05 97       	sbiw	r24, 0x05	; 5
     f70:	81 f4       	brne	.+32     	; 0xf92 <__vector_26+0x2c2>
     f72:	0c c0       	rjmp	.+24     	; 0xf8c <__vector_26+0x2bc>
     f74:	81 e0       	ldi	r24, 0x01	; 1
     f76:	80 93 29 13 	sts	0x1329, r24
     f7a:	0b c0       	rjmp	.+22     	; 0xf92 <__vector_26+0x2c2>
     f7c:	81 e0       	ldi	r24, 0x01	; 1
     f7e:	80 93 26 13 	sts	0x1326, r24
     f82:	07 c0       	rjmp	.+14     	; 0xf92 <__vector_26+0x2c2>
     f84:	81 e0       	ldi	r24, 0x01	; 1
     f86:	80 93 28 13 	sts	0x1328, r24
     f8a:	03 c0       	rjmp	.+6      	; 0xf92 <__vector_26+0x2c2>
     f8c:	81 e0       	ldi	r24, 0x01	; 1
     f8e:	80 93 27 13 	sts	0x1327, r24
     f92:	e2 dc       	rcall	.-1596   	; 0x958 <reset_TWI>
     f94:	ff 91       	pop	r31
     f96:	ef 91       	pop	r30
     f98:	df 91       	pop	r29
     f9a:	cf 91       	pop	r28
     f9c:	bf 91       	pop	r27
     f9e:	af 91       	pop	r26
     fa0:	9f 91       	pop	r25
     fa2:	8f 91       	pop	r24
     fa4:	7f 91       	pop	r23
     fa6:	6f 91       	pop	r22
     fa8:	5f 91       	pop	r21
     faa:	4f 91       	pop	r20
     fac:	3f 91       	pop	r19
     fae:	2f 91       	pop	r18
     fb0:	0f 90       	pop	r0
     fb2:	0b be       	out	0x3b, r0	; 59
     fb4:	0f 90       	pop	r0
     fb6:	0f be       	out	0x3f, r0	; 63
     fb8:	0f 90       	pop	r0
     fba:	1f 90       	pop	r1
     fbc:	18 95       	reti

00000fbe <USART_init>:
     fbe:	10 92 c5 00 	sts	0x00C5, r1
     fc2:	87 e0       	ldi	r24, 0x07	; 7
     fc4:	80 93 c4 00 	sts	0x00C4, r24
     fc8:	88 e9       	ldi	r24, 0x98	; 152
     fca:	80 93 c1 00 	sts	0x00C1, r24
     fce:	86 e0       	ldi	r24, 0x06	; 6
     fd0:	80 93 c2 00 	sts	0x00C2, r24
     fd4:	08 95       	ret

00000fd6 <USART_set_twi_message_destination>:
     fd6:	90 93 0f 11 	sts	0x110F, r25
     fda:	80 93 0e 11 	sts	0x110E, r24
     fde:	08 95       	ret

00000fe0 <USART_CheckTxReady>:
     fe0:	80 91 c0 00 	lds	r24, 0x00C0
     fe4:	80 72       	andi	r24, 0x20	; 32
     fe6:	08 95       	ret

00000fe8 <USART_WriteByte>:
     fe8:	cf 93       	push	r28
     fea:	c8 2f       	mov	r28, r24
     fec:	f9 df       	rcall	.-14     	; 0xfe0 <USART_CheckTxReady>
     fee:	88 23       	and	r24, r24
     ff0:	e9 f3       	breq	.-6      	; 0xfec <USART_WriteByte+0x4>
     ff2:	c0 93 c6 00 	sts	0x00C6, r28
     ff6:	cf 91       	pop	r28
     ff8:	08 95       	ret

00000ffa <USART_crc16>:
     ffa:	cf 92       	push	r12
     ffc:	df 92       	push	r13
     ffe:	ef 92       	push	r14
    1000:	ff 92       	push	r15
    1002:	0f 93       	push	r16
    1004:	1f 93       	push	r17
    1006:	cf 93       	push	r28
    1008:	df 93       	push	r29
    100a:	66 23       	and	r22, r22
    100c:	09 f4       	brne	.+2      	; 0x1010 <USART_crc16+0x16>
    100e:	3e c0       	rjmp	.+124    	; 0x108c <USART_crc16+0x92>
    1010:	06 2f       	mov	r16, r22
    1012:	10 e0       	ldi	r17, 0x00	; 0
    1014:	4f ef       	ldi	r20, 0xFF	; 255
    1016:	5f ef       	ldi	r21, 0xFF	; 255
    1018:	ee ef       	ldi	r30, 0xFE	; 254
    101a:	ff ef       	ldi	r31, 0xFF	; 255
    101c:	c6 2e       	mov	r12, r22
    101e:	d1 2c       	mov	r13, r1
    1020:	e8 2e       	mov	r14, r24
    1022:	f1 2c       	mov	r15, r1
    1024:	c8 e0       	ldi	r28, 0x08	; 8
    1026:	d0 e0       	ldi	r29, 0x00	; 0
    1028:	ee 3f       	cpi	r30, 0xFE	; 254
    102a:	6f ef       	ldi	r22, 0xFF	; 255
    102c:	f6 07       	cpc	r31, r22
    102e:	19 f4       	brne	.+6      	; 0x1036 <USART_crc16+0x3c>
    1030:	8e 2d       	mov	r24, r14
    1032:	9f 2d       	mov	r25, r15
    1034:	30 c0       	rjmp	.+96     	; 0x1096 <USART_crc16+0x9c>
    1036:	ef 3f       	cpi	r30, 0xFF	; 255
    1038:	8f ef       	ldi	r24, 0xFF	; 255
    103a:	f8 07       	cpc	r31, r24
    103c:	19 f4       	brne	.+6      	; 0x1044 <USART_crc16+0x4a>
    103e:	8c 2d       	mov	r24, r12
    1040:	9d 2d       	mov	r25, r13
    1042:	29 c0       	rjmp	.+82     	; 0x1096 <USART_crc16+0x9c>
    1044:	df 01       	movw	r26, r30
    1046:	ad 58       	subi	r26, 0x8D	; 141
    1048:	b9 4e       	sbci	r27, 0xE9	; 233
    104a:	8c 91       	ld	r24, X
    104c:	90 e0       	ldi	r25, 0x00	; 0
    104e:	23 c0       	rjmp	.+70     	; 0x1096 <USART_crc16+0x9c>
    1050:	ba 01       	movw	r22, r20
    1052:	68 27       	eor	r22, r24
    1054:	79 27       	eor	r23, r25
    1056:	60 ff       	sbrs	r22, 0
    1058:	07 c0       	rjmp	.+14     	; 0x1068 <USART_crc16+0x6e>
    105a:	56 95       	lsr	r21
    105c:	47 95       	ror	r20
    105e:	68 e0       	ldi	r22, 0x08	; 8
    1060:	46 27       	eor	r20, r22
    1062:	64 e8       	ldi	r22, 0x84	; 132
    1064:	56 27       	eor	r21, r22
    1066:	02 c0       	rjmp	.+4      	; 0x106c <USART_crc16+0x72>
    1068:	56 95       	lsr	r21
    106a:	47 95       	ror	r20
    106c:	96 95       	lsr	r25
    106e:	87 95       	ror	r24
    1070:	21 50       	subi	r18, 0x01	; 1
    1072:	31 09       	sbc	r19, r1
    1074:	69 f7       	brne	.-38     	; 0x1050 <USART_crc16+0x56>
    1076:	31 96       	adiw	r30, 0x01	; 1
    1078:	e0 17       	cp	r30, r16
    107a:	f1 07       	cpc	r31, r17
    107c:	a9 f6       	brne	.-86     	; 0x1028 <USART_crc16+0x2e>
    107e:	9a 01       	movw	r18, r20
    1080:	20 95       	com	r18
    1082:	30 95       	com	r19
    1084:	32 27       	eor	r19, r18
    1086:	23 27       	eor	r18, r19
    1088:	32 27       	eor	r19, r18
    108a:	02 c0       	rjmp	.+4      	; 0x1090 <USART_crc16+0x96>
    108c:	20 e0       	ldi	r18, 0x00	; 0
    108e:	30 e0       	ldi	r19, 0x00	; 0
    1090:	82 2f       	mov	r24, r18
    1092:	93 2f       	mov	r25, r19
    1094:	02 c0       	rjmp	.+4      	; 0x109a <USART_crc16+0xa0>
    1096:	9e 01       	movw	r18, r28
    1098:	db cf       	rjmp	.-74     	; 0x1050 <USART_crc16+0x56>
    109a:	df 91       	pop	r29
    109c:	cf 91       	pop	r28
    109e:	1f 91       	pop	r17
    10a0:	0f 91       	pop	r16
    10a2:	ff 90       	pop	r15
    10a4:	ef 90       	pop	r14
    10a6:	df 90       	pop	r13
    10a8:	cf 90       	pop	r12
    10aa:	08 95       	ret

000010ac <USART_SendPacket>:
    10ac:	0f 93       	push	r16
    10ae:	1f 93       	push	r17
    10b0:	cf 93       	push	r28
    10b2:	df 93       	push	r29
    10b4:	9e e7       	ldi	r25, 0x7E	; 126
    10b6:	90 93 72 17 	sts	0x1772, r25
    10ba:	80 93 73 17 	sts	0x1773, r24
    10be:	60 93 74 17 	sts	0x1774, r22
    10c2:	26 2f       	mov	r18, r22
    10c4:	30 e0       	ldi	r19, 0x00	; 0
    10c6:	12 16       	cp	r1, r18
    10c8:	13 06       	cpc	r1, r19
    10ca:	4c f5       	brge	.+82     	; 0x111e <USART_SendPacket+0x72>
    10cc:	e3 e7       	ldi	r30, 0x73	; 115
    10ce:	f6 e1       	ldi	r31, 0x16	; 22
    10d0:	03 e0       	ldi	r16, 0x03	; 3
    10d2:	10 e0       	ldi	r17, 0x00	; 0
    10d4:	c0 e0       	ldi	r28, 0x00	; 0
    10d6:	d0 e0       	ldi	r29, 0x00	; 0
    10d8:	7d e7       	ldi	r23, 0x7D	; 125
    10da:	50 e2       	ldi	r21, 0x20	; 32
    10dc:	90 81       	ld	r25, Z
    10de:	49 2f       	mov	r20, r25
    10e0:	4d 57       	subi	r20, 0x7D	; 125
    10e2:	42 30       	cpi	r20, 0x02	; 2
    10e4:	80 f4       	brcc	.+32     	; 0x1106 <USART_SendPacket+0x5a>
    10e6:	d8 01       	movw	r26, r16
    10e8:	ae 58       	subi	r26, 0x8E	; 142
    10ea:	b8 4e       	sbci	r27, 0xE8	; 232
    10ec:	ac 0f       	add	r26, r28
    10ee:	bd 1f       	adc	r27, r29
    10f0:	7c 93       	st	X, r23
    10f2:	0f 5f       	subi	r16, 0xFF	; 255
    10f4:	1f 4f       	sbci	r17, 0xFF	; 255
    10f6:	d8 01       	movw	r26, r16
    10f8:	ae 58       	subi	r26, 0x8E	; 142
    10fa:	b8 4e       	sbci	r27, 0xE8	; 232
    10fc:	ac 0f       	add	r26, r28
    10fe:	bd 1f       	adc	r27, r29
    1100:	95 27       	eor	r25, r21
    1102:	9c 93       	st	X, r25
    1104:	06 c0       	rjmp	.+12     	; 0x1112 <USART_SendPacket+0x66>
    1106:	d8 01       	movw	r26, r16
    1108:	ae 58       	subi	r26, 0x8E	; 142
    110a:	b8 4e       	sbci	r27, 0xE8	; 232
    110c:	ac 0f       	add	r26, r28
    110e:	bd 1f       	adc	r27, r29
    1110:	9c 93       	st	X, r25
    1112:	21 96       	adiw	r28, 0x01	; 1
    1114:	31 96       	adiw	r30, 0x01	; 1
    1116:	c2 17       	cp	r28, r18
    1118:	d3 07       	cpc	r29, r19
    111a:	01 f7       	brne	.-64     	; 0x10dc <USART_SendPacket+0x30>
    111c:	04 c0       	rjmp	.+8      	; 0x1126 <USART_SendPacket+0x7a>
    111e:	03 e0       	ldi	r16, 0x03	; 3
    1120:	10 e0       	ldi	r17, 0x00	; 0
    1122:	c0 e0       	ldi	r28, 0x00	; 0
    1124:	d0 e0       	ldi	r29, 0x00	; 0
    1126:	69 df       	rcall	.-302    	; 0xffa <USART_crc16>
    1128:	f8 01       	movw	r30, r16
    112a:	ee 58       	subi	r30, 0x8E	; 142
    112c:	f8 4e       	sbci	r31, 0xE8	; 232
    112e:	ec 0f       	add	r30, r28
    1130:	fd 1f       	adc	r31, r29
    1132:	90 83       	st	Z, r25
    1134:	81 83       	std	Z+1, r24	; 0x01
    1136:	22 96       	adiw	r28, 0x02	; 2
    1138:	0c 0f       	add	r16, r28
    113a:	1d 1f       	adc	r17, r29
    113c:	f8 01       	movw	r30, r16
    113e:	ee 58       	subi	r30, 0x8E	; 142
    1140:	f8 4e       	sbci	r31, 0xE8	; 232
    1142:	8e e7       	ldi	r24, 0x7E	; 126
    1144:	80 83       	st	Z, r24
    1146:	c8 01       	movw	r24, r16
    1148:	01 96       	adiw	r24, 0x01	; 1
    114a:	18 16       	cp	r1, r24
    114c:	19 06       	cpc	r1, r25
    114e:	4c f4       	brge	.+18     	; 0x1162 <USART_SendPacket+0xb6>
    1150:	c2 e7       	ldi	r28, 0x72	; 114
    1152:	d7 e1       	ldi	r29, 0x17	; 23
    1154:	0d 58       	subi	r16, 0x8D	; 141
    1156:	18 4e       	sbci	r17, 0xE8	; 232
    1158:	89 91       	ld	r24, Y+
    115a:	46 df       	rcall	.-372    	; 0xfe8 <USART_WriteByte>
    115c:	c0 17       	cp	r28, r16
    115e:	d1 07       	cpc	r29, r17
    1160:	d9 f7       	brne	.-10     	; 0x1158 <USART_SendPacket+0xac>
    1162:	df 91       	pop	r29
    1164:	cf 91       	pop	r28
    1166:	1f 91       	pop	r17
    1168:	0f 91       	pop	r16
    116a:	08 95       	ret

0000116c <USART_SendCommand>:
    116c:	80 e0       	ldi	r24, 0x00	; 0
    116e:	90 e0       	ldi	r25, 0x00	; 0
    1170:	91 dd       	rcall	.-1246   	; 0xc94 <TWI_get_command>
    1172:	80 93 73 16 	sts	0x1673, r24
    1176:	81 e0       	ldi	r24, 0x01	; 1
    1178:	90 e0       	ldi	r25, 0x00	; 0
    117a:	8c dd       	rcall	.-1256   	; 0xc94 <TWI_get_command>
    117c:	80 93 74 16 	sts	0x1674, r24
    1180:	82 e0       	ldi	r24, 0x02	; 2
    1182:	90 e0       	ldi	r25, 0x00	; 0
    1184:	87 dd       	rcall	.-1266   	; 0xc94 <TWI_get_command>
    1186:	80 93 75 16 	sts	0x1675, r24
    118a:	63 e0       	ldi	r22, 0x03	; 3
    118c:	83 e4       	ldi	r24, 0x43	; 67
    118e:	8e cf       	rjmp	.-228    	; 0x10ac <USART_SendPacket>

00001190 <USART_DecodeMessageRxFIFO>:
    1190:	8f 92       	push	r8
    1192:	9f 92       	push	r9
    1194:	af 92       	push	r10
    1196:	bf 92       	push	r11
    1198:	cf 92       	push	r12
    119a:	df 92       	push	r13
    119c:	ef 92       	push	r14
    119e:	ff 92       	push	r15
    11a0:	0f 93       	push	r16
    11a2:	1f 93       	push	r17
    11a4:	cf 93       	push	r28
    11a6:	df 93       	push	r29
    11a8:	cd b7       	in	r28, 0x3d	; 61
    11aa:	de b7       	in	r29, 0x3e	; 62
    11ac:	ad b6       	in	r10, 0x3d	; 61
    11ae:	be b6       	in	r11, 0x3e	; 62
    11b0:	60 e0       	ldi	r22, 0x00	; 0
    11b2:	70 e0       	ldi	r23, 0x00	; 0
    11b4:	80 91 06 01 	lds	r24, 0x0106
    11b8:	90 91 07 01 	lds	r25, 0x0107
    11bc:	8d d9       	rcall	.-3302   	; 0x4d8 <FifoRead>
    11be:	88 23       	and	r24, r24
    11c0:	31 f0       	breq	.+12     	; 0x11ce <USART_DecodeMessageRxFIFO+0x3e>
    11c2:	67 ef       	ldi	r22, 0xF7	; 247
    11c4:	71 e1       	ldi	r23, 0x11	; 17
    11c6:	80 e4       	ldi	r24, 0x40	; 64
    11c8:	99 dc       	rcall	.-1742   	; 0xafc <TWI_send_string>
    11ca:	81 e0       	ldi	r24, 0x01	; 1
    11cc:	44 c0       	rjmp	.+136    	; 0x1256 <USART_DecodeMessageRxFIFO+0xc6>
    11ce:	c0 90 00 00 	lds	r12, 0x0000
    11d2:	d1 2c       	mov	r13, r1
    11d4:	96 01       	movw	r18, r12
    11d6:	21 50       	subi	r18, 0x01	; 1
    11d8:	31 09       	sbc	r19, r1
    11da:	81 e0       	ldi	r24, 0x01	; 1
    11dc:	90 e0       	ldi	r25, 0x00	; 0
    11de:	c1 14       	cp	r12, r1
    11e0:	d1 04       	cpc	r13, r1
    11e2:	11 f0       	breq	.+4      	; 0x11e8 <USART_DecodeMessageRxFIFO+0x58>
    11e4:	80 e0       	ldi	r24, 0x00	; 0
    11e6:	90 e0       	ldi	r25, 0x00	; 0
    11e8:	82 0f       	add	r24, r18
    11ea:	93 1f       	adc	r25, r19
    11ec:	2d b7       	in	r18, 0x3d	; 61
    11ee:	3e b7       	in	r19, 0x3e	; 62
    11f0:	28 1b       	sub	r18, r24
    11f2:	39 0b       	sbc	r19, r25
    11f4:	0f b6       	in	r0, 0x3f	; 63
    11f6:	f8 94       	cli
    11f8:	3e bf       	out	0x3e, r19	; 62
    11fa:	0f be       	out	0x3f, r0	; 63
    11fc:	2d bf       	out	0x3d, r18	; 61
    11fe:	8d b7       	in	r24, 0x3d	; 61
    1200:	9e b7       	in	r25, 0x3e	; 62
    1202:	01 96       	adiw	r24, 0x01	; 1
    1204:	88 2e       	mov	r8, r24
    1206:	99 2e       	mov	r9, r25
    1208:	1c 14       	cp	r1, r12
    120a:	1d 04       	cpc	r1, r13
    120c:	ec f4       	brge	.+58     	; 0x1248 <USART_DecodeMessageRxFIFO+0xb8>
    120e:	e8 2e       	mov	r14, r24
    1210:	f9 2e       	mov	r15, r25
    1212:	00 e0       	ldi	r16, 0x00	; 0
    1214:	10 e0       	ldi	r17, 0x00	; 0
    1216:	60 e0       	ldi	r22, 0x00	; 0
    1218:	70 e0       	ldi	r23, 0x00	; 0
    121a:	80 91 06 01 	lds	r24, 0x0106
    121e:	90 91 07 01 	lds	r25, 0x0107
    1222:	5a d9       	rcall	.-3404   	; 0x4d8 <FifoRead>
    1224:	88 23       	and	r24, r24
    1226:	31 f0       	breq	.+12     	; 0x1234 <USART_DecodeMessageRxFIFO+0xa4>
    1228:	69 e1       	ldi	r22, 0x19	; 25
    122a:	72 e1       	ldi	r23, 0x12	; 18
    122c:	80 e4       	ldi	r24, 0x40	; 64
    122e:	66 dc       	rcall	.-1844   	; 0xafc <TWI_send_string>
    1230:	81 e0       	ldi	r24, 0x01	; 1
    1232:	11 c0       	rjmp	.+34     	; 0x1256 <USART_DecodeMessageRxFIFO+0xc6>
    1234:	80 91 00 00 	lds	r24, 0x0000
    1238:	f7 01       	movw	r30, r14
    123a:	81 93       	st	Z+, r24
    123c:	7f 01       	movw	r14, r30
    123e:	0f 5f       	subi	r16, 0xFF	; 255
    1240:	1f 4f       	sbci	r17, 0xFF	; 255
    1242:	0c 15       	cp	r16, r12
    1244:	1d 05       	cpc	r17, r13
    1246:	3c f3       	brlt	.-50     	; 0x1216 <USART_DecodeMessageRxFIFO+0x86>
    1248:	a6 01       	movw	r20, r12
    124a:	68 2d       	mov	r22, r8
    124c:	79 2d       	mov	r23, r9
    124e:	80 91 0e 11 	lds	r24, 0x110E
    1252:	9a dc       	rcall	.-1740   	; 0xb88 <TWI_send_string_fixed_length>
    1254:	80 e0       	ldi	r24, 0x00	; 0
    1256:	0f b6       	in	r0, 0x3f	; 63
    1258:	f8 94       	cli
    125a:	be be       	out	0x3e, r11	; 62
    125c:	0f be       	out	0x3f, r0	; 63
    125e:	ad be       	out	0x3d, r10	; 61
    1260:	df 91       	pop	r29
    1262:	cf 91       	pop	r28
    1264:	1f 91       	pop	r17
    1266:	0f 91       	pop	r16
    1268:	ff 90       	pop	r15
    126a:	ef 90       	pop	r14
    126c:	df 90       	pop	r13
    126e:	cf 90       	pop	r12
    1270:	bf 90       	pop	r11
    1272:	af 90       	pop	r10
    1274:	9f 90       	pop	r9
    1276:	8f 90       	pop	r8
    1278:	08 95       	ret

0000127a <USART_DecodeCommandRxFIFO>:
    127a:	cf 93       	push	r28
    127c:	df 93       	push	r29
    127e:	60 e0       	ldi	r22, 0x00	; 0
    1280:	70 e0       	ldi	r23, 0x00	; 0
    1282:	80 91 06 01 	lds	r24, 0x0106
    1286:	90 91 07 01 	lds	r25, 0x0107
    128a:	26 d9       	rcall	.-3508   	; 0x4d8 <FifoRead>
    128c:	88 23       	and	r24, r24
    128e:	31 f0       	breq	.+12     	; 0x129c <USART_DecodeCommandRxFIFO+0x22>
    1290:	6c e3       	ldi	r22, 0x3C	; 60
    1292:	72 e1       	ldi	r23, 0x12	; 18
    1294:	80 e4       	ldi	r24, 0x40	; 64
    1296:	32 dc       	rcall	.-1948   	; 0xafc <TWI_send_string>
    1298:	81 e0       	ldi	r24, 0x01	; 1
    129a:	42 c0       	rjmp	.+132    	; 0x1320 <USART_DecodeCommandRxFIFO+0xa6>
    129c:	80 91 00 00 	lds	r24, 0x0000
    12a0:	83 30       	cpi	r24, 0x03	; 3
    12a2:	09 f0       	breq	.+2      	; 0x12a6 <USART_DecodeCommandRxFIFO+0x2c>
    12a4:	38 c0       	rjmp	.+112    	; 0x1316 <USART_DecodeCommandRxFIFO+0x9c>
    12a6:	60 e0       	ldi	r22, 0x00	; 0
    12a8:	70 e0       	ldi	r23, 0x00	; 0
    12aa:	80 91 06 01 	lds	r24, 0x0106
    12ae:	90 91 07 01 	lds	r25, 0x0107
    12b2:	12 d9       	rcall	.-3548   	; 0x4d8 <FifoRead>
    12b4:	88 23       	and	r24, r24
    12b6:	31 f0       	breq	.+12     	; 0x12c4 <USART_DecodeCommandRxFIFO+0x4a>
    12b8:	6e e5       	ldi	r22, 0x5E	; 94
    12ba:	72 e1       	ldi	r23, 0x12	; 18
    12bc:	80 e4       	ldi	r24, 0x40	; 64
    12be:	1e dc       	rcall	.-1988   	; 0xafc <TWI_send_string>
    12c0:	81 e0       	ldi	r24, 0x01	; 1
    12c2:	2e c0       	rjmp	.+92     	; 0x1320 <USART_DecodeCommandRxFIFO+0xa6>
    12c4:	c0 91 00 00 	lds	r28, 0x0000
    12c8:	60 e0       	ldi	r22, 0x00	; 0
    12ca:	70 e0       	ldi	r23, 0x00	; 0
    12cc:	80 91 06 01 	lds	r24, 0x0106
    12d0:	90 91 07 01 	lds	r25, 0x0107
    12d4:	01 d9       	rcall	.-3582   	; 0x4d8 <FifoRead>
    12d6:	88 23       	and	r24, r24
    12d8:	31 f0       	breq	.+12     	; 0x12e6 <USART_DecodeCommandRxFIFO+0x6c>
    12da:	66 e8       	ldi	r22, 0x86	; 134
    12dc:	72 e1       	ldi	r23, 0x12	; 18
    12de:	80 e4       	ldi	r24, 0x40	; 64
    12e0:	0d dc       	rcall	.-2022   	; 0xafc <TWI_send_string>
    12e2:	81 e0       	ldi	r24, 0x01	; 1
    12e4:	1d c0       	rjmp	.+58     	; 0x1320 <USART_DecodeCommandRxFIFO+0xa6>
    12e6:	d0 91 00 00 	lds	r29, 0x0000
    12ea:	60 e0       	ldi	r22, 0x00	; 0
    12ec:	70 e0       	ldi	r23, 0x00	; 0
    12ee:	80 91 06 01 	lds	r24, 0x0106
    12f2:	90 91 07 01 	lds	r25, 0x0107
    12f6:	f0 d8       	rcall	.-3616   	; 0x4d8 <FifoRead>
    12f8:	88 23       	and	r24, r24
    12fa:	31 f0       	breq	.+12     	; 0x1308 <USART_DecodeCommandRxFIFO+0x8e>
    12fc:	6d ea       	ldi	r22, 0xAD	; 173
    12fe:	72 e1       	ldi	r23, 0x12	; 18
    1300:	80 e4       	ldi	r24, 0x40	; 64
    1302:	fc db       	rcall	.-2056   	; 0xafc <TWI_send_string>
    1304:	81 e0       	ldi	r24, 0x01	; 1
    1306:	0c c0       	rjmp	.+24     	; 0x1320 <USART_DecodeCommandRxFIFO+0xa6>
    1308:	40 91 00 00 	lds	r20, 0x0000
    130c:	6d 2f       	mov	r22, r29
    130e:	8c 2f       	mov	r24, r28
    1310:	ad db       	rcall	.-2214   	; 0xa6c <TWI_send_command>
    1312:	80 e0       	ldi	r24, 0x00	; 0
    1314:	05 c0       	rjmp	.+10     	; 0x1320 <USART_DecodeCommandRxFIFO+0xa6>
    1316:	61 ed       	ldi	r22, 0xD1	; 209
    1318:	72 e1       	ldi	r23, 0x12	; 18
    131a:	80 e4       	ldi	r24, 0x40	; 64
    131c:	ef db       	rcall	.-2082   	; 0xafc <TWI_send_string>
    131e:	81 e0       	ldi	r24, 0x01	; 1
    1320:	df 91       	pop	r29
    1322:	cf 91       	pop	r28
    1324:	08 95       	ret

00001326 <USART_DecodeValueFIFO>:
    1326:	ef 92       	push	r14
    1328:	ff 92       	push	r15
    132a:	0f 93       	push	r16
    132c:	1f 93       	push	r17
    132e:	cf 93       	push	r28
    1330:	df 93       	push	r29
    1332:	00 d0       	rcall	.+0      	; 0x1334 <USART_DecodeValueFIFO+0xe>
    1334:	00 d0       	rcall	.+0      	; 0x1336 <USART_DecodeValueFIFO+0x10>
    1336:	cd b7       	in	r28, 0x3d	; 61
    1338:	de b7       	in	r29, 0x3e	; 62
    133a:	60 e0       	ldi	r22, 0x00	; 0
    133c:	70 e0       	ldi	r23, 0x00	; 0
    133e:	80 91 06 01 	lds	r24, 0x0106
    1342:	90 91 07 01 	lds	r25, 0x0107
    1346:	c8 d8       	rcall	.-3696   	; 0x4d8 <FifoRead>
    1348:	88 23       	and	r24, r24
    134a:	31 f0       	breq	.+12     	; 0x1358 <USART_DecodeValueFIFO+0x32>
    134c:	68 ef       	ldi	r22, 0xF8	; 248
    134e:	72 e1       	ldi	r23, 0x12	; 18
    1350:	80 e4       	ldi	r24, 0x40	; 64
    1352:	d4 db       	rcall	.-2136   	; 0xafc <TWI_send_string>
    1354:	81 e0       	ldi	r24, 0x01	; 1
    1356:	35 c0       	rjmp	.+106    	; 0x13c2 <USART_DecodeValueFIFO+0x9c>
    1358:	80 91 00 00 	lds	r24, 0x0000
    135c:	84 30       	cpi	r24, 0x04	; 4
    135e:	71 f5       	brne	.+92     	; 0x13bc <USART_DecodeValueFIFO+0x96>
    1360:	8e 01       	movw	r16, r28
    1362:	0f 5f       	subi	r16, 0xFF	; 255
    1364:	1f 4f       	sbci	r17, 0xFF	; 255
    1366:	7e 01       	movw	r14, r28
    1368:	85 e0       	ldi	r24, 0x05	; 5
    136a:	e8 0e       	add	r14, r24
    136c:	f1 1c       	adc	r15, r1
    136e:	60 e0       	ldi	r22, 0x00	; 0
    1370:	70 e0       	ldi	r23, 0x00	; 0
    1372:	80 91 06 01 	lds	r24, 0x0106
    1376:	90 91 07 01 	lds	r25, 0x0107
    137a:	ae d8       	rcall	.-3748   	; 0x4d8 <FifoRead>
    137c:	81 11       	cpse	r24, r1
    137e:	20 c0       	rjmp	.+64     	; 0x13c0 <USART_DecodeValueFIFO+0x9a>
    1380:	e0 e0       	ldi	r30, 0x00	; 0
    1382:	f0 e0       	ldi	r31, 0x00	; 0
    1384:	80 81       	ld	r24, Z
    1386:	d8 01       	movw	r26, r16
    1388:	8d 93       	st	X+, r24
    138a:	8d 01       	movw	r16, r26
    138c:	60 81       	ld	r22, Z
    138e:	70 e0       	ldi	r23, 0x00	; 0
    1390:	80 e0       	ldi	r24, 0x00	; 0
    1392:	90 e0       	ldi	r25, 0x00	; 0
    1394:	fe d1       	rcall	.+1020   	; 0x1792 <__floatunsisf>
    1396:	ab 01       	movw	r20, r22
    1398:	bc 01       	movw	r22, r24
    139a:	80 e8       	ldi	r24, 0x80	; 128
    139c:	33 dc       	rcall	.-1946   	; 0xc04 <TWI_send_float>
    139e:	0e 15       	cp	r16, r14
    13a0:	1f 05       	cpc	r17, r15
    13a2:	29 f7       	brne	.-54     	; 0x136e <USART_DecodeValueFIFO+0x48>
    13a4:	49 81       	ldd	r20, Y+1	; 0x01
    13a6:	5a 81       	ldd	r21, Y+2	; 0x02
    13a8:	6b 81       	ldd	r22, Y+3	; 0x03
    13aa:	7c 81       	ldd	r23, Y+4	; 0x04
    13ac:	80 e8       	ldi	r24, 0x80	; 128
    13ae:	2a dc       	rcall	.-1964   	; 0xc04 <TWI_send_float>
    13b0:	92 b1       	in	r25, 0x02	; 2
    13b2:	81 e0       	ldi	r24, 0x01	; 1
    13b4:	89 27       	eor	r24, r25
    13b6:	82 b9       	out	0x02, r24	; 2
    13b8:	80 e0       	ldi	r24, 0x00	; 0
    13ba:	03 c0       	rjmp	.+6      	; 0x13c2 <USART_DecodeValueFIFO+0x9c>
    13bc:	81 e0       	ldi	r24, 0x01	; 1
    13be:	01 c0       	rjmp	.+2      	; 0x13c2 <USART_DecodeValueFIFO+0x9c>
    13c0:	81 e0       	ldi	r24, 0x01	; 1
    13c2:	0f 90       	pop	r0
    13c4:	0f 90       	pop	r0
    13c6:	0f 90       	pop	r0
    13c8:	0f 90       	pop	r0
    13ca:	df 91       	pop	r29
    13cc:	cf 91       	pop	r28
    13ce:	1f 91       	pop	r17
    13d0:	0f 91       	pop	r16
    13d2:	ff 90       	pop	r15
    13d4:	ef 90       	pop	r14
    13d6:	08 95       	ret

000013d8 <USART_DecodeRxFIFO>:
    13d8:	14 c0       	rjmp	.+40     	; 0x1402 <USART_DecodeRxFIFO+0x2a>
    13da:	80 91 00 00 	lds	r24, 0x0000
    13de:	8d 34       	cpi	r24, 0x4D	; 77
    13e0:	29 f0       	breq	.+10     	; 0x13ec <USART_DecodeRxFIFO+0x14>
    13e2:	86 35       	cpi	r24, 0x56	; 86
    13e4:	59 f0       	breq	.+22     	; 0x13fc <USART_DecodeRxFIFO+0x24>
    13e6:	83 34       	cpi	r24, 0x43	; 67
    13e8:	61 f4       	brne	.+24     	; 0x1402 <USART_DecodeRxFIFO+0x2a>
    13ea:	04 c0       	rjmp	.+8      	; 0x13f4 <USART_DecodeRxFIFO+0x1c>
    13ec:	d1 de       	rcall	.-606    	; 0x1190 <USART_DecodeMessageRxFIFO>
    13ee:	88 23       	and	r24, r24
    13f0:	41 f0       	breq	.+16     	; 0x1402 <USART_DecodeRxFIFO+0x2a>
    13f2:	08 95       	ret
    13f4:	42 df       	rcall	.-380    	; 0x127a <USART_DecodeCommandRxFIFO>
    13f6:	88 23       	and	r24, r24
    13f8:	21 f0       	breq	.+8      	; 0x1402 <USART_DecodeRxFIFO+0x2a>
    13fa:	08 95       	ret
    13fc:	94 df       	rcall	.-216    	; 0x1326 <USART_DecodeValueFIFO>
    13fe:	81 11       	cpse	r24, r1
    1400:	09 c0       	rjmp	.+18     	; 0x1414 <USART_DecodeRxFIFO+0x3c>
    1402:	60 e0       	ldi	r22, 0x00	; 0
    1404:	70 e0       	ldi	r23, 0x00	; 0
    1406:	80 91 06 01 	lds	r24, 0x0106
    140a:	90 91 07 01 	lds	r25, 0x0107
    140e:	64 d8       	rcall	.-3896   	; 0x4d8 <FifoRead>
    1410:	88 23       	and	r24, r24
    1412:	19 f3       	breq	.-58     	; 0x13da <USART_DecodeRxFIFO+0x2>
    1414:	08 95       	ret

00001416 <__vector_20>:
    1416:	1f 92       	push	r1
    1418:	0f 92       	push	r0
    141a:	0f b6       	in	r0, 0x3f	; 63
    141c:	0f 92       	push	r0
    141e:	11 24       	eor	r1, r1
    1420:	0b b6       	in	r0, 0x3b	; 59
    1422:	0f 92       	push	r0
    1424:	ef 92       	push	r14
    1426:	ff 92       	push	r15
    1428:	0f 93       	push	r16
    142a:	1f 93       	push	r17
    142c:	2f 93       	push	r18
    142e:	3f 93       	push	r19
    1430:	4f 93       	push	r20
    1432:	5f 93       	push	r21
    1434:	6f 93       	push	r22
    1436:	7f 93       	push	r23
    1438:	8f 93       	push	r24
    143a:	9f 93       	push	r25
    143c:	af 93       	push	r26
    143e:	bf 93       	push	r27
    1440:	cf 93       	push	r28
    1442:	df 93       	push	r29
    1444:	ef 93       	push	r30
    1446:	ff 93       	push	r31
    1448:	20 91 c6 00 	lds	r18, 0x00C6
    144c:	2e 37       	cpi	r18, 0x7E	; 126
    144e:	09 f0       	breq	.+2      	; 0x1452 <__vector_20+0x3c>
    1450:	3f c0       	rjmp	.+126    	; 0x14d0 <__vector_20+0xba>
    1452:	80 91 2d 13 	lds	r24, 0x132D
    1456:	90 91 2e 13 	lds	r25, 0x132E
    145a:	84 30       	cpi	r24, 0x04	; 4
    145c:	91 05       	cpc	r25, r1
    145e:	40 f4       	brcc	.+16     	; 0x1470 <__vector_20+0x5a>
    1460:	20 91 6f 14 	lds	r18, 0x146F
    1464:	30 e0       	ldi	r19, 0x00	; 0
    1466:	2c 5f       	subi	r18, 0xFC	; 252
    1468:	3f 4f       	sbci	r19, 0xFF	; 255
    146a:	82 17       	cp	r24, r18
    146c:	93 07       	cpc	r25, r19
    146e:	59 f5       	brne	.+86     	; 0x14c6 <__vector_20+0xb0>
    1470:	80 91 2b 13 	lds	r24, 0x132B
    1474:	90 91 2c 13 	lds	r25, 0x132C
    1478:	89 2b       	or	r24, r25
    147a:	21 f0       	breq	.+8      	; 0x1484 <__vector_20+0x6e>
    147c:	10 92 2c 13 	sts	0x132C, r1
    1480:	10 92 2b 13 	sts	0x132B, r1
    1484:	0e e6       	ldi	r16, 0x6E	; 110
    1486:	14 e1       	ldi	r17, 0x14	; 20
    1488:	c0 e0       	ldi	r28, 0x00	; 0
    148a:	d0 e0       	ldi	r29, 0x00	; 0
    148c:	0f 2e       	mov	r0, r31
    148e:	ff e6       	ldi	r31, 0x6F	; 111
    1490:	ef 2e       	mov	r14, r31
    1492:	f4 e1       	ldi	r31, 0x14	; 20
    1494:	ff 2e       	mov	r15, r31
    1496:	f0 2d       	mov	r31, r0
    1498:	f8 01       	movw	r30, r16
    149a:	61 91       	ld	r22, Z+
    149c:	8f 01       	movw	r16, r30
    149e:	80 91 06 01 	lds	r24, 0x0106
    14a2:	90 91 07 01 	lds	r25, 0x0107
    14a6:	0e 94 4c 02 	call	0x498	; 0x498 <FifoWrite>
    14aa:	88 23       	and	r24, r24
    14ac:	21 f0       	breq	.+8      	; 0x14b6 <__vector_20+0xa0>
    14ae:	68 e1       	ldi	r22, 0x18	; 24
    14b0:	73 e1       	ldi	r23, 0x13	; 19
    14b2:	80 e4       	ldi	r24, 0x40	; 64
    14b4:	23 db       	rcall	.-2490   	; 0xafc <TWI_send_string>
    14b6:	21 96       	adiw	r28, 0x01	; 1
    14b8:	f7 01       	movw	r30, r14
    14ba:	80 81       	ld	r24, Z
    14bc:	90 e0       	ldi	r25, 0x00	; 0
    14be:	02 96       	adiw	r24, 0x02	; 2
    14c0:	c8 17       	cp	r28, r24
    14c2:	d9 07       	cpc	r29, r25
    14c4:	4c f3       	brlt	.-46     	; 0x1498 <__vector_20+0x82>
    14c6:	10 92 2e 13 	sts	0x132E, r1
    14ca:	10 92 2d 13 	sts	0x132D, r1
    14ce:	16 c0       	rjmp	.+44     	; 0x14fc <__vector_20+0xe6>
    14d0:	2d 37       	cpi	r18, 0x7D	; 125
    14d2:	39 f4       	brne	.+14     	; 0x14e2 <__vector_20+0xcc>
    14d4:	81 e0       	ldi	r24, 0x01	; 1
    14d6:	90 e0       	ldi	r25, 0x00	; 0
    14d8:	90 93 2c 13 	sts	0x132C, r25
    14dc:	80 93 2b 13 	sts	0x132B, r24
    14e0:	0d c0       	rjmp	.+26     	; 0x14fc <__vector_20+0xe6>
    14e2:	80 91 2d 13 	lds	r24, 0x132D
    14e6:	90 91 2e 13 	lds	r25, 0x132E
    14ea:	fc 01       	movw	r30, r24
    14ec:	e2 59       	subi	r30, 0x92	; 146
    14ee:	fb 4e       	sbci	r31, 0xEB	; 235
    14f0:	20 83       	st	Z, r18
    14f2:	01 96       	adiw	r24, 0x01	; 1
    14f4:	90 93 2e 13 	sts	0x132E, r25
    14f8:	80 93 2d 13 	sts	0x132D, r24
    14fc:	ff 91       	pop	r31
    14fe:	ef 91       	pop	r30
    1500:	df 91       	pop	r29
    1502:	cf 91       	pop	r28
    1504:	bf 91       	pop	r27
    1506:	af 91       	pop	r26
    1508:	9f 91       	pop	r25
    150a:	8f 91       	pop	r24
    150c:	7f 91       	pop	r23
    150e:	6f 91       	pop	r22
    1510:	5f 91       	pop	r21
    1512:	4f 91       	pop	r20
    1514:	3f 91       	pop	r19
    1516:	2f 91       	pop	r18
    1518:	1f 91       	pop	r17
    151a:	0f 91       	pop	r16
    151c:	ff 90       	pop	r15
    151e:	ef 90       	pop	r14
    1520:	0f 90       	pop	r0
    1522:	0b be       	out	0x3b, r0	; 59
    1524:	0f 90       	pop	r0
    1526:	0f be       	out	0x3f, r0	; 63
    1528:	0f 90       	pop	r0
    152a:	1f 90       	pop	r1
    152c:	18 95       	reti

0000152e <USART_send_command_parameters>:
    152e:	80 93 73 16 	sts	0x1673, r24
    1532:	60 93 74 16 	sts	0x1674, r22
    1536:	40 93 75 16 	sts	0x1675, r20
    153a:	63 e0       	ldi	r22, 0x03	; 3
    153c:	83 e4       	ldi	r24, 0x43	; 67
    153e:	b6 cd       	rjmp	.-1172   	; 0x10ac <USART_SendPacket>

00001540 <__subsf3>:
    1540:	50 58       	subi	r21, 0x80	; 128

00001542 <__addsf3>:
    1542:	bb 27       	eor	r27, r27
    1544:	aa 27       	eor	r26, r26
    1546:	0e d0       	rcall	.+28     	; 0x1564 <__addsf3x>
    1548:	c5 c1       	rjmp	.+906    	; 0x18d4 <__fp_round>
    154a:	8e d1       	rcall	.+796    	; 0x1868 <__fp_pscA>
    154c:	30 f0       	brcs	.+12     	; 0x155a <__addsf3+0x18>
    154e:	93 d1       	rcall	.+806    	; 0x1876 <__fp_pscB>
    1550:	20 f0       	brcs	.+8      	; 0x155a <__addsf3+0x18>
    1552:	31 f4       	brne	.+12     	; 0x1560 <__addsf3+0x1e>
    1554:	9f 3f       	cpi	r25, 0xFF	; 255
    1556:	11 f4       	brne	.+4      	; 0x155c <__addsf3+0x1a>
    1558:	1e f4       	brtc	.+6      	; 0x1560 <__addsf3+0x1e>
    155a:	5e c1       	rjmp	.+700    	; 0x1818 <__fp_nan>
    155c:	0e f4       	brtc	.+2      	; 0x1560 <__addsf3+0x1e>
    155e:	e0 95       	com	r30
    1560:	e7 fb       	bst	r30, 7
    1562:	54 c1       	rjmp	.+680    	; 0x180c <__fp_inf>

00001564 <__addsf3x>:
    1564:	e9 2f       	mov	r30, r25
    1566:	d8 d1       	rcall	.+944    	; 0x1918 <__fp_split3>
    1568:	80 f3       	brcs	.-32     	; 0x154a <__addsf3+0x8>
    156a:	ba 17       	cp	r27, r26
    156c:	62 07       	cpc	r22, r18
    156e:	73 07       	cpc	r23, r19
    1570:	84 07       	cpc	r24, r20
    1572:	95 07       	cpc	r25, r21
    1574:	18 f0       	brcs	.+6      	; 0x157c <__addsf3x+0x18>
    1576:	71 f4       	brne	.+28     	; 0x1594 <__addsf3x+0x30>
    1578:	9e f5       	brtc	.+102    	; 0x15e0 <__addsf3x+0x7c>
    157a:	f0 c1       	rjmp	.+992    	; 0x195c <__fp_zero>
    157c:	0e f4       	brtc	.+2      	; 0x1580 <__addsf3x+0x1c>
    157e:	e0 95       	com	r30
    1580:	0b 2e       	mov	r0, r27
    1582:	ba 2f       	mov	r27, r26
    1584:	a0 2d       	mov	r26, r0
    1586:	0b 01       	movw	r0, r22
    1588:	b9 01       	movw	r22, r18
    158a:	90 01       	movw	r18, r0
    158c:	0c 01       	movw	r0, r24
    158e:	ca 01       	movw	r24, r20
    1590:	a0 01       	movw	r20, r0
    1592:	11 24       	eor	r1, r1
    1594:	ff 27       	eor	r31, r31
    1596:	59 1b       	sub	r21, r25
    1598:	99 f0       	breq	.+38     	; 0x15c0 <__addsf3x+0x5c>
    159a:	59 3f       	cpi	r21, 0xF9	; 249
    159c:	50 f4       	brcc	.+20     	; 0x15b2 <__addsf3x+0x4e>
    159e:	50 3e       	cpi	r21, 0xE0	; 224
    15a0:	68 f1       	brcs	.+90     	; 0x15fc <__addsf3x+0x98>
    15a2:	1a 16       	cp	r1, r26
    15a4:	f0 40       	sbci	r31, 0x00	; 0
    15a6:	a2 2f       	mov	r26, r18
    15a8:	23 2f       	mov	r18, r19
    15aa:	34 2f       	mov	r19, r20
    15ac:	44 27       	eor	r20, r20
    15ae:	58 5f       	subi	r21, 0xF8	; 248
    15b0:	f3 cf       	rjmp	.-26     	; 0x1598 <__addsf3x+0x34>
    15b2:	46 95       	lsr	r20
    15b4:	37 95       	ror	r19
    15b6:	27 95       	ror	r18
    15b8:	a7 95       	ror	r26
    15ba:	f0 40       	sbci	r31, 0x00	; 0
    15bc:	53 95       	inc	r21
    15be:	c9 f7       	brne	.-14     	; 0x15b2 <__addsf3x+0x4e>
    15c0:	7e f4       	brtc	.+30     	; 0x15e0 <__addsf3x+0x7c>
    15c2:	1f 16       	cp	r1, r31
    15c4:	ba 0b       	sbc	r27, r26
    15c6:	62 0b       	sbc	r22, r18
    15c8:	73 0b       	sbc	r23, r19
    15ca:	84 0b       	sbc	r24, r20
    15cc:	ba f0       	brmi	.+46     	; 0x15fc <__addsf3x+0x98>
    15ce:	91 50       	subi	r25, 0x01	; 1
    15d0:	a1 f0       	breq	.+40     	; 0x15fa <__addsf3x+0x96>
    15d2:	ff 0f       	add	r31, r31
    15d4:	bb 1f       	adc	r27, r27
    15d6:	66 1f       	adc	r22, r22
    15d8:	77 1f       	adc	r23, r23
    15da:	88 1f       	adc	r24, r24
    15dc:	c2 f7       	brpl	.-16     	; 0x15ce <__addsf3x+0x6a>
    15de:	0e c0       	rjmp	.+28     	; 0x15fc <__addsf3x+0x98>
    15e0:	ba 0f       	add	r27, r26
    15e2:	62 1f       	adc	r22, r18
    15e4:	73 1f       	adc	r23, r19
    15e6:	84 1f       	adc	r24, r20
    15e8:	48 f4       	brcc	.+18     	; 0x15fc <__addsf3x+0x98>
    15ea:	87 95       	ror	r24
    15ec:	77 95       	ror	r23
    15ee:	67 95       	ror	r22
    15f0:	b7 95       	ror	r27
    15f2:	f7 95       	ror	r31
    15f4:	9e 3f       	cpi	r25, 0xFE	; 254
    15f6:	08 f0       	brcs	.+2      	; 0x15fa <__addsf3x+0x96>
    15f8:	b3 cf       	rjmp	.-154    	; 0x1560 <__addsf3+0x1e>
    15fa:	93 95       	inc	r25
    15fc:	88 0f       	add	r24, r24
    15fe:	08 f0       	brcs	.+2      	; 0x1602 <__addsf3x+0x9e>
    1600:	99 27       	eor	r25, r25
    1602:	ee 0f       	add	r30, r30
    1604:	97 95       	ror	r25
    1606:	87 95       	ror	r24
    1608:	08 95       	ret

0000160a <atan>:
    160a:	df 93       	push	r29
    160c:	dd 27       	eor	r29, r29
    160e:	b9 2f       	mov	r27, r25
    1610:	bf 77       	andi	r27, 0x7F	; 127
    1612:	40 e8       	ldi	r20, 0x80	; 128
    1614:	5f e3       	ldi	r21, 0x3F	; 63
    1616:	16 16       	cp	r1, r22
    1618:	17 06       	cpc	r1, r23
    161a:	48 07       	cpc	r20, r24
    161c:	5b 07       	cpc	r21, r27
    161e:	10 f4       	brcc	.+4      	; 0x1624 <atan+0x1a>
    1620:	d9 2f       	mov	r29, r25
    1622:	a3 d1       	rcall	.+838    	; 0x196a <inverse>
    1624:	9f 93       	push	r25
    1626:	8f 93       	push	r24
    1628:	7f 93       	push	r23
    162a:	6f 93       	push	r22
    162c:	08 d2       	rcall	.+1040   	; 0x1a3e <square>
    162e:	ec e8       	ldi	r30, 0x8C	; 140
    1630:	f0 e0       	ldi	r31, 0x00	; 0
    1632:	f5 d0       	rcall	.+490    	; 0x181e <__fp_powser>
    1634:	4f d1       	rcall	.+670    	; 0x18d4 <__fp_round>
    1636:	2f 91       	pop	r18
    1638:	3f 91       	pop	r19
    163a:	4f 91       	pop	r20
    163c:	5f 91       	pop	r21
    163e:	a8 d1       	rcall	.+848    	; 0x1990 <__mulsf3x>
    1640:	dd 23       	and	r29, r29
    1642:	49 f0       	breq	.+18     	; 0x1656 <atan+0x4c>
    1644:	90 58       	subi	r25, 0x80	; 128
    1646:	a2 ea       	ldi	r26, 0xA2	; 162
    1648:	2a ed       	ldi	r18, 0xDA	; 218
    164a:	3f e0       	ldi	r19, 0x0F	; 15
    164c:	49 ec       	ldi	r20, 0xC9	; 201
    164e:	5f e3       	ldi	r21, 0x3F	; 63
    1650:	d0 78       	andi	r29, 0x80	; 128
    1652:	5d 27       	eor	r21, r29
    1654:	87 df       	rcall	.-242    	; 0x1564 <__addsf3x>
    1656:	df 91       	pop	r29
    1658:	3d c1       	rjmp	.+634    	; 0x18d4 <__fp_round>

0000165a <cos>:
    165a:	15 d1       	rcall	.+554    	; 0x1886 <__fp_rempio2>
    165c:	e3 95       	inc	r30
    165e:	4b c1       	rjmp	.+662    	; 0x18f6 <__fp_sinus>

00001660 <__divsf3>:
    1660:	0c d0       	rcall	.+24     	; 0x167a <__divsf3x>
    1662:	38 c1       	rjmp	.+624    	; 0x18d4 <__fp_round>
    1664:	08 d1       	rcall	.+528    	; 0x1876 <__fp_pscB>
    1666:	40 f0       	brcs	.+16     	; 0x1678 <__divsf3+0x18>
    1668:	ff d0       	rcall	.+510    	; 0x1868 <__fp_pscA>
    166a:	30 f0       	brcs	.+12     	; 0x1678 <__divsf3+0x18>
    166c:	21 f4       	brne	.+8      	; 0x1676 <__divsf3+0x16>
    166e:	5f 3f       	cpi	r21, 0xFF	; 255
    1670:	19 f0       	breq	.+6      	; 0x1678 <__divsf3+0x18>
    1672:	cc c0       	rjmp	.+408    	; 0x180c <__fp_inf>
    1674:	51 11       	cpse	r21, r1
    1676:	73 c1       	rjmp	.+742    	; 0x195e <__fp_szero>
    1678:	cf c0       	rjmp	.+414    	; 0x1818 <__fp_nan>

0000167a <__divsf3x>:
    167a:	4e d1       	rcall	.+668    	; 0x1918 <__fp_split3>
    167c:	98 f3       	brcs	.-26     	; 0x1664 <__divsf3+0x4>

0000167e <__divsf3_pse>:
    167e:	99 23       	and	r25, r25
    1680:	c9 f3       	breq	.-14     	; 0x1674 <__divsf3+0x14>
    1682:	55 23       	and	r21, r21
    1684:	b1 f3       	breq	.-20     	; 0x1672 <__divsf3+0x12>
    1686:	95 1b       	sub	r25, r21
    1688:	55 0b       	sbc	r21, r21
    168a:	bb 27       	eor	r27, r27
    168c:	aa 27       	eor	r26, r26
    168e:	62 17       	cp	r22, r18
    1690:	73 07       	cpc	r23, r19
    1692:	84 07       	cpc	r24, r20
    1694:	38 f0       	brcs	.+14     	; 0x16a4 <__divsf3_pse+0x26>
    1696:	9f 5f       	subi	r25, 0xFF	; 255
    1698:	5f 4f       	sbci	r21, 0xFF	; 255
    169a:	22 0f       	add	r18, r18
    169c:	33 1f       	adc	r19, r19
    169e:	44 1f       	adc	r20, r20
    16a0:	aa 1f       	adc	r26, r26
    16a2:	a9 f3       	breq	.-22     	; 0x168e <__divsf3_pse+0x10>
    16a4:	33 d0       	rcall	.+102    	; 0x170c <__divsf3_pse+0x8e>
    16a6:	0e 2e       	mov	r0, r30
    16a8:	3a f0       	brmi	.+14     	; 0x16b8 <__divsf3_pse+0x3a>
    16aa:	e0 e8       	ldi	r30, 0x80	; 128
    16ac:	30 d0       	rcall	.+96     	; 0x170e <__divsf3_pse+0x90>
    16ae:	91 50       	subi	r25, 0x01	; 1
    16b0:	50 40       	sbci	r21, 0x00	; 0
    16b2:	e6 95       	lsr	r30
    16b4:	00 1c       	adc	r0, r0
    16b6:	ca f7       	brpl	.-14     	; 0x16aa <__divsf3_pse+0x2c>
    16b8:	29 d0       	rcall	.+82     	; 0x170c <__divsf3_pse+0x8e>
    16ba:	fe 2f       	mov	r31, r30
    16bc:	27 d0       	rcall	.+78     	; 0x170c <__divsf3_pse+0x8e>
    16be:	66 0f       	add	r22, r22
    16c0:	77 1f       	adc	r23, r23
    16c2:	88 1f       	adc	r24, r24
    16c4:	bb 1f       	adc	r27, r27
    16c6:	26 17       	cp	r18, r22
    16c8:	37 07       	cpc	r19, r23
    16ca:	48 07       	cpc	r20, r24
    16cc:	ab 07       	cpc	r26, r27
    16ce:	b0 e8       	ldi	r27, 0x80	; 128
    16d0:	09 f0       	breq	.+2      	; 0x16d4 <__divsf3_pse+0x56>
    16d2:	bb 0b       	sbc	r27, r27
    16d4:	80 2d       	mov	r24, r0
    16d6:	bf 01       	movw	r22, r30
    16d8:	ff 27       	eor	r31, r31
    16da:	93 58       	subi	r25, 0x83	; 131
    16dc:	5f 4f       	sbci	r21, 0xFF	; 255
    16de:	2a f0       	brmi	.+10     	; 0x16ea <__divsf3_pse+0x6c>
    16e0:	9e 3f       	cpi	r25, 0xFE	; 254
    16e2:	51 05       	cpc	r21, r1
    16e4:	68 f0       	brcs	.+26     	; 0x1700 <__divsf3_pse+0x82>
    16e6:	92 c0       	rjmp	.+292    	; 0x180c <__fp_inf>
    16e8:	3a c1       	rjmp	.+628    	; 0x195e <__fp_szero>
    16ea:	5f 3f       	cpi	r21, 0xFF	; 255
    16ec:	ec f3       	brlt	.-6      	; 0x16e8 <__divsf3_pse+0x6a>
    16ee:	98 3e       	cpi	r25, 0xE8	; 232
    16f0:	dc f3       	brlt	.-10     	; 0x16e8 <__divsf3_pse+0x6a>
    16f2:	86 95       	lsr	r24
    16f4:	77 95       	ror	r23
    16f6:	67 95       	ror	r22
    16f8:	b7 95       	ror	r27
    16fa:	f7 95       	ror	r31
    16fc:	9f 5f       	subi	r25, 0xFF	; 255
    16fe:	c9 f7       	brne	.-14     	; 0x16f2 <__divsf3_pse+0x74>
    1700:	88 0f       	add	r24, r24
    1702:	91 1d       	adc	r25, r1
    1704:	96 95       	lsr	r25
    1706:	87 95       	ror	r24
    1708:	97 f9       	bld	r25, 7
    170a:	08 95       	ret
    170c:	e1 e0       	ldi	r30, 0x01	; 1
    170e:	66 0f       	add	r22, r22
    1710:	77 1f       	adc	r23, r23
    1712:	88 1f       	adc	r24, r24
    1714:	bb 1f       	adc	r27, r27
    1716:	62 17       	cp	r22, r18
    1718:	73 07       	cpc	r23, r19
    171a:	84 07       	cpc	r24, r20
    171c:	ba 07       	cpc	r27, r26
    171e:	20 f0       	brcs	.+8      	; 0x1728 <__divsf3_pse+0xaa>
    1720:	62 1b       	sub	r22, r18
    1722:	73 0b       	sbc	r23, r19
    1724:	84 0b       	sbc	r24, r20
    1726:	ba 0b       	sbc	r27, r26
    1728:	ee 1f       	adc	r30, r30
    172a:	88 f7       	brcc	.-30     	; 0x170e <__divsf3_pse+0x90>
    172c:	e0 95       	com	r30
    172e:	08 95       	ret

00001730 <__fixsfsi>:
    1730:	04 d0       	rcall	.+8      	; 0x173a <__fixunssfsi>
    1732:	68 94       	set
    1734:	b1 11       	cpse	r27, r1
    1736:	13 c1       	rjmp	.+550    	; 0x195e <__fp_szero>
    1738:	08 95       	ret

0000173a <__fixunssfsi>:
    173a:	f6 d0       	rcall	.+492    	; 0x1928 <__fp_splitA>
    173c:	88 f0       	brcs	.+34     	; 0x1760 <__fixunssfsi+0x26>
    173e:	9f 57       	subi	r25, 0x7F	; 127
    1740:	90 f0       	brcs	.+36     	; 0x1766 <__fixunssfsi+0x2c>
    1742:	b9 2f       	mov	r27, r25
    1744:	99 27       	eor	r25, r25
    1746:	b7 51       	subi	r27, 0x17	; 23
    1748:	a0 f0       	brcs	.+40     	; 0x1772 <__fixunssfsi+0x38>
    174a:	d1 f0       	breq	.+52     	; 0x1780 <__fixunssfsi+0x46>
    174c:	66 0f       	add	r22, r22
    174e:	77 1f       	adc	r23, r23
    1750:	88 1f       	adc	r24, r24
    1752:	99 1f       	adc	r25, r25
    1754:	1a f0       	brmi	.+6      	; 0x175c <__fixunssfsi+0x22>
    1756:	ba 95       	dec	r27
    1758:	c9 f7       	brne	.-14     	; 0x174c <__fixunssfsi+0x12>
    175a:	12 c0       	rjmp	.+36     	; 0x1780 <__fixunssfsi+0x46>
    175c:	b1 30       	cpi	r27, 0x01	; 1
    175e:	81 f0       	breq	.+32     	; 0x1780 <__fixunssfsi+0x46>
    1760:	fd d0       	rcall	.+506    	; 0x195c <__fp_zero>
    1762:	b1 e0       	ldi	r27, 0x01	; 1
    1764:	08 95       	ret
    1766:	fa c0       	rjmp	.+500    	; 0x195c <__fp_zero>
    1768:	67 2f       	mov	r22, r23
    176a:	78 2f       	mov	r23, r24
    176c:	88 27       	eor	r24, r24
    176e:	b8 5f       	subi	r27, 0xF8	; 248
    1770:	39 f0       	breq	.+14     	; 0x1780 <__fixunssfsi+0x46>
    1772:	b9 3f       	cpi	r27, 0xF9	; 249
    1774:	cc f3       	brlt	.-14     	; 0x1768 <__fixunssfsi+0x2e>
    1776:	86 95       	lsr	r24
    1778:	77 95       	ror	r23
    177a:	67 95       	ror	r22
    177c:	b3 95       	inc	r27
    177e:	d9 f7       	brne	.-10     	; 0x1776 <__fixunssfsi+0x3c>
    1780:	3e f4       	brtc	.+14     	; 0x1790 <__fixunssfsi+0x56>
    1782:	90 95       	com	r25
    1784:	80 95       	com	r24
    1786:	70 95       	com	r23
    1788:	61 95       	neg	r22
    178a:	7f 4f       	sbci	r23, 0xFF	; 255
    178c:	8f 4f       	sbci	r24, 0xFF	; 255
    178e:	9f 4f       	sbci	r25, 0xFF	; 255
    1790:	08 95       	ret

00001792 <__floatunsisf>:
    1792:	e8 94       	clt
    1794:	09 c0       	rjmp	.+18     	; 0x17a8 <__floatsisf+0x12>

00001796 <__floatsisf>:
    1796:	97 fb       	bst	r25, 7
    1798:	3e f4       	brtc	.+14     	; 0x17a8 <__floatsisf+0x12>
    179a:	90 95       	com	r25
    179c:	80 95       	com	r24
    179e:	70 95       	com	r23
    17a0:	61 95       	neg	r22
    17a2:	7f 4f       	sbci	r23, 0xFF	; 255
    17a4:	8f 4f       	sbci	r24, 0xFF	; 255
    17a6:	9f 4f       	sbci	r25, 0xFF	; 255
    17a8:	99 23       	and	r25, r25
    17aa:	a9 f0       	breq	.+42     	; 0x17d6 <__floatsisf+0x40>
    17ac:	f9 2f       	mov	r31, r25
    17ae:	96 e9       	ldi	r25, 0x96	; 150
    17b0:	bb 27       	eor	r27, r27
    17b2:	93 95       	inc	r25
    17b4:	f6 95       	lsr	r31
    17b6:	87 95       	ror	r24
    17b8:	77 95       	ror	r23
    17ba:	67 95       	ror	r22
    17bc:	b7 95       	ror	r27
    17be:	f1 11       	cpse	r31, r1
    17c0:	f8 cf       	rjmp	.-16     	; 0x17b2 <__floatsisf+0x1c>
    17c2:	fa f4       	brpl	.+62     	; 0x1802 <__floatsisf+0x6c>
    17c4:	bb 0f       	add	r27, r27
    17c6:	11 f4       	brne	.+4      	; 0x17cc <__floatsisf+0x36>
    17c8:	60 ff       	sbrs	r22, 0
    17ca:	1b c0       	rjmp	.+54     	; 0x1802 <__floatsisf+0x6c>
    17cc:	6f 5f       	subi	r22, 0xFF	; 255
    17ce:	7f 4f       	sbci	r23, 0xFF	; 255
    17d0:	8f 4f       	sbci	r24, 0xFF	; 255
    17d2:	9f 4f       	sbci	r25, 0xFF	; 255
    17d4:	16 c0       	rjmp	.+44     	; 0x1802 <__floatsisf+0x6c>
    17d6:	88 23       	and	r24, r24
    17d8:	11 f0       	breq	.+4      	; 0x17de <__floatsisf+0x48>
    17da:	96 e9       	ldi	r25, 0x96	; 150
    17dc:	11 c0       	rjmp	.+34     	; 0x1800 <__floatsisf+0x6a>
    17de:	77 23       	and	r23, r23
    17e0:	21 f0       	breq	.+8      	; 0x17ea <__floatsisf+0x54>
    17e2:	9e e8       	ldi	r25, 0x8E	; 142
    17e4:	87 2f       	mov	r24, r23
    17e6:	76 2f       	mov	r23, r22
    17e8:	05 c0       	rjmp	.+10     	; 0x17f4 <__floatsisf+0x5e>
    17ea:	66 23       	and	r22, r22
    17ec:	71 f0       	breq	.+28     	; 0x180a <__floatsisf+0x74>
    17ee:	96 e8       	ldi	r25, 0x86	; 134
    17f0:	86 2f       	mov	r24, r22
    17f2:	70 e0       	ldi	r23, 0x00	; 0
    17f4:	60 e0       	ldi	r22, 0x00	; 0
    17f6:	2a f0       	brmi	.+10     	; 0x1802 <__floatsisf+0x6c>
    17f8:	9a 95       	dec	r25
    17fa:	66 0f       	add	r22, r22
    17fc:	77 1f       	adc	r23, r23
    17fe:	88 1f       	adc	r24, r24
    1800:	da f7       	brpl	.-10     	; 0x17f8 <__floatsisf+0x62>
    1802:	88 0f       	add	r24, r24
    1804:	96 95       	lsr	r25
    1806:	87 95       	ror	r24
    1808:	97 f9       	bld	r25, 7
    180a:	08 95       	ret

0000180c <__fp_inf>:
    180c:	97 f9       	bld	r25, 7
    180e:	9f 67       	ori	r25, 0x7F	; 127
    1810:	80 e8       	ldi	r24, 0x80	; 128
    1812:	70 e0       	ldi	r23, 0x00	; 0
    1814:	60 e0       	ldi	r22, 0x00	; 0
    1816:	08 95       	ret

00001818 <__fp_nan>:
    1818:	9f ef       	ldi	r25, 0xFF	; 255
    181a:	80 ec       	ldi	r24, 0xC0	; 192
    181c:	08 95       	ret

0000181e <__fp_powser>:
    181e:	df 93       	push	r29
    1820:	cf 93       	push	r28
    1822:	1f 93       	push	r17
    1824:	0f 93       	push	r16
    1826:	ff 92       	push	r15
    1828:	ef 92       	push	r14
    182a:	df 92       	push	r13
    182c:	7b 01       	movw	r14, r22
    182e:	8c 01       	movw	r16, r24
    1830:	68 94       	set
    1832:	05 c0       	rjmp	.+10     	; 0x183e <__fp_powser+0x20>
    1834:	da 2e       	mov	r13, r26
    1836:	ef 01       	movw	r28, r30
    1838:	ab d0       	rcall	.+342    	; 0x1990 <__mulsf3x>
    183a:	fe 01       	movw	r30, r28
    183c:	e8 94       	clt
    183e:	a5 91       	lpm	r26, Z+
    1840:	25 91       	lpm	r18, Z+
    1842:	35 91       	lpm	r19, Z+
    1844:	45 91       	lpm	r20, Z+
    1846:	55 91       	lpm	r21, Z+
    1848:	ae f3       	brts	.-22     	; 0x1834 <__fp_powser+0x16>
    184a:	ef 01       	movw	r28, r30
    184c:	8b de       	rcall	.-746    	; 0x1564 <__addsf3x>
    184e:	fe 01       	movw	r30, r28
    1850:	97 01       	movw	r18, r14
    1852:	a8 01       	movw	r20, r16
    1854:	da 94       	dec	r13
    1856:	79 f7       	brne	.-34     	; 0x1836 <__fp_powser+0x18>
    1858:	df 90       	pop	r13
    185a:	ef 90       	pop	r14
    185c:	ff 90       	pop	r15
    185e:	0f 91       	pop	r16
    1860:	1f 91       	pop	r17
    1862:	cf 91       	pop	r28
    1864:	df 91       	pop	r29
    1866:	08 95       	ret

00001868 <__fp_pscA>:
    1868:	00 24       	eor	r0, r0
    186a:	0a 94       	dec	r0
    186c:	16 16       	cp	r1, r22
    186e:	17 06       	cpc	r1, r23
    1870:	18 06       	cpc	r1, r24
    1872:	09 06       	cpc	r0, r25
    1874:	08 95       	ret

00001876 <__fp_pscB>:
    1876:	00 24       	eor	r0, r0
    1878:	0a 94       	dec	r0
    187a:	12 16       	cp	r1, r18
    187c:	13 06       	cpc	r1, r19
    187e:	14 06       	cpc	r1, r20
    1880:	05 06       	cpc	r0, r21
    1882:	08 95       	ret
    1884:	c9 cf       	rjmp	.-110    	; 0x1818 <__fp_nan>

00001886 <__fp_rempio2>:
    1886:	50 d0       	rcall	.+160    	; 0x1928 <__fp_splitA>
    1888:	e8 f3       	brcs	.-6      	; 0x1884 <__fp_pscB+0xe>
    188a:	e8 94       	clt
    188c:	e0 e0       	ldi	r30, 0x00	; 0
    188e:	bb 27       	eor	r27, r27
    1890:	9f 57       	subi	r25, 0x7F	; 127
    1892:	f0 f0       	brcs	.+60     	; 0x18d0 <__fp_rempio2+0x4a>
    1894:	2a ed       	ldi	r18, 0xDA	; 218
    1896:	3f e0       	ldi	r19, 0x0F	; 15
    1898:	49 ec       	ldi	r20, 0xC9	; 201
    189a:	06 c0       	rjmp	.+12     	; 0x18a8 <__fp_rempio2+0x22>
    189c:	ee 0f       	add	r30, r30
    189e:	bb 0f       	add	r27, r27
    18a0:	66 1f       	adc	r22, r22
    18a2:	77 1f       	adc	r23, r23
    18a4:	88 1f       	adc	r24, r24
    18a6:	28 f0       	brcs	.+10     	; 0x18b2 <__fp_rempio2+0x2c>
    18a8:	b2 3a       	cpi	r27, 0xA2	; 162
    18aa:	62 07       	cpc	r22, r18
    18ac:	73 07       	cpc	r23, r19
    18ae:	84 07       	cpc	r24, r20
    18b0:	28 f0       	brcs	.+10     	; 0x18bc <__fp_rempio2+0x36>
    18b2:	b2 5a       	subi	r27, 0xA2	; 162
    18b4:	62 0b       	sbc	r22, r18
    18b6:	73 0b       	sbc	r23, r19
    18b8:	84 0b       	sbc	r24, r20
    18ba:	e3 95       	inc	r30
    18bc:	9a 95       	dec	r25
    18be:	72 f7       	brpl	.-36     	; 0x189c <__fp_rempio2+0x16>
    18c0:	80 38       	cpi	r24, 0x80	; 128
    18c2:	30 f4       	brcc	.+12     	; 0x18d0 <__fp_rempio2+0x4a>
    18c4:	9a 95       	dec	r25
    18c6:	bb 0f       	add	r27, r27
    18c8:	66 1f       	adc	r22, r22
    18ca:	77 1f       	adc	r23, r23
    18cc:	88 1f       	adc	r24, r24
    18ce:	d2 f7       	brpl	.-12     	; 0x18c4 <__fp_rempio2+0x3e>
    18d0:	90 48       	sbci	r25, 0x80	; 128
    18d2:	ba c0       	rjmp	.+372    	; 0x1a48 <__fp_mpack_finite>

000018d4 <__fp_round>:
    18d4:	09 2e       	mov	r0, r25
    18d6:	03 94       	inc	r0
    18d8:	00 0c       	add	r0, r0
    18da:	11 f4       	brne	.+4      	; 0x18e0 <__fp_round+0xc>
    18dc:	88 23       	and	r24, r24
    18de:	52 f0       	brmi	.+20     	; 0x18f4 <__fp_round+0x20>
    18e0:	bb 0f       	add	r27, r27
    18e2:	40 f4       	brcc	.+16     	; 0x18f4 <__fp_round+0x20>
    18e4:	bf 2b       	or	r27, r31
    18e6:	11 f4       	brne	.+4      	; 0x18ec <__fp_round+0x18>
    18e8:	60 ff       	sbrs	r22, 0
    18ea:	04 c0       	rjmp	.+8      	; 0x18f4 <__fp_round+0x20>
    18ec:	6f 5f       	subi	r22, 0xFF	; 255
    18ee:	7f 4f       	sbci	r23, 0xFF	; 255
    18f0:	8f 4f       	sbci	r24, 0xFF	; 255
    18f2:	9f 4f       	sbci	r25, 0xFF	; 255
    18f4:	08 95       	ret

000018f6 <__fp_sinus>:
    18f6:	ef 93       	push	r30
    18f8:	e0 ff       	sbrs	r30, 0
    18fa:	06 c0       	rjmp	.+12     	; 0x1908 <__fp_sinus+0x12>
    18fc:	a2 ea       	ldi	r26, 0xA2	; 162
    18fe:	2a ed       	ldi	r18, 0xDA	; 218
    1900:	3f e0       	ldi	r19, 0x0F	; 15
    1902:	49 ec       	ldi	r20, 0xC9	; 201
    1904:	5f eb       	ldi	r21, 0xBF	; 191
    1906:	2e de       	rcall	.-932    	; 0x1564 <__addsf3x>
    1908:	e5 df       	rcall	.-54     	; 0x18d4 <__fp_round>
    190a:	0f 90       	pop	r0
    190c:	03 94       	inc	r0
    190e:	01 fc       	sbrc	r0, 1
    1910:	90 58       	subi	r25, 0x80	; 128
    1912:	e9 eb       	ldi	r30, 0xB9	; 185
    1914:	f0 e0       	ldi	r31, 0x00	; 0
    1916:	a4 c0       	rjmp	.+328    	; 0x1a60 <__fp_powsodd>

00001918 <__fp_split3>:
    1918:	57 fd       	sbrc	r21, 7
    191a:	90 58       	subi	r25, 0x80	; 128
    191c:	44 0f       	add	r20, r20
    191e:	55 1f       	adc	r21, r21
    1920:	59 f0       	breq	.+22     	; 0x1938 <__fp_splitA+0x10>
    1922:	5f 3f       	cpi	r21, 0xFF	; 255
    1924:	71 f0       	breq	.+28     	; 0x1942 <__fp_splitA+0x1a>
    1926:	47 95       	ror	r20

00001928 <__fp_splitA>:
    1928:	88 0f       	add	r24, r24
    192a:	97 fb       	bst	r25, 7
    192c:	99 1f       	adc	r25, r25
    192e:	61 f0       	breq	.+24     	; 0x1948 <__fp_splitA+0x20>
    1930:	9f 3f       	cpi	r25, 0xFF	; 255
    1932:	79 f0       	breq	.+30     	; 0x1952 <__fp_splitA+0x2a>
    1934:	87 95       	ror	r24
    1936:	08 95       	ret
    1938:	12 16       	cp	r1, r18
    193a:	13 06       	cpc	r1, r19
    193c:	14 06       	cpc	r1, r20
    193e:	55 1f       	adc	r21, r21
    1940:	f2 cf       	rjmp	.-28     	; 0x1926 <__fp_split3+0xe>
    1942:	46 95       	lsr	r20
    1944:	f1 df       	rcall	.-30     	; 0x1928 <__fp_splitA>
    1946:	08 c0       	rjmp	.+16     	; 0x1958 <__fp_splitA+0x30>
    1948:	16 16       	cp	r1, r22
    194a:	17 06       	cpc	r1, r23
    194c:	18 06       	cpc	r1, r24
    194e:	99 1f       	adc	r25, r25
    1950:	f1 cf       	rjmp	.-30     	; 0x1934 <__fp_splitA+0xc>
    1952:	86 95       	lsr	r24
    1954:	71 05       	cpc	r23, r1
    1956:	61 05       	cpc	r22, r1
    1958:	08 94       	sec
    195a:	08 95       	ret

0000195c <__fp_zero>:
    195c:	e8 94       	clt

0000195e <__fp_szero>:
    195e:	bb 27       	eor	r27, r27
    1960:	66 27       	eor	r22, r22
    1962:	77 27       	eor	r23, r23
    1964:	cb 01       	movw	r24, r22
    1966:	97 f9       	bld	r25, 7
    1968:	08 95       	ret

0000196a <inverse>:
    196a:	9b 01       	movw	r18, r22
    196c:	ac 01       	movw	r20, r24
    196e:	60 e0       	ldi	r22, 0x00	; 0
    1970:	70 e0       	ldi	r23, 0x00	; 0
    1972:	80 e8       	ldi	r24, 0x80	; 128
    1974:	9f e3       	ldi	r25, 0x3F	; 63
    1976:	74 ce       	rjmp	.-792    	; 0x1660 <__divsf3>

00001978 <__mulsf3>:
    1978:	0b d0       	rcall	.+22     	; 0x1990 <__mulsf3x>
    197a:	ac cf       	rjmp	.-168    	; 0x18d4 <__fp_round>
    197c:	75 df       	rcall	.-278    	; 0x1868 <__fp_pscA>
    197e:	28 f0       	brcs	.+10     	; 0x198a <__mulsf3+0x12>
    1980:	7a df       	rcall	.-268    	; 0x1876 <__fp_pscB>
    1982:	18 f0       	brcs	.+6      	; 0x198a <__mulsf3+0x12>
    1984:	95 23       	and	r25, r21
    1986:	09 f0       	breq	.+2      	; 0x198a <__mulsf3+0x12>
    1988:	41 cf       	rjmp	.-382    	; 0x180c <__fp_inf>
    198a:	46 cf       	rjmp	.-372    	; 0x1818 <__fp_nan>
    198c:	11 24       	eor	r1, r1
    198e:	e7 cf       	rjmp	.-50     	; 0x195e <__fp_szero>

00001990 <__mulsf3x>:
    1990:	c3 df       	rcall	.-122    	; 0x1918 <__fp_split3>
    1992:	a0 f3       	brcs	.-24     	; 0x197c <__mulsf3+0x4>

00001994 <__mulsf3_pse>:
    1994:	95 9f       	mul	r25, r21
    1996:	d1 f3       	breq	.-12     	; 0x198c <__mulsf3+0x14>
    1998:	95 0f       	add	r25, r21
    199a:	50 e0       	ldi	r21, 0x00	; 0
    199c:	55 1f       	adc	r21, r21
    199e:	62 9f       	mul	r22, r18
    19a0:	f0 01       	movw	r30, r0
    19a2:	72 9f       	mul	r23, r18
    19a4:	bb 27       	eor	r27, r27
    19a6:	f0 0d       	add	r31, r0
    19a8:	b1 1d       	adc	r27, r1
    19aa:	63 9f       	mul	r22, r19
    19ac:	aa 27       	eor	r26, r26
    19ae:	f0 0d       	add	r31, r0
    19b0:	b1 1d       	adc	r27, r1
    19b2:	aa 1f       	adc	r26, r26
    19b4:	64 9f       	mul	r22, r20
    19b6:	66 27       	eor	r22, r22
    19b8:	b0 0d       	add	r27, r0
    19ba:	a1 1d       	adc	r26, r1
    19bc:	66 1f       	adc	r22, r22
    19be:	82 9f       	mul	r24, r18
    19c0:	22 27       	eor	r18, r18
    19c2:	b0 0d       	add	r27, r0
    19c4:	a1 1d       	adc	r26, r1
    19c6:	62 1f       	adc	r22, r18
    19c8:	73 9f       	mul	r23, r19
    19ca:	b0 0d       	add	r27, r0
    19cc:	a1 1d       	adc	r26, r1
    19ce:	62 1f       	adc	r22, r18
    19d0:	83 9f       	mul	r24, r19
    19d2:	a0 0d       	add	r26, r0
    19d4:	61 1d       	adc	r22, r1
    19d6:	22 1f       	adc	r18, r18
    19d8:	74 9f       	mul	r23, r20
    19da:	33 27       	eor	r19, r19
    19dc:	a0 0d       	add	r26, r0
    19de:	61 1d       	adc	r22, r1
    19e0:	23 1f       	adc	r18, r19
    19e2:	84 9f       	mul	r24, r20
    19e4:	60 0d       	add	r22, r0
    19e6:	21 1d       	adc	r18, r1
    19e8:	82 2f       	mov	r24, r18
    19ea:	76 2f       	mov	r23, r22
    19ec:	6a 2f       	mov	r22, r26
    19ee:	11 24       	eor	r1, r1
    19f0:	9f 57       	subi	r25, 0x7F	; 127
    19f2:	50 40       	sbci	r21, 0x00	; 0
    19f4:	8a f0       	brmi	.+34     	; 0x1a18 <__mulsf3_pse+0x84>
    19f6:	e1 f0       	breq	.+56     	; 0x1a30 <__mulsf3_pse+0x9c>
    19f8:	88 23       	and	r24, r24
    19fa:	4a f0       	brmi	.+18     	; 0x1a0e <__mulsf3_pse+0x7a>
    19fc:	ee 0f       	add	r30, r30
    19fe:	ff 1f       	adc	r31, r31
    1a00:	bb 1f       	adc	r27, r27
    1a02:	66 1f       	adc	r22, r22
    1a04:	77 1f       	adc	r23, r23
    1a06:	88 1f       	adc	r24, r24
    1a08:	91 50       	subi	r25, 0x01	; 1
    1a0a:	50 40       	sbci	r21, 0x00	; 0
    1a0c:	a9 f7       	brne	.-22     	; 0x19f8 <__mulsf3_pse+0x64>
    1a0e:	9e 3f       	cpi	r25, 0xFE	; 254
    1a10:	51 05       	cpc	r21, r1
    1a12:	70 f0       	brcs	.+28     	; 0x1a30 <__mulsf3_pse+0x9c>
    1a14:	fb ce       	rjmp	.-522    	; 0x180c <__fp_inf>
    1a16:	a3 cf       	rjmp	.-186    	; 0x195e <__fp_szero>
    1a18:	5f 3f       	cpi	r21, 0xFF	; 255
    1a1a:	ec f3       	brlt	.-6      	; 0x1a16 <__mulsf3_pse+0x82>
    1a1c:	98 3e       	cpi	r25, 0xE8	; 232
    1a1e:	dc f3       	brlt	.-10     	; 0x1a16 <__mulsf3_pse+0x82>
    1a20:	86 95       	lsr	r24
    1a22:	77 95       	ror	r23
    1a24:	67 95       	ror	r22
    1a26:	b7 95       	ror	r27
    1a28:	f7 95       	ror	r31
    1a2a:	e7 95       	ror	r30
    1a2c:	9f 5f       	subi	r25, 0xFF	; 255
    1a2e:	c1 f7       	brne	.-16     	; 0x1a20 <__mulsf3_pse+0x8c>
    1a30:	fe 2b       	or	r31, r30
    1a32:	88 0f       	add	r24, r24
    1a34:	91 1d       	adc	r25, r1
    1a36:	96 95       	lsr	r25
    1a38:	87 95       	ror	r24
    1a3a:	97 f9       	bld	r25, 7
    1a3c:	08 95       	ret

00001a3e <square>:
    1a3e:	9b 01       	movw	r18, r22
    1a40:	ac 01       	movw	r20, r24
    1a42:	9a cf       	rjmp	.-204    	; 0x1978 <__mulsf3>

00001a44 <__fp_mpack>:
    1a44:	9f 3f       	cpi	r25, 0xFF	; 255
    1a46:	31 f0       	breq	.+12     	; 0x1a54 <__fp_mpack_finite+0xc>

00001a48 <__fp_mpack_finite>:
    1a48:	91 50       	subi	r25, 0x01	; 1
    1a4a:	20 f4       	brcc	.+8      	; 0x1a54 <__fp_mpack_finite+0xc>
    1a4c:	87 95       	ror	r24
    1a4e:	77 95       	ror	r23
    1a50:	67 95       	ror	r22
    1a52:	b7 95       	ror	r27
    1a54:	88 0f       	add	r24, r24
    1a56:	91 1d       	adc	r25, r1
    1a58:	96 95       	lsr	r25
    1a5a:	87 95       	ror	r24
    1a5c:	97 f9       	bld	r25, 7
    1a5e:	08 95       	ret

00001a60 <__fp_powsodd>:
    1a60:	9f 93       	push	r25
    1a62:	8f 93       	push	r24
    1a64:	7f 93       	push	r23
    1a66:	6f 93       	push	r22
    1a68:	ff 93       	push	r31
    1a6a:	ef 93       	push	r30
    1a6c:	9b 01       	movw	r18, r22
    1a6e:	ac 01       	movw	r20, r24
    1a70:	83 df       	rcall	.-250    	; 0x1978 <__mulsf3>
    1a72:	ef 91       	pop	r30
    1a74:	ff 91       	pop	r31
    1a76:	d3 de       	rcall	.-602    	; 0x181e <__fp_powser>
    1a78:	2f 91       	pop	r18
    1a7a:	3f 91       	pop	r19
    1a7c:	4f 91       	pop	r20
    1a7e:	5f 91       	pop	r21
    1a80:	7b cf       	rjmp	.-266    	; 0x1978 <__mulsf3>

00001a82 <__divmodhi4>:
    1a82:	97 fb       	bst	r25, 7
    1a84:	07 2e       	mov	r0, r23
    1a86:	16 f4       	brtc	.+4      	; 0x1a8c <__divmodhi4+0xa>
    1a88:	00 94       	com	r0
    1a8a:	06 d0       	rcall	.+12     	; 0x1a98 <__divmodhi4_neg1>
    1a8c:	77 fd       	sbrc	r23, 7
    1a8e:	08 d0       	rcall	.+16     	; 0x1aa0 <__divmodhi4_neg2>
    1a90:	0b d0       	rcall	.+22     	; 0x1aa8 <__udivmodhi4>
    1a92:	07 fc       	sbrc	r0, 7
    1a94:	05 d0       	rcall	.+10     	; 0x1aa0 <__divmodhi4_neg2>
    1a96:	3e f4       	brtc	.+14     	; 0x1aa6 <__divmodhi4_exit>

00001a98 <__divmodhi4_neg1>:
    1a98:	90 95       	com	r25
    1a9a:	81 95       	neg	r24
    1a9c:	9f 4f       	sbci	r25, 0xFF	; 255
    1a9e:	08 95       	ret

00001aa0 <__divmodhi4_neg2>:
    1aa0:	70 95       	com	r23
    1aa2:	61 95       	neg	r22
    1aa4:	7f 4f       	sbci	r23, 0xFF	; 255

00001aa6 <__divmodhi4_exit>:
    1aa6:	08 95       	ret

00001aa8 <__udivmodhi4>:
    1aa8:	aa 1b       	sub	r26, r26
    1aaa:	bb 1b       	sub	r27, r27
    1aac:	51 e1       	ldi	r21, 0x11	; 17
    1aae:	07 c0       	rjmp	.+14     	; 0x1abe <__udivmodhi4_ep>

00001ab0 <__udivmodhi4_loop>:
    1ab0:	aa 1f       	adc	r26, r26
    1ab2:	bb 1f       	adc	r27, r27
    1ab4:	a6 17       	cp	r26, r22
    1ab6:	b7 07       	cpc	r27, r23
    1ab8:	10 f0       	brcs	.+4      	; 0x1abe <__udivmodhi4_ep>
    1aba:	a6 1b       	sub	r26, r22
    1abc:	b7 0b       	sbc	r27, r23

00001abe <__udivmodhi4_ep>:
    1abe:	88 1f       	adc	r24, r24
    1ac0:	99 1f       	adc	r25, r25
    1ac2:	5a 95       	dec	r21
    1ac4:	a9 f7       	brne	.-22     	; 0x1ab0 <__udivmodhi4_loop>
    1ac6:	80 95       	com	r24
    1ac8:	90 95       	com	r25
    1aca:	bc 01       	movw	r22, r24
    1acc:	cd 01       	movw	r24, r26
    1ace:	08 95       	ret

00001ad0 <swapfunc>:
    1ad0:	fb 01       	movw	r30, r22
    1ad2:	dc 01       	movw	r26, r24
    1ad4:	ca 01       	movw	r24, r20
    1ad6:	2c 91       	ld	r18, X
    1ad8:	30 81       	ld	r19, Z
    1ada:	3d 93       	st	X+, r19
    1adc:	21 93       	st	Z+, r18
    1ade:	01 97       	sbiw	r24, 0x01	; 1
    1ae0:	18 16       	cp	r1, r24
    1ae2:	19 06       	cpc	r1, r25
    1ae4:	c4 f3       	brlt	.-16     	; 0x1ad6 <swapfunc+0x6>
    1ae6:	08 95       	ret

00001ae8 <med3>:
    1ae8:	cf 92       	push	r12
    1aea:	df 92       	push	r13
    1aec:	ef 92       	push	r14
    1aee:	ff 92       	push	r15
    1af0:	0f 93       	push	r16
    1af2:	1f 93       	push	r17
    1af4:	cf 93       	push	r28
    1af6:	df 93       	push	r29
    1af8:	6c 01       	movw	r12, r24
    1afa:	8b 01       	movw	r16, r22
    1afc:	7a 01       	movw	r14, r20
    1afe:	e9 01       	movw	r28, r18
    1b00:	f9 01       	movw	r30, r18
    1b02:	09 95       	icall
    1b04:	b7 01       	movw	r22, r14
    1b06:	97 ff       	sbrs	r25, 7
    1b08:	0c c0       	rjmp	.+24     	; 0x1b22 <med3+0x3a>
    1b0a:	c8 01       	movw	r24, r16
    1b0c:	fe 01       	movw	r30, r28
    1b0e:	09 95       	icall
    1b10:	97 fd       	sbrc	r25, 7
    1b12:	16 c0       	rjmp	.+44     	; 0x1b40 <med3+0x58>
    1b14:	b7 01       	movw	r22, r14
    1b16:	c6 01       	movw	r24, r12
    1b18:	fe 01       	movw	r30, r28
    1b1a:	09 95       	icall
    1b1c:	97 ff       	sbrs	r25, 7
    1b1e:	0d c0       	rjmp	.+26     	; 0x1b3a <med3+0x52>
    1b20:	0e c0       	rjmp	.+28     	; 0x1b3e <med3+0x56>
    1b22:	c8 01       	movw	r24, r16
    1b24:	fe 01       	movw	r30, r28
    1b26:	09 95       	icall
    1b28:	18 16       	cp	r1, r24
    1b2a:	19 06       	cpc	r1, r25
    1b2c:	4c f0       	brlt	.+18     	; 0x1b40 <med3+0x58>
    1b2e:	b7 01       	movw	r22, r14
    1b30:	c6 01       	movw	r24, r12
    1b32:	fe 01       	movw	r30, r28
    1b34:	09 95       	icall
    1b36:	97 ff       	sbrs	r25, 7
    1b38:	02 c0       	rjmp	.+4      	; 0x1b3e <med3+0x56>
    1b3a:	86 01       	movw	r16, r12
    1b3c:	01 c0       	rjmp	.+2      	; 0x1b40 <med3+0x58>
    1b3e:	87 01       	movw	r16, r14
    1b40:	c8 01       	movw	r24, r16
    1b42:	df 91       	pop	r29
    1b44:	cf 91       	pop	r28
    1b46:	1f 91       	pop	r17
    1b48:	0f 91       	pop	r16
    1b4a:	ff 90       	pop	r15
    1b4c:	ef 90       	pop	r14
    1b4e:	df 90       	pop	r13
    1b50:	cf 90       	pop	r12
    1b52:	08 95       	ret

00001b54 <qsort>:
    1b54:	2f 92       	push	r2
    1b56:	3f 92       	push	r3
    1b58:	4f 92       	push	r4
    1b5a:	5f 92       	push	r5
    1b5c:	6f 92       	push	r6
    1b5e:	7f 92       	push	r7
    1b60:	8f 92       	push	r8
    1b62:	9f 92       	push	r9
    1b64:	af 92       	push	r10
    1b66:	bf 92       	push	r11
    1b68:	cf 92       	push	r12
    1b6a:	df 92       	push	r13
    1b6c:	ef 92       	push	r14
    1b6e:	ff 92       	push	r15
    1b70:	0f 93       	push	r16
    1b72:	1f 93       	push	r17
    1b74:	cf 93       	push	r28
    1b76:	df 93       	push	r29
    1b78:	cd b7       	in	r28, 0x3d	; 61
    1b7a:	de b7       	in	r29, 0x3e	; 62
    1b7c:	28 97       	sbiw	r28, 0x08	; 8
    1b7e:	0f b6       	in	r0, 0x3f	; 63
    1b80:	f8 94       	cli
    1b82:	de bf       	out	0x3e, r29	; 62
    1b84:	0f be       	out	0x3f, r0	; 63
    1b86:	cd bf       	out	0x3d, r28	; 61
    1b88:	8c 01       	movw	r16, r24
    1b8a:	6b 01       	movw	r12, r22
    1b8c:	58 87       	std	Y+8, r21	; 0x08
    1b8e:	4f 83       	std	Y+7, r20	; 0x07
    1b90:	59 01       	movw	r10, r18
    1b92:	4b 83       	std	Y+3, r20	; 0x03
    1b94:	5c 83       	std	Y+4, r21	; 0x04
    1b96:	27 e0       	ldi	r18, 0x07	; 7
    1b98:	c2 16       	cp	r12, r18
    1b9a:	d1 04       	cpc	r13, r1
    1b9c:	88 f5       	brcc	.+98     	; 0x1c00 <qsort+0xac>
    1b9e:	ef 80       	ldd	r14, Y+7	; 0x07
    1ba0:	f8 84       	ldd	r15, Y+8	; 0x08
    1ba2:	e0 0e       	add	r14, r16
    1ba4:	f1 1e       	adc	r15, r17
    1ba6:	4f 81       	ldd	r20, Y+7	; 0x07
    1ba8:	58 85       	ldd	r21, Y+8	; 0x08
    1baa:	c4 9e       	mul	r12, r20
    1bac:	40 01       	movw	r8, r0
    1bae:	c5 9e       	mul	r12, r21
    1bb0:	90 0c       	add	r9, r0
    1bb2:	d4 9e       	mul	r13, r20
    1bb4:	90 0c       	add	r9, r0
    1bb6:	11 24       	eor	r1, r1
    1bb8:	80 0e       	add	r8, r16
    1bba:	91 1e       	adc	r9, r17
    1bbc:	1b c0       	rjmp	.+54     	; 0x1bf4 <qsort+0xa0>
    1bbe:	4f 81       	ldd	r20, Y+7	; 0x07
    1bc0:	58 85       	ldd	r21, Y+8	; 0x08
    1bc2:	b6 01       	movw	r22, r12
    1bc4:	c3 01       	movw	r24, r6
    1bc6:	84 df       	rcall	.-248    	; 0x1ad0 <swapfunc>
    1bc8:	36 01       	movw	r6, r12
    1bca:	06 15       	cp	r16, r6
    1bcc:	17 05       	cpc	r17, r7
    1bce:	28 f0       	brcs	.+10     	; 0x1bda <qsort+0x86>
    1bd0:	6f 81       	ldd	r22, Y+7	; 0x07
    1bd2:	78 85       	ldd	r23, Y+8	; 0x08
    1bd4:	e6 0e       	add	r14, r22
    1bd6:	f7 1e       	adc	r15, r23
    1bd8:	0d c0       	rjmp	.+26     	; 0x1bf4 <qsort+0xa0>
    1bda:	63 01       	movw	r12, r6
    1bdc:	8f 81       	ldd	r24, Y+7	; 0x07
    1bde:	98 85       	ldd	r25, Y+8	; 0x08
    1be0:	c8 1a       	sub	r12, r24
    1be2:	d9 0a       	sbc	r13, r25
    1be4:	b3 01       	movw	r22, r6
    1be6:	c6 01       	movw	r24, r12
    1be8:	f5 01       	movw	r30, r10
    1bea:	09 95       	icall
    1bec:	18 16       	cp	r1, r24
    1bee:	19 06       	cpc	r1, r25
    1bf0:	34 f3       	brlt	.-52     	; 0x1bbe <qsort+0x6a>
    1bf2:	ee cf       	rjmp	.-36     	; 0x1bd0 <qsort+0x7c>
    1bf4:	e8 14       	cp	r14, r8
    1bf6:	f9 04       	cpc	r15, r9
    1bf8:	08 f0       	brcs	.+2      	; 0x1bfc <qsort+0xa8>
    1bfa:	4d c1       	rjmp	.+666    	; 0x1e96 <qsort+0x342>
    1bfc:	37 01       	movw	r6, r14
    1bfe:	e5 cf       	rjmp	.-54     	; 0x1bca <qsort+0x76>
    1c00:	c6 01       	movw	r24, r12
    1c02:	96 95       	lsr	r25
    1c04:	87 95       	ror	r24
    1c06:	2f 81       	ldd	r18, Y+7	; 0x07
    1c08:	38 85       	ldd	r19, Y+8	; 0x08
    1c0a:	82 9f       	mul	r24, r18
    1c0c:	70 01       	movw	r14, r0
    1c0e:	83 9f       	mul	r24, r19
    1c10:	f0 0c       	add	r15, r0
    1c12:	92 9f       	mul	r25, r18
    1c14:	f0 0c       	add	r15, r0
    1c16:	11 24       	eor	r1, r1
    1c18:	e0 0e       	add	r14, r16
    1c1a:	f1 1e       	adc	r15, r17
    1c1c:	37 e0       	ldi	r19, 0x07	; 7
    1c1e:	c3 16       	cp	r12, r19
    1c20:	d1 04       	cpc	r13, r1
    1c22:	09 f4       	brne	.+2      	; 0x1c26 <qsort+0xd2>
    1c24:	4c c0       	rjmp	.+152    	; 0x1cbe <qsort+0x16a>
    1c26:	c6 01       	movw	r24, r12
    1c28:	01 97       	sbiw	r24, 0x01	; 1
    1c2a:	4f 81       	ldd	r20, Y+7	; 0x07
    1c2c:	58 85       	ldd	r21, Y+8	; 0x08
    1c2e:	84 9f       	mul	r24, r20
    1c30:	40 01       	movw	r8, r0
    1c32:	85 9f       	mul	r24, r21
    1c34:	90 0c       	add	r9, r0
    1c36:	94 9f       	mul	r25, r20
    1c38:	90 0c       	add	r9, r0
    1c3a:	11 24       	eor	r1, r1
    1c3c:	80 0e       	add	r8, r16
    1c3e:	91 1e       	adc	r9, r17
    1c40:	59 e2       	ldi	r21, 0x29	; 41
    1c42:	c5 16       	cp	r12, r21
    1c44:	d1 04       	cpc	r13, r1
    1c46:	a0 f1       	brcs	.+104    	; 0x1cb0 <qsort+0x15c>
    1c48:	c6 01       	movw	r24, r12
    1c4a:	23 e0       	ldi	r18, 0x03	; 3
    1c4c:	96 95       	lsr	r25
    1c4e:	87 95       	ror	r24
    1c50:	2a 95       	dec	r18
    1c52:	e1 f7       	brne	.-8      	; 0x1c4c <qsort+0xf8>
    1c54:	6f 81       	ldd	r22, Y+7	; 0x07
    1c56:	78 85       	ldd	r23, Y+8	; 0x08
    1c58:	86 9f       	mul	r24, r22
    1c5a:	30 01       	movw	r6, r0
    1c5c:	87 9f       	mul	r24, r23
    1c5e:	70 0c       	add	r7, r0
    1c60:	96 9f       	mul	r25, r22
    1c62:	70 0c       	add	r7, r0
    1c64:	11 24       	eor	r1, r1
    1c66:	13 01       	movw	r2, r6
    1c68:	22 0c       	add	r2, r2
    1c6a:	33 1c       	adc	r3, r3
    1c6c:	a8 01       	movw	r20, r16
    1c6e:	42 0d       	add	r20, r2
    1c70:	53 1d       	adc	r21, r3
    1c72:	b8 01       	movw	r22, r16
    1c74:	66 0d       	add	r22, r6
    1c76:	77 1d       	adc	r23, r7
    1c78:	95 01       	movw	r18, r10
    1c7a:	c8 01       	movw	r24, r16
    1c7c:	35 df       	rcall	.-406    	; 0x1ae8 <med3>
    1c7e:	2c 01       	movw	r4, r24
    1c80:	a7 01       	movw	r20, r14
    1c82:	46 0d       	add	r20, r6
    1c84:	57 1d       	adc	r21, r7
    1c86:	71 94       	neg	r7
    1c88:	61 94       	neg	r6
    1c8a:	71 08       	sbc	r7, r1
    1c8c:	95 01       	movw	r18, r10
    1c8e:	b7 01       	movw	r22, r14
    1c90:	c7 01       	movw	r24, r14
    1c92:	86 0d       	add	r24, r6
    1c94:	97 1d       	adc	r25, r7
    1c96:	28 df       	rcall	.-432    	; 0x1ae8 <med3>
    1c98:	7c 01       	movw	r14, r24
    1c9a:	b4 01       	movw	r22, r8
    1c9c:	66 0d       	add	r22, r6
    1c9e:	77 1d       	adc	r23, r7
    1ca0:	95 01       	movw	r18, r10
    1ca2:	a4 01       	movw	r20, r8
    1ca4:	c4 01       	movw	r24, r8
    1ca6:	82 19       	sub	r24, r2
    1ca8:	93 09       	sbc	r25, r3
    1caa:	1e df       	rcall	.-452    	; 0x1ae8 <med3>
    1cac:	4c 01       	movw	r8, r24
    1cae:	01 c0       	rjmp	.+2      	; 0x1cb2 <qsort+0x15e>
    1cb0:	28 01       	movw	r4, r16
    1cb2:	95 01       	movw	r18, r10
    1cb4:	a4 01       	movw	r20, r8
    1cb6:	b7 01       	movw	r22, r14
    1cb8:	c2 01       	movw	r24, r4
    1cba:	16 df       	rcall	.-468    	; 0x1ae8 <med3>
    1cbc:	7c 01       	movw	r14, r24
    1cbe:	4b 81       	ldd	r20, Y+3	; 0x03
    1cc0:	5c 81       	ldd	r21, Y+4	; 0x04
    1cc2:	b7 01       	movw	r22, r14
    1cc4:	c8 01       	movw	r24, r16
    1cc6:	04 df       	rcall	.-504    	; 0x1ad0 <swapfunc>
    1cc8:	4f 80       	ldd	r4, Y+7	; 0x07
    1cca:	58 84       	ldd	r5, Y+8	; 0x08
    1ccc:	40 0e       	add	r4, r16
    1cce:	51 1e       	adc	r5, r17
    1cd0:	c6 01       	movw	r24, r12
    1cd2:	01 97       	sbiw	r24, 0x01	; 1
    1cd4:	ef 81       	ldd	r30, Y+7	; 0x07
    1cd6:	f8 85       	ldd	r31, Y+8	; 0x08
    1cd8:	8e 9f       	mul	r24, r30
    1cda:	30 01       	movw	r6, r0
    1cdc:	8f 9f       	mul	r24, r31
    1cde:	70 0c       	add	r7, r0
    1ce0:	9e 9f       	mul	r25, r30
    1ce2:	70 0c       	add	r7, r0
    1ce4:	11 24       	eor	r1, r1
    1ce6:	60 0e       	add	r6, r16
    1ce8:	71 1e       	adc	r7, r17
    1cea:	43 01       	movw	r8, r6
    1cec:	72 01       	movw	r14, r4
    1cee:	12 01       	movw	r2, r4
    1cf0:	20 e0       	ldi	r18, 0x00	; 0
    1cf2:	30 e0       	ldi	r19, 0x00	; 0
    1cf4:	11 c0       	rjmp	.+34     	; 0x1d18 <qsort+0x1c4>
    1cf6:	89 2b       	or	r24, r25
    1cf8:	59 f4       	brne	.+22     	; 0x1d10 <qsort+0x1bc>
    1cfa:	4b 81       	ldd	r20, Y+3	; 0x03
    1cfc:	5c 81       	ldd	r21, Y+4	; 0x04
    1cfe:	b7 01       	movw	r22, r14
    1d00:	c1 01       	movw	r24, r2
    1d02:	e6 de       	rcall	.-564    	; 0x1ad0 <swapfunc>
    1d04:	2f 81       	ldd	r18, Y+7	; 0x07
    1d06:	38 85       	ldd	r19, Y+8	; 0x08
    1d08:	22 0e       	add	r2, r18
    1d0a:	33 1e       	adc	r3, r19
    1d0c:	21 e0       	ldi	r18, 0x01	; 1
    1d0e:	30 e0       	ldi	r19, 0x00	; 0
    1d10:	4f 81       	ldd	r20, Y+7	; 0x07
    1d12:	58 85       	ldd	r21, Y+8	; 0x08
    1d14:	e4 0e       	add	r14, r20
    1d16:	f5 1e       	adc	r15, r21
    1d18:	8e 14       	cp	r8, r14
    1d1a:	9f 04       	cpc	r9, r15
    1d1c:	d8 f0       	brcs	.+54     	; 0x1d54 <qsort+0x200>
    1d1e:	b8 01       	movw	r22, r16
    1d20:	c7 01       	movw	r24, r14
    1d22:	2d 83       	std	Y+5, r18	; 0x05
    1d24:	3e 83       	std	Y+6, r19	; 0x06
    1d26:	f5 01       	movw	r30, r10
    1d28:	09 95       	icall
    1d2a:	2d 81       	ldd	r18, Y+5	; 0x05
    1d2c:	3e 81       	ldd	r19, Y+6	; 0x06
    1d2e:	18 16       	cp	r1, r24
    1d30:	19 06       	cpc	r1, r25
    1d32:	84 f0       	brlt	.+32     	; 0x1d54 <qsort+0x200>
    1d34:	e0 cf       	rjmp	.-64     	; 0x1cf6 <qsort+0x1a2>
    1d36:	89 2b       	or	r24, r25
    1d38:	59 f4       	brne	.+22     	; 0x1d50 <qsort+0x1fc>
    1d3a:	4b 81       	ldd	r20, Y+3	; 0x03
    1d3c:	5c 81       	ldd	r21, Y+4	; 0x04
    1d3e:	b3 01       	movw	r22, r6
    1d40:	c4 01       	movw	r24, r8
    1d42:	c6 de       	rcall	.-628    	; 0x1ad0 <swapfunc>
    1d44:	2f 81       	ldd	r18, Y+7	; 0x07
    1d46:	38 85       	ldd	r19, Y+8	; 0x08
    1d48:	62 1a       	sub	r6, r18
    1d4a:	73 0a       	sbc	r7, r19
    1d4c:	21 e0       	ldi	r18, 0x01	; 1
    1d4e:	30 e0       	ldi	r19, 0x00	; 0
    1d50:	89 80       	ldd	r8, Y+1	; 0x01
    1d52:	9a 80       	ldd	r9, Y+2	; 0x02
    1d54:	8e 14       	cp	r8, r14
    1d56:	9f 04       	cpc	r9, r15
    1d58:	08 f4       	brcc	.+2      	; 0x1d5c <qsort+0x208>
    1d5a:	90 c0       	rjmp	.+288    	; 0x1e7c <qsort+0x328>
    1d5c:	b8 01       	movw	r22, r16
    1d5e:	c4 01       	movw	r24, r8
    1d60:	2d 83       	std	Y+5, r18	; 0x05
    1d62:	3e 83       	std	Y+6, r19	; 0x06
    1d64:	f5 01       	movw	r30, r10
    1d66:	09 95       	icall
    1d68:	a4 01       	movw	r20, r8
    1d6a:	6f 81       	ldd	r22, Y+7	; 0x07
    1d6c:	78 85       	ldd	r23, Y+8	; 0x08
    1d6e:	46 1b       	sub	r20, r22
    1d70:	57 0b       	sbc	r21, r23
    1d72:	5a 83       	std	Y+2, r21	; 0x02
    1d74:	49 83       	std	Y+1, r20	; 0x01
    1d76:	2d 81       	ldd	r18, Y+5	; 0x05
    1d78:	3e 81       	ldd	r19, Y+6	; 0x06
    1d7a:	97 ff       	sbrs	r25, 7
    1d7c:	dc cf       	rjmp	.-72     	; 0x1d36 <qsort+0x1e2>
    1d7e:	70 c0       	rjmp	.+224    	; 0x1e60 <qsort+0x30c>
    1d80:	48 01       	movw	r8, r16
    1d82:	88 0e       	add	r8, r24
    1d84:	99 1e       	adc	r9, r25
    1d86:	1b c0       	rjmp	.+54     	; 0x1dbe <qsort+0x26a>
    1d88:	4b 81       	ldd	r20, Y+3	; 0x03
    1d8a:	5c 81       	ldd	r21, Y+4	; 0x04
    1d8c:	b6 01       	movw	r22, r12
    1d8e:	c7 01       	movw	r24, r14
    1d90:	9f de       	rcall	.-706    	; 0x1ad0 <swapfunc>
    1d92:	76 01       	movw	r14, r12
    1d94:	0e 15       	cp	r16, r14
    1d96:	1f 05       	cpc	r17, r15
    1d98:	28 f0       	brcs	.+10     	; 0x1da4 <qsort+0x250>
    1d9a:	8f 81       	ldd	r24, Y+7	; 0x07
    1d9c:	98 85       	ldd	r25, Y+8	; 0x08
    1d9e:	48 0e       	add	r4, r24
    1da0:	59 1e       	adc	r5, r25
    1da2:	0d c0       	rjmp	.+26     	; 0x1dbe <qsort+0x26a>
    1da4:	67 01       	movw	r12, r14
    1da6:	ef 81       	ldd	r30, Y+7	; 0x07
    1da8:	f8 85       	ldd	r31, Y+8	; 0x08
    1daa:	ce 1a       	sub	r12, r30
    1dac:	df 0a       	sbc	r13, r31
    1dae:	b7 01       	movw	r22, r14
    1db0:	c6 01       	movw	r24, r12
    1db2:	f5 01       	movw	r30, r10
    1db4:	09 95       	icall
    1db6:	18 16       	cp	r1, r24
    1db8:	19 06       	cpc	r1, r25
    1dba:	34 f3       	brlt	.-52     	; 0x1d88 <qsort+0x234>
    1dbc:	ee cf       	rjmp	.-36     	; 0x1d9a <qsort+0x246>
    1dbe:	48 14       	cp	r4, r8
    1dc0:	59 04       	cpc	r5, r9
    1dc2:	08 f0       	brcs	.+2      	; 0x1dc6 <qsort+0x272>
    1dc4:	68 c0       	rjmp	.+208    	; 0x1e96 <qsort+0x342>
    1dc6:	72 01       	movw	r14, r4
    1dc8:	e5 cf       	rjmp	.-54     	; 0x1d94 <qsort+0x240>
    1dca:	98 01       	movw	r18, r16
    1dcc:	28 0f       	add	r18, r24
    1dce:	39 1f       	adc	r19, r25
    1dd0:	3a 83       	std	Y+2, r19	; 0x02
    1dd2:	29 83       	std	Y+1, r18	; 0x01
    1dd4:	27 01       	movw	r4, r14
    1dd6:	42 18       	sub	r4, r2
    1dd8:	53 08       	sbc	r5, r3
    1dda:	a1 01       	movw	r20, r2
    1ddc:	40 1b       	sub	r20, r16
    1dde:	51 0b       	sbc	r21, r17
    1de0:	44 16       	cp	r4, r20
    1de2:	55 06       	cpc	r5, r21
    1de4:	0c f4       	brge	.+2      	; 0x1de8 <qsort+0x294>
    1de6:	a2 01       	movw	r20, r4
    1de8:	14 16       	cp	r1, r20
    1dea:	15 06       	cpc	r1, r21
    1dec:	2c f4       	brge	.+10     	; 0x1df8 <qsort+0x2a4>
    1dee:	b7 01       	movw	r22, r14
    1df0:	64 1b       	sub	r22, r20
    1df2:	75 0b       	sbc	r23, r21
    1df4:	c8 01       	movw	r24, r16
    1df6:	6c de       	rcall	.-808    	; 0x1ad0 <swapfunc>
    1df8:	63 01       	movw	r12, r6
    1dfa:	c8 18       	sub	r12, r8
    1dfc:	d9 08       	sbc	r13, r9
    1dfe:	49 81       	ldd	r20, Y+1	; 0x01
    1e00:	5a 81       	ldd	r21, Y+2	; 0x02
    1e02:	46 19       	sub	r20, r6
    1e04:	57 09       	sbc	r21, r7
    1e06:	6f 81       	ldd	r22, Y+7	; 0x07
    1e08:	78 85       	ldd	r23, Y+8	; 0x08
    1e0a:	46 1b       	sub	r20, r22
    1e0c:	57 0b       	sbc	r21, r23
    1e0e:	c4 16       	cp	r12, r20
    1e10:	d5 06       	cpc	r13, r21
    1e12:	08 f4       	brcc	.+2      	; 0x1e16 <qsort+0x2c2>
    1e14:	a6 01       	movw	r20, r12
    1e16:	14 16       	cp	r1, r20
    1e18:	15 06       	cpc	r1, r21
    1e1a:	34 f4       	brge	.+12     	; 0x1e28 <qsort+0x2d4>
    1e1c:	69 81       	ldd	r22, Y+1	; 0x01
    1e1e:	7a 81       	ldd	r23, Y+2	; 0x02
    1e20:	64 1b       	sub	r22, r20
    1e22:	75 0b       	sbc	r23, r21
    1e24:	c7 01       	movw	r24, r14
    1e26:	54 de       	rcall	.-856    	; 0x1ad0 <swapfunc>
    1e28:	8f 81       	ldd	r24, Y+7	; 0x07
    1e2a:	98 85       	ldd	r25, Y+8	; 0x08
    1e2c:	84 15       	cp	r24, r4
    1e2e:	95 05       	cpc	r25, r5
    1e30:	48 f4       	brcc	.+18     	; 0x1e44 <qsort+0x2f0>
    1e32:	c2 01       	movw	r24, r4
    1e34:	6f 81       	ldd	r22, Y+7	; 0x07
    1e36:	78 85       	ldd	r23, Y+8	; 0x08
    1e38:	37 de       	rcall	.-914    	; 0x1aa8 <__udivmodhi4>
    1e3a:	95 01       	movw	r18, r10
    1e3c:	4f 81       	ldd	r20, Y+7	; 0x07
    1e3e:	58 85       	ldd	r21, Y+8	; 0x08
    1e40:	c8 01       	movw	r24, r16
    1e42:	88 de       	rcall	.-752    	; 0x1b54 <qsort>
    1e44:	ef 81       	ldd	r30, Y+7	; 0x07
    1e46:	f8 85       	ldd	r31, Y+8	; 0x08
    1e48:	ec 15       	cp	r30, r12
    1e4a:	fd 05       	cpc	r31, r13
    1e4c:	20 f5       	brcc	.+72     	; 0x1e96 <qsort+0x342>
    1e4e:	09 81       	ldd	r16, Y+1	; 0x01
    1e50:	1a 81       	ldd	r17, Y+2	; 0x02
    1e52:	0c 19       	sub	r16, r12
    1e54:	1d 09       	sbc	r17, r13
    1e56:	c6 01       	movw	r24, r12
    1e58:	bf 01       	movw	r22, r30
    1e5a:	26 de       	rcall	.-948    	; 0x1aa8 <__udivmodhi4>
    1e5c:	6b 01       	movw	r12, r22
    1e5e:	9b ce       	rjmp	.-714    	; 0x1b96 <qsort+0x42>
    1e60:	4b 81       	ldd	r20, Y+3	; 0x03
    1e62:	5c 81       	ldd	r21, Y+4	; 0x04
    1e64:	b4 01       	movw	r22, r8
    1e66:	c7 01       	movw	r24, r14
    1e68:	33 de       	rcall	.-922    	; 0x1ad0 <swapfunc>
    1e6a:	2f 81       	ldd	r18, Y+7	; 0x07
    1e6c:	38 85       	ldd	r19, Y+8	; 0x08
    1e6e:	e2 0e       	add	r14, r18
    1e70:	f3 1e       	adc	r15, r19
    1e72:	89 80       	ldd	r8, Y+1	; 0x01
    1e74:	9a 80       	ldd	r9, Y+2	; 0x02
    1e76:	21 e0       	ldi	r18, 0x01	; 1
    1e78:	30 e0       	ldi	r19, 0x00	; 0
    1e7a:	4e cf       	rjmp	.-356    	; 0x1d18 <qsort+0x1c4>
    1e7c:	4f 81       	ldd	r20, Y+7	; 0x07
    1e7e:	58 85       	ldd	r21, Y+8	; 0x08
    1e80:	c4 9e       	mul	r12, r20
    1e82:	c0 01       	movw	r24, r0
    1e84:	c5 9e       	mul	r12, r21
    1e86:	90 0d       	add	r25, r0
    1e88:	d4 9e       	mul	r13, r20
    1e8a:	90 0d       	add	r25, r0
    1e8c:	11 24       	eor	r1, r1
    1e8e:	23 2b       	or	r18, r19
    1e90:	09 f0       	breq	.+2      	; 0x1e94 <qsort+0x340>
    1e92:	9b cf       	rjmp	.-202    	; 0x1dca <qsort+0x276>
    1e94:	75 cf       	rjmp	.-278    	; 0x1d80 <qsort+0x22c>
    1e96:	28 96       	adiw	r28, 0x08	; 8
    1e98:	0f b6       	in	r0, 0x3f	; 63
    1e9a:	f8 94       	cli
    1e9c:	de bf       	out	0x3e, r29	; 62
    1e9e:	0f be       	out	0x3f, r0	; 63
    1ea0:	cd bf       	out	0x3d, r28	; 61
    1ea2:	df 91       	pop	r29
    1ea4:	cf 91       	pop	r28
    1ea6:	1f 91       	pop	r17
    1ea8:	0f 91       	pop	r16
    1eaa:	ff 90       	pop	r15
    1eac:	ef 90       	pop	r14
    1eae:	df 90       	pop	r13
    1eb0:	cf 90       	pop	r12
    1eb2:	bf 90       	pop	r11
    1eb4:	af 90       	pop	r10
    1eb6:	9f 90       	pop	r9
    1eb8:	8f 90       	pop	r8
    1eba:	7f 90       	pop	r7
    1ebc:	6f 90       	pop	r6
    1ebe:	5f 90       	pop	r5
    1ec0:	4f 90       	pop	r4
    1ec2:	3f 90       	pop	r3
    1ec4:	2f 90       	pop	r2
    1ec6:	08 95       	ret

00001ec8 <_exit>:
    1ec8:	f8 94       	cli

00001eca <__stop_program>:
    1eca:	ff cf       	rjmp	.-2      	; 0x1eca <__stop_program>
