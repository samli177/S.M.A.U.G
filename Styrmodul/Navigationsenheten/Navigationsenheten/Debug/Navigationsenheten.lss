
Navigationsenheten.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000021b8  00800100  00002156  000021ea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002156  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000066b  008022b8  008022b8  000043a2  2**0
                  ALLOC
  3 .stab         00002e68  00000000  00000000  000043a4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000d48  00000000  00000000  0000720c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00007f54  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000003d0  00000000  00000000  00007f83  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00003a54  00000000  00000000  00008353  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000105c  00000000  00000000  0000bda7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00002372  00000000  00000000  0000ce03  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000ba4  00000000  00000000  0000f178  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000c6a  00000000  00000000  0000fd1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000028e8  00000000  00000000  00010986  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000003c8  00000000  00000000  0001326e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	6b c0       	rjmp	.+214    	; 0xd8 <__ctors_end>
       2:	00 00       	nop
       4:	5d c4       	rjmp	.+2234   	; 0x8c0 <__vector_1>
       6:	00 00       	nop
       8:	85 c4       	rjmp	.+2314   	; 0x914 <__vector_2>
       a:	00 00       	nop
       c:	83 c0       	rjmp	.+262    	; 0x114 <__bad_interrupt>
       e:	00 00       	nop
      10:	81 c0       	rjmp	.+258    	; 0x114 <__bad_interrupt>
      12:	00 00       	nop
      14:	7f c0       	rjmp	.+254    	; 0x114 <__bad_interrupt>
      16:	00 00       	nop
      18:	7d c0       	rjmp	.+250    	; 0x114 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	7b c0       	rjmp	.+246    	; 0x114 <__bad_interrupt>
      1e:	00 00       	nop
      20:	79 c0       	rjmp	.+242    	; 0x114 <__bad_interrupt>
      22:	00 00       	nop
      24:	77 c0       	rjmp	.+238    	; 0x114 <__bad_interrupt>
      26:	00 00       	nop
      28:	75 c0       	rjmp	.+234    	; 0x114 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	73 c0       	rjmp	.+230    	; 0x114 <__bad_interrupt>
      2e:	00 00       	nop
      30:	71 c0       	rjmp	.+226    	; 0x114 <__bad_interrupt>
      32:	00 00       	nop
      34:	d7 c4       	rjmp	.+2478   	; 0x9e4 <__vector_13>
      36:	00 00       	nop
      38:	6d c0       	rjmp	.+218    	; 0x114 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	6b c0       	rjmp	.+214    	; 0x114 <__bad_interrupt>
      3e:	00 00       	nop
      40:	69 c0       	rjmp	.+210    	; 0x114 <__bad_interrupt>
      42:	00 00       	nop
      44:	67 c0       	rjmp	.+206    	; 0x114 <__bad_interrupt>
      46:	00 00       	nop
      48:	65 c0       	rjmp	.+202    	; 0x114 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	63 c0       	rjmp	.+198    	; 0x114 <__bad_interrupt>
      4e:	00 00       	nop
      50:	0c 94 37 0b 	jmp	0x166e	; 0x166e <__vector_20>
      54:	5f c0       	rjmp	.+190    	; 0x114 <__bad_interrupt>
      56:	00 00       	nop
      58:	5d c0       	rjmp	.+186    	; 0x114 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	5b c0       	rjmp	.+182    	; 0x114 <__bad_interrupt>
      5e:	00 00       	nop
      60:	59 c0       	rjmp	.+178    	; 0x114 <__bad_interrupt>
      62:	00 00       	nop
      64:	57 c0       	rjmp	.+174    	; 0x114 <__bad_interrupt>
      66:	00 00       	nop
      68:	26 c7       	rjmp	.+3660   	; 0xeb6 <__vector_26>
      6a:	00 00       	nop
      6c:	53 c0       	rjmp	.+166    	; 0x114 <__bad_interrupt>
      6e:	00 00       	nop
      70:	51 c0       	rjmp	.+162    	; 0x114 <__bad_interrupt>
      72:	00 00       	nop
      74:	4f c0       	rjmp	.+158    	; 0x114 <__bad_interrupt>
      76:	00 00       	nop
      78:	4d c0       	rjmp	.+154    	; 0x114 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	4b c0       	rjmp	.+150    	; 0x114 <__bad_interrupt>
      7e:	00 00       	nop
      80:	bf c4       	rjmp	.+2430   	; 0xa00 <__vector_32>
      82:	00 00       	nop
      84:	47 c0       	rjmp	.+142    	; 0x114 <__bad_interrupt>
      86:	00 00       	nop
      88:	45 c0       	rjmp	.+138    	; 0x114 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	08 4a       	sbci	r16, 0xA8	; 168
      8e:	d7 3b       	cpi	r29, 0xB7	; 183
      90:	3b ce       	rjmp	.-906    	; 0xfffffd08 <__eeprom_end+0xff7efd08>
      92:	01 6e       	ori	r16, 0xE1	; 225
      94:	84 bc       	out	0x24, r8	; 36
      96:	bf fd       	.word	0xfdbf	; ????
      98:	c1 2f       	mov	r28, r17
      9a:	3d 6c       	ori	r19, 0xCD	; 205
      9c:	74 31       	cpi	r23, 0x14	; 20
      9e:	9a bd       	out	0x2a, r25	; 42
      a0:	56 83       	std	Z+6, r21	; 0x06
      a2:	3d da       	rcall	.-2950   	; 0xfffff51e <__eeprom_end+0xff7ef51e>
      a4:	3d 00       	.word	0x003d	; ????
      a6:	c7 7f       	andi	r28, 0xF7	; 247
      a8:	11 be       	out	0x31, r1	; 49
      aa:	d9 e4       	ldi	r29, 0x49	; 73
      ac:	bb 4c       	sbci	r27, 0xCB	; 203
      ae:	3e 91       	ld	r19, -X
      b0:	6b aa       	std	Y+51, r6	; 0x33
      b2:	aa be       	out	0x3a, r10	; 58
      b4:	00 00       	nop
      b6:	00 80       	ld	r0, Z
      b8:	3f 05       	cpc	r19, r15
      ba:	a8 4c       	sbci	r26, 0xC8	; 200
      bc:	cd b2       	in	r12, 0x1d	; 29
      be:	d4 4e       	sbci	r29, 0xE4	; 228
      c0:	b9 38       	cpi	r27, 0x89	; 137
      c2:	36 a9       	ldd	r19, Z+54	; 0x36
      c4:	02 0c       	add	r0, r2
      c6:	50 b9       	out	0x00, r21	; 0
      c8:	91 86       	std	Z+9, r9	; 0x09
      ca:	88 08       	sbc	r8, r8
      cc:	3c a6       	std	Y+44, r3	; 0x2c
      ce:	aa aa       	std	Y+50, r10	; 0x32
      d0:	2a be       	out	0x3a, r2	; 58
      d2:	00 00       	nop
      d4:	00 80       	ld	r0, Z
      d6:	3f 00       	.word	0x003f	; ????

000000d8 <__ctors_end>:
      d8:	11 24       	eor	r1, r1
      da:	1f be       	out	0x3f, r1	; 63
      dc:	cf ef       	ldi	r28, 0xFF	; 255
      de:	d0 e4       	ldi	r29, 0x40	; 64
      e0:	de bf       	out	0x3e, r29	; 62
      e2:	cd bf       	out	0x3d, r28	; 61

000000e4 <__do_copy_data>:
      e4:	12 e2       	ldi	r17, 0x22	; 34
      e6:	a0 e0       	ldi	r26, 0x00	; 0
      e8:	b1 e0       	ldi	r27, 0x01	; 1
      ea:	e6 e5       	ldi	r30, 0x56	; 86
      ec:	f1 e2       	ldi	r31, 0x21	; 33
      ee:	00 e0       	ldi	r16, 0x00	; 0
      f0:	0b bf       	out	0x3b, r16	; 59
      f2:	02 c0       	rjmp	.+4      	; 0xf8 <__do_copy_data+0x14>
      f4:	07 90       	elpm	r0, Z+
      f6:	0d 92       	st	X+, r0
      f8:	a8 3b       	cpi	r26, 0xB8	; 184
      fa:	b1 07       	cpc	r27, r17
      fc:	d9 f7       	brne	.-10     	; 0xf4 <__do_copy_data+0x10>

000000fe <__do_clear_bss>:
      fe:	29 e2       	ldi	r18, 0x29	; 41
     100:	a8 eb       	ldi	r26, 0xB8	; 184
     102:	b2 e2       	ldi	r27, 0x22	; 34
     104:	01 c0       	rjmp	.+2      	; 0x108 <.do_clear_bss_start>

00000106 <.do_clear_bss_loop>:
     106:	1d 92       	st	X+, r1

00000108 <.do_clear_bss_start>:
     108:	a3 32       	cpi	r26, 0x23	; 35
     10a:	b2 07       	cpc	r27, r18
     10c:	e1 f7       	brne	.-8      	; 0x106 <.do_clear_bss_loop>
     10e:	2c d4       	rcall	.+2136   	; 0x968 <main>
     110:	0c 94 a9 10 	jmp	0x2152	; 0x2152 <_exit>

00000114 <__bad_interrupt>:
     114:	75 cf       	rjmp	.-278    	; 0x0 <__vectors>

00000116 <turn_around>:
	}
}

void turn_around()
{
	if(gStatus)
     116:	80 91 00 01 	lds	r24, 0x0100
     11a:	88 23       	and	r24, r24
     11c:	99 f0       	breq	.+38     	; 0x144 <turn_around+0x2e>
	{
		TWI_send_string(C_ADDRESS, "Starting to turn around.");
     11e:	67 e1       	ldi	r22, 0x17	; 23
     120:	71 e2       	ldi	r23, 0x21	; 33
     122:	80 e8       	ldi	r24, 0x80	; 128
     124:	81 d5       	rcall	.+2818   	; 0xc28 <TWI_send_string>
     126:	0e c0       	rjmp	.+28     	; 0x144 <turn_around+0x2e>
	{
		if(gStatus)
		{
			//TWI_send_string(C_ADDRESS, "Turning around.");
		}
		USART_send_command_parameters(0, MAX_ROTATION_COUNTER_CLOCKWISE, 0);
     128:	40 e0       	ldi	r20, 0x00	; 0
     12a:	6e e1       	ldi	r22, 0x1E	; 30
     12c:	80 e0       	ldi	r24, 0x00	; 0
     12e:	0e 94 c3 0b 	call	0x1786	; 0x1786 <USART_send_command_parameters>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     132:	2f ef       	ldi	r18, 0xFF	; 255
     134:	83 ed       	ldi	r24, 0xD3	; 211
     136:	90 e3       	ldi	r25, 0x30	; 48
     138:	21 50       	subi	r18, 0x01	; 1
     13a:	80 40       	sbci	r24, 0x00	; 0
     13c:	90 40       	sbci	r25, 0x00	; 0
     13e:	e1 f7       	brne	.-8      	; 0x138 <turn_around+0x22>
     140:	00 c0       	rjmp	.+0      	; 0x142 <turn_around+0x2c>
     142:	00 00       	nop
{
	if(gStatus)
	{
		TWI_send_string(C_ADDRESS, "Starting to turn around.");
	}
	while(navigation_get_sensor(4) < CORRIDOR_WIDTH)
     144:	84 e0       	ldi	r24, 0x04	; 4
     146:	90 e0       	ldi	r25, 0x00	; 0
     148:	50 d2       	rcall	.+1184   	; 0x5ea <navigation_get_sensor>
     14a:	80 35       	cpi	r24, 0x50	; 80
     14c:	68 f3       	brcs	.-38     	; 0x128 <turn_around+0x12>
			//TWI_send_string(C_ADDRESS, "Turning around.");
		}
		USART_send_command_parameters(0, MAX_ROTATION_COUNTER_CLOCKWISE, 0);
		_delay_ms(STEPPING_TIME);
	}
	if(gStatus)
     14e:	80 91 00 01 	lds	r24, 0x0100
     152:	88 23       	and	r24, r24
     154:	21 f0       	breq	.+8      	; 0x15e <turn_around+0x48>
	{
		TWI_send_string(C_ADDRESS, "Corridor ahead, done turning around.");
     156:	60 e3       	ldi	r22, 0x30	; 48
     158:	71 e2       	ldi	r23, 0x21	; 33
     15a:	80 e8       	ldi	r24, 0x80	; 128
     15c:	65 c5       	rjmp	.+2762   	; 0xc28 <TWI_send_string>
     15e:	08 95       	ret

00000160 <walk_forward>:
	}
}

void walk_forward()
{
     160:	8f 92       	push	r8
     162:	9f 92       	push	r9
     164:	af 92       	push	r10
     166:	bf 92       	push	r11
     168:	cf 92       	push	r12
     16a:	df 92       	push	r13
     16c:	ef 92       	push	r14
     16e:	ff 92       	push	r15
     170:	cf 93       	push	r28
     172:	df 93       	push	r29
	if(gStatus)
	{
		//TWI_send_string(C_ADDRESS, "Finding regulation parameters.");
	}
	float angleOffset = navigation_angle_offset();
     174:	40 d3       	rcall	.+1664   	; 0x7f6 <navigation_angle_offset>
     176:	4b 01       	movw	r8, r22
     178:	5c 01       	movw	r10, r24
	float directionCompensationAngle = navigation_direction_regulation(angleOffset);
     17a:	63 d2       	rcall	.+1222   	; 0x642 <navigation_direction_regulation>
     17c:	6b 01       	movw	r12, r22
     17e:	7c 01       	movw	r14, r24
	if(gStatus)
	{
		//TWI_send_string(C_ADDRESS, "Found regulation parameters.");
	}
	int adjustmentRotation = (50 + 50 * angleOffset * (2.0/PI + fabs(directionCompensationAngle)));
     180:	20 e0       	ldi	r18, 0x00	; 0
     182:	30 e0       	ldi	r19, 0x00	; 0
     184:	48 e4       	ldi	r20, 0x48	; 72
     186:	52 e4       	ldi	r21, 0x42	; 66
     188:	c5 01       	movw	r24, r10
     18a:	b4 01       	movw	r22, r8
     18c:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <__mulsf3>
     190:	4b 01       	movw	r8, r22
     192:	5c 01       	movw	r10, r24
     194:	c7 01       	movw	r24, r14
     196:	b6 01       	movw	r22, r12
     198:	9f 77       	andi	r25, 0x7F	; 127
     19a:	23 e8       	ldi	r18, 0x83	; 131
     19c:	39 ef       	ldi	r19, 0xF9	; 249
     19e:	42 e2       	ldi	r20, 0x22	; 34
     1a0:	5f e3       	ldi	r21, 0x3F	; 63
     1a2:	0e 94 cd 0b 	call	0x179a	; 0x179a <__addsf3>
     1a6:	9b 01       	movw	r18, r22
     1a8:	ac 01       	movw	r20, r24
     1aa:	c5 01       	movw	r24, r10
     1ac:	b4 01       	movw	r22, r8
     1ae:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <__mulsf3>
     1b2:	20 e0       	ldi	r18, 0x00	; 0
     1b4:	30 e0       	ldi	r19, 0x00	; 0
     1b6:	48 e4       	ldi	r20, 0x48	; 72
     1b8:	52 e4       	ldi	r21, 0x42	; 66
     1ba:	0e 94 cd 0b 	call	0x179a	; 0x179a <__addsf3>
     1be:	0e 94 c8 0c 	call	0x1990	; 0x1990 <__fixsfsi>
	if (adjustmentRotation >= 100)
     1c2:	64 36       	cpi	r22, 0x64	; 100
     1c4:	71 05       	cpc	r23, r1
     1c6:	34 f4       	brge	.+12     	; 0x1d4 <walk_forward+0x74>
     1c8:	eb 01       	movw	r28, r22
     1ca:	dd 23       	and	r29, r29
     1cc:	2c f4       	brge	.+10     	; 0x1d8 <walk_forward+0x78>
     1ce:	c0 e0       	ldi	r28, 0x00	; 0
     1d0:	d0 e0       	ldi	r29, 0x00	; 0
     1d2:	02 c0       	rjmp	.+4      	; 0x1d8 <walk_forward+0x78>
	{
		adjustmentRotation = 100;
     1d4:	c4 e6       	ldi	r28, 0x64	; 100
     1d6:	d0 e0       	ldi	r29, 0x00	; 0
	}
	else if(adjustmentRotation <= 0)
	{
		adjustmentRotation = 0;
	}
	int adjustmentDirection = 90 * directionCompensationAngle/(2*PI);
     1d8:	20 e0       	ldi	r18, 0x00	; 0
     1da:	30 e0       	ldi	r19, 0x00	; 0
     1dc:	44 eb       	ldi	r20, 0xB4	; 180
     1de:	52 e4       	ldi	r21, 0x42	; 66
     1e0:	c7 01       	movw	r24, r14
     1e2:	b6 01       	movw	r22, r12
     1e4:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <__mulsf3>
     1e8:	2b ed       	ldi	r18, 0xDB	; 219
     1ea:	3f e0       	ldi	r19, 0x0F	; 15
     1ec:	49 ec       	ldi	r20, 0xC9	; 201
     1ee:	50 e4       	ldi	r21, 0x40	; 64
     1f0:	0e 94 60 0c 	call	0x18c0	; 0x18c0 <__divsf3>
     1f4:	0e 94 c8 0c 	call	0x1990	; 0x1990 <__fixsfsi>
     1f8:	26 2f       	mov	r18, r22
	if(gStatus)
	{
		//TWI_send_string(C_ADDRESS, "Taking a step.");
	}
	USART_send_command_parameters((uint8_t)adjustmentDirection, (uint8_t)adjustmentRotation, gSpeed);
     1fa:	40 91 01 01 	lds	r20, 0x0101
     1fe:	6c 2f       	mov	r22, r28
     200:	82 2f       	mov	r24, r18
     202:	0e 94 c3 0b 	call	0x1786	; 0x1786 <USART_send_command_parameters>
     206:	2f ef       	ldi	r18, 0xFF	; 255
     208:	89 e6       	ldi	r24, 0x69	; 105
     20a:	98 e1       	ldi	r25, 0x18	; 24
     20c:	21 50       	subi	r18, 0x01	; 1
     20e:	80 40       	sbci	r24, 0x00	; 0
     210:	90 40       	sbci	r25, 0x00	; 0
     212:	e1 f7       	brne	.-8      	; 0x20c <walk_forward+0xac>
     214:	00 c0       	rjmp	.+0      	; 0x216 <walk_forward+0xb6>
     216:	00 00       	nop
	//TWI_send_float(C_ADDRESS, adjustmentDirection);
	_delay_ms(STEPPING_TIME / 2);
	TWI_send_float(C_ADDRESS, adjustmentRotation);
     218:	be 01       	movw	r22, r28
     21a:	88 27       	eor	r24, r24
     21c:	77 fd       	sbrc	r23, 7
     21e:	80 95       	com	r24
     220:	98 2f       	mov	r25, r24
     222:	0e 94 fb 0c 	call	0x19f6	; 0x19f6 <__floatsisf>
     226:	ab 01       	movw	r20, r22
     228:	bc 01       	movw	r22, r24
     22a:	80 e8       	ldi	r24, 0x80	; 128
     22c:	81 d5       	rcall	.+2818   	; 0xd30 <TWI_send_float>
     22e:	2f ef       	ldi	r18, 0xFF	; 255
     230:	89 e6       	ldi	r24, 0x69	; 105
     232:	98 e1       	ldi	r25, 0x18	; 24
     234:	21 50       	subi	r18, 0x01	; 1
     236:	80 40       	sbci	r24, 0x00	; 0
     238:	90 40       	sbci	r25, 0x00	; 0
     23a:	e1 f7       	brne	.-8      	; 0x234 <walk_forward+0xd4>
     23c:	00 c0       	rjmp	.+0      	; 0x23e <walk_forward+0xde>
     23e:	00 00       	nop
	_delay_ms(STEPPING_TIME / 2);
}
     240:	df 91       	pop	r29
     242:	cf 91       	pop	r28
     244:	ff 90       	pop	r15
     246:	ef 90       	pop	r14
     248:	df 90       	pop	r13
     24a:	cf 90       	pop	r12
     24c:	bf 90       	pop	r11
     24e:	af 90       	pop	r10
     250:	9f 90       	pop	r9
     252:	8f 90       	pop	r8
     254:	08 95       	ret

00000256 <turn_right>:
	}
}

void turn_right()
{
	if(gStatus)
     256:	80 91 00 01 	lds	r24, 0x0100
     25a:	88 23       	and	r24, r24
     25c:	21 f0       	breq	.+8      	; 0x266 <turn_right+0x10>
	{
		TWI_send_string(C_ADDRESS, "Starting turning right.");
     25e:	65 e5       	ldi	r22, 0x55	; 85
     260:	71 e2       	ldi	r23, 0x21	; 33
     262:	80 e8       	ldi	r24, 0x80	; 128
     264:	e1 d4       	rcall	.+2498   	; 0xc28 <TWI_send_string>
	}
	walk_forward();
     266:	7c df       	rcall	.-264    	; 0x160 <walk_forward>
     268:	2f ef       	ldi	r18, 0xFF	; 255
     26a:	83 ed       	ldi	r24, 0xD3	; 211
     26c:	90 e3       	ldi	r25, 0x30	; 48
     26e:	21 50       	subi	r18, 0x01	; 1
     270:	80 40       	sbci	r24, 0x00	; 0
     272:	90 40       	sbci	r25, 0x00	; 0
     274:	e1 f7       	brne	.-8      	; 0x26e <turn_right+0x18>
     276:	00 c0       	rjmp	.+0      	; 0x278 <turn_right+0x22>
     278:	00 00       	nop
     27a:	0e c0       	rjmp	.+28     	; 0x298 <turn_right+0x42>
	{
		if(gStatus)
		{
			//TWI_send_string(C_ADDRESS, "Rotating right.");
		}
		USART_send_command_parameters(0, MAX_ROTATION_CLOCKWISE, 0);
     27c:	40 e0       	ldi	r20, 0x00	; 0
     27e:	66 e4       	ldi	r22, 0x46	; 70
     280:	80 e0       	ldi	r24, 0x00	; 0
     282:	0e 94 c3 0b 	call	0x1786	; 0x1786 <USART_send_command_parameters>
     286:	2f ef       	ldi	r18, 0xFF	; 255
     288:	83 ed       	ldi	r24, 0xD3	; 211
     28a:	90 e3       	ldi	r25, 0x30	; 48
     28c:	21 50       	subi	r18, 0x01	; 1
     28e:	80 40       	sbci	r24, 0x00	; 0
     290:	90 40       	sbci	r25, 0x00	; 0
     292:	e1 f7       	brne	.-8      	; 0x28c <turn_right+0x36>
     294:	00 c0       	rjmp	.+0      	; 0x296 <turn_right+0x40>
     296:	00 00       	nop
	{
		TWI_send_string(C_ADDRESS, "Starting turning right.");
	}
	walk_forward();
	_delay_ms(STEPPING_TIME);
	while(navigation_get_sensor(4) < (CORRIDOR_WIDTH - 20) || (navigation_get_sensor(4) > (CORRIDOR_WIDTH - 20) && navigation_get_sensor(5) > (CORRIDOR_WIDTH / 2)))
     298:	84 e0       	ldi	r24, 0x04	; 4
     29a:	90 e0       	ldi	r25, 0x00	; 0
     29c:	a6 d1       	rcall	.+844    	; 0x5ea <navigation_get_sensor>
     29e:	8c 33       	cpi	r24, 0x3C	; 60
     2a0:	68 f3       	brcs	.-38     	; 0x27c <turn_right+0x26>
     2a2:	84 e0       	ldi	r24, 0x04	; 4
     2a4:	90 e0       	ldi	r25, 0x00	; 0
     2a6:	a1 d1       	rcall	.+834    	; 0x5ea <navigation_get_sensor>
     2a8:	8d 33       	cpi	r24, 0x3D	; 61
     2aa:	50 f0       	brcs	.+20     	; 0x2c0 <turn_right+0x6a>
     2ac:	85 e0       	ldi	r24, 0x05	; 5
     2ae:	90 e0       	ldi	r25, 0x00	; 0
     2b0:	9c d1       	rcall	.+824    	; 0x5ea <navigation_get_sensor>
     2b2:	89 32       	cpi	r24, 0x29	; 41
     2b4:	18 f7       	brcc	.-58     	; 0x27c <turn_right+0x26>
     2b6:	04 c0       	rjmp	.+8      	; 0x2c0 <turn_right+0x6a>
	{
		walk_forward();
	}
	if(gStatus)
	{
		TWI_send_string(C_ADDRESS, "Done turning right.");
     2b8:	6d e6       	ldi	r22, 0x6D	; 109
     2ba:	71 e2       	ldi	r23, 0x21	; 33
     2bc:	80 e8       	ldi	r24, 0x80	; 128
     2be:	b4 c4       	rjmp	.+2408   	; 0xc28 <TWI_send_string>
		USART_send_command_parameters(0, MAX_ROTATION_CLOCKWISE, 0);
		_delay_ms(STEPPING_TIME);
	}
	for(int i = 0; i < 5; ++i)
	{
		walk_forward();
     2c0:	4f df       	rcall	.-354    	; 0x160 <walk_forward>
     2c2:	4e df       	rcall	.-356    	; 0x160 <walk_forward>
     2c4:	4d df       	rcall	.-358    	; 0x160 <walk_forward>
     2c6:	4c df       	rcall	.-360    	; 0x160 <walk_forward>
     2c8:	4b df       	rcall	.-362    	; 0x160 <walk_forward>
	}
	if(gStatus)
     2ca:	80 91 00 01 	lds	r24, 0x0100
     2ce:	81 11       	cpse	r24, r1
     2d0:	f3 cf       	rjmp	.-26     	; 0x2b8 <turn_right+0x62>
     2d2:	08 95       	ret

000002d4 <turn_left>:
	return gStatus;
}

void turn_left()
{
	if(gStatus)
     2d4:	80 91 00 01 	lds	r24, 0x0100
     2d8:	88 23       	and	r24, r24
     2da:	21 f0       	breq	.+8      	; 0x2e4 <turn_left+0x10>
	{
		TWI_send_string(C_ADDRESS, "Starting turning left.");
     2dc:	61 e8       	ldi	r22, 0x81	; 129
     2de:	71 e2       	ldi	r23, 0x21	; 33
     2e0:	80 e8       	ldi	r24, 0x80	; 128
     2e2:	a2 d4       	rcall	.+2372   	; 0xc28 <TWI_send_string>
	}
	walk_forward();
     2e4:	3d df       	rcall	.-390    	; 0x160 <walk_forward>
     2e6:	2f ef       	ldi	r18, 0xFF	; 255
     2e8:	83 ed       	ldi	r24, 0xD3	; 211
     2ea:	90 e3       	ldi	r25, 0x30	; 48
     2ec:	21 50       	subi	r18, 0x01	; 1
     2ee:	80 40       	sbci	r24, 0x00	; 0
     2f0:	90 40       	sbci	r25, 0x00	; 0
     2f2:	e1 f7       	brne	.-8      	; 0x2ec <turn_left+0x18>
     2f4:	00 c0       	rjmp	.+0      	; 0x2f6 <turn_left+0x22>
     2f6:	00 00       	nop
     2f8:	0e c0       	rjmp	.+28     	; 0x316 <turn_left+0x42>
	{
		if(gStatus)
		{
			//TWI_send_string(C_ADDRESS, "Rotating left.");
		}
		USART_send_command_parameters(0, MAX_ROTATION_COUNTER_CLOCKWISE, 0);
     2fa:	40 e0       	ldi	r20, 0x00	; 0
     2fc:	6e e1       	ldi	r22, 0x1E	; 30
     2fe:	80 e0       	ldi	r24, 0x00	; 0
     300:	0e 94 c3 0b 	call	0x1786	; 0x1786 <USART_send_command_parameters>
     304:	2f ef       	ldi	r18, 0xFF	; 255
     306:	83 ed       	ldi	r24, 0xD3	; 211
     308:	90 e3       	ldi	r25, 0x30	; 48
     30a:	21 50       	subi	r18, 0x01	; 1
     30c:	80 40       	sbci	r24, 0x00	; 0
     30e:	90 40       	sbci	r25, 0x00	; 0
     310:	e1 f7       	brne	.-8      	; 0x30a <turn_left+0x36>
     312:	00 c0       	rjmp	.+0      	; 0x314 <turn_left+0x40>
     314:	00 00       	nop
	{
		TWI_send_string(C_ADDRESS, "Starting turning left.");
	}
	walk_forward();
	_delay_ms(STEPPING_TIME);
	while(navigation_get_sensor(4) < (CORRIDOR_WIDTH - 20) || (navigation_get_sensor(4) > (CORRIDOR_WIDTH - 20) && navigation_get_sensor(5) > (CORRIDOR_WIDTH / 2)))
     316:	84 e0       	ldi	r24, 0x04	; 4
     318:	90 e0       	ldi	r25, 0x00	; 0
     31a:	67 d1       	rcall	.+718    	; 0x5ea <navigation_get_sensor>
     31c:	8c 33       	cpi	r24, 0x3C	; 60
     31e:	68 f3       	brcs	.-38     	; 0x2fa <turn_left+0x26>
     320:	84 e0       	ldi	r24, 0x04	; 4
     322:	90 e0       	ldi	r25, 0x00	; 0
     324:	62 d1       	rcall	.+708    	; 0x5ea <navigation_get_sensor>
     326:	8d 33       	cpi	r24, 0x3D	; 61
     328:	50 f0       	brcs	.+20     	; 0x33e <turn_left+0x6a>
     32a:	85 e0       	ldi	r24, 0x05	; 5
     32c:	90 e0       	ldi	r25, 0x00	; 0
     32e:	5d d1       	rcall	.+698    	; 0x5ea <navigation_get_sensor>
     330:	89 32       	cpi	r24, 0x29	; 41
     332:	18 f7       	brcc	.-58     	; 0x2fa <turn_left+0x26>
     334:	04 c0       	rjmp	.+8      	; 0x33e <turn_left+0x6a>
	{
		walk_forward();
	}
	if(gStatus)
	{
		TWI_send_string(C_ADDRESS, "Done turning left.");
     336:	68 e9       	ldi	r22, 0x98	; 152
     338:	71 e2       	ldi	r23, 0x21	; 33
     33a:	80 e8       	ldi	r24, 0x80	; 128
     33c:	75 c4       	rjmp	.+2282   	; 0xc28 <TWI_send_string>
		USART_send_command_parameters(0, MAX_ROTATION_COUNTER_CLOCKWISE, 0);
		_delay_ms(STEPPING_TIME);
	}
	for(int i = 0; i < 5; ++i)
	{
		walk_forward();
     33e:	10 df       	rcall	.-480    	; 0x160 <walk_forward>
     340:	0f df       	rcall	.-482    	; 0x160 <walk_forward>
     342:	0e df       	rcall	.-484    	; 0x160 <walk_forward>
     344:	0d df       	rcall	.-486    	; 0x160 <walk_forward>
     346:	0c df       	rcall	.-488    	; 0x160 <walk_forward>
	}
	if(gStatus)
     348:	80 91 00 01 	lds	r24, 0x0100
     34c:	81 11       	cpse	r24, r1
     34e:	f3 cf       	rjmp	.-26     	; 0x336 <turn_left+0x62>
     350:	08 95       	ret

00000352 <autonomouswalk_walk>:
	_delay_ms(STEPPING_TIME / 2);
}

void autonomouswalk_walk()
{
	if(navigation_left_algorithm())
     352:	cb d0       	rcall	.+406    	; 0x4ea <navigation_left_algorithm>
     354:	88 23       	and	r24, r24
     356:	79 f0       	breq	.+30     	; 0x376 <autonomouswalk_walk+0x24>
	{
		if(navigation_check_left_turn() == 2)
     358:	5f d1       	rcall	.+702    	; 0x618 <navigation_check_left_turn>
     35a:	82 30       	cpi	r24, 0x02	; 2
     35c:	09 f4       	brne	.+2      	; 0x360 <autonomouswalk_walk+0xe>
		{
			turn_left();
     35e:	ba cf       	rjmp	.-140    	; 0x2d4 <turn_left>
		}
		else if(navigation_get_sensor(4) > CORRIDOR_WIDTH / 2 - 10)
     360:	84 e0       	ldi	r24, 0x04	; 4
     362:	90 e0       	ldi	r25, 0x00	; 0
     364:	42 d1       	rcall	.+644    	; 0x5ea <navigation_get_sensor>
     366:	8f 31       	cpi	r24, 0x1F	; 31
     368:	08 f0       	brcs	.+2      	; 0x36c <autonomouswalk_walk+0x1a>
		{
			walk_forward();
     36a:	fa ce       	rjmp	.-524    	; 0x160 <walk_forward>
		}
		else if(navigation_check_right_turn() == 2)
     36c:	40 d1       	rcall	.+640    	; 0x5ee <navigation_check_right_turn>
     36e:	82 30       	cpi	r24, 0x02	; 2
     370:	09 f4       	brne	.+2      	; 0x374 <autonomouswalk_walk+0x22>
		{
			turn_right();
     372:	71 cf       	rjmp	.-286    	; 0x256 <turn_right>
		}
		else
		{
			turn_around();
     374:	d0 ce       	rjmp	.-608    	; 0x116 <turn_around>
		}
	}
	else
	{
		if(navigation_check_right_turn() == 2)
     376:	3b d1       	rcall	.+630    	; 0x5ee <navigation_check_right_turn>
     378:	82 30       	cpi	r24, 0x02	; 2
     37a:	09 f4       	brne	.+2      	; 0x37e <autonomouswalk_walk+0x2c>
		{
			turn_right();
     37c:	6c cf       	rjmp	.-296    	; 0x256 <turn_right>
		}
		else if(navigation_get_sensor(4) > CORRIDOR_WIDTH / 2 - 10)
     37e:	84 e0       	ldi	r24, 0x04	; 4
     380:	90 e0       	ldi	r25, 0x00	; 0
     382:	33 d1       	rcall	.+614    	; 0x5ea <navigation_get_sensor>
     384:	8f 31       	cpi	r24, 0x1F	; 31
     386:	08 f0       	brcs	.+2      	; 0x38a <autonomouswalk_walk+0x38>
		{
			walk_forward();
     388:	eb ce       	rjmp	.-554    	; 0x160 <walk_forward>
		}
		else if(navigation_check_left_turn() == 2)
     38a:	46 d1       	rcall	.+652    	; 0x618 <navigation_check_left_turn>
     38c:	82 30       	cpi	r24, 0x02	; 2
     38e:	09 f4       	brne	.+2      	; 0x392 <autonomouswalk_walk+0x40>
		{
			turn_left();
     390:	a1 cf       	rjmp	.-190    	; 0x2d4 <turn_left>
		}
		else
		{
			turn_around();
     392:	c1 ce       	rjmp	.-638    	; 0x116 <turn_around>

00000394 <set_counter_1>:
	TCNT3 = 0;
}

void set_counter_1(uint16_t delay)
{
	delay = 15.625 * delay;
     394:	bc 01       	movw	r22, r24
     396:	80 e0       	ldi	r24, 0x00	; 0
     398:	90 e0       	ldi	r25, 0x00	; 0
     39a:	0e 94 f9 0c 	call	0x19f2	; 0x19f2 <__floatunsisf>
     39e:	20 e0       	ldi	r18, 0x00	; 0
     3a0:	30 e0       	ldi	r19, 0x00	; 0
     3a2:	4a e7       	ldi	r20, 0x7A	; 122
     3a4:	51 e4       	ldi	r21, 0x41	; 65
     3a6:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <__mulsf3>
     3aa:	0e 94 cd 0c 	call	0x199a	; 0x199a <__fixunssfsi>
	OCR1A = delay;
     3ae:	70 93 89 00 	sts	0x0089, r23
     3b2:	60 93 88 00 	sts	0x0088, r22
     3b6:	08 95       	ret

000003b8 <set_counter_2>:
}

void set_counter_2(uint16_t delay)
{
	delay = 15.625 * delay;
     3b8:	bc 01       	movw	r22, r24
     3ba:	80 e0       	ldi	r24, 0x00	; 0
     3bc:	90 e0       	ldi	r25, 0x00	; 0
     3be:	0e 94 f9 0c 	call	0x19f2	; 0x19f2 <__floatunsisf>
     3c2:	20 e0       	ldi	r18, 0x00	; 0
     3c4:	30 e0       	ldi	r19, 0x00	; 0
     3c6:	4a e7       	ldi	r20, 0x7A	; 122
     3c8:	51 e4       	ldi	r21, 0x41	; 65
     3ca:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <__mulsf3>
     3ce:	0e 94 cd 0c 	call	0x199a	; 0x199a <__fixunssfsi>
	OCR3A = delay;
     3d2:	70 93 99 00 	sts	0x0099, r23
     3d6:	60 93 98 00 	sts	0x0098, r22
     3da:	08 95       	ret

000003dc <init_counters>:

//---------------------------------------COUNTERS/TIMERS-----------
void init_counters()
{
	// WGMn3:0 = 4 (OCRnA) or 12 (OCRn), where top value is read from.
	TCCR1B |= 0b00000101; // clock 1, prescaler 1024
     3dc:	e1 e8       	ldi	r30, 0x81	; 129
     3de:	f0 e0       	ldi	r31, 0x00	; 0
     3e0:	80 81       	ld	r24, Z
     3e2:	85 60       	ori	r24, 0x05	; 5
     3e4:	80 83       	st	Z, r24
	TCCR3B |= 0b00000101; // clock 2, prescaler 1024
     3e6:	e1 e9       	ldi	r30, 0x91	; 145
     3e8:	f0 e0       	ldi	r31, 0x00	; 0
     3ea:	80 81       	ld	r24, Z
     3ec:	85 60       	ori	r24, 0x05	; 5
     3ee:	80 83       	st	Z, r24
	
	// standardvalue for interrupt is 1000ms
	set_counter_1(1000);
     3f0:	88 ee       	ldi	r24, 0xE8	; 232
     3f2:	93 e0       	ldi	r25, 0x03	; 3
     3f4:	cf df       	rcall	.-98     	; 0x394 <set_counter_1>
	set_counter_2(1000);
     3f6:	88 ee       	ldi	r24, 0xE8	; 232
     3f8:	93 e0       	ldi	r25, 0x03	; 3
     3fa:	de df       	rcall	.-68     	; 0x3b8 <set_counter_2>
	
	TIMSK1 |= 0b00000010; // Enable interrupts when OCF1A, in TIFR1, is set.
     3fc:	ef e6       	ldi	r30, 0x6F	; 111
     3fe:	f0 e0       	ldi	r31, 0x00	; 0
     400:	80 81       	ld	r24, Z
     402:	82 60       	ori	r24, 0x02	; 2
     404:	80 83       	st	Z, r24
	TIMSK3 |= 0b00000010; // Enable interrupts when OCF2A, in TIFR2, is set.
     406:	e1 e7       	ldi	r30, 0x71	; 113
     408:	f0 e0       	ldi	r31, 0x00	; 0
     40a:	80 81       	ld	r24, Z
     40c:	82 60       	ori	r24, 0x02	; 2
     40e:	80 83       	st	Z, r24
	// OCF1A (or ICFn) Flag, in TIFR1, can be used to generate interrupts.
	TCNT1 = 0;
     410:	10 92 85 00 	sts	0x0085, r1
     414:	10 92 84 00 	sts	0x0084, r1
	TCNT3 = 0;
     418:	10 92 95 00 	sts	0x0095, r1
     41c:	10 92 94 00 	sts	0x0094, r1
     420:	08 95       	ret

00000422 <FifoDataLength>:
     422:	fc 01       	movw	r30, r24
     424:	90 81       	ld	r25, Z
     426:	91 50       	subi	r25, 0x01	; 1
     428:	84 81       	ldd	r24, Z+4	; 0x04
     42a:	22 81       	ldd	r18, Z+2	; 0x02
     42c:	82 1b       	sub	r24, r18
     42e:	89 23       	and	r24, r25
     430:	08 95       	ret

00000432 <FifoWrite>:
     432:	1f 93       	push	r17
     434:	cf 93       	push	r28
     436:	df 93       	push	r29
     438:	ec 01       	movw	r28, r24
     43a:	16 2f       	mov	r17, r22
     43c:	f2 df       	rcall	.-28     	; 0x422 <FifoDataLength>
     43e:	28 81       	ld	r18, Y
     440:	39 81       	ldd	r19, Y+1	; 0x01
     442:	21 50       	subi	r18, 0x01	; 1
     444:	31 09       	sbc	r19, r1
     446:	90 e0       	ldi	r25, 0x00	; 0
     448:	82 17       	cp	r24, r18
     44a:	93 07       	cpc	r25, r19
     44c:	69 f0       	breq	.+26     	; 0x468 <FifoWrite+0x36>
     44e:	8c 81       	ldd	r24, Y+4	; 0x04
     450:	9d 81       	ldd	r25, Y+5	; 0x05
     452:	fe 01       	movw	r30, r28
     454:	e8 0f       	add	r30, r24
     456:	f9 1f       	adc	r31, r25
     458:	16 83       	std	Z+6, r17	; 0x06
     45a:	01 96       	adiw	r24, 0x01	; 1
     45c:	28 23       	and	r18, r24
     45e:	39 23       	and	r19, r25
     460:	3d 83       	std	Y+5, r19	; 0x05
     462:	2c 83       	std	Y+4, r18	; 0x04
     464:	80 e0       	ldi	r24, 0x00	; 0
     466:	01 c0       	rjmp	.+2      	; 0x46a <FifoWrite+0x38>
     468:	81 e0       	ldi	r24, 0x01	; 1
     46a:	df 91       	pop	r29
     46c:	cf 91       	pop	r28
     46e:	1f 91       	pop	r17
     470:	08 95       	ret

00000472 <FifoRead>:
     472:	0f 93       	push	r16
     474:	1f 93       	push	r17
     476:	cf 93       	push	r28
     478:	df 93       	push	r29
     47a:	ec 01       	movw	r28, r24
     47c:	8b 01       	movw	r16, r22
     47e:	d1 df       	rcall	.-94     	; 0x422 <FifoDataLength>
     480:	88 23       	and	r24, r24
     482:	a1 f0       	breq	.+40     	; 0x4ac <FifoRead+0x3a>
     484:	ea 81       	ldd	r30, Y+2	; 0x02
     486:	fb 81       	ldd	r31, Y+3	; 0x03
     488:	ec 0f       	add	r30, r28
     48a:	fd 1f       	adc	r31, r29
     48c:	86 81       	ldd	r24, Z+6	; 0x06
     48e:	f8 01       	movw	r30, r16
     490:	80 83       	st	Z, r24
     492:	28 81       	ld	r18, Y
     494:	39 81       	ldd	r19, Y+1	; 0x01
     496:	21 50       	subi	r18, 0x01	; 1
     498:	31 09       	sbc	r19, r1
     49a:	8a 81       	ldd	r24, Y+2	; 0x02
     49c:	9b 81       	ldd	r25, Y+3	; 0x03
     49e:	01 96       	adiw	r24, 0x01	; 1
     4a0:	82 23       	and	r24, r18
     4a2:	93 23       	and	r25, r19
     4a4:	9b 83       	std	Y+3, r25	; 0x03
     4a6:	8a 83       	std	Y+2, r24	; 0x02
     4a8:	80 e0       	ldi	r24, 0x00	; 0
     4aa:	01 c0       	rjmp	.+2      	; 0x4ae <FifoRead+0x3c>
     4ac:	81 e0       	ldi	r24, 0x01	; 1
     4ae:	df 91       	pop	r29
     4b0:	cf 91       	pop	r28
     4b2:	1f 91       	pop	r17
     4b4:	0f 91       	pop	r16
     4b6:	08 95       	ret

000004b8 <compare>:
	}
	else
	{
		return 0;
	}
}
     4b8:	fc 01       	movw	r30, r24
     4ba:	20 81       	ld	r18, Z
     4bc:	30 e0       	ldi	r19, 0x00	; 0
     4be:	fb 01       	movw	r30, r22
     4c0:	80 81       	ld	r24, Z
     4c2:	28 1b       	sub	r18, r24
     4c4:	31 09       	sbc	r19, r1
     4c6:	82 2f       	mov	r24, r18
     4c8:	93 2f       	mov	r25, r19
     4ca:	08 95       	ret

000004cc <navigation_set_Kp>:
     4cc:	68 2f       	mov	r22, r24
     4ce:	70 e0       	ldi	r23, 0x00	; 0
     4d0:	80 e0       	ldi	r24, 0x00	; 0
     4d2:	90 e0       	ldi	r25, 0x00	; 0
     4d4:	0e 94 f9 0c 	call	0x19f2	; 0x19f2 <__floatunsisf>
     4d8:	60 93 02 01 	sts	0x0102, r22
     4dc:	70 93 03 01 	sts	0x0103, r23
     4e0:	80 93 04 01 	sts	0x0104, r24
     4e4:	90 93 05 01 	sts	0x0105, r25
     4e8:	08 95       	ret

000004ea <navigation_left_algorithm>:
     4ea:	80 91 06 01 	lds	r24, 0x0106
     4ee:	08 95       	ret

000004f0 <navigation_set_algorithm>:
     4f0:	80 93 06 01 	sts	0x0106, r24
     4f4:	08 95       	ret

000004f6 <navigation_autonomous_walk>:
     4f6:	80 91 b9 22 	lds	r24, 0x22B9
     4fa:	08 95       	ret

000004fc <navigation_set_autonomous_walk>:
     4fc:	80 93 b9 22 	sts	0x22B9, r24
     500:	08 95       	ret

00000502 <navigation_fill_buffer>:
     502:	cf 92       	push	r12
     504:	df 92       	push	r13
     506:	ef 92       	push	r14
     508:	ff 92       	push	r15
     50a:	0f 93       	push	r16
     50c:	1f 93       	push	r17
     50e:	cf 93       	push	r28
     510:	df 93       	push	r29
     512:	00 d0       	rcall	.+0      	; 0x514 <navigation_fill_buffer+0x12>
     514:	00 d0       	rcall	.+0      	; 0x516 <navigation_fill_buffer+0x14>
     516:	1f 92       	push	r1
     518:	cd b7       	in	r28, 0x3d	; 61
     51a:	de b7       	in	r29, 0x3e	; 62
     51c:	00 e0       	ldi	r16, 0x00	; 0
     51e:	10 e0       	ldi	r17, 0x00	; 0
     520:	e0 90 b8 22 	lds	r14, 0x22B8
     524:	f1 2c       	mov	r15, r1
     526:	c8 01       	movw	r24, r16
     528:	50 d4       	rcall	.+2208   	; 0xdca <TWI_get_sensor>
     52a:	f8 01       	movw	r30, r16
     52c:	ee 0f       	add	r30, r30
     52e:	ff 1f       	adc	r31, r31
     530:	ee 0f       	add	r30, r30
     532:	ff 1f       	adc	r31, r31
     534:	e0 0f       	add	r30, r16
     536:	f1 1f       	adc	r31, r17
     538:	ee 0d       	add	r30, r14
     53a:	ff 1d       	adc	r31, r15
     53c:	e4 53       	subi	r30, 0x34	; 52
     53e:	fd 4d       	sbci	r31, 0xDD	; 221
     540:	80 83       	st	Z, r24
     542:	0f 5f       	subi	r16, 0xFF	; 255
     544:	1f 4f       	sbci	r17, 0xFF	; 255
     546:	08 30       	cpi	r16, 0x08	; 8
     548:	11 05       	cpc	r17, r1
     54a:	51 f7       	brne	.-44     	; 0x520 <navigation_fill_buffer+0x1e>
     54c:	80 91 b8 22 	lds	r24, 0x22B8
     550:	84 30       	cpi	r24, 0x04	; 4
     552:	19 f4       	brne	.+6      	; 0x55a <navigation_fill_buffer+0x58>
     554:	10 92 b8 22 	sts	0x22B8, r1
     558:	2b c0       	rjmp	.+86     	; 0x5b0 <navigation_fill_buffer+0xae>
     55a:	8f 5f       	subi	r24, 0xFF	; 255
     55c:	80 93 b8 22 	sts	0x22B8, r24
     560:	27 c0       	rjmp	.+78     	; 0x5b0 <navigation_fill_buffer+0xae>
     562:	f8 01       	movw	r30, r16
     564:	34 97       	sbiw	r30, 0x04	; 4
     566:	80 81       	ld	r24, Z
     568:	89 83       	std	Y+1, r24	; 0x01
     56a:	f8 01       	movw	r30, r16
     56c:	33 97       	sbiw	r30, 0x03	; 3
     56e:	80 81       	ld	r24, Z
     570:	8a 83       	std	Y+2, r24	; 0x02
     572:	f8 01       	movw	r30, r16
     574:	32 97       	sbiw	r30, 0x02	; 2
     576:	80 81       	ld	r24, Z
     578:	8b 83       	std	Y+3, r24	; 0x03
     57a:	f8 01       	movw	r30, r16
     57c:	31 97       	sbiw	r30, 0x01	; 1
     57e:	80 81       	ld	r24, Z
     580:	8c 83       	std	Y+4, r24	; 0x04
     582:	f8 01       	movw	r30, r16
     584:	80 81       	ld	r24, Z
     586:	8d 83       	std	Y+5, r24	; 0x05
     588:	2c e5       	ldi	r18, 0x5C	; 92
     58a:	32 e0       	ldi	r19, 0x02	; 2
     58c:	41 e0       	ldi	r20, 0x01	; 1
     58e:	50 e0       	ldi	r21, 0x00	; 0
     590:	65 e0       	ldi	r22, 0x05	; 5
     592:	70 e0       	ldi	r23, 0x00	; 0
     594:	ce 01       	movw	r24, r28
     596:	01 96       	adiw	r24, 0x01	; 1
     598:	0e 94 db 0e 	call	0x1db6	; 0x1db6 <qsort>
     59c:	8b 81       	ldd	r24, Y+3	; 0x03
     59e:	f7 01       	movw	r30, r14
     5a0:	81 93       	st	Z+, r24
     5a2:	7f 01       	movw	r14, r30
     5a4:	0b 5f       	subi	r16, 0xFB	; 251
     5a6:	1f 4f       	sbci	r17, 0xFF	; 255
     5a8:	0c 15       	cp	r16, r12
     5aa:	1d 05       	cpc	r17, r13
     5ac:	d1 f6       	brne	.-76     	; 0x562 <navigation_fill_buffer+0x60>
     5ae:	0f c0       	rjmp	.+30     	; 0x5ce <navigation_fill_buffer+0xcc>
     5b0:	00 ed       	ldi	r16, 0xD0	; 208
     5b2:	12 e2       	ldi	r17, 0x22	; 34
     5b4:	0f 2e       	mov	r0, r31
     5b6:	f4 ec       	ldi	r31, 0xC4	; 196
     5b8:	ef 2e       	mov	r14, r31
     5ba:	f2 e2       	ldi	r31, 0x22	; 34
     5bc:	ff 2e       	mov	r15, r31
     5be:	f0 2d       	mov	r31, r0
     5c0:	0f 2e       	mov	r0, r31
     5c2:	f8 ef       	ldi	r31, 0xF8	; 248
     5c4:	cf 2e       	mov	r12, r31
     5c6:	f2 e2       	ldi	r31, 0x22	; 34
     5c8:	df 2e       	mov	r13, r31
     5ca:	f0 2d       	mov	r31, r0
     5cc:	ca cf       	rjmp	.-108    	; 0x562 <navigation_fill_buffer+0x60>
     5ce:	0f 90       	pop	r0
     5d0:	0f 90       	pop	r0
     5d2:	0f 90       	pop	r0
     5d4:	0f 90       	pop	r0
     5d6:	0f 90       	pop	r0
     5d8:	df 91       	pop	r29
     5da:	cf 91       	pop	r28
     5dc:	1f 91       	pop	r17
     5de:	0f 91       	pop	r16
     5e0:	ff 90       	pop	r15
     5e2:	ef 90       	pop	r14
     5e4:	df 90       	pop	r13
     5e6:	cf 90       	pop	r12
     5e8:	08 95       	ret

000005ea <navigation_get_sensor>:
     5ea:	ef c3       	rjmp	.+2014   	; 0xdca <TWI_get_sensor>
     5ec:	08 95       	ret

000005ee <navigation_check_right_turn>:
	}
}

uint8_t navigation_check_right_turn()
{
	if(navigation_get_sensor(1) >= (CORRIDOR_WIDTH / 2 + 10) && navigation_get_sensor(3) >= (CORRIDOR_WIDTH / 2 + 10))
     5ee:	81 e0       	ldi	r24, 0x01	; 1
     5f0:	90 e0       	ldi	r25, 0x00	; 0
     5f2:	fb df       	rcall	.-10     	; 0x5ea <navigation_get_sensor>
     5f4:	82 33       	cpi	r24, 0x32	; 50
     5f6:	28 f0       	brcs	.+10     	; 0x602 <navigation_check_right_turn+0x14>
     5f8:	83 e0       	ldi	r24, 0x03	; 3
     5fa:	90 e0       	ldi	r25, 0x00	; 0
     5fc:	f6 df       	rcall	.-20     	; 0x5ea <navigation_get_sensor>
     5fe:	82 33       	cpi	r24, 0x32	; 50
     600:	40 f4       	brcc	.+16     	; 0x612 <navigation_check_right_turn+0x24>
	{
		return 2;
	}
	else if(navigation_get_sensor(1) >= (CORRIDOR_WIDTH - 10))
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	90 e0       	ldi	r25, 0x00	; 0
     606:	f1 df       	rcall	.-30     	; 0x5ea <navigation_get_sensor>
     608:	91 e0       	ldi	r25, 0x01	; 1
     60a:	86 34       	cpi	r24, 0x46	; 70
     60c:	18 f4       	brcc	.+6      	; 0x614 <navigation_check_right_turn+0x26>
     60e:	90 e0       	ldi	r25, 0x00	; 0
     610:	01 c0       	rjmp	.+2      	; 0x614 <navigation_check_right_turn+0x26>

uint8_t navigation_check_right_turn()
{
	if(navigation_get_sensor(1) >= (CORRIDOR_WIDTH / 2 + 10) && navigation_get_sensor(3) >= (CORRIDOR_WIDTH / 2 + 10))
	{
		return 2;
     612:	92 e0       	ldi	r25, 0x02	; 2
	}
	else
	{
		return 0;
	}
}
     614:	89 2f       	mov	r24, r25
     616:	08 95       	ret

00000618 <navigation_check_left_turn>:
	}
}

uint8_t navigation_check_left_turn()
{
	if(navigation_get_sensor(0) >= (CORRIDOR_WIDTH / 2 + 10) && navigation_get_sensor(2) >= (CORRIDOR_WIDTH / 2 + 10))
     618:	80 e0       	ldi	r24, 0x00	; 0
     61a:	90 e0       	ldi	r25, 0x00	; 0
     61c:	e6 df       	rcall	.-52     	; 0x5ea <navigation_get_sensor>
     61e:	82 33       	cpi	r24, 0x32	; 50
     620:	28 f0       	brcs	.+10     	; 0x62c <navigation_check_left_turn+0x14>
     622:	82 e0       	ldi	r24, 0x02	; 2
     624:	90 e0       	ldi	r25, 0x00	; 0
     626:	e1 df       	rcall	.-62     	; 0x5ea <navigation_get_sensor>
     628:	82 33       	cpi	r24, 0x32	; 50
     62a:	40 f4       	brcc	.+16     	; 0x63c <navigation_check_left_turn+0x24>
	{
		return 2;
	}
	else if(navigation_get_sensor(0) >= (CORRIDOR_WIDTH - 10))
     62c:	80 e0       	ldi	r24, 0x00	; 0
     62e:	90 e0       	ldi	r25, 0x00	; 0
     630:	dc df       	rcall	.-72     	; 0x5ea <navigation_get_sensor>
     632:	91 e0       	ldi	r25, 0x01	; 1
     634:	86 34       	cpi	r24, 0x46	; 70
     636:	18 f4       	brcc	.+6      	; 0x63e <navigation_check_left_turn+0x26>
     638:	90 e0       	ldi	r25, 0x00	; 0
     63a:	01 c0       	rjmp	.+2      	; 0x63e <navigation_check_left_turn+0x26>

uint8_t navigation_check_left_turn()
{
	if(navigation_get_sensor(0) >= (CORRIDOR_WIDTH / 2 + 10) && navigation_get_sensor(2) >= (CORRIDOR_WIDTH / 2 + 10))
	{
		return 2;
     63c:	92 e0       	ldi	r25, 0x02	; 2
	}
	else
	{
		return 0;
	}
}
     63e:	89 2f       	mov	r24, r25
     640:	08 95       	ret

00000642 <navigation_direction_regulation>:
		return 0;
	}
}

float navigation_direction_regulation(float angleOffset)
{
     642:	cf 92       	push	r12
     644:	df 92       	push	r13
     646:	ef 92       	push	r14
     648:	ff 92       	push	r15
     64a:	cf 93       	push	r28
     64c:	df 93       	push	r29
     64e:	6b 01       	movw	r12, r22
     650:	7c 01       	movw	r14, r24
	int d = 0;
	if(gAlgorithm)
     652:	80 91 06 01 	lds	r24, 0x0106
     656:	88 23       	and	r24, r24
     658:	b9 f1       	breq	.+110    	; 0x6c8 <navigation_direction_regulation+0x86>
	{
		if(navigation_get_sensor(0) < CORRIDOR_WIDTH / 2 + 10)
     65a:	80 e0       	ldi	r24, 0x00	; 0
     65c:	90 e0       	ldi	r25, 0x00	; 0
     65e:	c5 df       	rcall	.-118    	; 0x5ea <navigation_get_sensor>
     660:	82 33       	cpi	r24, 0x32	; 50
     662:	08 f0       	brcs	.+2      	; 0x666 <navigation_direction_regulation+0x24>
     664:	b9 c0       	rjmp	.+370    	; 0x7d8 <navigation_direction_regulation+0x196>
		{
			d = ((navigation_get_sensor(2) + navigation_get_sensor(0)) / 2.0 + DISTANCE_MIDDLE_TO_SIDE) * cosf(angleOffset) - CORRIDOR_WIDTH / 2;
     666:	82 e0       	ldi	r24, 0x02	; 2
     668:	90 e0       	ldi	r25, 0x00	; 0
     66a:	bf df       	rcall	.-130    	; 0x5ea <navigation_get_sensor>
     66c:	c8 2f       	mov	r28, r24
     66e:	80 e0       	ldi	r24, 0x00	; 0
     670:	90 e0       	ldi	r25, 0x00	; 0
     672:	bb df       	rcall	.-138    	; 0x5ea <navigation_get_sensor>
     674:	d8 2f       	mov	r29, r24
     676:	c7 01       	movw	r24, r14
     678:	b6 01       	movw	r22, r12
     67a:	0e 94 5d 0c 	call	0x18ba	; 0x18ba <cos>
     67e:	6b 01       	movw	r12, r22
     680:	7c 01       	movw	r14, r24
     682:	6d 2f       	mov	r22, r29
     684:	70 e0       	ldi	r23, 0x00	; 0
     686:	6c 0f       	add	r22, r28
     688:	71 1d       	adc	r23, r1
     68a:	88 27       	eor	r24, r24
     68c:	77 fd       	sbrc	r23, 7
     68e:	80 95       	com	r24
     690:	98 2f       	mov	r25, r24
     692:	0e 94 fb 0c 	call	0x19f6	; 0x19f6 <__floatsisf>
     696:	20 e0       	ldi	r18, 0x00	; 0
     698:	30 e0       	ldi	r19, 0x00	; 0
     69a:	40 e0       	ldi	r20, 0x00	; 0
     69c:	5f e3       	ldi	r21, 0x3F	; 63
     69e:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <__mulsf3>
     6a2:	20 e0       	ldi	r18, 0x00	; 0
     6a4:	30 e0       	ldi	r19, 0x00	; 0
     6a6:	40 ef       	ldi	r20, 0xF0	; 240
     6a8:	50 e4       	ldi	r21, 0x40	; 64
     6aa:	0e 94 cd 0b 	call	0x179a	; 0x179a <__addsf3>
     6ae:	a7 01       	movw	r20, r14
     6b0:	96 01       	movw	r18, r12
     6b2:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <__mulsf3>
     6b6:	20 e0       	ldi	r18, 0x00	; 0
     6b8:	30 e0       	ldi	r19, 0x00	; 0
     6ba:	40 e2       	ldi	r20, 0x20	; 32
     6bc:	52 e4       	ldi	r21, 0x42	; 66
     6be:	0e 94 cc 0b 	call	0x1798	; 0x1798 <__subsf3>
     6c2:	0e 94 c8 0c 	call	0x1990	; 0x1990 <__fixsfsi>
     6c6:	38 c0       	rjmp	.+112    	; 0x738 <navigation_direction_regulation+0xf6>
		}
	}
	else 
	{
		if(navigation_get_sensor(1) < CORRIDOR_WIDTH / 2 + 10)
     6c8:	81 e0       	ldi	r24, 0x01	; 1
     6ca:	90 e0       	ldi	r25, 0x00	; 0
     6cc:	8e df       	rcall	.-228    	; 0x5ea <navigation_get_sensor>
     6ce:	82 33       	cpi	r24, 0x32	; 50
     6d0:	08 f0       	brcs	.+2      	; 0x6d4 <navigation_direction_regulation+0x92>
     6d2:	82 c0       	rjmp	.+260    	; 0x7d8 <navigation_direction_regulation+0x196>
		{
			d = CORRIDOR_WIDTH / 2 - ((navigation_get_sensor(1) + navigation_get_sensor(3)) / 2.0 + DISTANCE_MIDDLE_TO_SIDE) * cosf(angleOffset);
     6d4:	81 e0       	ldi	r24, 0x01	; 1
     6d6:	90 e0       	ldi	r25, 0x00	; 0
     6d8:	88 df       	rcall	.-240    	; 0x5ea <navigation_get_sensor>
     6da:	c8 2f       	mov	r28, r24
     6dc:	83 e0       	ldi	r24, 0x03	; 3
     6de:	90 e0       	ldi	r25, 0x00	; 0
     6e0:	84 df       	rcall	.-248    	; 0x5ea <navigation_get_sensor>
     6e2:	d8 2f       	mov	r29, r24
     6e4:	c7 01       	movw	r24, r14
     6e6:	b6 01       	movw	r22, r12
     6e8:	0e 94 5d 0c 	call	0x18ba	; 0x18ba <cos>
     6ec:	6b 01       	movw	r12, r22
     6ee:	7c 01       	movw	r14, r24
     6f0:	6d 2f       	mov	r22, r29
     6f2:	70 e0       	ldi	r23, 0x00	; 0
     6f4:	6c 0f       	add	r22, r28
     6f6:	71 1d       	adc	r23, r1
     6f8:	88 27       	eor	r24, r24
     6fa:	77 fd       	sbrc	r23, 7
     6fc:	80 95       	com	r24
     6fe:	98 2f       	mov	r25, r24
     700:	0e 94 fb 0c 	call	0x19f6	; 0x19f6 <__floatsisf>
     704:	20 e0       	ldi	r18, 0x00	; 0
     706:	30 e0       	ldi	r19, 0x00	; 0
     708:	40 e0       	ldi	r20, 0x00	; 0
     70a:	5f e3       	ldi	r21, 0x3F	; 63
     70c:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <__mulsf3>
     710:	20 e0       	ldi	r18, 0x00	; 0
     712:	30 e0       	ldi	r19, 0x00	; 0
     714:	40 ef       	ldi	r20, 0xF0	; 240
     716:	50 e4       	ldi	r21, 0x40	; 64
     718:	0e 94 cd 0b 	call	0x179a	; 0x179a <__addsf3>
     71c:	a7 01       	movw	r20, r14
     71e:	96 01       	movw	r18, r12
     720:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <__mulsf3>
     724:	9b 01       	movw	r18, r22
     726:	ac 01       	movw	r20, r24
     728:	60 e0       	ldi	r22, 0x00	; 0
     72a:	70 e0       	ldi	r23, 0x00	; 0
     72c:	80 e2       	ldi	r24, 0x20	; 32
     72e:	92 e4       	ldi	r25, 0x42	; 66
     730:	0e 94 cc 0b 	call	0x1798	; 0x1798 <__subsf3>
     734:	0e 94 c8 0c 	call	0x1990	; 0x1990 <__fixsfsi>
		}
	}
	
	if(abs(d) < ACCEPTABLE_DISTANCE_OFFSET)
     738:	cb 01       	movw	r24, r22
     73a:	03 96       	adiw	r24, 0x03	; 3
     73c:	07 97       	sbiw	r24, 0x07	; 7
     73e:	08 f4       	brcc	.+2      	; 0x742 <navigation_direction_regulation+0x100>
     740:	46 c0       	rjmp	.+140    	; 0x7ce <navigation_direction_regulation+0x18c>
	{
		return 0;
	}
	else
	{
		float dir = atanf(d * gKp);
     742:	88 27       	eor	r24, r24
     744:	77 fd       	sbrc	r23, 7
     746:	80 95       	com	r24
     748:	98 2f       	mov	r25, r24
     74a:	0e 94 fb 0c 	call	0x19f6	; 0x19f6 <__floatsisf>
     74e:	20 91 02 01 	lds	r18, 0x0102
     752:	30 91 03 01 	lds	r19, 0x0103
     756:	40 91 04 01 	lds	r20, 0x0104
     75a:	50 91 05 01 	lds	r21, 0x0105
     75e:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <__mulsf3>
     762:	0e 94 31 0c 	call	0x1862	; 0x1862 <atan>
     766:	c6 2e       	mov	r12, r22
     768:	d7 2e       	mov	r13, r23
     76a:	e8 2e       	mov	r14, r24
     76c:	f9 2e       	mov	r15, r25
		if(dir < 0)
     76e:	20 e0       	ldi	r18, 0x00	; 0
     770:	30 e0       	ldi	r19, 0x00	; 0
     772:	a9 01       	movw	r20, r18
     774:	0e 94 59 0c 	call	0x18b2	; 0x18b2 <__cmpsf2>
     778:	88 23       	and	r24, r24
     77a:	7c f4       	brge	.+30     	; 0x79a <navigation_direction_regulation+0x158>
		{
			dir += 2*PI;
     77c:	2b ed       	ldi	r18, 0xDB	; 219
     77e:	3f e0       	ldi	r19, 0x0F	; 15
     780:	49 ec       	ldi	r20, 0xC9	; 201
     782:	50 e4       	ldi	r21, 0x40	; 64
     784:	6c 2d       	mov	r22, r12
     786:	7d 2d       	mov	r23, r13
     788:	8e 2d       	mov	r24, r14
     78a:	9f 2d       	mov	r25, r15
     78c:	0e 94 cd 0b 	call	0x179a	; 0x179a <__addsf3>
     790:	c6 2e       	mov	r12, r22
     792:	d7 2e       	mov	r13, r23
     794:	e8 2e       	mov	r14, r24
     796:	f9 2e       	mov	r15, r25
     798:	23 c0       	rjmp	.+70     	; 0x7e0 <navigation_direction_regulation+0x19e>
		} else if(dir >= 2*PI)
     79a:	2b ed       	ldi	r18, 0xDB	; 219
     79c:	3f e0       	ldi	r19, 0x0F	; 15
     79e:	49 ec       	ldi	r20, 0xC9	; 201
     7a0:	50 e4       	ldi	r21, 0x40	; 64
     7a2:	6c 2d       	mov	r22, r12
     7a4:	7d 2d       	mov	r23, r13
     7a6:	8e 2d       	mov	r24, r14
     7a8:	9f 2d       	mov	r25, r15
     7aa:	0e 94 09 0e 	call	0x1c12	; 0x1c12 <__gesf2>
     7ae:	88 23       	and	r24, r24
     7b0:	bc f0       	brlt	.+46     	; 0x7e0 <navigation_direction_regulation+0x19e>
		{
			dir -= 2*PI;
     7b2:	2b ed       	ldi	r18, 0xDB	; 219
     7b4:	3f e0       	ldi	r19, 0x0F	; 15
     7b6:	49 ec       	ldi	r20, 0xC9	; 201
     7b8:	50 e4       	ldi	r21, 0x40	; 64
     7ba:	6c 2d       	mov	r22, r12
     7bc:	7d 2d       	mov	r23, r13
     7be:	8e 2d       	mov	r24, r14
     7c0:	9f 2d       	mov	r25, r15
     7c2:	ea d7       	rcall	.+4052   	; 0x1798 <__subsf3>
     7c4:	c6 2e       	mov	r12, r22
     7c6:	d7 2e       	mov	r13, r23
     7c8:	e8 2e       	mov	r14, r24
     7ca:	f9 2e       	mov	r15, r25
     7cc:	09 c0       	rjmp	.+18     	; 0x7e0 <navigation_direction_regulation+0x19e>
		}
	}
	
	if(abs(d) < ACCEPTABLE_DISTANCE_OFFSET)
	{
		return 0;
     7ce:	c1 2c       	mov	r12, r1
     7d0:	d1 2c       	mov	r13, r1
     7d2:	e1 2c       	mov	r14, r1
     7d4:	f1 2c       	mov	r15, r1
     7d6:	04 c0       	rjmp	.+8      	; 0x7e0 <navigation_direction_regulation+0x19e>
     7d8:	c1 2c       	mov	r12, r1
     7da:	d1 2c       	mov	r13, r1
     7dc:	e1 2c       	mov	r14, r1
     7de:	f1 2c       	mov	r15, r1
			dir -= 2*PI;
		}
		// Dir is between 0 and 2*PI radians
		return dir;
	}
}
     7e0:	6c 2d       	mov	r22, r12
     7e2:	7d 2d       	mov	r23, r13
     7e4:	8e 2d       	mov	r24, r14
     7e6:	9f 2d       	mov	r25, r15
     7e8:	df 91       	pop	r29
     7ea:	cf 91       	pop	r28
     7ec:	ff 90       	pop	r15
     7ee:	ef 90       	pop	r14
     7f0:	df 90       	pop	r13
     7f2:	cf 90       	pop	r12
     7f4:	08 95       	ret

000007f6 <navigation_angle_offset>:
{
	gAutonomousWalk = walk;
}

float navigation_angle_offset()
{
     7f6:	cf 92       	push	r12
     7f8:	df 92       	push	r13
     7fa:	ef 92       	push	r14
     7fc:	ff 92       	push	r15
	float angle = 0;
	if (gAlgorithm)
     7fe:	80 91 06 01 	lds	r24, 0x0106
     802:	88 23       	and	r24, r24
     804:	11 f1       	breq	.+68     	; 0x84a <navigation_angle_offset+0x54>
	{
		if(navigation_get_sensor(0) < CORRIDOR_WIDTH / 2 + 10)
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	ef de       	rcall	.-546    	; 0x5ea <navigation_get_sensor>
     80c:	82 33       	cpi	r24, 0x32	; 50
     80e:	08 f0       	brcs	.+2      	; 0x812 <navigation_angle_offset+0x1c>
     810:	4a c0       	rjmp	.+148    	; 0x8a6 <navigation_angle_offset+0xb0>
		{
			// Use wall to the left
			angle = atanf((navigation_get_sensor(2) - navigation_get_sensor(0))/DISTANCE_FRONT_TO_BACK);
     812:	82 e0       	ldi	r24, 0x02	; 2
     814:	90 e0       	ldi	r25, 0x00	; 0
     816:	e9 de       	rcall	.-558    	; 0x5ea <navigation_get_sensor>
     818:	f8 2e       	mov	r15, r24
     81a:	80 e0       	ldi	r24, 0x00	; 0
     81c:	90 e0       	ldi	r25, 0x00	; 0
     81e:	e5 de       	rcall	.-566    	; 0x5ea <navigation_get_sensor>
     820:	6f 2d       	mov	r22, r15
     822:	70 e0       	ldi	r23, 0x00	; 0
     824:	68 1b       	sub	r22, r24
     826:	71 09       	sbc	r23, r1
     828:	88 27       	eor	r24, r24
     82a:	77 fd       	sbrc	r23, 7
     82c:	80 95       	com	r24
     82e:	98 2f       	mov	r25, r24
     830:	0e 94 fb 0c 	call	0x19f6	; 0x19f6 <__floatsisf>
     834:	20 e0       	ldi	r18, 0x00	; 0
     836:	30 e0       	ldi	r19, 0x00	; 0
     838:	48 e6       	ldi	r20, 0x68	; 104
     83a:	51 e4       	ldi	r21, 0x41	; 65
     83c:	0e 94 60 0c 	call	0x18c0	; 0x18c0 <__divsf3>
     840:	0e 94 31 0c 	call	0x1862	; 0x1862 <atan>
     844:	6b 01       	movw	r12, r22
     846:	7c 01       	movw	r14, r24
     848:	1f c0       	rjmp	.+62     	; 0x888 <navigation_angle_offset+0x92>
		}
	}
	else 
	{
		if(navigation_get_sensor(1) < CORRIDOR_WIDTH / 2 + 10)
     84a:	81 e0       	ldi	r24, 0x01	; 1
     84c:	90 e0       	ldi	r25, 0x00	; 0
     84e:	cd de       	rcall	.-614    	; 0x5ea <navigation_get_sensor>
     850:	82 33       	cpi	r24, 0x32	; 50
     852:	48 f5       	brcc	.+82     	; 0x8a6 <navigation_angle_offset+0xb0>
		{
			// Use wall to the right
			angle = atanf((navigation_get_sensor(1) - navigation_get_sensor(3))/DISTANCE_FRONT_TO_BACK);
     854:	81 e0       	ldi	r24, 0x01	; 1
     856:	90 e0       	ldi	r25, 0x00	; 0
     858:	c8 de       	rcall	.-624    	; 0x5ea <navigation_get_sensor>
     85a:	f8 2e       	mov	r15, r24
     85c:	83 e0       	ldi	r24, 0x03	; 3
     85e:	90 e0       	ldi	r25, 0x00	; 0
     860:	c4 de       	rcall	.-632    	; 0x5ea <navigation_get_sensor>
     862:	6f 2d       	mov	r22, r15
     864:	70 e0       	ldi	r23, 0x00	; 0
     866:	68 1b       	sub	r22, r24
     868:	71 09       	sbc	r23, r1
     86a:	88 27       	eor	r24, r24
     86c:	77 fd       	sbrc	r23, 7
     86e:	80 95       	com	r24
     870:	98 2f       	mov	r25, r24
     872:	0e 94 fb 0c 	call	0x19f6	; 0x19f6 <__floatsisf>
     876:	20 e0       	ldi	r18, 0x00	; 0
     878:	30 e0       	ldi	r19, 0x00	; 0
     87a:	48 e6       	ldi	r20, 0x68	; 104
     87c:	51 e4       	ldi	r21, 0x41	; 65
     87e:	0e 94 60 0c 	call	0x18c0	; 0x18c0 <__divsf3>
     882:	ef d7       	rcall	.+4062   	; 0x1862 <atan>
     884:	6b 01       	movw	r12, r22
     886:	7c 01       	movw	r14, r24
		}
	}
	
	if(fabs(angle) > ACCEPTABLE_OFFSET_ANGLE)
     888:	c7 01       	movw	r24, r14
     88a:	b6 01       	movw	r22, r12
     88c:	9f 77       	andi	r25, 0x7F	; 127
     88e:	29 e2       	ldi	r18, 0x29	; 41
     890:	3c e5       	ldi	r19, 0x5C	; 92
     892:	4f e8       	ldi	r20, 0x8F	; 143
     894:	5d e3       	ldi	r21, 0x3D	; 61
     896:	0e 94 09 0e 	call	0x1c12	; 0x1c12 <__gesf2>
     89a:	18 16       	cp	r1, r24
     89c:	3c f0       	brlt	.+14     	; 0x8ac <navigation_angle_offset+0xb6>
	{
		return angle;
	}
	else
	{
		return 0;
     89e:	c1 2c       	mov	r12, r1
     8a0:	d1 2c       	mov	r13, r1
     8a2:	76 01       	movw	r14, r12
     8a4:	03 c0       	rjmp	.+6      	; 0x8ac <navigation_angle_offset+0xb6>
     8a6:	c1 2c       	mov	r12, r1
     8a8:	d1 2c       	mov	r13, r1
     8aa:	76 01       	movw	r14, r12
     8ac:	7c 2d       	mov	r23, r12
	}
}
     8ae:	67 2f       	mov	r22, r23
     8b0:	7d 2d       	mov	r23, r13
     8b2:	8e 2d       	mov	r24, r14
     8b4:	9f 2d       	mov	r25, r15
     8b6:	ff 90       	pop	r15
     8b8:	ef 90       	pop	r14
     8ba:	df 90       	pop	r13
     8bc:	cf 90       	pop	r12
     8be:	08 95       	ret

000008c0 <__vector_1>:

//-------------------------------Interrupts--------------------------------

//External interrupt INT0, to activate autonomous walk and set left hand navigation
ISR(INT0_vect)
{
     8c0:	1f 92       	push	r1
     8c2:	0f 92       	push	r0
     8c4:	0f b6       	in	r0, 0x3f	; 63
     8c6:	0f 92       	push	r0
     8c8:	11 24       	eor	r1, r1
     8ca:	0b b6       	in	r0, 0x3b	; 59
     8cc:	0f 92       	push	r0
     8ce:	2f 93       	push	r18
     8d0:	3f 93       	push	r19
     8d2:	4f 93       	push	r20
     8d4:	5f 93       	push	r21
     8d6:	6f 93       	push	r22
     8d8:	7f 93       	push	r23
     8da:	8f 93       	push	r24
     8dc:	9f 93       	push	r25
     8de:	af 93       	push	r26
     8e0:	bf 93       	push	r27
     8e2:	ef 93       	push	r30
     8e4:	ff 93       	push	r31
	navigation_set_algorithm(1); //Left hand
     8e6:	81 e0       	ldi	r24, 0x01	; 1
     8e8:	03 de       	rcall	.-1018   	; 0x4f0 <navigation_set_algorithm>
	navigation_set_autonomous_walk(1);
     8ea:	81 e0       	ldi	r24, 0x01	; 1
     8ec:	07 de       	rcall	.-1010   	; 0x4fc <navigation_set_autonomous_walk>
}
     8ee:	ff 91       	pop	r31
     8f0:	ef 91       	pop	r30
     8f2:	bf 91       	pop	r27
     8f4:	af 91       	pop	r26
     8f6:	9f 91       	pop	r25
     8f8:	8f 91       	pop	r24
     8fa:	7f 91       	pop	r23
     8fc:	6f 91       	pop	r22
     8fe:	5f 91       	pop	r21
     900:	4f 91       	pop	r20
     902:	3f 91       	pop	r19
     904:	2f 91       	pop	r18
     906:	0f 90       	pop	r0
     908:	0b be       	out	0x3b, r0	; 59
     90a:	0f 90       	pop	r0
     90c:	0f be       	out	0x3f, r0	; 63
     90e:	0f 90       	pop	r0
     910:	1f 90       	pop	r1
     912:	18 95       	reti

00000914 <__vector_2>:

//External interrupt INT1, to activate autonomous walk and set right hand navigation
ISR(INT1_vect)
{
     914:	1f 92       	push	r1
     916:	0f 92       	push	r0
     918:	0f b6       	in	r0, 0x3f	; 63
     91a:	0f 92       	push	r0
     91c:	11 24       	eor	r1, r1
     91e:	0b b6       	in	r0, 0x3b	; 59
     920:	0f 92       	push	r0
     922:	2f 93       	push	r18
     924:	3f 93       	push	r19
     926:	4f 93       	push	r20
     928:	5f 93       	push	r21
     92a:	6f 93       	push	r22
     92c:	7f 93       	push	r23
     92e:	8f 93       	push	r24
     930:	9f 93       	push	r25
     932:	af 93       	push	r26
     934:	bf 93       	push	r27
     936:	ef 93       	push	r30
     938:	ff 93       	push	r31
	navigation_set_algorithm(0); //Right hand
     93a:	80 e0       	ldi	r24, 0x00	; 0
     93c:	d9 dd       	rcall	.-1102   	; 0x4f0 <navigation_set_algorithm>
	navigation_set_autonomous_walk(1);
     93e:	81 e0       	ldi	r24, 0x01	; 1
     940:	dd dd       	rcall	.-1094   	; 0x4fc <navigation_set_autonomous_walk>
     942:	ff 91       	pop	r31
     944:	ef 91       	pop	r30
     946:	bf 91       	pop	r27
     948:	af 91       	pop	r26
     94a:	9f 91       	pop	r25
     94c:	8f 91       	pop	r24
     94e:	7f 91       	pop	r23
     950:	6f 91       	pop	r22
     952:	5f 91       	pop	r21
     954:	4f 91       	pop	r20
     956:	3f 91       	pop	r19
     958:	2f 91       	pop	r18
     95a:	0f 90       	pop	r0
     95c:	0b be       	out	0x3b, r0	; 59
     95e:	0f 90       	pop	r0
     960:	0f be       	out	0x3f, r0	; 63
     962:	0f 90       	pop	r0
     964:	1f 90       	pop	r1
     966:	18 95       	reti

00000968 <main>:
#include "Navigation.h"
#include "autonomouswalk.h"

int main(void)
{
	USART_init();
     968:	59 d4       	rcall	.+2226   	; 0x121c <USART_init>
	sei();
     96a:	78 94       	sei
	TWI_init(ST_ADDRESS);
     96c:	80 e2       	ldi	r24, 0x20	; 32
     96e:	f1 d0       	rcall	.+482    	; 0xb52 <TWI_init>
	init_counters();
     970:	35 dd       	rcall	.-1430   	; 0x3dc <init_counters>
	DDRA |= (1<<PORTA0 | 1<<PORTA1);
     972:	81 b1       	in	r24, 0x01	; 1
     974:	83 60       	ori	r24, 0x03	; 3
     976:	81 b9       	out	0x01, r24	; 1
     978:	2f ef       	ldi	r18, 0xFF	; 255
     97a:	83 e2       	ldi	r24, 0x23	; 35
     97c:	94 ef       	ldi	r25, 0xF4	; 244
     97e:	21 50       	subi	r18, 0x01	; 1
     980:	80 40       	sbci	r24, 0x00	; 0
     982:	90 40       	sbci	r25, 0x00	; 0
     984:	e1 f7       	brne	.-8      	; 0x97e <main+0x16>
     986:	00 c0       	rjmp	.+0      	; 0x988 <main+0x20>
     988:	00 00       	nop
	
	_delay_ms(5000);
	navigation_set_autonomous_walk(1);
     98a:	81 e0       	ldi	r24, 0x01	; 1
     98c:	b7 dd       	rcall	.-1170   	; 0x4fc <navigation_set_autonomous_walk>
			autonomouswalk_walk();
		}
		else
		{
			if(TWI_command_flag()){
				PORTA ^= (1<<PORTA1);
     98e:	c2 e0       	ldi	r28, 0x02	; 2
	
	_delay_ms(5000);
	navigation_set_autonomous_walk(1);
    while(1)
    {
		if(TWI_sensor_flag())
     990:	29 d2       	rcall	.+1106   	; 0xde4 <TWI_sensor_flag>
     992:	81 11       	cpse	r24, r1
		{
			navigation_fill_buffer();
     994:	b6 dd       	rcall	.-1172   	; 0x502 <navigation_fill_buffer>
		}
		if(TWI_autonom_settings_flag())
     996:	44 d2       	rcall	.+1160   	; 0xe20 <TWI_autonom_settings_flag>
     998:	88 23       	and	r24, r24
     99a:	79 f0       	breq	.+30     	; 0x9ba <main+0x52>
		{
			uint8_t sett = TWI_get_autonom_settings();
     99c:	20 d2       	rcall	.+1088   	; 0xdde <TWI_get_autonom_settings>
			if(sett == 0)
     99e:	81 11       	cpse	r24, r1
     9a0:	02 c0       	rjmp	.+4      	; 0x9a6 <main+0x3e>
			{
				navigation_set_autonomous_walk(0);
     9a2:	ac dd       	rcall	.-1192   	; 0x4fc <navigation_set_autonomous_walk>
     9a4:	0a c0       	rjmp	.+20     	; 0x9ba <main+0x52>
			}
			else if(sett == 1)
     9a6:	81 30       	cpi	r24, 0x01	; 1
     9a8:	21 f4       	brne	.+8      	; 0x9b2 <main+0x4a>
			{
				navigation_set_autonomous_walk(1);
     9aa:	a8 dd       	rcall	.-1200   	; 0x4fc <navigation_set_autonomous_walk>
				navigation_set_algorithm(1);
     9ac:	81 e0       	ldi	r24, 0x01	; 1
     9ae:	a0 dd       	rcall	.-1216   	; 0x4f0 <navigation_set_algorithm>
     9b0:	04 c0       	rjmp	.+8      	; 0x9ba <main+0x52>
			}
			else //sett == 2
			{
				navigation_set_autonomous_walk(1);
     9b2:	81 e0       	ldi	r24, 0x01	; 1
     9b4:	a3 dd       	rcall	.-1210   	; 0x4fc <navigation_set_autonomous_walk>
				navigation_set_algorithm(0);
     9b6:	80 e0       	ldi	r24, 0x00	; 0
     9b8:	9b dd       	rcall	.-1226   	; 0x4f0 <navigation_set_algorithm>
			}
		}
		
		if(navigation_autonomous_walk() == 1)
     9ba:	9d dd       	rcall	.-1222   	; 0x4f6 <navigation_autonomous_walk>
     9bc:	81 30       	cpi	r24, 0x01	; 1
     9be:	49 f4       	brne	.+18     	; 0x9d2 <main+0x6a>
		{
			if(TWI_control_settings_flag())
     9c0:	25 d2       	rcall	.+1098   	; 0xe0c <TWI_control_settings_flag>
     9c2:	88 23       	and	r24, r24
     9c4:	21 f0       	breq	.+8      	; 0x9ce <main+0x66>
			{
				navigation_set_Kp(TWI_get_control_setting(0));
     9c6:	80 e0       	ldi	r24, 0x00	; 0
     9c8:	90 e0       	ldi	r25, 0x00	; 0
     9ca:	04 d2       	rcall	.+1032   	; 0xdd4 <TWI_get_control_setting>
     9cc:	7f dd       	rcall	.-1282   	; 0x4cc <navigation_set_Kp>
			}
			autonomouswalk_walk();
     9ce:	c1 dc       	rcall	.-1662   	; 0x352 <autonomouswalk_walk>
     9d0:	07 c0       	rjmp	.+14     	; 0x9e0 <main+0x78>
		}
		else
		{
			if(TWI_command_flag()){
     9d2:	12 d2       	rcall	.+1060   	; 0xdf8 <TWI_command_flag>
     9d4:	88 23       	and	r24, r24
     9d6:	21 f0       	breq	.+8      	; 0x9e0 <main+0x78>
				PORTA ^= (1<<PORTA1);
     9d8:	82 b1       	in	r24, 0x02	; 2
     9da:	8c 27       	eor	r24, r28
     9dc:	82 b9       	out	0x02, r24	; 2
				USART_SendCommand();
     9de:	f0 d4       	rcall	.+2528   	; 0x13c0 <USART_SendCommand>
			}
		}
		USART_DecodeRxFIFO();
     9e0:	27 d6       	rcall	.+3150   	; 0x1630 <USART_DecodeRxFIFO>
    }
     9e2:	d6 cf       	rjmp	.-84     	; 0x990 <main+0x28>

000009e4 <__vector_13>:
}

//---------------------------------------COUNTERS/TIMERS interrupt vectors-----------

ISR(TIMER1_COMPA_vect)
{
     9e4:	1f 92       	push	r1
     9e6:	0f 92       	push	r0
     9e8:	0f b6       	in	r0, 0x3f	; 63
     9ea:	0f 92       	push	r0
     9ec:	11 24       	eor	r1, r1
	TCNT1 = 0;
     9ee:	10 92 85 00 	sts	0x0085, r1
     9f2:	10 92 84 00 	sts	0x0084, r1
	
     9f6:	0f 90       	pop	r0
     9f8:	0f be       	out	0x3f, r0	; 63
     9fa:	0f 90       	pop	r0
     9fc:	1f 90       	pop	r1
     9fe:	18 95       	reti

00000a00 <__vector_32>:
	if(USART_ready())
	{
		PORTA ^= (1<<PORTA0);
     a00:	1f 92       	push	r1
     a02:	0f 92       	push	r0
     a04:	0f b6       	in	r0, 0x3f	; 63
     a06:	0f 92       	push	r0
     a08:	11 24       	eor	r1, r1
	}
     a0a:	10 92 95 00 	sts	0x0095, r1
     a0e:	10 92 94 00 	sts	0x0094, r1
}
     a12:	0f 90       	pop	r0
     a14:	0f be       	out	0x3f, r0	; 63
     a16:	0f 90       	pop	r0
     a18:	1f 90       	pop	r1
     a1a:	18 95       	reti

00000a1c <set_twi_reciever_enable>:
     a1c:	85 e4       	ldi	r24, 0x45	; 69
     a1e:	80 93 bc 00 	sts	0x00BC, r24
     a22:	08 95       	ret

00000a24 <clear_int>:
     a24:	81 ec       	ldi	r24, 0xC1	; 193
     a26:	80 93 bc 00 	sts	0x00BC, r24
     a2a:	08 95       	ret

00000a2c <start_bus>:
     a2c:	84 ea       	ldi	r24, 0xA4	; 164
     a2e:	80 93 bc 00 	sts	0x00BC, r24
     a32:	08 95       	ret

00000a34 <stop_bus>:
     a34:	85 ed       	ldi	r24, 0xD5	; 213
     a36:	80 93 bc 00 	sts	0x00BC, r24
     a3a:	08 95       	ret

00000a3c <Error>:
     a3c:	80 91 b9 00 	lds	r24, 0x00B9
     a40:	88 7f       	andi	r24, 0xF8	; 248
     a42:	88 33       	cpi	r24, 0x38	; 56
     a44:	09 f0       	breq	.+2      	; 0xa48 <Error+0xc>
     a46:	f6 cf       	rjmp	.-20     	; 0xa34 <stop_bus>
     a48:	ed cf       	rjmp	.-38     	; 0xa24 <clear_int>

00000a4a <get_data>:
     a4a:	80 91 bb 00 	lds	r24, 0x00BB
     a4e:	08 95       	ret

00000a50 <wait_for_bus>:
     a50:	ec eb       	ldi	r30, 0xBC	; 188
     a52:	f0 e0       	ldi	r31, 0x00	; 0
     a54:	80 81       	ld	r24, Z
     a56:	88 23       	and	r24, r24
     a58:	ec f7       	brge	.-6      	; 0xa54 <wait_for_bus+0x4>
     a5a:	08 95       	ret

00000a5c <send_data_and_wait>:
     a5c:	80 93 bb 00 	sts	0x00BB, r24
     a60:	84 e8       	ldi	r24, 0x84	; 132
     a62:	80 93 bc 00 	sts	0x00BC, r24
     a66:	f4 cf       	rjmp	.-24     	; 0xa50 <wait_for_bus>

00000a68 <stop_twi>:
     a68:	10 92 07 24 	sts	0x2407, r1
     a6c:	10 92 06 24 	sts	0x2406, r1
     a70:	10 92 11 24 	sts	0x2411, r1
     a74:	10 92 10 24 	sts	0x2410, r1
     a78:	10 92 fc 23 	sts	0x23FC, r1
     a7c:	10 92 fb 23 	sts	0x23FB, r1
     a80:	10 92 01 24 	sts	0x2401, r1
     a84:	10 92 00 24 	sts	0x2400, r1
     a88:	10 92 04 24 	sts	0x2404, r1
     a8c:	10 92 03 24 	sts	0x2403, r1
     a90:	08 95       	ret

00000a92 <reset_TWI>:
     a92:	ec eb       	ldi	r30, 0xBC	; 188
     a94:	f0 e0       	ldi	r31, 0x00	; 0
     a96:	80 81       	ld	r24, Z
     a98:	80 6c       	ori	r24, 0xC0	; 192
     a9a:	80 83       	st	Z, r24
     a9c:	08 95       	ret

00000a9e <get_sensor_from_bus>:
     a9e:	cf 93       	push	r28
     aa0:	df 93       	push	r29
     aa2:	c0 91 10 24 	lds	r28, 0x2410
     aa6:	d0 91 11 24 	lds	r29, 0x2411
     aaa:	c8 30       	cpi	r28, 0x08	; 8
     aac:	d1 05       	cpc	r29, r1
     aae:	91 f4       	brne	.+36     	; 0xad4 <get_sensor_from_bus+0x36>
     ab0:	ec ec       	ldi	r30, 0xCC	; 204
     ab2:	f2 e2       	ldi	r31, 0x22	; 34
     ab4:	a2 e1       	ldi	r26, 0x12	; 18
     ab6:	b4 e2       	ldi	r27, 0x24	; 36
     ab8:	84 ed       	ldi	r24, 0xD4	; 212
     aba:	92 e2       	ldi	r25, 0x22	; 34
     abc:	21 91       	ld	r18, Z+
     abe:	2d 93       	st	X+, r18
     ac0:	e8 17       	cp	r30, r24
     ac2:	f9 07       	cpc	r31, r25
     ac4:	d9 f7       	brne	.-10     	; 0xabc <get_sensor_from_bus+0x1e>
     ac6:	c1 df       	rcall	.-126    	; 0xa4a <get_data>
     ac8:	80 93 0a 24 	sts	0x240A, r24
     acc:	81 e0       	ldi	r24, 0x01	; 1
     ace:	80 93 bf 22 	sts	0x22BF, r24
     ad2:	0d c0       	rjmp	.+26     	; 0xaee <get_sensor_from_bus+0x50>
     ad4:	ba df       	rcall	.-140    	; 0xa4a <get_data>
     ad6:	c4 53       	subi	r28, 0x34	; 52
     ad8:	dd 4d       	sbci	r29, 0xDD	; 221
     ada:	88 83       	st	Y, r24
     adc:	80 91 10 24 	lds	r24, 0x2410
     ae0:	90 91 11 24 	lds	r25, 0x2411
     ae4:	01 96       	adiw	r24, 0x01	; 1
     ae6:	90 93 11 24 	sts	0x2411, r25
     aea:	80 93 10 24 	sts	0x2410, r24
     aee:	df 91       	pop	r29
     af0:	cf 91       	pop	r28
     af2:	08 95       	ret

00000af4 <get_control_settings_from_bus>:
     af4:	cf 93       	push	r28
     af6:	df 93       	push	r29
     af8:	c0 91 00 24 	lds	r28, 0x2400
     afc:	d0 91 01 24 	lds	r29, 0x2401
     b00:	a4 df       	rcall	.-184    	; 0xa4a <get_data>
     b02:	c3 50       	subi	r28, 0x03	; 3
     b04:	dc 4d       	sbci	r29, 0xDC	; 220
     b06:	88 83       	st	Y, r24
     b08:	10 92 01 24 	sts	0x2401, r1
     b0c:	10 92 00 24 	sts	0x2400, r1
     b10:	df 91       	pop	r29
     b12:	cf 91       	pop	r28
     b14:	08 95       	ret

00000b16 <get_autonom_settings_from_bus>:
     b16:	99 df       	rcall	.-206    	; 0xa4a <get_data>
     b18:	80 93 fb 22 	sts	0x22FB, r24
     b1c:	08 95       	ret

00000b1e <get_char_from_bus>:
     b1e:	cf 93       	push	r28
     b20:	df 93       	push	r29
     b22:	c0 91 fb 23 	lds	r28, 0x23FB
     b26:	d0 91 fc 23 	lds	r29, 0x23FC
     b2a:	8f df       	rcall	.-226    	; 0xa4a <get_data>
     b2c:	c4 50       	subi	r28, 0x04	; 4
     b2e:	dd 4d       	sbci	r29, 0xDD	; 221
     b30:	88 83       	st	Y, r24
     b32:	80 91 fb 23 	lds	r24, 0x23FB
     b36:	90 91 fc 23 	lds	r25, 0x23FC
     b3a:	01 96       	adiw	r24, 0x01	; 1
     b3c:	90 93 fc 23 	sts	0x23FC, r25
     b40:	80 93 fb 23 	sts	0x23FB, r24
     b44:	90 93 0c 24 	sts	0x240C, r25
     b48:	80 93 0b 24 	sts	0x240B, r24
     b4c:	df 91       	pop	r29
     b4e:	cf 91       	pop	r28
     b50:	08 95       	ret

00000b52 <TWI_init>:
     b52:	80 93 02 24 	sts	0x2402, r24
     b56:	80 34       	cpi	r24, 0x40	; 64
     b58:	79 f0       	breq	.+30     	; 0xb78 <TWI_init+0x26>
     b5a:	80 38       	cpi	r24, 0x80	; 128
     b5c:	19 f0       	breq	.+6      	; 0xb64 <TWI_init+0x12>
     b5e:	80 32       	cpi	r24, 0x20	; 32
     b60:	d1 f4       	brne	.+52     	; 0xb96 <TWI_init+0x44>
     b62:	12 c0       	rjmp	.+36     	; 0xb88 <TWI_init+0x36>
     b64:	83 e0       	ldi	r24, 0x03	; 3
     b66:	88 b9       	out	0x08, r24	; 8
     b68:	59 df       	rcall	.-334    	; 0xa1c <set_twi_reciever_enable>
     b6a:	8f e3       	ldi	r24, 0x3F	; 63
     b6c:	80 93 b8 00 	sts	0x00B8, r24
     b70:	81 e8       	ldi	r24, 0x81	; 129
     b72:	80 93 ba 00 	sts	0x00BA, r24
     b76:	08 95       	ret
     b78:	8f e3       	ldi	r24, 0x3F	; 63
     b7a:	80 93 b8 00 	sts	0x00B8, r24
     b7e:	4e df       	rcall	.-356    	; 0xa1c <set_twi_reciever_enable>
     b80:	80 e4       	ldi	r24, 0x40	; 64
     b82:	80 93 ba 00 	sts	0x00BA, r24
     b86:	08 95       	ret
     b88:	8f e3       	ldi	r24, 0x3F	; 63
     b8a:	80 93 b8 00 	sts	0x00B8, r24
     b8e:	46 df       	rcall	.-372    	; 0xa1c <set_twi_reciever_enable>
     b90:	81 e2       	ldi	r24, 0x21	; 33
     b92:	80 93 ba 00 	sts	0x00BA, r24
     b96:	08 95       	ret

00000b98 <TWI_send_command>:
     b98:	1f 93       	push	r17
     b9a:	cf 93       	push	r28
     b9c:	df 93       	push	r29
     b9e:	c8 2f       	mov	r28, r24
     ba0:	d6 2f       	mov	r29, r22
     ba2:	14 2f       	mov	r17, r20
     ba4:	43 df       	rcall	.-378    	; 0xa2c <start_bus>
     ba6:	54 df       	rcall	.-344    	; 0xa50 <wait_for_bus>
     ba8:	90 91 b9 00 	lds	r25, 0x00B9
     bac:	98 7f       	andi	r25, 0xF8	; 248
     bae:	98 30       	cpi	r25, 0x08	; 8
     bb0:	19 f0       	breq	.+6      	; 0xbb8 <TWI_send_command+0x20>
     bb2:	44 df       	rcall	.-376    	; 0xa3c <Error>
     bb4:	80 e0       	ldi	r24, 0x00	; 0
     bb6:	34 c0       	rjmp	.+104    	; 0xc20 <TWI_send_command+0x88>
     bb8:	80 e2       	ldi	r24, 0x20	; 32
     bba:	50 df       	rcall	.-352    	; 0xa5c <send_data_and_wait>
     bbc:	80 91 b9 00 	lds	r24, 0x00B9
     bc0:	88 7f       	andi	r24, 0xF8	; 248
     bc2:	88 31       	cpi	r24, 0x18	; 24
     bc4:	19 f0       	breq	.+6      	; 0xbcc <TWI_send_command+0x34>
     bc6:	3a df       	rcall	.-396    	; 0xa3c <Error>
     bc8:	80 e0       	ldi	r24, 0x00	; 0
     bca:	2a c0       	rjmp	.+84     	; 0xc20 <TWI_send_command+0x88>
     bcc:	80 e0       	ldi	r24, 0x00	; 0
     bce:	46 df       	rcall	.-372    	; 0xa5c <send_data_and_wait>
     bd0:	80 91 b9 00 	lds	r24, 0x00B9
     bd4:	88 7f       	andi	r24, 0xF8	; 248
     bd6:	88 32       	cpi	r24, 0x28	; 40
     bd8:	19 f0       	breq	.+6      	; 0xbe0 <TWI_send_command+0x48>
     bda:	30 df       	rcall	.-416    	; 0xa3c <Error>
     bdc:	80 e0       	ldi	r24, 0x00	; 0
     bde:	20 c0       	rjmp	.+64     	; 0xc20 <TWI_send_command+0x88>
     be0:	8c 2f       	mov	r24, r28
     be2:	3c df       	rcall	.-392    	; 0xa5c <send_data_and_wait>
     be4:	80 91 b9 00 	lds	r24, 0x00B9
     be8:	88 7f       	andi	r24, 0xF8	; 248
     bea:	88 32       	cpi	r24, 0x28	; 40
     bec:	19 f0       	breq	.+6      	; 0xbf4 <TWI_send_command+0x5c>
     bee:	26 df       	rcall	.-436    	; 0xa3c <Error>
     bf0:	80 e0       	ldi	r24, 0x00	; 0
     bf2:	16 c0       	rjmp	.+44     	; 0xc20 <TWI_send_command+0x88>
     bf4:	8d 2f       	mov	r24, r29
     bf6:	32 df       	rcall	.-412    	; 0xa5c <send_data_and_wait>
     bf8:	80 91 b9 00 	lds	r24, 0x00B9
     bfc:	88 7f       	andi	r24, 0xF8	; 248
     bfe:	88 32       	cpi	r24, 0x28	; 40
     c00:	19 f0       	breq	.+6      	; 0xc08 <TWI_send_command+0x70>
     c02:	1c df       	rcall	.-456    	; 0xa3c <Error>
     c04:	80 e0       	ldi	r24, 0x00	; 0
     c06:	0c c0       	rjmp	.+24     	; 0xc20 <TWI_send_command+0x88>
     c08:	81 2f       	mov	r24, r17
     c0a:	28 df       	rcall	.-432    	; 0xa5c <send_data_and_wait>
     c0c:	80 91 b9 00 	lds	r24, 0x00B9
     c10:	88 7f       	andi	r24, 0xF8	; 248
     c12:	88 32       	cpi	r24, 0x28	; 40
     c14:	19 f0       	breq	.+6      	; 0xc1c <TWI_send_command+0x84>
     c16:	12 df       	rcall	.-476    	; 0xa3c <Error>
     c18:	80 e0       	ldi	r24, 0x00	; 0
     c1a:	02 c0       	rjmp	.+4      	; 0xc20 <TWI_send_command+0x88>
     c1c:	0b df       	rcall	.-490    	; 0xa34 <stop_bus>
     c1e:	81 e0       	ldi	r24, 0x01	; 1
     c20:	df 91       	pop	r29
     c22:	cf 91       	pop	r28
     c24:	1f 91       	pop	r17
     c26:	08 95       	ret

00000c28 <TWI_send_string>:
     c28:	ef 92       	push	r14
     c2a:	ff 92       	push	r15
     c2c:	0f 93       	push	r16
     c2e:	1f 93       	push	r17
     c30:	cf 93       	push	r28
     c32:	df 93       	push	r29
     c34:	c8 2f       	mov	r28, r24
     c36:	e6 2e       	mov	r14, r22
     c38:	f7 2e       	mov	r15, r23
     c3a:	f8 de       	rcall	.-528    	; 0xa2c <start_bus>
     c3c:	09 df       	rcall	.-494    	; 0xa50 <wait_for_bus>
     c3e:	90 91 b9 00 	lds	r25, 0x00B9
     c42:	98 7f       	andi	r25, 0xF8	; 248
     c44:	98 30       	cpi	r25, 0x08	; 8
     c46:	19 f0       	breq	.+6      	; 0xc4e <TWI_send_string+0x26>
     c48:	f9 de       	rcall	.-526    	; 0xa3c <Error>
     c4a:	80 e0       	ldi	r24, 0x00	; 0
     c4c:	2c c0       	rjmp	.+88     	; 0xca6 <TWI_send_string+0x7e>
     c4e:	8c 2f       	mov	r24, r28
     c50:	05 df       	rcall	.-502    	; 0xa5c <send_data_and_wait>
     c52:	80 91 b9 00 	lds	r24, 0x00B9
     c56:	88 7f       	andi	r24, 0xF8	; 248
     c58:	88 31       	cpi	r24, 0x18	; 24
     c5a:	19 f0       	breq	.+6      	; 0xc62 <TWI_send_string+0x3a>
     c5c:	ef de       	rcall	.-546    	; 0xa3c <Error>
     c5e:	80 e0       	ldi	r24, 0x00	; 0
     c60:	22 c0       	rjmp	.+68     	; 0xca6 <TWI_send_string+0x7e>
     c62:	89 e1       	ldi	r24, 0x19	; 25
     c64:	fb de       	rcall	.-522    	; 0xa5c <send_data_and_wait>
     c66:	80 91 b9 00 	lds	r24, 0x00B9
     c6a:	88 7f       	andi	r24, 0xF8	; 248
     c6c:	88 32       	cpi	r24, 0x28	; 40
     c6e:	29 f4       	brne	.+10     	; 0xc7a <TWI_send_string+0x52>
     c70:	0e 2d       	mov	r16, r14
     c72:	1f 2d       	mov	r17, r15
     c74:	c0 e0       	ldi	r28, 0x00	; 0
     c76:	d0 e0       	ldi	r29, 0x00	; 0
     c78:	08 c0       	rjmp	.+16     	; 0xc8a <TWI_send_string+0x62>
     c7a:	e0 de       	rcall	.-576    	; 0xa3c <Error>
     c7c:	80 e0       	ldi	r24, 0x00	; 0
     c7e:	13 c0       	rjmp	.+38     	; 0xca6 <TWI_send_string+0x7e>
     c80:	f8 01       	movw	r30, r16
     c82:	81 91       	ld	r24, Z+
     c84:	8f 01       	movw	r16, r30
     c86:	ea de       	rcall	.-556    	; 0xa5c <send_data_and_wait>
     c88:	21 96       	adiw	r28, 0x01	; 1
     c8a:	ee 2d       	mov	r30, r14
     c8c:	ff 2d       	mov	r31, r15
     c8e:	df 01       	movw	r26, r30
     c90:	0d 90       	ld	r0, X+
     c92:	00 20       	and	r0, r0
     c94:	e9 f7       	brne	.-6      	; 0xc90 <TWI_send_string+0x68>
     c96:	11 97       	sbiw	r26, 0x01	; 1
     c98:	ae 1b       	sub	r26, r30
     c9a:	bf 0b       	sbc	r27, r31
     c9c:	ca 17       	cp	r28, r26
     c9e:	db 07       	cpc	r29, r27
     ca0:	78 f3       	brcs	.-34     	; 0xc80 <TWI_send_string+0x58>
     ca2:	c8 de       	rcall	.-624    	; 0xa34 <stop_bus>
     ca4:	81 e0       	ldi	r24, 0x01	; 1
     ca6:	df 91       	pop	r29
     ca8:	cf 91       	pop	r28
     caa:	1f 91       	pop	r17
     cac:	0f 91       	pop	r16
     cae:	ff 90       	pop	r15
     cb0:	ef 90       	pop	r14
     cb2:	08 95       	ret

00000cb4 <TWI_send_string_fixed_length>:
     cb4:	ef 92       	push	r14
     cb6:	ff 92       	push	r15
     cb8:	0f 93       	push	r16
     cba:	1f 93       	push	r17
     cbc:	cf 93       	push	r28
     cbe:	df 93       	push	r29
     cc0:	c8 2f       	mov	r28, r24
     cc2:	e6 2e       	mov	r14, r22
     cc4:	f7 2e       	mov	r15, r23
     cc6:	8a 01       	movw	r16, r20
     cc8:	b1 de       	rcall	.-670    	; 0xa2c <start_bus>
     cca:	c2 de       	rcall	.-636    	; 0xa50 <wait_for_bus>
     ccc:	90 91 b9 00 	lds	r25, 0x00B9
     cd0:	98 7f       	andi	r25, 0xF8	; 248
     cd2:	98 30       	cpi	r25, 0x08	; 8
     cd4:	19 f0       	breq	.+6      	; 0xcdc <TWI_send_string_fixed_length+0x28>
     cd6:	b2 de       	rcall	.-668    	; 0xa3c <Error>
     cd8:	80 e0       	ldi	r24, 0x00	; 0
     cda:	23 c0       	rjmp	.+70     	; 0xd22 <TWI_send_string_fixed_length+0x6e>
     cdc:	8c 2f       	mov	r24, r28
     cde:	be de       	rcall	.-644    	; 0xa5c <send_data_and_wait>
     ce0:	80 91 b9 00 	lds	r24, 0x00B9
     ce4:	88 7f       	andi	r24, 0xF8	; 248
     ce6:	88 31       	cpi	r24, 0x18	; 24
     ce8:	19 f0       	breq	.+6      	; 0xcf0 <TWI_send_string_fixed_length+0x3c>
     cea:	a8 de       	rcall	.-688    	; 0xa3c <Error>
     cec:	80 e0       	ldi	r24, 0x00	; 0
     cee:	19 c0       	rjmp	.+50     	; 0xd22 <TWI_send_string_fixed_length+0x6e>
     cf0:	89 e1       	ldi	r24, 0x19	; 25
     cf2:	b4 de       	rcall	.-664    	; 0xa5c <send_data_and_wait>
     cf4:	80 91 b9 00 	lds	r24, 0x00B9
     cf8:	88 7f       	andi	r24, 0xF8	; 248
     cfa:	88 32       	cpi	r24, 0x28	; 40
     cfc:	21 f4       	brne	.+8      	; 0xd06 <TWI_send_string_fixed_length+0x52>
     cfe:	10 16       	cp	r1, r16
     d00:	11 06       	cpc	r1, r17
     d02:	24 f0       	brlt	.+8      	; 0xd0c <TWI_send_string_fixed_length+0x58>
     d04:	0c c0       	rjmp	.+24     	; 0xd1e <TWI_send_string_fixed_length+0x6a>
     d06:	9a de       	rcall	.-716    	; 0xa3c <Error>
     d08:	80 e0       	ldi	r24, 0x00	; 0
     d0a:	0b c0       	rjmp	.+22     	; 0xd22 <TWI_send_string_fixed_length+0x6e>
     d0c:	ce 2d       	mov	r28, r14
     d0e:	df 2d       	mov	r29, r15
     d10:	0c 0f       	add	r16, r28
     d12:	1d 1f       	adc	r17, r29
     d14:	89 91       	ld	r24, Y+
     d16:	a2 de       	rcall	.-700    	; 0xa5c <send_data_and_wait>
     d18:	c0 17       	cp	r28, r16
     d1a:	d1 07       	cpc	r29, r17
     d1c:	d9 f7       	brne	.-10     	; 0xd14 <TWI_send_string_fixed_length+0x60>
     d1e:	8a de       	rcall	.-748    	; 0xa34 <stop_bus>
     d20:	81 e0       	ldi	r24, 0x01	; 1
     d22:	df 91       	pop	r29
     d24:	cf 91       	pop	r28
     d26:	1f 91       	pop	r17
     d28:	0f 91       	pop	r16
     d2a:	ff 90       	pop	r15
     d2c:	ef 90       	pop	r14
     d2e:	08 95       	ret

00000d30 <TWI_send_float>:
     d30:	ef 92       	push	r14
     d32:	ff 92       	push	r15
     d34:	0f 93       	push	r16
     d36:	1f 93       	push	r17
     d38:	cf 93       	push	r28
     d3a:	df 93       	push	r29
     d3c:	00 d0       	rcall	.+0      	; 0xd3e <TWI_send_float+0xe>
     d3e:	00 d0       	rcall	.+0      	; 0xd40 <TWI_send_float+0x10>
     d40:	cd b7       	in	r28, 0x3d	; 61
     d42:	de b7       	in	r29, 0x3e	; 62
     d44:	18 2f       	mov	r17, r24
     d46:	49 83       	std	Y+1, r20	; 0x01
     d48:	5a 83       	std	Y+2, r21	; 0x02
     d4a:	6b 83       	std	Y+3, r22	; 0x03
     d4c:	7c 83       	std	Y+4, r23	; 0x04
     d4e:	6e de       	rcall	.-804    	; 0xa2c <start_bus>
     d50:	7f de       	rcall	.-770    	; 0xa50 <wait_for_bus>
     d52:	90 91 b9 00 	lds	r25, 0x00B9
     d56:	98 7f       	andi	r25, 0xF8	; 248
     d58:	98 30       	cpi	r25, 0x08	; 8
     d5a:	19 f0       	breq	.+6      	; 0xd62 <TWI_send_float+0x32>
     d5c:	6f de       	rcall	.-802    	; 0xa3c <Error>
     d5e:	80 e0       	ldi	r24, 0x00	; 0
     d60:	24 c0       	rjmp	.+72     	; 0xdaa <TWI_send_float+0x7a>
     d62:	81 2f       	mov	r24, r17
     d64:	7b de       	rcall	.-778    	; 0xa5c <send_data_and_wait>
     d66:	80 91 b9 00 	lds	r24, 0x00B9
     d6a:	88 7f       	andi	r24, 0xF8	; 248
     d6c:	88 31       	cpi	r24, 0x18	; 24
     d6e:	19 f0       	breq	.+6      	; 0xd76 <TWI_send_float+0x46>
     d70:	65 de       	rcall	.-822    	; 0xa3c <Error>
     d72:	80 e0       	ldi	r24, 0x00	; 0
     d74:	1a c0       	rjmp	.+52     	; 0xdaa <TWI_send_float+0x7a>
     d76:	86 e0       	ldi	r24, 0x06	; 6
     d78:	71 de       	rcall	.-798    	; 0xa5c <send_data_and_wait>
     d7a:	80 91 b9 00 	lds	r24, 0x00B9
     d7e:	88 7f       	andi	r24, 0xF8	; 248
     d80:	88 32       	cpi	r24, 0x28	; 40
     d82:	19 f0       	breq	.+6      	; 0xd8a <TWI_send_float+0x5a>
     d84:	5b de       	rcall	.-842    	; 0xa3c <Error>
     d86:	80 e0       	ldi	r24, 0x00	; 0
     d88:	10 c0       	rjmp	.+32     	; 0xdaa <TWI_send_float+0x7a>
     d8a:	8e 01       	movw	r16, r28
     d8c:	0f 5f       	subi	r16, 0xFF	; 255
     d8e:	1f 4f       	sbci	r17, 0xFF	; 255
     d90:	7e 01       	movw	r14, r28
     d92:	85 e0       	ldi	r24, 0x05	; 5
     d94:	e8 0e       	add	r14, r24
     d96:	f1 1c       	adc	r15, r1
     d98:	f8 01       	movw	r30, r16
     d9a:	81 91       	ld	r24, Z+
     d9c:	8f 01       	movw	r16, r30
     d9e:	5e de       	rcall	.-836    	; 0xa5c <send_data_and_wait>
     da0:	0e 15       	cp	r16, r14
     da2:	1f 05       	cpc	r17, r15
     da4:	c9 f7       	brne	.-14     	; 0xd98 <TWI_send_float+0x68>
     da6:	46 de       	rcall	.-884    	; 0xa34 <stop_bus>
     da8:	81 e0       	ldi	r24, 0x01	; 1
     daa:	0f 90       	pop	r0
     dac:	0f 90       	pop	r0
     dae:	0f 90       	pop	r0
     db0:	0f 90       	pop	r0
     db2:	df 91       	pop	r29
     db4:	cf 91       	pop	r28
     db6:	1f 91       	pop	r17
     db8:	0f 91       	pop	r16
     dba:	ff 90       	pop	r15
     dbc:	ef 90       	pop	r14
     dbe:	08 95       	ret

00000dc0 <TWI_get_command>:
     dc0:	88 50       	subi	r24, 0x08	; 8
     dc2:	9d 4d       	sbci	r25, 0xDD	; 221
     dc4:	fc 01       	movw	r30, r24
     dc6:	80 81       	ld	r24, Z
     dc8:	08 95       	ret

00000dca <TWI_get_sensor>:
     dca:	8e 5e       	subi	r24, 0xEE	; 238
     dcc:	9b 4d       	sbci	r25, 0xDB	; 219
     dce:	fc 01       	movw	r30, r24
     dd0:	80 81       	ld	r24, Z
     dd2:	08 95       	ret

00000dd4 <TWI_get_control_setting>:
     dd4:	83 50       	subi	r24, 0x03	; 3
     dd6:	9c 4d       	sbci	r25, 0xDC	; 220
     dd8:	fc 01       	movw	r30, r24
     dda:	80 81       	ld	r24, Z
     ddc:	08 95       	ret

00000dde <TWI_get_autonom_settings>:
     dde:	80 91 fb 22 	lds	r24, 0x22FB
     de2:	08 95       	ret

00000de4 <TWI_sensor_flag>:
     de4:	80 91 bf 22 	lds	r24, 0x22BF
     de8:	88 23       	and	r24, r24
     dea:	21 f0       	breq	.+8      	; 0xdf4 <TWI_sensor_flag+0x10>
     dec:	10 92 bf 22 	sts	0x22BF, r1
     df0:	81 e0       	ldi	r24, 0x01	; 1
     df2:	08 95       	ret
     df4:	80 e0       	ldi	r24, 0x00	; 0
     df6:	08 95       	ret

00000df8 <TWI_command_flag>:
     df8:	80 91 be 22 	lds	r24, 0x22BE
     dfc:	88 23       	and	r24, r24
     dfe:	21 f0       	breq	.+8      	; 0xe08 <TWI_command_flag+0x10>
     e00:	10 92 be 22 	sts	0x22BE, r1
     e04:	81 e0       	ldi	r24, 0x01	; 1
     e06:	08 95       	ret
     e08:	80 e0       	ldi	r24, 0x00	; 0
     e0a:	08 95       	ret

00000e0c <TWI_control_settings_flag>:
     e0c:	80 91 bd 22 	lds	r24, 0x22BD
     e10:	88 23       	and	r24, r24
     e12:	21 f0       	breq	.+8      	; 0xe1c <TWI_control_settings_flag+0x10>
     e14:	10 92 bd 22 	sts	0x22BD, r1
     e18:	81 e0       	ldi	r24, 0x01	; 1
     e1a:	08 95       	ret
     e1c:	80 e0       	ldi	r24, 0x00	; 0
     e1e:	08 95       	ret

00000e20 <TWI_autonom_settings_flag>:
     e20:	80 91 bc 22 	lds	r24, 0x22BC
     e24:	88 23       	and	r24, r24
     e26:	21 f0       	breq	.+8      	; 0xe30 <TWI_autonom_settings_flag+0x10>
     e28:	10 92 bc 22 	sts	0x22BC, r1
     e2c:	81 e0       	ldi	r24, 0x01	; 1
     e2e:	08 95       	ret
     e30:	80 e0       	ldi	r24, 0x00	; 0
     e32:	08 95       	ret

00000e34 <write_to_TwiFIFO>:
     e34:	ef 92       	push	r14
     e36:	ff 92       	push	r15
     e38:	0f 93       	push	r16
     e3a:	1f 93       	push	r17
     e3c:	cf 93       	push	r28
     e3e:	df 93       	push	r29
     e40:	e8 2e       	mov	r14, r24
     e42:	f9 2e       	mov	r15, r25
     e44:	e8 2f       	mov	r30, r24
     e46:	f9 2f       	mov	r31, r25
     e48:	df 01       	movw	r26, r30
     e4a:	0d 90       	ld	r0, X+
     e4c:	00 20       	and	r0, r0
     e4e:	e9 f7       	brne	.-6      	; 0xe4a <write_to_TwiFIFO+0x16>
     e50:	11 97       	sbiw	r26, 0x01	; 1
     e52:	bd 01       	movw	r22, r26
     e54:	6e 1b       	sub	r22, r30
     e56:	7f 0b       	sbc	r23, r31
     e58:	80 91 07 01 	lds	r24, 0x0107
     e5c:	90 91 08 01 	lds	r25, 0x0108
     e60:	e8 da       	rcall	.-2608   	; 0x432 <FifoWrite>
     e62:	81 11       	cpse	r24, r1
     e64:	1e c0       	rjmp	.+60     	; 0xea2 <write_to_TwiFIFO+0x6e>
     e66:	0e 2d       	mov	r16, r14
     e68:	1f 2d       	mov	r17, r15
     e6a:	c0 e0       	ldi	r28, 0x00	; 0
     e6c:	d0 e0       	ldi	r29, 0x00	; 0
     e6e:	0b c0       	rjmp	.+22     	; 0xe86 <write_to_TwiFIFO+0x52>
     e70:	f8 01       	movw	r30, r16
     e72:	61 91       	ld	r22, Z+
     e74:	8f 01       	movw	r16, r30
     e76:	80 91 07 01 	lds	r24, 0x0107
     e7a:	90 91 08 01 	lds	r25, 0x0108
     e7e:	d9 da       	rcall	.-2638   	; 0x432 <FifoWrite>
     e80:	81 11       	cpse	r24, r1
     e82:	11 c0       	rjmp	.+34     	; 0xea6 <write_to_TwiFIFO+0x72>
     e84:	21 96       	adiw	r28, 0x01	; 1
     e86:	ee 2d       	mov	r30, r14
     e88:	ff 2d       	mov	r31, r15
     e8a:	df 01       	movw	r26, r30
     e8c:	0d 90       	ld	r0, X+
     e8e:	00 20       	and	r0, r0
     e90:	e9 f7       	brne	.-6      	; 0xe8c <write_to_TwiFIFO+0x58>
     e92:	11 97       	sbiw	r26, 0x01	; 1
     e94:	ae 1b       	sub	r26, r30
     e96:	bf 0b       	sbc	r27, r31
     e98:	ca 17       	cp	r28, r26
     e9a:	db 07       	cpc	r29, r27
     e9c:	48 f3       	brcs	.-46     	; 0xe70 <write_to_TwiFIFO+0x3c>
     e9e:	80 e0       	ldi	r24, 0x00	; 0
     ea0:	03 c0       	rjmp	.+6      	; 0xea8 <write_to_TwiFIFO+0x74>
     ea2:	81 e0       	ldi	r24, 0x01	; 1
     ea4:	01 c0       	rjmp	.+2      	; 0xea8 <write_to_TwiFIFO+0x74>
     ea6:	81 e0       	ldi	r24, 0x01	; 1
     ea8:	df 91       	pop	r29
     eaa:	cf 91       	pop	r28
     eac:	1f 91       	pop	r17
     eae:	0f 91       	pop	r16
     eb0:	ff 90       	pop	r15
     eb2:	ef 90       	pop	r14
     eb4:	08 95       	ret

00000eb6 <__vector_26>:
     eb6:	1f 92       	push	r1
     eb8:	0f 92       	push	r0
     eba:	0f b6       	in	r0, 0x3f	; 63
     ebc:	0f 92       	push	r0
     ebe:	11 24       	eor	r1, r1
     ec0:	0b b6       	in	r0, 0x3b	; 59
     ec2:	0f 92       	push	r0
     ec4:	2f 93       	push	r18
     ec6:	3f 93       	push	r19
     ec8:	4f 93       	push	r20
     eca:	5f 93       	push	r21
     ecc:	6f 93       	push	r22
     ece:	7f 93       	push	r23
     ed0:	8f 93       	push	r24
     ed2:	9f 93       	push	r25
     ed4:	af 93       	push	r26
     ed6:	bf 93       	push	r27
     ed8:	cf 93       	push	r28
     eda:	df 93       	push	r29
     edc:	ef 93       	push	r30
     ede:	ff 93       	push	r31
     ee0:	80 91 02 24 	lds	r24, 0x2402
     ee4:	80 34       	cpi	r24, 0x40	; 64
     ee6:	09 f4       	brne	.+2      	; 0xeea <__vector_26+0x34>
     ee8:	87 c0       	rjmp	.+270    	; 0xff8 <__vector_26+0x142>
     eea:	80 38       	cpi	r24, 0x80	; 128
     eec:	21 f0       	breq	.+8      	; 0xef6 <__vector_26+0x40>
     eee:	80 32       	cpi	r24, 0x20	; 32
     ef0:	09 f0       	breq	.+2      	; 0xef4 <__vector_26+0x3e>
     ef2:	7f c1       	rjmp	.+766    	; 0x11f2 <__vector_26+0x33c>
     ef4:	c9 c0       	rjmp	.+402    	; 0x1088 <__vector_26+0x1d2>
     ef6:	80 91 b9 00 	lds	r24, 0x00B9
     efa:	88 7f       	andi	r24, 0xF8	; 248
     efc:	80 36       	cpi	r24, 0x60	; 96
     efe:	29 f0       	breq	.+10     	; 0xf0a <__vector_26+0x54>
     f00:	80 91 b9 00 	lds	r24, 0x00B9
     f04:	88 7f       	andi	r24, 0xF8	; 248
     f06:	88 36       	cpi	r24, 0x68	; 104
     f08:	21 f4       	brne	.+8      	; 0xf12 <__vector_26+0x5c>
     f0a:	81 e0       	ldi	r24, 0x01	; 1
     f0c:	80 93 05 24 	sts	0x2405, r24
     f10:	71 c0       	rjmp	.+226    	; 0xff4 <__vector_26+0x13e>
     f12:	80 91 b9 00 	lds	r24, 0x00B9
     f16:	88 7f       	andi	r24, 0xF8	; 248
     f18:	80 37       	cpi	r24, 0x70	; 112
     f1a:	29 f0       	breq	.+10     	; 0xf26 <__vector_26+0x70>
     f1c:	80 91 b9 00 	lds	r24, 0x00B9
     f20:	88 7f       	andi	r24, 0xF8	; 248
     f22:	88 37       	cpi	r24, 0x78	; 120
     f24:	39 f4       	brne	.+14     	; 0xf34 <__vector_26+0x7e>
     f26:	8f ef       	ldi	r24, 0xFF	; 255
     f28:	90 e0       	ldi	r25, 0x00	; 0
     f2a:	90 93 0f 24 	sts	0x240F, r25
     f2e:	80 93 0e 24 	sts	0x240E, r24
     f32:	60 c0       	rjmp	.+192    	; 0xff4 <__vector_26+0x13e>
     f34:	80 91 b9 00 	lds	r24, 0x00B9
     f38:	88 7f       	andi	r24, 0xF8	; 248
     f3a:	80 38       	cpi	r24, 0x80	; 128
     f3c:	b9 f5       	brne	.+110    	; 0xfac <__vector_26+0xf6>
     f3e:	80 91 05 24 	lds	r24, 0x2405
     f42:	88 23       	and	r24, r24
     f44:	41 f0       	breq	.+16     	; 0xf56 <__vector_26+0xa0>
     f46:	81 dd       	rcall	.-1278   	; 0xa4a <get_data>
     f48:	80 93 0e 24 	sts	0x240E, r24
     f4c:	10 92 0f 24 	sts	0x240F, r1
     f50:	10 92 05 24 	sts	0x2405, r1
     f54:	4f c0       	rjmp	.+158    	; 0xff4 <__vector_26+0x13e>
     f56:	80 91 0e 24 	lds	r24, 0x240E
     f5a:	90 91 0f 24 	lds	r25, 0x240F
     f5e:	85 30       	cpi	r24, 0x05	; 5
     f60:	91 05       	cpc	r25, r1
     f62:	71 f0       	breq	.+28     	; 0xf80 <__vector_26+0xca>
     f64:	24 f4       	brge	.+8      	; 0xf6e <__vector_26+0xb8>
     f66:	01 97       	sbiw	r24, 0x01	; 1
     f68:	09 f0       	breq	.+2      	; 0xf6c <__vector_26+0xb6>
     f6a:	44 c0       	rjmp	.+136    	; 0xff4 <__vector_26+0x13e>
     f6c:	07 c0       	rjmp	.+14     	; 0xf7c <__vector_26+0xc6>
     f6e:	86 30       	cpi	r24, 0x06	; 6
     f70:	91 05       	cpc	r25, r1
     f72:	51 f0       	breq	.+20     	; 0xf88 <__vector_26+0xd2>
     f74:	49 97       	sbiw	r24, 0x19	; 25
     f76:	09 f0       	breq	.+2      	; 0xf7a <__vector_26+0xc4>
     f78:	3d c0       	rjmp	.+122    	; 0xff4 <__vector_26+0x13e>
     f7a:	04 c0       	rjmp	.+8      	; 0xf84 <__vector_26+0xce>
     f7c:	bb dd       	rcall	.-1162   	; 0xaf4 <get_control_settings_from_bus>
     f7e:	3a c0       	rjmp	.+116    	; 0xff4 <__vector_26+0x13e>
     f80:	ca dd       	rcall	.-1132   	; 0xb16 <get_autonom_settings_from_bus>
     f82:	38 c0       	rjmp	.+112    	; 0xff4 <__vector_26+0x13e>
     f84:	cc dd       	rcall	.-1128   	; 0xb1e <get_char_from_bus>
     f86:	36 c0       	rjmp	.+108    	; 0xff4 <__vector_26+0x13e>
     f88:	c0 91 03 24 	lds	r28, 0x2403
     f8c:	d0 91 04 24 	lds	r29, 0x2404
     f90:	5c dd       	rcall	.-1352   	; 0xa4a <get_data>
     f92:	cc 50       	subi	r28, 0x0C	; 12
     f94:	dd 4d       	sbci	r29, 0xDD	; 221
     f96:	88 83       	st	Y, r24
     f98:	80 91 03 24 	lds	r24, 0x2403
     f9c:	90 91 04 24 	lds	r25, 0x2404
     fa0:	01 96       	adiw	r24, 0x01	; 1
     fa2:	90 93 04 24 	sts	0x2404, r25
     fa6:	80 93 03 24 	sts	0x2403, r24
     faa:	24 c0       	rjmp	.+72     	; 0xff4 <__vector_26+0x13e>
     fac:	80 91 b9 00 	lds	r24, 0x00B9
     fb0:	88 7f       	andi	r24, 0xF8	; 248
     fb2:	80 39       	cpi	r24, 0x90	; 144
     fb4:	11 f4       	brne	.+4      	; 0xfba <__vector_26+0x104>
     fb6:	73 dd       	rcall	.-1306   	; 0xa9e <get_sensor_from_bus>
     fb8:	1d c0       	rjmp	.+58     	; 0xff4 <__vector_26+0x13e>
     fba:	80 91 b9 00 	lds	r24, 0x00B9
     fbe:	88 7f       	andi	r24, 0xF8	; 248
     fc0:	80 3a       	cpi	r24, 0xA0	; 160
     fc2:	c1 f4       	brne	.+48     	; 0xff4 <__vector_26+0x13e>
     fc4:	51 dd       	rcall	.-1374   	; 0xa68 <stop_twi>
     fc6:	80 91 0e 24 	lds	r24, 0x240E
     fca:	90 91 0f 24 	lds	r25, 0x240F
     fce:	85 30       	cpi	r24, 0x05	; 5
     fd0:	91 05       	cpc	r25, r1
     fd2:	49 f0       	breq	.+18     	; 0xfe6 <__vector_26+0x130>
     fd4:	89 31       	cpi	r24, 0x19	; 25
     fd6:	91 05       	cpc	r25, r1
     fd8:	51 f0       	breq	.+20     	; 0xfee <__vector_26+0x138>
     fda:	01 97       	sbiw	r24, 0x01	; 1
     fdc:	59 f4       	brne	.+22     	; 0xff4 <__vector_26+0x13e>
     fde:	81 e0       	ldi	r24, 0x01	; 1
     fe0:	80 93 bd 22 	sts	0x22BD, r24
     fe4:	07 c0       	rjmp	.+14     	; 0xff4 <__vector_26+0x13e>
     fe6:	81 e0       	ldi	r24, 0x01	; 1
     fe8:	80 93 bc 22 	sts	0x22BC, r24
     fec:	03 c0       	rjmp	.+6      	; 0xff4 <__vector_26+0x13e>
     fee:	8c ef       	ldi	r24, 0xFC	; 252
     ff0:	92 e2       	ldi	r25, 0x22	; 34
     ff2:	20 df       	rcall	.-448    	; 0xe34 <write_to_TwiFIFO>
     ff4:	4e dd       	rcall	.-1380   	; 0xa92 <reset_TWI>
     ff6:	fd c0       	rjmp	.+506    	; 0x11f2 <__vector_26+0x33c>
     ff8:	80 91 b9 00 	lds	r24, 0x00B9
     ffc:	88 7f       	andi	r24, 0xF8	; 248
     ffe:	80 36       	cpi	r24, 0x60	; 96
    1000:	29 f0       	breq	.+10     	; 0x100c <__vector_26+0x156>
    1002:	80 91 b9 00 	lds	r24, 0x00B9
    1006:	88 7f       	andi	r24, 0xF8	; 248
    1008:	88 36       	cpi	r24, 0x68	; 104
    100a:	21 f4       	brne	.+8      	; 0x1014 <__vector_26+0x15e>
    100c:	81 e0       	ldi	r24, 0x01	; 1
    100e:	80 93 05 24 	sts	0x2405, r24
    1012:	38 c0       	rjmp	.+112    	; 0x1084 <__vector_26+0x1ce>
    1014:	80 91 b9 00 	lds	r24, 0x00B9
    1018:	88 7f       	andi	r24, 0xF8	; 248
    101a:	80 38       	cpi	r24, 0x80	; 128
    101c:	e1 f4       	brne	.+56     	; 0x1056 <__vector_26+0x1a0>
    101e:	80 91 05 24 	lds	r24, 0x2405
    1022:	88 23       	and	r24, r24
    1024:	41 f0       	breq	.+16     	; 0x1036 <__vector_26+0x180>
    1026:	11 dd       	rcall	.-1502   	; 0xa4a <get_data>
    1028:	80 93 0e 24 	sts	0x240E, r24
    102c:	10 92 0f 24 	sts	0x240F, r1
    1030:	10 92 05 24 	sts	0x2405, r1
    1034:	27 c0       	rjmp	.+78     	; 0x1084 <__vector_26+0x1ce>
    1036:	80 91 0e 24 	lds	r24, 0x240E
    103a:	90 91 0f 24 	lds	r25, 0x240F
    103e:	82 30       	cpi	r24, 0x02	; 2
    1040:	91 05       	cpc	r25, r1
    1042:	19 f0       	breq	.+6      	; 0x104a <__vector_26+0x194>
    1044:	49 97       	sbiw	r24, 0x19	; 25
    1046:	f1 f4       	brne	.+60     	; 0x1084 <__vector_26+0x1ce>
    1048:	04 c0       	rjmp	.+8      	; 0x1052 <__vector_26+0x19c>
    104a:	ff dc       	rcall	.-1538   	; 0xa4a <get_data>
    104c:	80 93 0d 24 	sts	0x240D, r24
    1050:	19 c0       	rjmp	.+50     	; 0x1084 <__vector_26+0x1ce>
    1052:	65 dd       	rcall	.-1334   	; 0xb1e <get_char_from_bus>
    1054:	17 c0       	rjmp	.+46     	; 0x1084 <__vector_26+0x1ce>
    1056:	80 91 b9 00 	lds	r24, 0x00B9
    105a:	88 7f       	andi	r24, 0xF8	; 248
    105c:	80 3a       	cpi	r24, 0xA0	; 160
    105e:	91 f4       	brne	.+36     	; 0x1084 <__vector_26+0x1ce>
    1060:	03 dd       	rcall	.-1530   	; 0xa68 <stop_twi>
    1062:	80 91 0e 24 	lds	r24, 0x240E
    1066:	90 91 0f 24 	lds	r25, 0x240F
    106a:	82 30       	cpi	r24, 0x02	; 2
    106c:	91 05       	cpc	r25, r1
    106e:	19 f0       	breq	.+6      	; 0x1076 <__vector_26+0x1c0>
    1070:	49 97       	sbiw	r24, 0x19	; 25
    1072:	41 f4       	brne	.+16     	; 0x1084 <__vector_26+0x1ce>
    1074:	04 c0       	rjmp	.+8      	; 0x107e <__vector_26+0x1c8>
    1076:	81 e0       	ldi	r24, 0x01	; 1
    1078:	80 93 ba 22 	sts	0x22BA, r24
    107c:	03 c0       	rjmp	.+6      	; 0x1084 <__vector_26+0x1ce>
    107e:	8c ef       	ldi	r24, 0xFC	; 252
    1080:	92 e2       	ldi	r25, 0x22	; 34
    1082:	d8 de       	rcall	.-592    	; 0xe34 <write_to_TwiFIFO>
    1084:	06 dd       	rcall	.-1524   	; 0xa92 <reset_TWI>
    1086:	b5 c0       	rjmp	.+362    	; 0x11f2 <__vector_26+0x33c>
    1088:	80 91 b9 00 	lds	r24, 0x00B9
    108c:	88 7f       	andi	r24, 0xF8	; 248
    108e:	80 36       	cpi	r24, 0x60	; 96
    1090:	29 f0       	breq	.+10     	; 0x109c <__vector_26+0x1e6>
    1092:	80 91 b9 00 	lds	r24, 0x00B9
    1096:	88 7f       	andi	r24, 0xF8	; 248
    1098:	88 36       	cpi	r24, 0x68	; 104
    109a:	21 f4       	brne	.+8      	; 0x10a4 <__vector_26+0x1ee>
    109c:	81 e0       	ldi	r24, 0x01	; 1
    109e:	80 93 05 24 	sts	0x2405, r24
    10a2:	a6 c0       	rjmp	.+332    	; 0x11f0 <__vector_26+0x33a>
    10a4:	80 91 b9 00 	lds	r24, 0x00B9
    10a8:	88 7f       	andi	r24, 0xF8	; 248
    10aa:	80 37       	cpi	r24, 0x70	; 112
    10ac:	29 f0       	breq	.+10     	; 0x10b8 <__vector_26+0x202>
    10ae:	80 91 b9 00 	lds	r24, 0x00B9
    10b2:	88 7f       	andi	r24, 0xF8	; 248
    10b4:	88 37       	cpi	r24, 0x78	; 120
    10b6:	39 f4       	brne	.+14     	; 0x10c6 <__vector_26+0x210>
    10b8:	8f ef       	ldi	r24, 0xFF	; 255
    10ba:	90 e0       	ldi	r25, 0x00	; 0
    10bc:	90 93 0f 24 	sts	0x240F, r25
    10c0:	80 93 0e 24 	sts	0x240E, r24
    10c4:	95 c0       	rjmp	.+298    	; 0x11f0 <__vector_26+0x33a>
    10c6:	80 91 b9 00 	lds	r24, 0x00B9
    10ca:	88 7f       	andi	r24, 0xF8	; 248
    10cc:	80 38       	cpi	r24, 0x80	; 128
    10ce:	09 f0       	breq	.+2      	; 0x10d2 <__vector_26+0x21c>
    10d0:	62 c0       	rjmp	.+196    	; 0x1196 <__vector_26+0x2e0>
    10d2:	80 91 05 24 	lds	r24, 0x2405
    10d6:	88 23       	and	r24, r24
    10d8:	41 f0       	breq	.+16     	; 0x10ea <__vector_26+0x234>
    10da:	b7 dc       	rcall	.-1682   	; 0xa4a <get_data>
    10dc:	80 93 0e 24 	sts	0x240E, r24
    10e0:	10 92 0f 24 	sts	0x240F, r1
    10e4:	10 92 05 24 	sts	0x2405, r1
    10e8:	83 c0       	rjmp	.+262    	; 0x11f0 <__vector_26+0x33a>
    10ea:	80 91 0e 24 	lds	r24, 0x240E
    10ee:	90 91 0f 24 	lds	r25, 0x240F
    10f2:	81 30       	cpi	r24, 0x01	; 1
    10f4:	91 05       	cpc	r25, r1
    10f6:	09 f4       	brne	.+2      	; 0x10fa <__vector_26+0x244>
    10f8:	4a c0       	rjmp	.+148    	; 0x118e <__vector_26+0x2d8>
    10fa:	1c f4       	brge	.+6      	; 0x1102 <__vector_26+0x24c>
    10fc:	89 2b       	or	r24, r25
    10fe:	41 f0       	breq	.+16     	; 0x1110 <__vector_26+0x25a>
    1100:	77 c0       	rjmp	.+238    	; 0x11f0 <__vector_26+0x33a>
    1102:	84 30       	cpi	r24, 0x04	; 4
    1104:	91 05       	cpc	r25, r1
    1106:	b1 f0       	breq	.+44     	; 0x1134 <__vector_26+0x27e>
    1108:	05 97       	sbiw	r24, 0x05	; 5
    110a:	09 f0       	breq	.+2      	; 0x110e <__vector_26+0x258>
    110c:	71 c0       	rjmp	.+226    	; 0x11f0 <__vector_26+0x33a>
    110e:	41 c0       	rjmp	.+130    	; 0x1192 <__vector_26+0x2dc>
    1110:	c0 91 06 24 	lds	r28, 0x2406
    1114:	d0 91 07 24 	lds	r29, 0x2407
    1118:	98 dc       	rcall	.-1744   	; 0xa4a <get_data>
    111a:	c8 50       	subi	r28, 0x08	; 8
    111c:	dd 4d       	sbci	r29, 0xDD	; 221
    111e:	88 83       	st	Y, r24
    1120:	80 91 06 24 	lds	r24, 0x2406
    1124:	90 91 07 24 	lds	r25, 0x2407
    1128:	01 96       	adiw	r24, 0x01	; 1
    112a:	90 93 07 24 	sts	0x2407, r25
    112e:	80 93 06 24 	sts	0x2406, r24
    1132:	5e c0       	rjmp	.+188    	; 0x11f0 <__vector_26+0x33a>
    1134:	8a dc       	rcall	.-1772   	; 0xa4a <get_data>
    1136:	81 11       	cpse	r24, r1
    1138:	0a c0       	rjmp	.+20     	; 0x114e <__vector_26+0x298>
    113a:	80 91 08 24 	lds	r24, 0x2408
    113e:	90 91 09 24 	lds	r25, 0x2409
    1142:	01 97       	sbiw	r24, 0x01	; 1
    1144:	90 93 09 24 	sts	0x2409, r25
    1148:	80 93 08 24 	sts	0x2408, r24
    114c:	09 c0       	rjmp	.+18     	; 0x1160 <__vector_26+0x2aa>
    114e:	80 91 08 24 	lds	r24, 0x2408
    1152:	90 91 09 24 	lds	r25, 0x2409
    1156:	01 96       	adiw	r24, 0x01	; 1
    1158:	90 93 09 24 	sts	0x2409, r25
    115c:	80 93 08 24 	sts	0x2408, r24
    1160:	80 91 08 24 	lds	r24, 0x2408
    1164:	90 91 09 24 	lds	r25, 0x2409
    1168:	18 16       	cp	r1, r24
    116a:	19 06       	cpc	r1, r25
    116c:	3c f0       	brlt	.+14     	; 0x117c <__vector_26+0x2c6>
    116e:	81 e0       	ldi	r24, 0x01	; 1
    1170:	90 e0       	ldi	r25, 0x00	; 0
    1172:	90 93 09 24 	sts	0x2409, r25
    1176:	80 93 08 24 	sts	0x2408, r24
    117a:	3a c0       	rjmp	.+116    	; 0x11f0 <__vector_26+0x33a>
    117c:	08 97       	sbiw	r24, 0x08	; 8
    117e:	c4 f1       	brlt	.+112    	; 0x11f0 <__vector_26+0x33a>
    1180:	87 e0       	ldi	r24, 0x07	; 7
    1182:	90 e0       	ldi	r25, 0x00	; 0
    1184:	90 93 09 24 	sts	0x2409, r25
    1188:	80 93 08 24 	sts	0x2408, r24
    118c:	31 c0       	rjmp	.+98     	; 0x11f0 <__vector_26+0x33a>
    118e:	b2 dc       	rcall	.-1692   	; 0xaf4 <get_control_settings_from_bus>
    1190:	2f c0       	rjmp	.+94     	; 0x11f0 <__vector_26+0x33a>
    1192:	c1 dc       	rcall	.-1662   	; 0xb16 <get_autonom_settings_from_bus>
    1194:	2d c0       	rjmp	.+90     	; 0x11f0 <__vector_26+0x33a>
    1196:	80 91 b9 00 	lds	r24, 0x00B9
    119a:	88 7f       	andi	r24, 0xF8	; 248
    119c:	80 39       	cpi	r24, 0x90	; 144
    119e:	11 f4       	brne	.+4      	; 0x11a4 <__vector_26+0x2ee>
    11a0:	7e dc       	rcall	.-1796   	; 0xa9e <get_sensor_from_bus>
    11a2:	26 c0       	rjmp	.+76     	; 0x11f0 <__vector_26+0x33a>
    11a4:	80 91 b9 00 	lds	r24, 0x00B9
    11a8:	88 7f       	andi	r24, 0xF8	; 248
    11aa:	80 3a       	cpi	r24, 0xA0	; 160
    11ac:	09 f5       	brne	.+66     	; 0x11f0 <__vector_26+0x33a>
    11ae:	5c dc       	rcall	.-1864   	; 0xa68 <stop_twi>
    11b0:	80 91 0e 24 	lds	r24, 0x240E
    11b4:	90 91 0f 24 	lds	r25, 0x240F
    11b8:	81 30       	cpi	r24, 0x01	; 1
    11ba:	91 05       	cpc	r25, r1
    11bc:	91 f0       	breq	.+36     	; 0x11e2 <__vector_26+0x32c>
    11be:	1c f4       	brge	.+6      	; 0x11c6 <__vector_26+0x310>
    11c0:	89 2b       	or	r24, r25
    11c2:	39 f0       	breq	.+14     	; 0x11d2 <__vector_26+0x31c>
    11c4:	15 c0       	rjmp	.+42     	; 0x11f0 <__vector_26+0x33a>
    11c6:	84 30       	cpi	r24, 0x04	; 4
    11c8:	91 05       	cpc	r25, r1
    11ca:	39 f0       	breq	.+14     	; 0x11da <__vector_26+0x324>
    11cc:	05 97       	sbiw	r24, 0x05	; 5
    11ce:	81 f4       	brne	.+32     	; 0x11f0 <__vector_26+0x33a>
    11d0:	0c c0       	rjmp	.+24     	; 0x11ea <__vector_26+0x334>
    11d2:	81 e0       	ldi	r24, 0x01	; 1
    11d4:	80 93 be 22 	sts	0x22BE, r24
    11d8:	0b c0       	rjmp	.+22     	; 0x11f0 <__vector_26+0x33a>
    11da:	81 e0       	ldi	r24, 0x01	; 1
    11dc:	80 93 bb 22 	sts	0x22BB, r24
    11e0:	07 c0       	rjmp	.+14     	; 0x11f0 <__vector_26+0x33a>
    11e2:	81 e0       	ldi	r24, 0x01	; 1
    11e4:	80 93 bd 22 	sts	0x22BD, r24
    11e8:	03 c0       	rjmp	.+6      	; 0x11f0 <__vector_26+0x33a>
    11ea:	81 e0       	ldi	r24, 0x01	; 1
    11ec:	80 93 bc 22 	sts	0x22BC, r24
    11f0:	50 dc       	rcall	.-1888   	; 0xa92 <reset_TWI>
    11f2:	ff 91       	pop	r31
    11f4:	ef 91       	pop	r30
    11f6:	df 91       	pop	r29
    11f8:	cf 91       	pop	r28
    11fa:	bf 91       	pop	r27
    11fc:	af 91       	pop	r26
    11fe:	9f 91       	pop	r25
    1200:	8f 91       	pop	r24
    1202:	7f 91       	pop	r23
    1204:	6f 91       	pop	r22
    1206:	5f 91       	pop	r21
    1208:	4f 91       	pop	r20
    120a:	3f 91       	pop	r19
    120c:	2f 91       	pop	r18
    120e:	0f 90       	pop	r0
    1210:	0b be       	out	0x3b, r0	; 59
    1212:	0f 90       	pop	r0
    1214:	0f be       	out	0x3f, r0	; 63
    1216:	0f 90       	pop	r0
    1218:	1f 90       	pop	r1
    121a:	18 95       	reti

0000121c <USART_init>:
		
		switch(*tag){
			case('M'): // if 'tag' is 'M'
			{
				if(USART_DecodeMessageRxFIFO()) // if decoding failed
				{
    121c:	10 92 c5 00 	sts	0x00C5, r1
    1220:	87 e0       	ldi	r24, 0x07	; 7
    1222:	80 93 c4 00 	sts	0x00C4, r24
    1226:	88 e9       	ldi	r24, 0x98	; 152
    1228:	80 93 c1 00 	sts	0x00C1, r24
    122c:	86 e0       	ldi	r24, 0x06	; 6
    122e:	80 93 c2 00 	sts	0x00C2, r24
    1232:	08 95       	ret

00001234 <USART_CheckTxReady>:
    1234:	80 91 c0 00 	lds	r24, 0x00C0
    1238:	80 72       	andi	r24, 0x20	; 32
    123a:	08 95       	ret

0000123c <USART_WriteByte>:
    123c:	cf 93       	push	r28
    123e:	c8 2f       	mov	r28, r24
    1240:	f9 df       	rcall	.-14     	; 0x1234 <USART_CheckTxReady>
    1242:	88 23       	and	r24, r24
    1244:	e9 f3       	breq	.-6      	; 0x1240 <USART_WriteByte+0x4>
    1246:	c0 93 c6 00 	sts	0x00C6, r28
    124a:	cf 91       	pop	r28
    124c:	08 95       	ret

0000124e <USART_crc16>:
    124e:	cf 92       	push	r12
    1250:	df 92       	push	r13
    1252:	ef 92       	push	r14
    1254:	ff 92       	push	r15
    1256:	0f 93       	push	r16
    1258:	1f 93       	push	r17
    125a:	cf 93       	push	r28
    125c:	df 93       	push	r29
    125e:	66 23       	and	r22, r22
    1260:	09 f4       	brne	.+2      	; 0x1264 <USART_crc16+0x16>
    1262:	3e c0       	rjmp	.+124    	; 0x12e0 <USART_crc16+0x92>
    1264:	06 2f       	mov	r16, r22
    1266:	10 e0       	ldi	r17, 0x00	; 0
    1268:	4f ef       	ldi	r20, 0xFF	; 255
    126a:	5f ef       	ldi	r21, 0xFF	; 255
    126c:	ee ef       	ldi	r30, 0xFE	; 254
    126e:	ff ef       	ldi	r31, 0xFF	; 255
    1270:	c6 2e       	mov	r12, r22
    1272:	d1 2c       	mov	r13, r1
    1274:	e8 2e       	mov	r14, r24
    1276:	f1 2c       	mov	r15, r1
    1278:	c8 e0       	ldi	r28, 0x08	; 8
    127a:	d0 e0       	ldi	r29, 0x00	; 0
    127c:	ee 3f       	cpi	r30, 0xFE	; 254
    127e:	6f ef       	ldi	r22, 0xFF	; 255
    1280:	f6 07       	cpc	r31, r22
    1282:	19 f4       	brne	.+6      	; 0x128a <USART_crc16+0x3c>
    1284:	8e 2d       	mov	r24, r14
    1286:	9f 2d       	mov	r25, r15
    1288:	30 c0       	rjmp	.+96     	; 0x12ea <USART_crc16+0x9c>
    128a:	ef 3f       	cpi	r30, 0xFF	; 255
    128c:	8f ef       	ldi	r24, 0xFF	; 255
    128e:	f8 07       	cpc	r31, r24
    1290:	19 f4       	brne	.+6      	; 0x1298 <USART_crc16+0x4a>
    1292:	8c 2d       	mov	r24, r12
    1294:	9d 2d       	mov	r25, r13
    1296:	29 c0       	rjmp	.+82     	; 0x12ea <USART_crc16+0x9c>
    1298:	df 01       	movw	r26, r30
    129a:	a1 5e       	subi	r26, 0xE1	; 225
    129c:	b9 4d       	sbci	r27, 0xD9	; 217
    129e:	8c 91       	ld	r24, X
    12a0:	90 e0       	ldi	r25, 0x00	; 0
    12a2:	23 c0       	rjmp	.+70     	; 0x12ea <USART_crc16+0x9c>
    12a4:	ba 01       	movw	r22, r20
    12a6:	68 27       	eor	r22, r24
    12a8:	79 27       	eor	r23, r25
    12aa:	60 ff       	sbrs	r22, 0
    12ac:	07 c0       	rjmp	.+14     	; 0x12bc <USART_crc16+0x6e>
    12ae:	56 95       	lsr	r21
    12b0:	47 95       	ror	r20
    12b2:	68 e0       	ldi	r22, 0x08	; 8
    12b4:	46 27       	eor	r20, r22
    12b6:	64 e8       	ldi	r22, 0x84	; 132
    12b8:	56 27       	eor	r21, r22
    12ba:	02 c0       	rjmp	.+4      	; 0x12c0 <USART_crc16+0x72>
    12bc:	56 95       	lsr	r21
    12be:	47 95       	ror	r20
    12c0:	96 95       	lsr	r25
    12c2:	87 95       	ror	r24
    12c4:	21 50       	subi	r18, 0x01	; 1
    12c6:	31 09       	sbc	r19, r1
    12c8:	69 f7       	brne	.-38     	; 0x12a4 <USART_crc16+0x56>
    12ca:	31 96       	adiw	r30, 0x01	; 1
    12cc:	e0 17       	cp	r30, r16
    12ce:	f1 07       	cpc	r31, r17
    12d0:	a9 f6       	brne	.-86     	; 0x127c <USART_crc16+0x2e>
    12d2:	9a 01       	movw	r18, r20
    12d4:	20 95       	com	r18
    12d6:	30 95       	com	r19
    12d8:	32 27       	eor	r19, r18
    12da:	23 27       	eor	r18, r19
    12dc:	32 27       	eor	r19, r18
    12de:	02 c0       	rjmp	.+4      	; 0x12e4 <USART_crc16+0x96>
    12e0:	20 e0       	ldi	r18, 0x00	; 0
    12e2:	30 e0       	ldi	r19, 0x00	; 0
    12e4:	82 2f       	mov	r24, r18
    12e6:	93 2f       	mov	r25, r19
    12e8:	02 c0       	rjmp	.+4      	; 0x12ee <USART_crc16+0xa0>
    12ea:	9e 01       	movw	r18, r28
    12ec:	db cf       	rjmp	.-74     	; 0x12a4 <USART_crc16+0x56>
    12ee:	df 91       	pop	r29
    12f0:	cf 91       	pop	r28
    12f2:	1f 91       	pop	r17
    12f4:	0f 91       	pop	r16
    12f6:	ff 90       	pop	r15
    12f8:	ef 90       	pop	r14
    12fa:	df 90       	pop	r13
    12fc:	cf 90       	pop	r12
    12fe:	08 95       	ret

00001300 <USART_SendPacket>:
    1300:	0f 93       	push	r16
    1302:	1f 93       	push	r17
    1304:	cf 93       	push	r28
    1306:	df 93       	push	r29
    1308:	9e e7       	ldi	r25, 0x7E	; 126
    130a:	90 93 1e 27 	sts	0x271E, r25
    130e:	80 93 1f 27 	sts	0x271F, r24
    1312:	60 93 20 27 	sts	0x2720, r22
    1316:	26 2f       	mov	r18, r22
    1318:	30 e0       	ldi	r19, 0x00	; 0
    131a:	12 16       	cp	r1, r18
    131c:	13 06       	cpc	r1, r19
    131e:	4c f5       	brge	.+82     	; 0x1372 <USART_SendPacket+0x72>
    1320:	ef e1       	ldi	r30, 0x1F	; 31
    1322:	f6 e2       	ldi	r31, 0x26	; 38
    1324:	03 e0       	ldi	r16, 0x03	; 3
    1326:	10 e0       	ldi	r17, 0x00	; 0
    1328:	c0 e0       	ldi	r28, 0x00	; 0
    132a:	d0 e0       	ldi	r29, 0x00	; 0
    132c:	7d e7       	ldi	r23, 0x7D	; 125
    132e:	50 e2       	ldi	r21, 0x20	; 32
    1330:	90 81       	ld	r25, Z
    1332:	49 2f       	mov	r20, r25
    1334:	4d 57       	subi	r20, 0x7D	; 125
    1336:	42 30       	cpi	r20, 0x02	; 2
    1338:	80 f4       	brcc	.+32     	; 0x135a <USART_SendPacket+0x5a>
    133a:	d8 01       	movw	r26, r16
    133c:	a2 5e       	subi	r26, 0xE2	; 226
    133e:	b8 4d       	sbci	r27, 0xD8	; 216
    1340:	ac 0f       	add	r26, r28
    1342:	bd 1f       	adc	r27, r29
    1344:	7c 93       	st	X, r23
    1346:	0f 5f       	subi	r16, 0xFF	; 255
    1348:	1f 4f       	sbci	r17, 0xFF	; 255
    134a:	d8 01       	movw	r26, r16
    134c:	a2 5e       	subi	r26, 0xE2	; 226
    134e:	b8 4d       	sbci	r27, 0xD8	; 216
    1350:	ac 0f       	add	r26, r28
    1352:	bd 1f       	adc	r27, r29
    1354:	95 27       	eor	r25, r21
    1356:	9c 93       	st	X, r25
    1358:	06 c0       	rjmp	.+12     	; 0x1366 <USART_SendPacket+0x66>
    135a:	d8 01       	movw	r26, r16
    135c:	a2 5e       	subi	r26, 0xE2	; 226
    135e:	b8 4d       	sbci	r27, 0xD8	; 216
    1360:	ac 0f       	add	r26, r28
    1362:	bd 1f       	adc	r27, r29
    1364:	9c 93       	st	X, r25
    1366:	21 96       	adiw	r28, 0x01	; 1
    1368:	31 96       	adiw	r30, 0x01	; 1
    136a:	c2 17       	cp	r28, r18
    136c:	d3 07       	cpc	r29, r19
    136e:	01 f7       	brne	.-64     	; 0x1330 <USART_SendPacket+0x30>
    1370:	04 c0       	rjmp	.+8      	; 0x137a <USART_SendPacket+0x7a>
    1372:	03 e0       	ldi	r16, 0x03	; 3
    1374:	10 e0       	ldi	r17, 0x00	; 0
    1376:	c0 e0       	ldi	r28, 0x00	; 0
    1378:	d0 e0       	ldi	r29, 0x00	; 0
    137a:	69 df       	rcall	.-302    	; 0x124e <USART_crc16>
    137c:	f8 01       	movw	r30, r16
    137e:	e2 5e       	subi	r30, 0xE2	; 226
    1380:	f8 4d       	sbci	r31, 0xD8	; 216
    1382:	ec 0f       	add	r30, r28
    1384:	fd 1f       	adc	r31, r29
    1386:	90 83       	st	Z, r25
    1388:	81 83       	std	Z+1, r24	; 0x01
    138a:	22 96       	adiw	r28, 0x02	; 2
    138c:	0c 0f       	add	r16, r28
    138e:	1d 1f       	adc	r17, r29
    1390:	f8 01       	movw	r30, r16
    1392:	e2 5e       	subi	r30, 0xE2	; 226
    1394:	f8 4d       	sbci	r31, 0xD8	; 216
    1396:	8e e7       	ldi	r24, 0x7E	; 126
    1398:	80 83       	st	Z, r24
    139a:	c8 01       	movw	r24, r16
    139c:	01 96       	adiw	r24, 0x01	; 1
    139e:	18 16       	cp	r1, r24
    13a0:	19 06       	cpc	r1, r25
    13a2:	4c f4       	brge	.+18     	; 0x13b6 <USART_SendPacket+0xb6>
    13a4:	ce e1       	ldi	r28, 0x1E	; 30
    13a6:	d7 e2       	ldi	r29, 0x27	; 39
    13a8:	01 5e       	subi	r16, 0xE1	; 225
    13aa:	18 4d       	sbci	r17, 0xD8	; 216
    13ac:	89 91       	ld	r24, Y+
    13ae:	46 df       	rcall	.-372    	; 0x123c <USART_WriteByte>
    13b0:	c0 17       	cp	r28, r16
    13b2:	d1 07       	cpc	r29, r17
    13b4:	d9 f7       	brne	.-10     	; 0x13ac <USART_SendPacket+0xac>
    13b6:	df 91       	pop	r29
    13b8:	cf 91       	pop	r28
    13ba:	1f 91       	pop	r17
    13bc:	0f 91       	pop	r16
    13be:	08 95       	ret

000013c0 <USART_SendCommand>:
    13c0:	80 e0       	ldi	r24, 0x00	; 0
    13c2:	90 e0       	ldi	r25, 0x00	; 0
    13c4:	fd dc       	rcall	.-1542   	; 0xdc0 <TWI_get_command>
    13c6:	80 93 1f 26 	sts	0x261F, r24
    13ca:	81 e0       	ldi	r24, 0x01	; 1
    13cc:	90 e0       	ldi	r25, 0x00	; 0
    13ce:	f8 dc       	rcall	.-1552   	; 0xdc0 <TWI_get_command>
    13d0:	80 93 20 26 	sts	0x2620, r24
    13d4:	82 e0       	ldi	r24, 0x02	; 2
    13d6:	90 e0       	ldi	r25, 0x00	; 0
    13d8:	f3 dc       	rcall	.-1562   	; 0xdc0 <TWI_get_command>
    13da:	80 93 21 26 	sts	0x2621, r24
    13de:	63 e0       	ldi	r22, 0x03	; 3
    13e0:	83 e4       	ldi	r24, 0x43	; 67
    13e2:	8e cf       	rjmp	.-228    	; 0x1300 <USART_SendPacket>

000013e4 <USART_DecodeMessageRxFIFO>:
    13e4:	8f 92       	push	r8
    13e6:	9f 92       	push	r9
    13e8:	af 92       	push	r10
    13ea:	bf 92       	push	r11
    13ec:	cf 92       	push	r12
    13ee:	df 92       	push	r13
    13f0:	ef 92       	push	r14
    13f2:	ff 92       	push	r15
    13f4:	0f 93       	push	r16
    13f6:	1f 93       	push	r17
    13f8:	cf 93       	push	r28
    13fa:	df 93       	push	r29
    13fc:	cd b7       	in	r28, 0x3d	; 61
    13fe:	de b7       	in	r29, 0x3e	; 62
    1400:	ad b6       	in	r10, 0x3d	; 61
    1402:	be b6       	in	r11, 0x3e	; 62
    1404:	60 e0       	ldi	r22, 0x00	; 0
    1406:	70 e0       	ldi	r23, 0x00	; 0
    1408:	80 91 0f 11 	lds	r24, 0x110F
    140c:	90 91 10 11 	lds	r25, 0x1110
    1410:	30 d8       	rcall	.-4000   	; 0x472 <FifoRead>
    1412:	88 23       	and	r24, r24
    1414:	31 f0       	breq	.+12     	; 0x1422 <USART_DecodeMessageRxFIFO+0x3e>
    1416:	6b ea       	ldi	r22, 0xAB	; 171
    1418:	71 e2       	ldi	r23, 0x21	; 33
    141a:	80 e4       	ldi	r24, 0x40	; 64
    141c:	05 dc       	rcall	.-2038   	; 0xc28 <TWI_send_string>
    141e:	81 e0       	ldi	r24, 0x01	; 1
    1420:	44 c0       	rjmp	.+136    	; 0x14aa <USART_DecodeMessageRxFIFO+0xc6>
    1422:	c0 90 00 00 	lds	r12, 0x0000
    1426:	d1 2c       	mov	r13, r1
    1428:	96 01       	movw	r18, r12
    142a:	21 50       	subi	r18, 0x01	; 1
    142c:	31 09       	sbc	r19, r1
    142e:	81 e0       	ldi	r24, 0x01	; 1
    1430:	90 e0       	ldi	r25, 0x00	; 0
    1432:	c1 14       	cp	r12, r1
    1434:	d1 04       	cpc	r13, r1
    1436:	11 f0       	breq	.+4      	; 0x143c <USART_DecodeMessageRxFIFO+0x58>
    1438:	80 e0       	ldi	r24, 0x00	; 0
    143a:	90 e0       	ldi	r25, 0x00	; 0
    143c:	82 0f       	add	r24, r18
    143e:	93 1f       	adc	r25, r19
    1440:	2d b7       	in	r18, 0x3d	; 61
    1442:	3e b7       	in	r19, 0x3e	; 62
    1444:	28 1b       	sub	r18, r24
    1446:	39 0b       	sbc	r19, r25
    1448:	0f b6       	in	r0, 0x3f	; 63
    144a:	f8 94       	cli
    144c:	3e bf       	out	0x3e, r19	; 62
    144e:	0f be       	out	0x3f, r0	; 63
    1450:	2d bf       	out	0x3d, r18	; 61
    1452:	8d b7       	in	r24, 0x3d	; 61
    1454:	9e b7       	in	r25, 0x3e	; 62
    1456:	01 96       	adiw	r24, 0x01	; 1
    1458:	88 2e       	mov	r8, r24
    145a:	99 2e       	mov	r9, r25
    145c:	1c 14       	cp	r1, r12
    145e:	1d 04       	cpc	r1, r13
    1460:	f4 f4       	brge	.+60     	; 0x149e <USART_DecodeMessageRxFIFO+0xba>
    1462:	e8 2e       	mov	r14, r24
    1464:	f9 2e       	mov	r15, r25
    1466:	00 e0       	ldi	r16, 0x00	; 0
    1468:	10 e0       	ldi	r17, 0x00	; 0
    146a:	60 e0       	ldi	r22, 0x00	; 0
    146c:	70 e0       	ldi	r23, 0x00	; 0
    146e:	80 91 0f 11 	lds	r24, 0x110F
    1472:	90 91 10 11 	lds	r25, 0x1110
    1476:	0e 94 39 02 	call	0x472	; 0x472 <FifoRead>
    147a:	88 23       	and	r24, r24
    147c:	31 f0       	breq	.+12     	; 0x148a <USART_DecodeMessageRxFIFO+0xa6>
    147e:	6d ec       	ldi	r22, 0xCD	; 205
    1480:	71 e2       	ldi	r23, 0x21	; 33
    1482:	80 e4       	ldi	r24, 0x40	; 64
    1484:	d1 db       	rcall	.-2142   	; 0xc28 <TWI_send_string>
    1486:	81 e0       	ldi	r24, 0x01	; 1
    1488:	10 c0       	rjmp	.+32     	; 0x14aa <USART_DecodeMessageRxFIFO+0xc6>
    148a:	80 91 00 00 	lds	r24, 0x0000
    148e:	f7 01       	movw	r30, r14
    1490:	81 93       	st	Z+, r24
    1492:	7f 01       	movw	r14, r30
    1494:	0f 5f       	subi	r16, 0xFF	; 255
    1496:	1f 4f       	sbci	r17, 0xFF	; 255
    1498:	0c 15       	cp	r16, r12
    149a:	1d 05       	cpc	r17, r13
    149c:	34 f3       	brlt	.-52     	; 0x146a <USART_DecodeMessageRxFIFO+0x86>
    149e:	a6 01       	movw	r20, r12
    14a0:	68 2d       	mov	r22, r8
    14a2:	79 2d       	mov	r23, r9
    14a4:	80 e8       	ldi	r24, 0x80	; 128
    14a6:	06 dc       	rcall	.-2036   	; 0xcb4 <TWI_send_string_fixed_length>
    14a8:	80 e0       	ldi	r24, 0x00	; 0
    14aa:	0f b6       	in	r0, 0x3f	; 63
    14ac:	f8 94       	cli
    14ae:	be be       	out	0x3e, r11	; 62
    14b0:	0f be       	out	0x3f, r0	; 63
    14b2:	ad be       	out	0x3d, r10	; 61
    14b4:	df 91       	pop	r29
    14b6:	cf 91       	pop	r28
    14b8:	1f 91       	pop	r17
    14ba:	0f 91       	pop	r16
    14bc:	ff 90       	pop	r15
    14be:	ef 90       	pop	r14
    14c0:	df 90       	pop	r13
    14c2:	cf 90       	pop	r12
    14c4:	bf 90       	pop	r11
    14c6:	af 90       	pop	r10
    14c8:	9f 90       	pop	r9
    14ca:	8f 90       	pop	r8
    14cc:	08 95       	ret

000014ce <USART_DecodeCommandRxFIFO>:
    14ce:	cf 93       	push	r28
    14d0:	df 93       	push	r29
    14d2:	60 e0       	ldi	r22, 0x00	; 0
    14d4:	70 e0       	ldi	r23, 0x00	; 0
    14d6:	80 91 0f 11 	lds	r24, 0x110F
    14da:	90 91 10 11 	lds	r25, 0x1110
    14de:	0e 94 39 02 	call	0x472	; 0x472 <FifoRead>
    14e2:	88 23       	and	r24, r24
    14e4:	31 f0       	breq	.+12     	; 0x14f2 <USART_DecodeCommandRxFIFO+0x24>
    14e6:	60 ef       	ldi	r22, 0xF0	; 240
    14e8:	71 e2       	ldi	r23, 0x21	; 33
    14ea:	80 e4       	ldi	r24, 0x40	; 64
    14ec:	9d db       	rcall	.-2246   	; 0xc28 <TWI_send_string>
    14ee:	81 e0       	ldi	r24, 0x01	; 1
    14f0:	45 c0       	rjmp	.+138    	; 0x157c <USART_DecodeCommandRxFIFO+0xae>
    14f2:	80 91 00 00 	lds	r24, 0x0000
    14f6:	83 30       	cpi	r24, 0x03	; 3
    14f8:	09 f0       	breq	.+2      	; 0x14fc <USART_DecodeCommandRxFIFO+0x2e>
    14fa:	3b c0       	rjmp	.+118    	; 0x1572 <USART_DecodeCommandRxFIFO+0xa4>
    14fc:	60 e0       	ldi	r22, 0x00	; 0
    14fe:	70 e0       	ldi	r23, 0x00	; 0
    1500:	80 91 0f 11 	lds	r24, 0x110F
    1504:	90 91 10 11 	lds	r25, 0x1110
    1508:	0e 94 39 02 	call	0x472	; 0x472 <FifoRead>
    150c:	88 23       	and	r24, r24
    150e:	31 f0       	breq	.+12     	; 0x151c <USART_DecodeCommandRxFIFO+0x4e>
    1510:	62 e1       	ldi	r22, 0x12	; 18
    1512:	72 e2       	ldi	r23, 0x22	; 34
    1514:	80 e4       	ldi	r24, 0x40	; 64
    1516:	88 db       	rcall	.-2288   	; 0xc28 <TWI_send_string>
    1518:	81 e0       	ldi	r24, 0x01	; 1
    151a:	30 c0       	rjmp	.+96     	; 0x157c <USART_DecodeCommandRxFIFO+0xae>
    151c:	c0 91 00 00 	lds	r28, 0x0000
    1520:	60 e0       	ldi	r22, 0x00	; 0
    1522:	70 e0       	ldi	r23, 0x00	; 0
    1524:	80 91 0f 11 	lds	r24, 0x110F
    1528:	90 91 10 11 	lds	r25, 0x1110
    152c:	0e 94 39 02 	call	0x472	; 0x472 <FifoRead>
    1530:	88 23       	and	r24, r24
    1532:	31 f0       	breq	.+12     	; 0x1540 <USART_DecodeCommandRxFIFO+0x72>
    1534:	6a e3       	ldi	r22, 0x3A	; 58
    1536:	72 e2       	ldi	r23, 0x22	; 34
    1538:	80 e4       	ldi	r24, 0x40	; 64
    153a:	76 db       	rcall	.-2324   	; 0xc28 <TWI_send_string>
    153c:	81 e0       	ldi	r24, 0x01	; 1
    153e:	1e c0       	rjmp	.+60     	; 0x157c <USART_DecodeCommandRxFIFO+0xae>
    1540:	d0 91 00 00 	lds	r29, 0x0000
    1544:	60 e0       	ldi	r22, 0x00	; 0
    1546:	70 e0       	ldi	r23, 0x00	; 0
    1548:	80 91 0f 11 	lds	r24, 0x110F
    154c:	90 91 10 11 	lds	r25, 0x1110
    1550:	0e 94 39 02 	call	0x472	; 0x472 <FifoRead>
    1554:	88 23       	and	r24, r24
    1556:	31 f0       	breq	.+12     	; 0x1564 <USART_DecodeCommandRxFIFO+0x96>
    1558:	61 e6       	ldi	r22, 0x61	; 97
    155a:	72 e2       	ldi	r23, 0x22	; 34
    155c:	80 e4       	ldi	r24, 0x40	; 64
    155e:	64 db       	rcall	.-2360   	; 0xc28 <TWI_send_string>
    1560:	81 e0       	ldi	r24, 0x01	; 1
    1562:	0c c0       	rjmp	.+24     	; 0x157c <USART_DecodeCommandRxFIFO+0xae>
    1564:	40 91 00 00 	lds	r20, 0x0000
    1568:	6d 2f       	mov	r22, r29
    156a:	8c 2f       	mov	r24, r28
    156c:	15 db       	rcall	.-2518   	; 0xb98 <TWI_send_command>
    156e:	80 e0       	ldi	r24, 0x00	; 0
    1570:	05 c0       	rjmp	.+10     	; 0x157c <USART_DecodeCommandRxFIFO+0xae>
    1572:	65 e8       	ldi	r22, 0x85	; 133
    1574:	72 e2       	ldi	r23, 0x22	; 34
    1576:	80 e4       	ldi	r24, 0x40	; 64
    1578:	57 db       	rcall	.-2386   	; 0xc28 <TWI_send_string>
    157a:	81 e0       	ldi	r24, 0x01	; 1
    157c:	df 91       	pop	r29
    157e:	cf 91       	pop	r28
    1580:	08 95       	ret

00001582 <USART_DecodeValueFIFO>:
    1582:	ef 92       	push	r14
    1584:	ff 92       	push	r15
    1586:	0f 93       	push	r16
    1588:	1f 93       	push	r17
    158a:	cf 93       	push	r28
    158c:	df 93       	push	r29
    158e:	00 d0       	rcall	.+0      	; 0x1590 <USART_DecodeValueFIFO+0xe>
    1590:	00 d0       	rcall	.+0      	; 0x1592 <USART_DecodeValueFIFO+0x10>
    1592:	cd b7       	in	r28, 0x3d	; 61
    1594:	de b7       	in	r29, 0x3e	; 62
    1596:	60 e0       	ldi	r22, 0x00	; 0
    1598:	70 e0       	ldi	r23, 0x00	; 0
    159a:	80 91 0f 11 	lds	r24, 0x110F
    159e:	90 91 10 11 	lds	r25, 0x1110
    15a2:	0e 94 39 02 	call	0x472	; 0x472 <FifoRead>
    15a6:	88 23       	and	r24, r24
    15a8:	31 f0       	breq	.+12     	; 0x15b6 <USART_DecodeValueFIFO+0x34>
    15aa:	60 ef       	ldi	r22, 0xF0	; 240
    15ac:	71 e2       	ldi	r23, 0x21	; 33
    15ae:	80 e4       	ldi	r24, 0x40	; 64
    15b0:	3b db       	rcall	.-2442   	; 0xc28 <TWI_send_string>
    15b2:	81 e0       	ldi	r24, 0x01	; 1
    15b4:	32 c0       	rjmp	.+100    	; 0x161a <USART_DecodeValueFIFO+0x98>
    15b6:	80 91 00 00 	lds	r24, 0x0000
    15ba:	84 30       	cpi	r24, 0x04	; 4
    15bc:	59 f5       	brne	.+86     	; 0x1614 <USART_DecodeValueFIFO+0x92>
    15be:	8e 01       	movw	r16, r28
    15c0:	0f 5f       	subi	r16, 0xFF	; 255
    15c2:	1f 4f       	sbci	r17, 0xFF	; 255
    15c4:	7e 01       	movw	r14, r28
    15c6:	85 e0       	ldi	r24, 0x05	; 5
    15c8:	e8 0e       	add	r14, r24
    15ca:	f1 1c       	adc	r15, r1
    15cc:	60 e0       	ldi	r22, 0x00	; 0
    15ce:	70 e0       	ldi	r23, 0x00	; 0
    15d0:	80 91 0f 11 	lds	r24, 0x110F
    15d4:	90 91 10 11 	lds	r25, 0x1110
    15d8:	0e 94 39 02 	call	0x472	; 0x472 <FifoRead>
    15dc:	81 11       	cpse	r24, r1
    15de:	1c c0       	rjmp	.+56     	; 0x1618 <USART_DecodeValueFIFO+0x96>
    15e0:	e0 e0       	ldi	r30, 0x00	; 0
    15e2:	f0 e0       	ldi	r31, 0x00	; 0
    15e4:	80 81       	ld	r24, Z
    15e6:	d8 01       	movw	r26, r16
    15e8:	8d 93       	st	X+, r24
    15ea:	8d 01       	movw	r16, r26
    15ec:	60 81       	ld	r22, Z
    15ee:	70 e0       	ldi	r23, 0x00	; 0
    15f0:	80 e0       	ldi	r24, 0x00	; 0
    15f2:	90 e0       	ldi	r25, 0x00	; 0
    15f4:	fe d1       	rcall	.+1020   	; 0x19f2 <__floatunsisf>
    15f6:	ab 01       	movw	r20, r22
    15f8:	bc 01       	movw	r22, r24
    15fa:	80 e8       	ldi	r24, 0x80	; 128
    15fc:	99 db       	rcall	.-2254   	; 0xd30 <TWI_send_float>
    15fe:	0e 15       	cp	r16, r14
    1600:	1f 05       	cpc	r17, r15
    1602:	21 f7       	brne	.-56     	; 0x15cc <USART_DecodeValueFIFO+0x4a>
    1604:	49 81       	ldd	r20, Y+1	; 0x01
    1606:	5a 81       	ldd	r21, Y+2	; 0x02
    1608:	6b 81       	ldd	r22, Y+3	; 0x03
    160a:	7c 81       	ldd	r23, Y+4	; 0x04
    160c:	80 e8       	ldi	r24, 0x80	; 128
    160e:	90 db       	rcall	.-2272   	; 0xd30 <TWI_send_float>
    1610:	80 e0       	ldi	r24, 0x00	; 0
    1612:	03 c0       	rjmp	.+6      	; 0x161a <USART_DecodeValueFIFO+0x98>
    1614:	81 e0       	ldi	r24, 0x01	; 1
    1616:	01 c0       	rjmp	.+2      	; 0x161a <USART_DecodeValueFIFO+0x98>
    1618:	81 e0       	ldi	r24, 0x01	; 1
    161a:	0f 90       	pop	r0
    161c:	0f 90       	pop	r0
    161e:	0f 90       	pop	r0
    1620:	0f 90       	pop	r0
    1622:	df 91       	pop	r29
    1624:	cf 91       	pop	r28
    1626:	1f 91       	pop	r17
    1628:	0f 91       	pop	r16
    162a:	ff 90       	pop	r15
    162c:	ef 90       	pop	r14
    162e:	08 95       	ret

00001630 <USART_DecodeRxFIFO>:
    1630:	13 c0       	rjmp	.+38     	; 0x1658 <USART_DecodeRxFIFO+0x28>
    1632:	80 91 00 00 	lds	r24, 0x0000
    1636:	8d 34       	cpi	r24, 0x4D	; 77
    1638:	29 f0       	breq	.+10     	; 0x1644 <USART_DecodeRxFIFO+0x14>
    163a:	86 35       	cpi	r24, 0x56	; 86
    163c:	51 f0       	breq	.+20     	; 0x1652 <USART_DecodeRxFIFO+0x22>
    163e:	83 34       	cpi	r24, 0x43	; 67
    1640:	59 f4       	brne	.+22     	; 0x1658 <USART_DecodeRxFIFO+0x28>
    1642:	04 c0       	rjmp	.+8      	; 0x164c <USART_DecodeRxFIFO+0x1c>
    1644:	cf de       	rcall	.-610    	; 0x13e4 <USART_DecodeMessageRxFIFO>
    1646:	88 23       	and	r24, r24
    1648:	39 f0       	breq	.+14     	; 0x1658 <USART_DecodeRxFIFO+0x28>
    164a:	08 95       	ret
    164c:	40 df       	rcall	.-384    	; 0x14ce <USART_DecodeCommandRxFIFO>
    164e:	81 11       	cpse	r24, r1
    1650:	0d c0       	rjmp	.+26     	; 0x166c <USART_DecodeRxFIFO+0x3c>
    1652:	97 df       	rcall	.-210    	; 0x1582 <USART_DecodeValueFIFO>
    1654:	81 11       	cpse	r24, r1
    1656:	0a c0       	rjmp	.+20     	; 0x166c <USART_DecodeRxFIFO+0x3c>
    1658:	60 e0       	ldi	r22, 0x00	; 0
    165a:	70 e0       	ldi	r23, 0x00	; 0
    165c:	80 91 0f 11 	lds	r24, 0x110F
    1660:	90 91 10 11 	lds	r25, 0x1110
    1664:	0e 94 39 02 	call	0x472	; 0x472 <FifoRead>
    1668:	88 23       	and	r24, r24
    166a:	19 f3       	breq	.-58     	; 0x1632 <USART_DecodeRxFIFO+0x2>
    166c:	08 95       	ret

0000166e <__vector_20>:
					// TODO: flush buffer?
					return;
				}
				
				break;
    166e:	1f 92       	push	r1
    1670:	0f 92       	push	r0
    1672:	0f b6       	in	r0, 0x3f	; 63
    1674:	0f 92       	push	r0
    1676:	11 24       	eor	r1, r1
    1678:	0b b6       	in	r0, 0x3b	; 59
    167a:	0f 92       	push	r0
    167c:	ef 92       	push	r14
    167e:	ff 92       	push	r15
    1680:	0f 93       	push	r16
    1682:	1f 93       	push	r17
    1684:	2f 93       	push	r18
    1686:	3f 93       	push	r19
    1688:	4f 93       	push	r20
    168a:	5f 93       	push	r21
    168c:	6f 93       	push	r22
    168e:	7f 93       	push	r23
    1690:	8f 93       	push	r24
    1692:	9f 93       	push	r25
    1694:	af 93       	push	r26
    1696:	bf 93       	push	r27
    1698:	cf 93       	push	r28
    169a:	df 93       	push	r29
    169c:	ef 93       	push	r30
    169e:	ff 93       	push	r31
			}
			case('C'): // 
    16a0:	20 91 c6 00 	lds	r18, 0x00C6
			{
				if(USART_DecodeCommandRxFIFO())
    16a4:	2e 37       	cpi	r18, 0x7E	; 126
    16a6:	09 f0       	breq	.+2      	; 0x16aa <__vector_20+0x3c>
    16a8:	3f c0       	rjmp	.+126    	; 0x1728 <__vector_20+0xba>
				{
					// TODO: flush buffer?
    16aa:	80 91 c2 22 	lds	r24, 0x22C2
    16ae:	90 91 c3 22 	lds	r25, 0x22C3
    16b2:	84 30       	cpi	r24, 0x04	; 4
    16b4:	91 05       	cpc	r25, r1
    16b6:	40 f4       	brcc	.+16     	; 0x16c8 <__vector_20+0x5a>
    16b8:	20 91 1b 24 	lds	r18, 0x241B
    16bc:	30 e0       	ldi	r19, 0x00	; 0
    16be:	2c 5f       	subi	r18, 0xFC	; 252
    16c0:	3f 4f       	sbci	r19, 0xFF	; 255
    16c2:	82 17       	cp	r24, r18
    16c4:	93 07       	cpc	r25, r19
    16c6:	59 f5       	brne	.+86     	; 0x171e <__vector_20+0xb0>
					return;
				}
    16c8:	80 91 c0 22 	lds	r24, 0x22C0
    16cc:	90 91 c1 22 	lds	r25, 0x22C1
    16d0:	89 2b       	or	r24, r25
    16d2:	21 f0       	breq	.+8      	; 0x16dc <__vector_20+0x6e>
				break;
			}
			case('V'):
    16d4:	10 92 c1 22 	sts	0x22C1, r1
    16d8:	10 92 c0 22 	sts	0x22C0, r1
    16dc:	0a e1       	ldi	r16, 0x1A	; 26
    16de:	14 e2       	ldi	r17, 0x24	; 36
			{
				if(USART_DecodeValueFIFO())
				{
					
					return;
				}
    16e0:	c0 e0       	ldi	r28, 0x00	; 0
    16e2:	d0 e0       	ldi	r29, 0x00	; 0
    16e4:	0f 2e       	mov	r0, r31
    16e6:	fb e1       	ldi	r31, 0x1B	; 27
    16e8:	ef 2e       	mov	r14, r31
    16ea:	f4 e2       	ldi	r31, 0x24	; 36
    16ec:	ff 2e       	mov	r15, r31
    16ee:	f0 2d       	mov	r31, r0
				break;
			}
    16f0:	f8 01       	movw	r30, r16
    16f2:	61 91       	ld	r22, Z+
    16f4:	8f 01       	movw	r16, r30
    16f6:	80 91 0f 11 	lds	r24, 0x110F
    16fa:	90 91 10 11 	lds	r25, 0x1110
    16fe:	0e 94 19 02 	call	0x432	; 0x432 <FifoWrite>
    1702:	88 23       	and	r24, r24
    1704:	21 f0       	breq	.+8      	; 0x170e <__vector_20+0xa0>
			case('R'):
			{
    1706:	6c ea       	ldi	r22, 0xAC	; 172
    1708:	72 e2       	ldi	r23, 0x22	; 34
    170a:	80 e4       	ldi	r24, 0x40	; 64
    170c:	8d da       	rcall	.-2790   	; 0xc28 <TWI_send_string>
			{
				if(USART_DecodeValueFIFO())
				{
					
					return;
				}
    170e:	21 96       	adiw	r28, 0x01	; 1
    1710:	f7 01       	movw	r30, r14
    1712:	80 81       	ld	r24, Z
    1714:	90 e0       	ldi	r25, 0x00	; 0
    1716:	02 96       	adiw	r24, 0x02	; 2
    1718:	c8 17       	cp	r28, r24
    171a:	d9 07       	cpc	r29, r25
    171c:	4c f3       	brlt	.-46     	; 0x16f0 <__vector_20+0x82>
			{
				if(USART_DecodeReadyFIFO())
				{
					return;
				}
				break;
    171e:	10 92 c3 22 	sts	0x22C3, r1
    1722:	10 92 c2 22 	sts	0x22C2, r1
    1726:	16 c0       	rjmp	.+44     	; 0x1754 <__vector_20+0xe6>
			}
		}
    1728:	2d 37       	cpi	r18, 0x7D	; 125
    172a:	39 f4       	brne	.+14     	; 0x173a <__vector_20+0xcc>
	}
}
    172c:	81 e0       	ldi	r24, 0x01	; 1
    172e:	90 e0       	ldi	r25, 0x00	; 0
    1730:	90 93 c1 22 	sts	0x22C1, r25
    1734:	80 93 c0 22 	sts	0x22C0, r24
    1738:	0d c0       	rjmp	.+26     	; 0x1754 <__vector_20+0xe6>



    173a:	80 91 c2 22 	lds	r24, 0x22C2
    173e:	90 91 c3 22 	lds	r25, 0x22C3
    1742:	fc 01       	movw	r30, r24
    1744:	e6 5e       	subi	r30, 0xE6	; 230
    1746:	fb 4d       	sbci	r31, 0xDB	; 219
    1748:	20 83       	st	Z, r18
void USART_Bounce()
    174a:	01 96       	adiw	r24, 0x01	; 1
    174c:	90 93 c3 22 	sts	0x22C3, r25
    1750:	80 93 c2 22 	sts	0x22C2, r24
{
	for(int i = 0; i < gRxBuffer[1]; i++)
	{
		gTxPayload[i] = gRxBuffer[i+2];
    1754:	ff 91       	pop	r31
    1756:	ef 91       	pop	r30
    1758:	df 91       	pop	r29
    175a:	cf 91       	pop	r28
    175c:	bf 91       	pop	r27
    175e:	af 91       	pop	r26
    1760:	9f 91       	pop	r25
    1762:	8f 91       	pop	r24
    1764:	7f 91       	pop	r23
    1766:	6f 91       	pop	r22
    1768:	5f 91       	pop	r21
    176a:	4f 91       	pop	r20
    176c:	3f 91       	pop	r19
    176e:	2f 91       	pop	r18
    1770:	1f 91       	pop	r17
    1772:	0f 91       	pop	r16
    1774:	ff 90       	pop	r15
    1776:	ef 90       	pop	r14
    1778:	0f 90       	pop	r0
    177a:	0b be       	out	0x3b, r0	; 59
    177c:	0f 90       	pop	r0
    177e:	0f be       	out	0x3f, r0	; 63
    1780:	0f 90       	pop	r0
    1782:	1f 90       	pop	r1
    1784:	18 95       	reti

00001786 <USART_send_command_parameters>:
	}
	USART_SendPacket(gRxBuffer[0], gRxBuffer[1]);
}

    1786:	80 93 1f 26 	sts	0x261F, r24

    178a:	60 93 20 26 	sts	0x2620, r22
ISR (USART0_RX_vect)
    178e:	40 93 21 26 	sts	0x2621, r20
{
	uint8_t data;
	data = UDR0; // read data from buffer TODO: add check for overflow
    1792:	63 e0       	ldi	r22, 0x03	; 3
    1794:	83 e4       	ldi	r24, 0x43	; 67
    1796:	b4 cd       	rjmp	.-1176   	; 0x1300 <USART_SendPacket>

00001798 <__subsf3>:
    1798:	50 58       	subi	r21, 0x80	; 128

0000179a <__addsf3>:
    179a:	bb 27       	eor	r27, r27
    179c:	aa 27       	eor	r26, r26
    179e:	0e d0       	rcall	.+28     	; 0x17bc <__addsf3x>
    17a0:	ed c1       	rjmp	.+986    	; 0x1b7c <__fp_round>
    17a2:	b6 d1       	rcall	.+876    	; 0x1b10 <__fp_pscA>
    17a4:	30 f0       	brcs	.+12     	; 0x17b2 <__addsf3+0x18>
    17a6:	bb d1       	rcall	.+886    	; 0x1b1e <__fp_pscB>
    17a8:	20 f0       	brcs	.+8      	; 0x17b2 <__addsf3+0x18>
    17aa:	31 f4       	brne	.+12     	; 0x17b8 <__addsf3+0x1e>
    17ac:	9f 3f       	cpi	r25, 0xFF	; 255
    17ae:	11 f4       	brne	.+4      	; 0x17b4 <__addsf3+0x1a>
    17b0:	1e f4       	brtc	.+6      	; 0x17b8 <__addsf3+0x1e>
    17b2:	86 c1       	rjmp	.+780    	; 0x1ac0 <__fp_nan>
    17b4:	0e f4       	brtc	.+2      	; 0x17b8 <__addsf3+0x1e>
    17b6:	e0 95       	com	r30
    17b8:	e7 fb       	bst	r30, 7
    17ba:	7c c1       	rjmp	.+760    	; 0x1ab4 <__fp_inf>

000017bc <__addsf3x>:
    17bc:	e9 2f       	mov	r30, r25
    17be:	00 d2       	rcall	.+1024   	; 0x1bc0 <__fp_split3>
    17c0:	80 f3       	brcs	.-32     	; 0x17a2 <__addsf3+0x8>
    17c2:	ba 17       	cp	r27, r26
    17c4:	62 07       	cpc	r22, r18
    17c6:	73 07       	cpc	r23, r19
    17c8:	84 07       	cpc	r24, r20
    17ca:	95 07       	cpc	r25, r21
    17cc:	18 f0       	brcs	.+6      	; 0x17d4 <__addsf3x+0x18>
    17ce:	71 f4       	brne	.+28     	; 0x17ec <__addsf3x+0x30>
    17d0:	9e f5       	brtc	.+102    	; 0x1838 <__addsf3x+0x7c>
    17d2:	18 c2       	rjmp	.+1072   	; 0x1c04 <__fp_zero>
    17d4:	0e f4       	brtc	.+2      	; 0x17d8 <__addsf3x+0x1c>
    17d6:	e0 95       	com	r30
    17d8:	0b 2e       	mov	r0, r27
    17da:	ba 2f       	mov	r27, r26
    17dc:	a0 2d       	mov	r26, r0
    17de:	0b 01       	movw	r0, r22
    17e0:	b9 01       	movw	r22, r18
    17e2:	90 01       	movw	r18, r0
    17e4:	0c 01       	movw	r0, r24
    17e6:	ca 01       	movw	r24, r20
    17e8:	a0 01       	movw	r20, r0
    17ea:	11 24       	eor	r1, r1
    17ec:	ff 27       	eor	r31, r31
    17ee:	59 1b       	sub	r21, r25
    17f0:	99 f0       	breq	.+38     	; 0x1818 <__addsf3x+0x5c>
    17f2:	59 3f       	cpi	r21, 0xF9	; 249
    17f4:	50 f4       	brcc	.+20     	; 0x180a <__addsf3x+0x4e>
    17f6:	50 3e       	cpi	r21, 0xE0	; 224
    17f8:	68 f1       	brcs	.+90     	; 0x1854 <__addsf3x+0x98>
    17fa:	1a 16       	cp	r1, r26
    17fc:	f0 40       	sbci	r31, 0x00	; 0
    17fe:	a2 2f       	mov	r26, r18
    1800:	23 2f       	mov	r18, r19
    1802:	34 2f       	mov	r19, r20
    1804:	44 27       	eor	r20, r20
    1806:	58 5f       	subi	r21, 0xF8	; 248
    1808:	f3 cf       	rjmp	.-26     	; 0x17f0 <__addsf3x+0x34>
    180a:	46 95       	lsr	r20
    180c:	37 95       	ror	r19
    180e:	27 95       	ror	r18
    1810:	a7 95       	ror	r26
    1812:	f0 40       	sbci	r31, 0x00	; 0
    1814:	53 95       	inc	r21
    1816:	c9 f7       	brne	.-14     	; 0x180a <__addsf3x+0x4e>
    1818:	7e f4       	brtc	.+30     	; 0x1838 <__addsf3x+0x7c>
    181a:	1f 16       	cp	r1, r31
    181c:	ba 0b       	sbc	r27, r26
    181e:	62 0b       	sbc	r22, r18
    1820:	73 0b       	sbc	r23, r19
    1822:	84 0b       	sbc	r24, r20
    1824:	ba f0       	brmi	.+46     	; 0x1854 <__addsf3x+0x98>
    1826:	91 50       	subi	r25, 0x01	; 1
    1828:	a1 f0       	breq	.+40     	; 0x1852 <__addsf3x+0x96>
    182a:	ff 0f       	add	r31, r31
    182c:	bb 1f       	adc	r27, r27
    182e:	66 1f       	adc	r22, r22
    1830:	77 1f       	adc	r23, r23
    1832:	88 1f       	adc	r24, r24
    1834:	c2 f7       	brpl	.-16     	; 0x1826 <__addsf3x+0x6a>
    1836:	0e c0       	rjmp	.+28     	; 0x1854 <__addsf3x+0x98>
    1838:	ba 0f       	add	r27, r26
    183a:	62 1f       	adc	r22, r18
    183c:	73 1f       	adc	r23, r19
    183e:	84 1f       	adc	r24, r20
    1840:	48 f4       	brcc	.+18     	; 0x1854 <__addsf3x+0x98>
    1842:	87 95       	ror	r24
    1844:	77 95       	ror	r23
    1846:	67 95       	ror	r22
    1848:	b7 95       	ror	r27
    184a:	f7 95       	ror	r31
    184c:	9e 3f       	cpi	r25, 0xFE	; 254
    184e:	08 f0       	brcs	.+2      	; 0x1852 <__addsf3x+0x96>
    1850:	b3 cf       	rjmp	.-154    	; 0x17b8 <__addsf3+0x1e>
    1852:	93 95       	inc	r25
    1854:	88 0f       	add	r24, r24
    1856:	08 f0       	brcs	.+2      	; 0x185a <__addsf3x+0x9e>
    1858:	99 27       	eor	r25, r25
    185a:	ee 0f       	add	r30, r30
    185c:	97 95       	ror	r25
    185e:	87 95       	ror	r24
    1860:	08 95       	ret

00001862 <atan>:
    1862:	df 93       	push	r29
    1864:	dd 27       	eor	r29, r29
    1866:	b9 2f       	mov	r27, r25
    1868:	bf 77       	andi	r27, 0x7F	; 127
    186a:	40 e8       	ldi	r20, 0x80	; 128
    186c:	5f e3       	ldi	r21, 0x3F	; 63
    186e:	16 16       	cp	r1, r22
    1870:	17 06       	cpc	r1, r23
    1872:	48 07       	cpc	r20, r24
    1874:	5b 07       	cpc	r21, r27
    1876:	10 f4       	brcc	.+4      	; 0x187c <atan+0x1a>
    1878:	d9 2f       	mov	r29, r25
    187a:	cf d1       	rcall	.+926    	; 0x1c1a <inverse>
    187c:	9f 93       	push	r25
    187e:	8f 93       	push	r24
    1880:	7f 93       	push	r23
    1882:	6f 93       	push	r22
    1884:	34 d2       	rcall	.+1128   	; 0x1cee <square>
    1886:	ec e8       	ldi	r30, 0x8C	; 140
    1888:	f0 e0       	ldi	r31, 0x00	; 0
    188a:	1d d1       	rcall	.+570    	; 0x1ac6 <__fp_powser>
    188c:	77 d1       	rcall	.+750    	; 0x1b7c <__fp_round>
    188e:	2f 91       	pop	r18
    1890:	3f 91       	pop	r19
    1892:	4f 91       	pop	r20
    1894:	5f 91       	pop	r21
    1896:	d4 d1       	rcall	.+936    	; 0x1c40 <__mulsf3x>
    1898:	dd 23       	and	r29, r29
    189a:	49 f0       	breq	.+18     	; 0x18ae <atan+0x4c>
    189c:	90 58       	subi	r25, 0x80	; 128
    189e:	a2 ea       	ldi	r26, 0xA2	; 162
    18a0:	2a ed       	ldi	r18, 0xDA	; 218
    18a2:	3f e0       	ldi	r19, 0x0F	; 15
    18a4:	49 ec       	ldi	r20, 0xC9	; 201
    18a6:	5f e3       	ldi	r21, 0x3F	; 63
    18a8:	d0 78       	andi	r29, 0x80	; 128
    18aa:	5d 27       	eor	r21, r29
    18ac:	87 df       	rcall	.-242    	; 0x17bc <__addsf3x>
    18ae:	df 91       	pop	r29
    18b0:	65 c1       	rjmp	.+714    	; 0x1b7c <__fp_round>

000018b2 <__cmpsf2>:
    18b2:	dc d0       	rcall	.+440    	; 0x1a6c <__fp_cmp>
    18b4:	08 f4       	brcc	.+2      	; 0x18b8 <__cmpsf2+0x6>
    18b6:	81 e0       	ldi	r24, 0x01	; 1
    18b8:	08 95       	ret

000018ba <cos>:
    18ba:	39 d1       	rcall	.+626    	; 0x1b2e <__fp_rempio2>
    18bc:	e3 95       	inc	r30
    18be:	6f c1       	rjmp	.+734    	; 0x1b9e <__fp_sinus>

000018c0 <__divsf3>:
    18c0:	0c d0       	rcall	.+24     	; 0x18da <__divsf3x>
    18c2:	5c c1       	rjmp	.+696    	; 0x1b7c <__fp_round>
    18c4:	2c d1       	rcall	.+600    	; 0x1b1e <__fp_pscB>
    18c6:	40 f0       	brcs	.+16     	; 0x18d8 <__divsf3+0x18>
    18c8:	23 d1       	rcall	.+582    	; 0x1b10 <__fp_pscA>
    18ca:	30 f0       	brcs	.+12     	; 0x18d8 <__divsf3+0x18>
    18cc:	21 f4       	brne	.+8      	; 0x18d6 <__divsf3+0x16>
    18ce:	5f 3f       	cpi	r21, 0xFF	; 255
    18d0:	19 f0       	breq	.+6      	; 0x18d8 <__divsf3+0x18>
    18d2:	f0 c0       	rjmp	.+480    	; 0x1ab4 <__fp_inf>
    18d4:	51 11       	cpse	r21, r1
    18d6:	97 c1       	rjmp	.+814    	; 0x1c06 <__fp_szero>
    18d8:	f3 c0       	rjmp	.+486    	; 0x1ac0 <__fp_nan>

000018da <__divsf3x>:
    18da:	72 d1       	rcall	.+740    	; 0x1bc0 <__fp_split3>
    18dc:	98 f3       	brcs	.-26     	; 0x18c4 <__divsf3+0x4>

000018de <__divsf3_pse>:
    18de:	99 23       	and	r25, r25
    18e0:	c9 f3       	breq	.-14     	; 0x18d4 <__divsf3+0x14>
    18e2:	55 23       	and	r21, r21
    18e4:	b1 f3       	breq	.-20     	; 0x18d2 <__divsf3+0x12>
    18e6:	95 1b       	sub	r25, r21
    18e8:	55 0b       	sbc	r21, r21
    18ea:	bb 27       	eor	r27, r27
    18ec:	aa 27       	eor	r26, r26
    18ee:	62 17       	cp	r22, r18
    18f0:	73 07       	cpc	r23, r19
    18f2:	84 07       	cpc	r24, r20
    18f4:	38 f0       	brcs	.+14     	; 0x1904 <__divsf3_pse+0x26>
    18f6:	9f 5f       	subi	r25, 0xFF	; 255
    18f8:	5f 4f       	sbci	r21, 0xFF	; 255
    18fa:	22 0f       	add	r18, r18
    18fc:	33 1f       	adc	r19, r19
    18fe:	44 1f       	adc	r20, r20
    1900:	aa 1f       	adc	r26, r26
    1902:	a9 f3       	breq	.-22     	; 0x18ee <__divsf3_pse+0x10>
    1904:	33 d0       	rcall	.+102    	; 0x196c <__divsf3_pse+0x8e>
    1906:	0e 2e       	mov	r0, r30
    1908:	3a f0       	brmi	.+14     	; 0x1918 <__divsf3_pse+0x3a>
    190a:	e0 e8       	ldi	r30, 0x80	; 128
    190c:	30 d0       	rcall	.+96     	; 0x196e <__divsf3_pse+0x90>
    190e:	91 50       	subi	r25, 0x01	; 1
    1910:	50 40       	sbci	r21, 0x00	; 0
    1912:	e6 95       	lsr	r30
    1914:	00 1c       	adc	r0, r0
    1916:	ca f7       	brpl	.-14     	; 0x190a <__divsf3_pse+0x2c>
    1918:	29 d0       	rcall	.+82     	; 0x196c <__divsf3_pse+0x8e>
    191a:	fe 2f       	mov	r31, r30
    191c:	27 d0       	rcall	.+78     	; 0x196c <__divsf3_pse+0x8e>
    191e:	66 0f       	add	r22, r22
    1920:	77 1f       	adc	r23, r23
    1922:	88 1f       	adc	r24, r24
    1924:	bb 1f       	adc	r27, r27
    1926:	26 17       	cp	r18, r22
    1928:	37 07       	cpc	r19, r23
    192a:	48 07       	cpc	r20, r24
    192c:	ab 07       	cpc	r26, r27
    192e:	b0 e8       	ldi	r27, 0x80	; 128
    1930:	09 f0       	breq	.+2      	; 0x1934 <__divsf3_pse+0x56>
    1932:	bb 0b       	sbc	r27, r27
    1934:	80 2d       	mov	r24, r0
    1936:	bf 01       	movw	r22, r30
    1938:	ff 27       	eor	r31, r31
    193a:	93 58       	subi	r25, 0x83	; 131
    193c:	5f 4f       	sbci	r21, 0xFF	; 255
    193e:	2a f0       	brmi	.+10     	; 0x194a <__divsf3_pse+0x6c>
    1940:	9e 3f       	cpi	r25, 0xFE	; 254
    1942:	51 05       	cpc	r21, r1
    1944:	68 f0       	brcs	.+26     	; 0x1960 <__divsf3_pse+0x82>
    1946:	b6 c0       	rjmp	.+364    	; 0x1ab4 <__fp_inf>
    1948:	5e c1       	rjmp	.+700    	; 0x1c06 <__fp_szero>
    194a:	5f 3f       	cpi	r21, 0xFF	; 255
    194c:	ec f3       	brlt	.-6      	; 0x1948 <__divsf3_pse+0x6a>
    194e:	98 3e       	cpi	r25, 0xE8	; 232
    1950:	dc f3       	brlt	.-10     	; 0x1948 <__divsf3_pse+0x6a>
    1952:	86 95       	lsr	r24
    1954:	77 95       	ror	r23
    1956:	67 95       	ror	r22
    1958:	b7 95       	ror	r27
    195a:	f7 95       	ror	r31
    195c:	9f 5f       	subi	r25, 0xFF	; 255
    195e:	c9 f7       	brne	.-14     	; 0x1952 <__divsf3_pse+0x74>
    1960:	88 0f       	add	r24, r24
    1962:	91 1d       	adc	r25, r1
    1964:	96 95       	lsr	r25
    1966:	87 95       	ror	r24
    1968:	97 f9       	bld	r25, 7
    196a:	08 95       	ret
    196c:	e1 e0       	ldi	r30, 0x01	; 1
    196e:	66 0f       	add	r22, r22
    1970:	77 1f       	adc	r23, r23
    1972:	88 1f       	adc	r24, r24
    1974:	bb 1f       	adc	r27, r27
    1976:	62 17       	cp	r22, r18
    1978:	73 07       	cpc	r23, r19
    197a:	84 07       	cpc	r24, r20
    197c:	ba 07       	cpc	r27, r26
    197e:	20 f0       	brcs	.+8      	; 0x1988 <__divsf3_pse+0xaa>
    1980:	62 1b       	sub	r22, r18
    1982:	73 0b       	sbc	r23, r19
    1984:	84 0b       	sbc	r24, r20
    1986:	ba 0b       	sbc	r27, r26
    1988:	ee 1f       	adc	r30, r30
    198a:	88 f7       	brcc	.-30     	; 0x196e <__divsf3_pse+0x90>
    198c:	e0 95       	com	r30
    198e:	08 95       	ret

00001990 <__fixsfsi>:
    1990:	04 d0       	rcall	.+8      	; 0x199a <__fixunssfsi>
    1992:	68 94       	set
    1994:	b1 11       	cpse	r27, r1
    1996:	37 c1       	rjmp	.+622    	; 0x1c06 <__fp_szero>
    1998:	08 95       	ret

0000199a <__fixunssfsi>:
    199a:	1a d1       	rcall	.+564    	; 0x1bd0 <__fp_splitA>
    199c:	88 f0       	brcs	.+34     	; 0x19c0 <__fixunssfsi+0x26>
    199e:	9f 57       	subi	r25, 0x7F	; 127
    19a0:	90 f0       	brcs	.+36     	; 0x19c6 <__fixunssfsi+0x2c>
    19a2:	b9 2f       	mov	r27, r25
    19a4:	99 27       	eor	r25, r25
    19a6:	b7 51       	subi	r27, 0x17	; 23
    19a8:	a0 f0       	brcs	.+40     	; 0x19d2 <__fixunssfsi+0x38>
    19aa:	d1 f0       	breq	.+52     	; 0x19e0 <__fixunssfsi+0x46>
    19ac:	66 0f       	add	r22, r22
    19ae:	77 1f       	adc	r23, r23
    19b0:	88 1f       	adc	r24, r24
    19b2:	99 1f       	adc	r25, r25
    19b4:	1a f0       	brmi	.+6      	; 0x19bc <__fixunssfsi+0x22>
    19b6:	ba 95       	dec	r27
    19b8:	c9 f7       	brne	.-14     	; 0x19ac <__fixunssfsi+0x12>
    19ba:	12 c0       	rjmp	.+36     	; 0x19e0 <__fixunssfsi+0x46>
    19bc:	b1 30       	cpi	r27, 0x01	; 1
    19be:	81 f0       	breq	.+32     	; 0x19e0 <__fixunssfsi+0x46>
    19c0:	21 d1       	rcall	.+578    	; 0x1c04 <__fp_zero>
    19c2:	b1 e0       	ldi	r27, 0x01	; 1
    19c4:	08 95       	ret
    19c6:	1e c1       	rjmp	.+572    	; 0x1c04 <__fp_zero>
    19c8:	67 2f       	mov	r22, r23
    19ca:	78 2f       	mov	r23, r24
    19cc:	88 27       	eor	r24, r24
    19ce:	b8 5f       	subi	r27, 0xF8	; 248
    19d0:	39 f0       	breq	.+14     	; 0x19e0 <__fixunssfsi+0x46>
    19d2:	b9 3f       	cpi	r27, 0xF9	; 249
    19d4:	cc f3       	brlt	.-14     	; 0x19c8 <__fixunssfsi+0x2e>
    19d6:	86 95       	lsr	r24
    19d8:	77 95       	ror	r23
    19da:	67 95       	ror	r22
    19dc:	b3 95       	inc	r27
    19de:	d9 f7       	brne	.-10     	; 0x19d6 <__fixunssfsi+0x3c>
    19e0:	3e f4       	brtc	.+14     	; 0x19f0 <__fixunssfsi+0x56>
    19e2:	90 95       	com	r25
    19e4:	80 95       	com	r24
    19e6:	70 95       	com	r23
    19e8:	61 95       	neg	r22
    19ea:	7f 4f       	sbci	r23, 0xFF	; 255
    19ec:	8f 4f       	sbci	r24, 0xFF	; 255
    19ee:	9f 4f       	sbci	r25, 0xFF	; 255
    19f0:	08 95       	ret

000019f2 <__floatunsisf>:
    19f2:	e8 94       	clt
    19f4:	09 c0       	rjmp	.+18     	; 0x1a08 <__floatsisf+0x12>

000019f6 <__floatsisf>:
    19f6:	97 fb       	bst	r25, 7
    19f8:	3e f4       	brtc	.+14     	; 0x1a08 <__floatsisf+0x12>
    19fa:	90 95       	com	r25
    19fc:	80 95       	com	r24
    19fe:	70 95       	com	r23
    1a00:	61 95       	neg	r22
    1a02:	7f 4f       	sbci	r23, 0xFF	; 255
    1a04:	8f 4f       	sbci	r24, 0xFF	; 255
    1a06:	9f 4f       	sbci	r25, 0xFF	; 255
    1a08:	99 23       	and	r25, r25
    1a0a:	a9 f0       	breq	.+42     	; 0x1a36 <__floatsisf+0x40>
    1a0c:	f9 2f       	mov	r31, r25
    1a0e:	96 e9       	ldi	r25, 0x96	; 150
    1a10:	bb 27       	eor	r27, r27
    1a12:	93 95       	inc	r25
    1a14:	f6 95       	lsr	r31
    1a16:	87 95       	ror	r24
    1a18:	77 95       	ror	r23
    1a1a:	67 95       	ror	r22
    1a1c:	b7 95       	ror	r27
    1a1e:	f1 11       	cpse	r31, r1
    1a20:	f8 cf       	rjmp	.-16     	; 0x1a12 <__floatsisf+0x1c>
    1a22:	fa f4       	brpl	.+62     	; 0x1a62 <__floatsisf+0x6c>
    1a24:	bb 0f       	add	r27, r27
    1a26:	11 f4       	brne	.+4      	; 0x1a2c <__floatsisf+0x36>
    1a28:	60 ff       	sbrs	r22, 0
    1a2a:	1b c0       	rjmp	.+54     	; 0x1a62 <__floatsisf+0x6c>
    1a2c:	6f 5f       	subi	r22, 0xFF	; 255
    1a2e:	7f 4f       	sbci	r23, 0xFF	; 255
    1a30:	8f 4f       	sbci	r24, 0xFF	; 255
    1a32:	9f 4f       	sbci	r25, 0xFF	; 255
    1a34:	16 c0       	rjmp	.+44     	; 0x1a62 <__floatsisf+0x6c>
    1a36:	88 23       	and	r24, r24
    1a38:	11 f0       	breq	.+4      	; 0x1a3e <__floatsisf+0x48>
    1a3a:	96 e9       	ldi	r25, 0x96	; 150
    1a3c:	11 c0       	rjmp	.+34     	; 0x1a60 <__floatsisf+0x6a>
    1a3e:	77 23       	and	r23, r23
    1a40:	21 f0       	breq	.+8      	; 0x1a4a <__floatsisf+0x54>
    1a42:	9e e8       	ldi	r25, 0x8E	; 142
    1a44:	87 2f       	mov	r24, r23
    1a46:	76 2f       	mov	r23, r22
    1a48:	05 c0       	rjmp	.+10     	; 0x1a54 <__floatsisf+0x5e>
    1a4a:	66 23       	and	r22, r22
    1a4c:	71 f0       	breq	.+28     	; 0x1a6a <__floatsisf+0x74>
    1a4e:	96 e8       	ldi	r25, 0x86	; 134
    1a50:	86 2f       	mov	r24, r22
    1a52:	70 e0       	ldi	r23, 0x00	; 0
    1a54:	60 e0       	ldi	r22, 0x00	; 0
    1a56:	2a f0       	brmi	.+10     	; 0x1a62 <__floatsisf+0x6c>
    1a58:	9a 95       	dec	r25
    1a5a:	66 0f       	add	r22, r22
    1a5c:	77 1f       	adc	r23, r23
    1a5e:	88 1f       	adc	r24, r24
    1a60:	da f7       	brpl	.-10     	; 0x1a58 <__floatsisf+0x62>
    1a62:	88 0f       	add	r24, r24
    1a64:	96 95       	lsr	r25
    1a66:	87 95       	ror	r24
    1a68:	97 f9       	bld	r25, 7
    1a6a:	08 95       	ret

00001a6c <__fp_cmp>:
    1a6c:	99 0f       	add	r25, r25
    1a6e:	00 08       	sbc	r0, r0
    1a70:	55 0f       	add	r21, r21
    1a72:	aa 0b       	sbc	r26, r26
    1a74:	e0 e8       	ldi	r30, 0x80	; 128
    1a76:	fe ef       	ldi	r31, 0xFE	; 254
    1a78:	16 16       	cp	r1, r22
    1a7a:	17 06       	cpc	r1, r23
    1a7c:	e8 07       	cpc	r30, r24
    1a7e:	f9 07       	cpc	r31, r25
    1a80:	c0 f0       	brcs	.+48     	; 0x1ab2 <__fp_cmp+0x46>
    1a82:	12 16       	cp	r1, r18
    1a84:	13 06       	cpc	r1, r19
    1a86:	e4 07       	cpc	r30, r20
    1a88:	f5 07       	cpc	r31, r21
    1a8a:	98 f0       	brcs	.+38     	; 0x1ab2 <__fp_cmp+0x46>
    1a8c:	62 1b       	sub	r22, r18
    1a8e:	73 0b       	sbc	r23, r19
    1a90:	84 0b       	sbc	r24, r20
    1a92:	95 0b       	sbc	r25, r21
    1a94:	39 f4       	brne	.+14     	; 0x1aa4 <__fp_cmp+0x38>
    1a96:	0a 26       	eor	r0, r26
    1a98:	61 f0       	breq	.+24     	; 0x1ab2 <__fp_cmp+0x46>
    1a9a:	23 2b       	or	r18, r19
    1a9c:	24 2b       	or	r18, r20
    1a9e:	25 2b       	or	r18, r21
    1aa0:	21 f4       	brne	.+8      	; 0x1aaa <__fp_cmp+0x3e>
    1aa2:	08 95       	ret
    1aa4:	0a 26       	eor	r0, r26
    1aa6:	09 f4       	brne	.+2      	; 0x1aaa <__fp_cmp+0x3e>
    1aa8:	a1 40       	sbci	r26, 0x01	; 1
    1aaa:	a6 95       	lsr	r26
    1aac:	8f ef       	ldi	r24, 0xFF	; 255
    1aae:	81 1d       	adc	r24, r1
    1ab0:	81 1d       	adc	r24, r1
    1ab2:	08 95       	ret

00001ab4 <__fp_inf>:
    1ab4:	97 f9       	bld	r25, 7
    1ab6:	9f 67       	ori	r25, 0x7F	; 127
    1ab8:	80 e8       	ldi	r24, 0x80	; 128
    1aba:	70 e0       	ldi	r23, 0x00	; 0
    1abc:	60 e0       	ldi	r22, 0x00	; 0
    1abe:	08 95       	ret

00001ac0 <__fp_nan>:
    1ac0:	9f ef       	ldi	r25, 0xFF	; 255
    1ac2:	80 ec       	ldi	r24, 0xC0	; 192
    1ac4:	08 95       	ret

00001ac6 <__fp_powser>:
    1ac6:	df 93       	push	r29
    1ac8:	cf 93       	push	r28
    1aca:	1f 93       	push	r17
    1acc:	0f 93       	push	r16
    1ace:	ff 92       	push	r15
    1ad0:	ef 92       	push	r14
    1ad2:	df 92       	push	r13
    1ad4:	7b 01       	movw	r14, r22
    1ad6:	8c 01       	movw	r16, r24
    1ad8:	68 94       	set
    1ada:	05 c0       	rjmp	.+10     	; 0x1ae6 <__fp_powser+0x20>
    1adc:	da 2e       	mov	r13, r26
    1ade:	ef 01       	movw	r28, r30
    1ae0:	af d0       	rcall	.+350    	; 0x1c40 <__mulsf3x>
    1ae2:	fe 01       	movw	r30, r28
    1ae4:	e8 94       	clt
    1ae6:	a5 91       	lpm	r26, Z+
    1ae8:	25 91       	lpm	r18, Z+
    1aea:	35 91       	lpm	r19, Z+
    1aec:	45 91       	lpm	r20, Z+
    1aee:	55 91       	lpm	r21, Z+
    1af0:	ae f3       	brts	.-22     	; 0x1adc <__fp_powser+0x16>
    1af2:	ef 01       	movw	r28, r30
    1af4:	63 de       	rcall	.-826    	; 0x17bc <__addsf3x>
    1af6:	fe 01       	movw	r30, r28
    1af8:	97 01       	movw	r18, r14
    1afa:	a8 01       	movw	r20, r16
    1afc:	da 94       	dec	r13
    1afe:	79 f7       	brne	.-34     	; 0x1ade <__fp_powser+0x18>
    1b00:	df 90       	pop	r13
    1b02:	ef 90       	pop	r14
    1b04:	ff 90       	pop	r15
    1b06:	0f 91       	pop	r16
    1b08:	1f 91       	pop	r17
    1b0a:	cf 91       	pop	r28
    1b0c:	df 91       	pop	r29
    1b0e:	08 95       	ret

00001b10 <__fp_pscA>:
    1b10:	00 24       	eor	r0, r0
    1b12:	0a 94       	dec	r0
    1b14:	16 16       	cp	r1, r22
    1b16:	17 06       	cpc	r1, r23
    1b18:	18 06       	cpc	r1, r24
    1b1a:	09 06       	cpc	r0, r25
    1b1c:	08 95       	ret

00001b1e <__fp_pscB>:
    1b1e:	00 24       	eor	r0, r0
    1b20:	0a 94       	dec	r0
    1b22:	12 16       	cp	r1, r18
    1b24:	13 06       	cpc	r1, r19
    1b26:	14 06       	cpc	r1, r20
    1b28:	05 06       	cpc	r0, r21
    1b2a:	08 95       	ret
    1b2c:	c9 cf       	rjmp	.-110    	; 0x1ac0 <__fp_nan>

00001b2e <__fp_rempio2>:
    1b2e:	50 d0       	rcall	.+160    	; 0x1bd0 <__fp_splitA>
    1b30:	e8 f3       	brcs	.-6      	; 0x1b2c <__fp_pscB+0xe>
    1b32:	e8 94       	clt
    1b34:	e0 e0       	ldi	r30, 0x00	; 0
    1b36:	bb 27       	eor	r27, r27
    1b38:	9f 57       	subi	r25, 0x7F	; 127
    1b3a:	f0 f0       	brcs	.+60     	; 0x1b78 <__fp_rempio2+0x4a>
    1b3c:	2a ed       	ldi	r18, 0xDA	; 218
    1b3e:	3f e0       	ldi	r19, 0x0F	; 15
    1b40:	49 ec       	ldi	r20, 0xC9	; 201
    1b42:	06 c0       	rjmp	.+12     	; 0x1b50 <__fp_rempio2+0x22>
    1b44:	ee 0f       	add	r30, r30
    1b46:	bb 0f       	add	r27, r27
    1b48:	66 1f       	adc	r22, r22
    1b4a:	77 1f       	adc	r23, r23
    1b4c:	88 1f       	adc	r24, r24
    1b4e:	28 f0       	brcs	.+10     	; 0x1b5a <__fp_rempio2+0x2c>
    1b50:	b2 3a       	cpi	r27, 0xA2	; 162
    1b52:	62 07       	cpc	r22, r18
    1b54:	73 07       	cpc	r23, r19
    1b56:	84 07       	cpc	r24, r20
    1b58:	28 f0       	brcs	.+10     	; 0x1b64 <__fp_rempio2+0x36>
    1b5a:	b2 5a       	subi	r27, 0xA2	; 162
    1b5c:	62 0b       	sbc	r22, r18
    1b5e:	73 0b       	sbc	r23, r19
    1b60:	84 0b       	sbc	r24, r20
    1b62:	e3 95       	inc	r30
    1b64:	9a 95       	dec	r25
    1b66:	72 f7       	brpl	.-36     	; 0x1b44 <__fp_rempio2+0x16>
    1b68:	80 38       	cpi	r24, 0x80	; 128
    1b6a:	30 f4       	brcc	.+12     	; 0x1b78 <__fp_rempio2+0x4a>
    1b6c:	9a 95       	dec	r25
    1b6e:	bb 0f       	add	r27, r27
    1b70:	66 1f       	adc	r22, r22
    1b72:	77 1f       	adc	r23, r23
    1b74:	88 1f       	adc	r24, r24
    1b76:	d2 f7       	brpl	.-12     	; 0x1b6c <__fp_rempio2+0x3e>
    1b78:	90 48       	sbci	r25, 0x80	; 128
    1b7a:	be c0       	rjmp	.+380    	; 0x1cf8 <__fp_mpack_finite>

00001b7c <__fp_round>:
    1b7c:	09 2e       	mov	r0, r25
    1b7e:	03 94       	inc	r0
    1b80:	00 0c       	add	r0, r0
    1b82:	11 f4       	brne	.+4      	; 0x1b88 <__fp_round+0xc>
    1b84:	88 23       	and	r24, r24
    1b86:	52 f0       	brmi	.+20     	; 0x1b9c <__fp_round+0x20>
    1b88:	bb 0f       	add	r27, r27
    1b8a:	40 f4       	brcc	.+16     	; 0x1b9c <__fp_round+0x20>
    1b8c:	bf 2b       	or	r27, r31
    1b8e:	11 f4       	brne	.+4      	; 0x1b94 <__fp_round+0x18>
    1b90:	60 ff       	sbrs	r22, 0
    1b92:	04 c0       	rjmp	.+8      	; 0x1b9c <__fp_round+0x20>
    1b94:	6f 5f       	subi	r22, 0xFF	; 255
    1b96:	7f 4f       	sbci	r23, 0xFF	; 255
    1b98:	8f 4f       	sbci	r24, 0xFF	; 255
    1b9a:	9f 4f       	sbci	r25, 0xFF	; 255
    1b9c:	08 95       	ret

00001b9e <__fp_sinus>:
    1b9e:	ef 93       	push	r30
    1ba0:	e0 ff       	sbrs	r30, 0
    1ba2:	06 c0       	rjmp	.+12     	; 0x1bb0 <__fp_sinus+0x12>
    1ba4:	a2 ea       	ldi	r26, 0xA2	; 162
    1ba6:	2a ed       	ldi	r18, 0xDA	; 218
    1ba8:	3f e0       	ldi	r19, 0x0F	; 15
    1baa:	49 ec       	ldi	r20, 0xC9	; 201
    1bac:	5f eb       	ldi	r21, 0xBF	; 191
    1bae:	06 de       	rcall	.-1012   	; 0x17bc <__addsf3x>
    1bb0:	e5 df       	rcall	.-54     	; 0x1b7c <__fp_round>
    1bb2:	0f 90       	pop	r0
    1bb4:	03 94       	inc	r0
    1bb6:	01 fc       	sbrc	r0, 1
    1bb8:	90 58       	subi	r25, 0x80	; 128
    1bba:	e9 eb       	ldi	r30, 0xB9	; 185
    1bbc:	f0 e0       	ldi	r31, 0x00	; 0
    1bbe:	a8 c0       	rjmp	.+336    	; 0x1d10 <__fp_powsodd>

00001bc0 <__fp_split3>:
    1bc0:	57 fd       	sbrc	r21, 7
    1bc2:	90 58       	subi	r25, 0x80	; 128
    1bc4:	44 0f       	add	r20, r20
    1bc6:	55 1f       	adc	r21, r21
    1bc8:	59 f0       	breq	.+22     	; 0x1be0 <__fp_splitA+0x10>
    1bca:	5f 3f       	cpi	r21, 0xFF	; 255
    1bcc:	71 f0       	breq	.+28     	; 0x1bea <__fp_splitA+0x1a>
    1bce:	47 95       	ror	r20

00001bd0 <__fp_splitA>:
    1bd0:	88 0f       	add	r24, r24
    1bd2:	97 fb       	bst	r25, 7
    1bd4:	99 1f       	adc	r25, r25
    1bd6:	61 f0       	breq	.+24     	; 0x1bf0 <__fp_splitA+0x20>
    1bd8:	9f 3f       	cpi	r25, 0xFF	; 255
    1bda:	79 f0       	breq	.+30     	; 0x1bfa <__fp_splitA+0x2a>
    1bdc:	87 95       	ror	r24
    1bde:	08 95       	ret
    1be0:	12 16       	cp	r1, r18
    1be2:	13 06       	cpc	r1, r19
    1be4:	14 06       	cpc	r1, r20
    1be6:	55 1f       	adc	r21, r21
    1be8:	f2 cf       	rjmp	.-28     	; 0x1bce <__fp_split3+0xe>
    1bea:	46 95       	lsr	r20
    1bec:	f1 df       	rcall	.-30     	; 0x1bd0 <__fp_splitA>
    1bee:	08 c0       	rjmp	.+16     	; 0x1c00 <__fp_splitA+0x30>
    1bf0:	16 16       	cp	r1, r22
    1bf2:	17 06       	cpc	r1, r23
    1bf4:	18 06       	cpc	r1, r24
    1bf6:	99 1f       	adc	r25, r25
    1bf8:	f1 cf       	rjmp	.-30     	; 0x1bdc <__fp_splitA+0xc>
    1bfa:	86 95       	lsr	r24
    1bfc:	71 05       	cpc	r23, r1
    1bfe:	61 05       	cpc	r22, r1
    1c00:	08 94       	sec
    1c02:	08 95       	ret

00001c04 <__fp_zero>:
    1c04:	e8 94       	clt

00001c06 <__fp_szero>:
    1c06:	bb 27       	eor	r27, r27
    1c08:	66 27       	eor	r22, r22
    1c0a:	77 27       	eor	r23, r23
    1c0c:	cb 01       	movw	r24, r22
    1c0e:	97 f9       	bld	r25, 7
    1c10:	08 95       	ret

00001c12 <__gesf2>:
    1c12:	2c df       	rcall	.-424    	; 0x1a6c <__fp_cmp>
    1c14:	08 f4       	brcc	.+2      	; 0x1c18 <__gesf2+0x6>
    1c16:	8f ef       	ldi	r24, 0xFF	; 255
    1c18:	08 95       	ret

00001c1a <inverse>:
    1c1a:	9b 01       	movw	r18, r22
    1c1c:	ac 01       	movw	r20, r24
    1c1e:	60 e0       	ldi	r22, 0x00	; 0
    1c20:	70 e0       	ldi	r23, 0x00	; 0
    1c22:	80 e8       	ldi	r24, 0x80	; 128
    1c24:	9f e3       	ldi	r25, 0x3F	; 63
    1c26:	4c ce       	rjmp	.-872    	; 0x18c0 <__divsf3>

00001c28 <__mulsf3>:
    1c28:	0b d0       	rcall	.+22     	; 0x1c40 <__mulsf3x>
    1c2a:	a8 cf       	rjmp	.-176    	; 0x1b7c <__fp_round>
    1c2c:	71 df       	rcall	.-286    	; 0x1b10 <__fp_pscA>
    1c2e:	28 f0       	brcs	.+10     	; 0x1c3a <__mulsf3+0x12>
    1c30:	76 df       	rcall	.-276    	; 0x1b1e <__fp_pscB>
    1c32:	18 f0       	brcs	.+6      	; 0x1c3a <__mulsf3+0x12>
    1c34:	95 23       	and	r25, r21
    1c36:	09 f0       	breq	.+2      	; 0x1c3a <__mulsf3+0x12>
    1c38:	3d cf       	rjmp	.-390    	; 0x1ab4 <__fp_inf>
    1c3a:	42 cf       	rjmp	.-380    	; 0x1ac0 <__fp_nan>
    1c3c:	11 24       	eor	r1, r1
    1c3e:	e3 cf       	rjmp	.-58     	; 0x1c06 <__fp_szero>

00001c40 <__mulsf3x>:
    1c40:	bf df       	rcall	.-130    	; 0x1bc0 <__fp_split3>
    1c42:	a0 f3       	brcs	.-24     	; 0x1c2c <__mulsf3+0x4>

00001c44 <__mulsf3_pse>:
    1c44:	95 9f       	mul	r25, r21
    1c46:	d1 f3       	breq	.-12     	; 0x1c3c <__mulsf3+0x14>
    1c48:	95 0f       	add	r25, r21
    1c4a:	50 e0       	ldi	r21, 0x00	; 0
    1c4c:	55 1f       	adc	r21, r21
    1c4e:	62 9f       	mul	r22, r18
    1c50:	f0 01       	movw	r30, r0
    1c52:	72 9f       	mul	r23, r18
    1c54:	bb 27       	eor	r27, r27
    1c56:	f0 0d       	add	r31, r0
    1c58:	b1 1d       	adc	r27, r1
    1c5a:	63 9f       	mul	r22, r19
    1c5c:	aa 27       	eor	r26, r26
    1c5e:	f0 0d       	add	r31, r0
    1c60:	b1 1d       	adc	r27, r1
    1c62:	aa 1f       	adc	r26, r26
    1c64:	64 9f       	mul	r22, r20
    1c66:	66 27       	eor	r22, r22
    1c68:	b0 0d       	add	r27, r0
    1c6a:	a1 1d       	adc	r26, r1
    1c6c:	66 1f       	adc	r22, r22
    1c6e:	82 9f       	mul	r24, r18
    1c70:	22 27       	eor	r18, r18
    1c72:	b0 0d       	add	r27, r0
    1c74:	a1 1d       	adc	r26, r1
    1c76:	62 1f       	adc	r22, r18
    1c78:	73 9f       	mul	r23, r19
    1c7a:	b0 0d       	add	r27, r0
    1c7c:	a1 1d       	adc	r26, r1
    1c7e:	62 1f       	adc	r22, r18
    1c80:	83 9f       	mul	r24, r19
    1c82:	a0 0d       	add	r26, r0
    1c84:	61 1d       	adc	r22, r1
    1c86:	22 1f       	adc	r18, r18
    1c88:	74 9f       	mul	r23, r20
    1c8a:	33 27       	eor	r19, r19
    1c8c:	a0 0d       	add	r26, r0
    1c8e:	61 1d       	adc	r22, r1
    1c90:	23 1f       	adc	r18, r19
    1c92:	84 9f       	mul	r24, r20
    1c94:	60 0d       	add	r22, r0
    1c96:	21 1d       	adc	r18, r1
    1c98:	82 2f       	mov	r24, r18
    1c9a:	76 2f       	mov	r23, r22
    1c9c:	6a 2f       	mov	r22, r26
    1c9e:	11 24       	eor	r1, r1
    1ca0:	9f 57       	subi	r25, 0x7F	; 127
    1ca2:	50 40       	sbci	r21, 0x00	; 0
    1ca4:	8a f0       	brmi	.+34     	; 0x1cc8 <__mulsf3_pse+0x84>
    1ca6:	e1 f0       	breq	.+56     	; 0x1ce0 <__mulsf3_pse+0x9c>
    1ca8:	88 23       	and	r24, r24
    1caa:	4a f0       	brmi	.+18     	; 0x1cbe <__mulsf3_pse+0x7a>
    1cac:	ee 0f       	add	r30, r30
    1cae:	ff 1f       	adc	r31, r31
    1cb0:	bb 1f       	adc	r27, r27
    1cb2:	66 1f       	adc	r22, r22
    1cb4:	77 1f       	adc	r23, r23
    1cb6:	88 1f       	adc	r24, r24
    1cb8:	91 50       	subi	r25, 0x01	; 1
    1cba:	50 40       	sbci	r21, 0x00	; 0
    1cbc:	a9 f7       	brne	.-22     	; 0x1ca8 <__mulsf3_pse+0x64>
    1cbe:	9e 3f       	cpi	r25, 0xFE	; 254
    1cc0:	51 05       	cpc	r21, r1
    1cc2:	70 f0       	brcs	.+28     	; 0x1ce0 <__mulsf3_pse+0x9c>
    1cc4:	f7 ce       	rjmp	.-530    	; 0x1ab4 <__fp_inf>
    1cc6:	9f cf       	rjmp	.-194    	; 0x1c06 <__fp_szero>
    1cc8:	5f 3f       	cpi	r21, 0xFF	; 255
    1cca:	ec f3       	brlt	.-6      	; 0x1cc6 <__mulsf3_pse+0x82>
    1ccc:	98 3e       	cpi	r25, 0xE8	; 232
    1cce:	dc f3       	brlt	.-10     	; 0x1cc6 <__mulsf3_pse+0x82>
    1cd0:	86 95       	lsr	r24
    1cd2:	77 95       	ror	r23
    1cd4:	67 95       	ror	r22
    1cd6:	b7 95       	ror	r27
    1cd8:	f7 95       	ror	r31
    1cda:	e7 95       	ror	r30
    1cdc:	9f 5f       	subi	r25, 0xFF	; 255
    1cde:	c1 f7       	brne	.-16     	; 0x1cd0 <__mulsf3_pse+0x8c>
    1ce0:	fe 2b       	or	r31, r30
    1ce2:	88 0f       	add	r24, r24
    1ce4:	91 1d       	adc	r25, r1
    1ce6:	96 95       	lsr	r25
    1ce8:	87 95       	ror	r24
    1cea:	97 f9       	bld	r25, 7
    1cec:	08 95       	ret

00001cee <square>:
    1cee:	9b 01       	movw	r18, r22
    1cf0:	ac 01       	movw	r20, r24
    1cf2:	9a cf       	rjmp	.-204    	; 0x1c28 <__mulsf3>

00001cf4 <__fp_mpack>:
    1cf4:	9f 3f       	cpi	r25, 0xFF	; 255
    1cf6:	31 f0       	breq	.+12     	; 0x1d04 <__fp_mpack_finite+0xc>

00001cf8 <__fp_mpack_finite>:
    1cf8:	91 50       	subi	r25, 0x01	; 1
    1cfa:	20 f4       	brcc	.+8      	; 0x1d04 <__fp_mpack_finite+0xc>
    1cfc:	87 95       	ror	r24
    1cfe:	77 95       	ror	r23
    1d00:	67 95       	ror	r22
    1d02:	b7 95       	ror	r27
    1d04:	88 0f       	add	r24, r24
    1d06:	91 1d       	adc	r25, r1
    1d08:	96 95       	lsr	r25
    1d0a:	87 95       	ror	r24
    1d0c:	97 f9       	bld	r25, 7
    1d0e:	08 95       	ret

00001d10 <__fp_powsodd>:
    1d10:	9f 93       	push	r25
    1d12:	8f 93       	push	r24
    1d14:	7f 93       	push	r23
    1d16:	6f 93       	push	r22
    1d18:	ff 93       	push	r31
    1d1a:	ef 93       	push	r30
    1d1c:	9b 01       	movw	r18, r22
    1d1e:	ac 01       	movw	r20, r24
    1d20:	83 df       	rcall	.-250    	; 0x1c28 <__mulsf3>
    1d22:	ef 91       	pop	r30
    1d24:	ff 91       	pop	r31
    1d26:	cf de       	rcall	.-610    	; 0x1ac6 <__fp_powser>
    1d28:	2f 91       	pop	r18
    1d2a:	3f 91       	pop	r19
    1d2c:	4f 91       	pop	r20
    1d2e:	5f 91       	pop	r21
    1d30:	7b cf       	rjmp	.-266    	; 0x1c28 <__mulsf3>

00001d32 <swapfunc>:
    1d32:	fb 01       	movw	r30, r22
    1d34:	dc 01       	movw	r26, r24
    1d36:	ca 01       	movw	r24, r20
    1d38:	2c 91       	ld	r18, X
    1d3a:	30 81       	ld	r19, Z
    1d3c:	3d 93       	st	X+, r19
    1d3e:	21 93       	st	Z+, r18
    1d40:	01 97       	sbiw	r24, 0x01	; 1
    1d42:	18 16       	cp	r1, r24
    1d44:	19 06       	cpc	r1, r25
    1d46:	c4 f3       	brlt	.-16     	; 0x1d38 <swapfunc+0x6>
    1d48:	08 95       	ret

00001d4a <med3>:
    1d4a:	cf 92       	push	r12
    1d4c:	df 92       	push	r13
    1d4e:	ef 92       	push	r14
    1d50:	ff 92       	push	r15
    1d52:	0f 93       	push	r16
    1d54:	1f 93       	push	r17
    1d56:	cf 93       	push	r28
    1d58:	df 93       	push	r29
    1d5a:	6c 01       	movw	r12, r24
    1d5c:	8b 01       	movw	r16, r22
    1d5e:	7a 01       	movw	r14, r20
    1d60:	e9 01       	movw	r28, r18
    1d62:	f9 01       	movw	r30, r18
    1d64:	09 95       	icall
    1d66:	b7 01       	movw	r22, r14
    1d68:	97 ff       	sbrs	r25, 7
    1d6a:	0c c0       	rjmp	.+24     	; 0x1d84 <med3+0x3a>
    1d6c:	c8 01       	movw	r24, r16
    1d6e:	fe 01       	movw	r30, r28
    1d70:	09 95       	icall
    1d72:	97 fd       	sbrc	r25, 7
    1d74:	16 c0       	rjmp	.+44     	; 0x1da2 <med3+0x58>
    1d76:	b7 01       	movw	r22, r14
    1d78:	c6 01       	movw	r24, r12
    1d7a:	fe 01       	movw	r30, r28
    1d7c:	09 95       	icall
    1d7e:	97 ff       	sbrs	r25, 7
    1d80:	0d c0       	rjmp	.+26     	; 0x1d9c <med3+0x52>
    1d82:	0e c0       	rjmp	.+28     	; 0x1da0 <med3+0x56>
    1d84:	c8 01       	movw	r24, r16
    1d86:	fe 01       	movw	r30, r28
    1d88:	09 95       	icall
    1d8a:	18 16       	cp	r1, r24
    1d8c:	19 06       	cpc	r1, r25
    1d8e:	4c f0       	brlt	.+18     	; 0x1da2 <med3+0x58>
    1d90:	b7 01       	movw	r22, r14
    1d92:	c6 01       	movw	r24, r12
    1d94:	fe 01       	movw	r30, r28
    1d96:	09 95       	icall
    1d98:	97 ff       	sbrs	r25, 7
    1d9a:	02 c0       	rjmp	.+4      	; 0x1da0 <med3+0x56>
    1d9c:	86 01       	movw	r16, r12
    1d9e:	01 c0       	rjmp	.+2      	; 0x1da2 <med3+0x58>
    1da0:	87 01       	movw	r16, r14
    1da2:	c8 01       	movw	r24, r16
    1da4:	df 91       	pop	r29
    1da6:	cf 91       	pop	r28
    1da8:	1f 91       	pop	r17
    1daa:	0f 91       	pop	r16
    1dac:	ff 90       	pop	r15
    1dae:	ef 90       	pop	r14
    1db0:	df 90       	pop	r13
    1db2:	cf 90       	pop	r12
    1db4:	08 95       	ret

00001db6 <qsort>:
    1db6:	2f 92       	push	r2
    1db8:	3f 92       	push	r3
    1dba:	4f 92       	push	r4
    1dbc:	5f 92       	push	r5
    1dbe:	6f 92       	push	r6
    1dc0:	7f 92       	push	r7
    1dc2:	8f 92       	push	r8
    1dc4:	9f 92       	push	r9
    1dc6:	af 92       	push	r10
    1dc8:	bf 92       	push	r11
    1dca:	cf 92       	push	r12
    1dcc:	df 92       	push	r13
    1dce:	ef 92       	push	r14
    1dd0:	ff 92       	push	r15
    1dd2:	0f 93       	push	r16
    1dd4:	1f 93       	push	r17
    1dd6:	cf 93       	push	r28
    1dd8:	df 93       	push	r29
    1dda:	cd b7       	in	r28, 0x3d	; 61
    1ddc:	de b7       	in	r29, 0x3e	; 62
    1dde:	28 97       	sbiw	r28, 0x08	; 8
    1de0:	0f b6       	in	r0, 0x3f	; 63
    1de2:	f8 94       	cli
    1de4:	de bf       	out	0x3e, r29	; 62
    1de6:	0f be       	out	0x3f, r0	; 63
    1de8:	cd bf       	out	0x3d, r28	; 61
    1dea:	8c 01       	movw	r16, r24
    1dec:	6b 01       	movw	r12, r22
    1dee:	58 87       	std	Y+8, r21	; 0x08
    1df0:	4f 83       	std	Y+7, r20	; 0x07
    1df2:	59 01       	movw	r10, r18
    1df4:	4b 83       	std	Y+3, r20	; 0x03
    1df6:	5c 83       	std	Y+4, r21	; 0x04
    1df8:	27 e0       	ldi	r18, 0x07	; 7
    1dfa:	c2 16       	cp	r12, r18
    1dfc:	d1 04       	cpc	r13, r1
    1dfe:	88 f5       	brcc	.+98     	; 0x1e62 <qsort+0xac>
    1e00:	ef 80       	ldd	r14, Y+7	; 0x07
    1e02:	f8 84       	ldd	r15, Y+8	; 0x08
    1e04:	e0 0e       	add	r14, r16
    1e06:	f1 1e       	adc	r15, r17
    1e08:	4f 81       	ldd	r20, Y+7	; 0x07
    1e0a:	58 85       	ldd	r21, Y+8	; 0x08
    1e0c:	c4 9e       	mul	r12, r20
    1e0e:	40 01       	movw	r8, r0
    1e10:	c5 9e       	mul	r12, r21
    1e12:	90 0c       	add	r9, r0
    1e14:	d4 9e       	mul	r13, r20
    1e16:	90 0c       	add	r9, r0
    1e18:	11 24       	eor	r1, r1
    1e1a:	80 0e       	add	r8, r16
    1e1c:	91 1e       	adc	r9, r17
    1e1e:	1b c0       	rjmp	.+54     	; 0x1e56 <qsort+0xa0>
    1e20:	4f 81       	ldd	r20, Y+7	; 0x07
    1e22:	58 85       	ldd	r21, Y+8	; 0x08
    1e24:	b6 01       	movw	r22, r12
    1e26:	c3 01       	movw	r24, r6
    1e28:	84 df       	rcall	.-248    	; 0x1d32 <swapfunc>
    1e2a:	36 01       	movw	r6, r12
    1e2c:	06 15       	cp	r16, r6
    1e2e:	17 05       	cpc	r17, r7
    1e30:	28 f0       	brcs	.+10     	; 0x1e3c <qsort+0x86>
    1e32:	6f 81       	ldd	r22, Y+7	; 0x07
    1e34:	78 85       	ldd	r23, Y+8	; 0x08
    1e36:	e6 0e       	add	r14, r22
    1e38:	f7 1e       	adc	r15, r23
    1e3a:	0d c0       	rjmp	.+26     	; 0x1e56 <qsort+0xa0>
    1e3c:	63 01       	movw	r12, r6
    1e3e:	8f 81       	ldd	r24, Y+7	; 0x07
    1e40:	98 85       	ldd	r25, Y+8	; 0x08
    1e42:	c8 1a       	sub	r12, r24
    1e44:	d9 0a       	sbc	r13, r25
    1e46:	b3 01       	movw	r22, r6
    1e48:	c6 01       	movw	r24, r12
    1e4a:	f5 01       	movw	r30, r10
    1e4c:	09 95       	icall
    1e4e:	18 16       	cp	r1, r24
    1e50:	19 06       	cpc	r1, r25
    1e52:	34 f3       	brlt	.-52     	; 0x1e20 <qsort+0x6a>
    1e54:	ee cf       	rjmp	.-36     	; 0x1e32 <qsort+0x7c>
    1e56:	e8 14       	cp	r14, r8
    1e58:	f9 04       	cpc	r15, r9
    1e5a:	08 f0       	brcs	.+2      	; 0x1e5e <qsort+0xa8>
    1e5c:	4d c1       	rjmp	.+666    	; 0x20f8 <qsort+0x342>
    1e5e:	37 01       	movw	r6, r14
    1e60:	e5 cf       	rjmp	.-54     	; 0x1e2c <qsort+0x76>
    1e62:	c6 01       	movw	r24, r12
    1e64:	96 95       	lsr	r25
    1e66:	87 95       	ror	r24
    1e68:	2f 81       	ldd	r18, Y+7	; 0x07
    1e6a:	38 85       	ldd	r19, Y+8	; 0x08
    1e6c:	82 9f       	mul	r24, r18
    1e6e:	70 01       	movw	r14, r0
    1e70:	83 9f       	mul	r24, r19
    1e72:	f0 0c       	add	r15, r0
    1e74:	92 9f       	mul	r25, r18
    1e76:	f0 0c       	add	r15, r0
    1e78:	11 24       	eor	r1, r1
    1e7a:	e0 0e       	add	r14, r16
    1e7c:	f1 1e       	adc	r15, r17
    1e7e:	37 e0       	ldi	r19, 0x07	; 7
    1e80:	c3 16       	cp	r12, r19
    1e82:	d1 04       	cpc	r13, r1
    1e84:	09 f4       	brne	.+2      	; 0x1e88 <qsort+0xd2>
    1e86:	4c c0       	rjmp	.+152    	; 0x1f20 <qsort+0x16a>
    1e88:	c6 01       	movw	r24, r12
    1e8a:	01 97       	sbiw	r24, 0x01	; 1
    1e8c:	4f 81       	ldd	r20, Y+7	; 0x07
    1e8e:	58 85       	ldd	r21, Y+8	; 0x08
    1e90:	84 9f       	mul	r24, r20
    1e92:	40 01       	movw	r8, r0
    1e94:	85 9f       	mul	r24, r21
    1e96:	90 0c       	add	r9, r0
    1e98:	94 9f       	mul	r25, r20
    1e9a:	90 0c       	add	r9, r0
    1e9c:	11 24       	eor	r1, r1
    1e9e:	80 0e       	add	r8, r16
    1ea0:	91 1e       	adc	r9, r17
    1ea2:	59 e2       	ldi	r21, 0x29	; 41
    1ea4:	c5 16       	cp	r12, r21
    1ea6:	d1 04       	cpc	r13, r1
    1ea8:	a0 f1       	brcs	.+104    	; 0x1f12 <qsort+0x15c>
    1eaa:	c6 01       	movw	r24, r12
    1eac:	23 e0       	ldi	r18, 0x03	; 3
    1eae:	96 95       	lsr	r25
    1eb0:	87 95       	ror	r24
    1eb2:	2a 95       	dec	r18
    1eb4:	e1 f7       	brne	.-8      	; 0x1eae <qsort+0xf8>
    1eb6:	6f 81       	ldd	r22, Y+7	; 0x07
    1eb8:	78 85       	ldd	r23, Y+8	; 0x08
    1eba:	86 9f       	mul	r24, r22
    1ebc:	30 01       	movw	r6, r0
    1ebe:	87 9f       	mul	r24, r23
    1ec0:	70 0c       	add	r7, r0
    1ec2:	96 9f       	mul	r25, r22
    1ec4:	70 0c       	add	r7, r0
    1ec6:	11 24       	eor	r1, r1
    1ec8:	13 01       	movw	r2, r6
    1eca:	22 0c       	add	r2, r2
    1ecc:	33 1c       	adc	r3, r3
    1ece:	a8 01       	movw	r20, r16
    1ed0:	42 0d       	add	r20, r2
    1ed2:	53 1d       	adc	r21, r3
    1ed4:	b8 01       	movw	r22, r16
    1ed6:	66 0d       	add	r22, r6
    1ed8:	77 1d       	adc	r23, r7
    1eda:	95 01       	movw	r18, r10
    1edc:	c8 01       	movw	r24, r16
    1ede:	35 df       	rcall	.-406    	; 0x1d4a <med3>
    1ee0:	2c 01       	movw	r4, r24
    1ee2:	a7 01       	movw	r20, r14
    1ee4:	46 0d       	add	r20, r6
    1ee6:	57 1d       	adc	r21, r7
    1ee8:	71 94       	neg	r7
    1eea:	61 94       	neg	r6
    1eec:	71 08       	sbc	r7, r1
    1eee:	95 01       	movw	r18, r10
    1ef0:	b7 01       	movw	r22, r14
    1ef2:	c7 01       	movw	r24, r14
    1ef4:	86 0d       	add	r24, r6
    1ef6:	97 1d       	adc	r25, r7
    1ef8:	28 df       	rcall	.-432    	; 0x1d4a <med3>
    1efa:	7c 01       	movw	r14, r24
    1efc:	b4 01       	movw	r22, r8
    1efe:	66 0d       	add	r22, r6
    1f00:	77 1d       	adc	r23, r7
    1f02:	95 01       	movw	r18, r10
    1f04:	a4 01       	movw	r20, r8
    1f06:	c4 01       	movw	r24, r8
    1f08:	82 19       	sub	r24, r2
    1f0a:	93 09       	sbc	r25, r3
    1f0c:	1e df       	rcall	.-452    	; 0x1d4a <med3>
    1f0e:	4c 01       	movw	r8, r24
    1f10:	01 c0       	rjmp	.+2      	; 0x1f14 <qsort+0x15e>
    1f12:	28 01       	movw	r4, r16
    1f14:	95 01       	movw	r18, r10
    1f16:	a4 01       	movw	r20, r8
    1f18:	b7 01       	movw	r22, r14
    1f1a:	c2 01       	movw	r24, r4
    1f1c:	16 df       	rcall	.-468    	; 0x1d4a <med3>
    1f1e:	7c 01       	movw	r14, r24
    1f20:	4b 81       	ldd	r20, Y+3	; 0x03
    1f22:	5c 81       	ldd	r21, Y+4	; 0x04
    1f24:	b7 01       	movw	r22, r14
    1f26:	c8 01       	movw	r24, r16
    1f28:	04 df       	rcall	.-504    	; 0x1d32 <swapfunc>
    1f2a:	4f 80       	ldd	r4, Y+7	; 0x07
    1f2c:	58 84       	ldd	r5, Y+8	; 0x08
    1f2e:	40 0e       	add	r4, r16
    1f30:	51 1e       	adc	r5, r17
    1f32:	c6 01       	movw	r24, r12
    1f34:	01 97       	sbiw	r24, 0x01	; 1
    1f36:	ef 81       	ldd	r30, Y+7	; 0x07
    1f38:	f8 85       	ldd	r31, Y+8	; 0x08
    1f3a:	8e 9f       	mul	r24, r30
    1f3c:	30 01       	movw	r6, r0
    1f3e:	8f 9f       	mul	r24, r31
    1f40:	70 0c       	add	r7, r0
    1f42:	9e 9f       	mul	r25, r30
    1f44:	70 0c       	add	r7, r0
    1f46:	11 24       	eor	r1, r1
    1f48:	60 0e       	add	r6, r16
    1f4a:	71 1e       	adc	r7, r17
    1f4c:	43 01       	movw	r8, r6
    1f4e:	72 01       	movw	r14, r4
    1f50:	12 01       	movw	r2, r4
    1f52:	20 e0       	ldi	r18, 0x00	; 0
    1f54:	30 e0       	ldi	r19, 0x00	; 0
    1f56:	11 c0       	rjmp	.+34     	; 0x1f7a <qsort+0x1c4>
    1f58:	89 2b       	or	r24, r25
    1f5a:	59 f4       	brne	.+22     	; 0x1f72 <qsort+0x1bc>
    1f5c:	4b 81       	ldd	r20, Y+3	; 0x03
    1f5e:	5c 81       	ldd	r21, Y+4	; 0x04
    1f60:	b7 01       	movw	r22, r14
    1f62:	c1 01       	movw	r24, r2
    1f64:	e6 de       	rcall	.-564    	; 0x1d32 <swapfunc>
    1f66:	2f 81       	ldd	r18, Y+7	; 0x07
    1f68:	38 85       	ldd	r19, Y+8	; 0x08
    1f6a:	22 0e       	add	r2, r18
    1f6c:	33 1e       	adc	r3, r19
    1f6e:	21 e0       	ldi	r18, 0x01	; 1
    1f70:	30 e0       	ldi	r19, 0x00	; 0
    1f72:	4f 81       	ldd	r20, Y+7	; 0x07
    1f74:	58 85       	ldd	r21, Y+8	; 0x08
    1f76:	e4 0e       	add	r14, r20
    1f78:	f5 1e       	adc	r15, r21
    1f7a:	8e 14       	cp	r8, r14
    1f7c:	9f 04       	cpc	r9, r15
    1f7e:	d8 f0       	brcs	.+54     	; 0x1fb6 <qsort+0x200>
    1f80:	b8 01       	movw	r22, r16
    1f82:	c7 01       	movw	r24, r14
    1f84:	2d 83       	std	Y+5, r18	; 0x05
    1f86:	3e 83       	std	Y+6, r19	; 0x06
    1f88:	f5 01       	movw	r30, r10
    1f8a:	09 95       	icall
    1f8c:	2d 81       	ldd	r18, Y+5	; 0x05
    1f8e:	3e 81       	ldd	r19, Y+6	; 0x06
    1f90:	18 16       	cp	r1, r24
    1f92:	19 06       	cpc	r1, r25
    1f94:	84 f0       	brlt	.+32     	; 0x1fb6 <qsort+0x200>
    1f96:	e0 cf       	rjmp	.-64     	; 0x1f58 <qsort+0x1a2>
    1f98:	89 2b       	or	r24, r25
    1f9a:	59 f4       	brne	.+22     	; 0x1fb2 <qsort+0x1fc>
    1f9c:	4b 81       	ldd	r20, Y+3	; 0x03
    1f9e:	5c 81       	ldd	r21, Y+4	; 0x04
    1fa0:	b3 01       	movw	r22, r6
    1fa2:	c4 01       	movw	r24, r8
    1fa4:	c6 de       	rcall	.-628    	; 0x1d32 <swapfunc>
    1fa6:	2f 81       	ldd	r18, Y+7	; 0x07
    1fa8:	38 85       	ldd	r19, Y+8	; 0x08
    1faa:	62 1a       	sub	r6, r18
    1fac:	73 0a       	sbc	r7, r19
    1fae:	21 e0       	ldi	r18, 0x01	; 1
    1fb0:	30 e0       	ldi	r19, 0x00	; 0
    1fb2:	89 80       	ldd	r8, Y+1	; 0x01
    1fb4:	9a 80       	ldd	r9, Y+2	; 0x02
    1fb6:	8e 14       	cp	r8, r14
    1fb8:	9f 04       	cpc	r9, r15
    1fba:	08 f4       	brcc	.+2      	; 0x1fbe <qsort+0x208>
    1fbc:	90 c0       	rjmp	.+288    	; 0x20de <qsort+0x328>
    1fbe:	b8 01       	movw	r22, r16
    1fc0:	c4 01       	movw	r24, r8
    1fc2:	2d 83       	std	Y+5, r18	; 0x05
    1fc4:	3e 83       	std	Y+6, r19	; 0x06
    1fc6:	f5 01       	movw	r30, r10
    1fc8:	09 95       	icall
    1fca:	a4 01       	movw	r20, r8
    1fcc:	6f 81       	ldd	r22, Y+7	; 0x07
    1fce:	78 85       	ldd	r23, Y+8	; 0x08
    1fd0:	46 1b       	sub	r20, r22
    1fd2:	57 0b       	sbc	r21, r23
    1fd4:	5a 83       	std	Y+2, r21	; 0x02
    1fd6:	49 83       	std	Y+1, r20	; 0x01
    1fd8:	2d 81       	ldd	r18, Y+5	; 0x05
    1fda:	3e 81       	ldd	r19, Y+6	; 0x06
    1fdc:	97 ff       	sbrs	r25, 7
    1fde:	dc cf       	rjmp	.-72     	; 0x1f98 <qsort+0x1e2>
    1fe0:	70 c0       	rjmp	.+224    	; 0x20c2 <qsort+0x30c>
    1fe2:	48 01       	movw	r8, r16
    1fe4:	88 0e       	add	r8, r24
    1fe6:	99 1e       	adc	r9, r25
    1fe8:	1b c0       	rjmp	.+54     	; 0x2020 <qsort+0x26a>
    1fea:	4b 81       	ldd	r20, Y+3	; 0x03
    1fec:	5c 81       	ldd	r21, Y+4	; 0x04
    1fee:	b6 01       	movw	r22, r12
    1ff0:	c7 01       	movw	r24, r14
    1ff2:	9f de       	rcall	.-706    	; 0x1d32 <swapfunc>
    1ff4:	76 01       	movw	r14, r12
    1ff6:	0e 15       	cp	r16, r14
    1ff8:	1f 05       	cpc	r17, r15
    1ffa:	28 f0       	brcs	.+10     	; 0x2006 <qsort+0x250>
    1ffc:	8f 81       	ldd	r24, Y+7	; 0x07
    1ffe:	98 85       	ldd	r25, Y+8	; 0x08
    2000:	48 0e       	add	r4, r24
    2002:	59 1e       	adc	r5, r25
    2004:	0d c0       	rjmp	.+26     	; 0x2020 <qsort+0x26a>
    2006:	67 01       	movw	r12, r14
    2008:	ef 81       	ldd	r30, Y+7	; 0x07
    200a:	f8 85       	ldd	r31, Y+8	; 0x08
    200c:	ce 1a       	sub	r12, r30
    200e:	df 0a       	sbc	r13, r31
    2010:	b7 01       	movw	r22, r14
    2012:	c6 01       	movw	r24, r12
    2014:	f5 01       	movw	r30, r10
    2016:	09 95       	icall
    2018:	18 16       	cp	r1, r24
    201a:	19 06       	cpc	r1, r25
    201c:	34 f3       	brlt	.-52     	; 0x1fea <qsort+0x234>
    201e:	ee cf       	rjmp	.-36     	; 0x1ffc <qsort+0x246>
    2020:	48 14       	cp	r4, r8
    2022:	59 04       	cpc	r5, r9
    2024:	08 f0       	brcs	.+2      	; 0x2028 <qsort+0x272>
    2026:	68 c0       	rjmp	.+208    	; 0x20f8 <qsort+0x342>
    2028:	72 01       	movw	r14, r4
    202a:	e5 cf       	rjmp	.-54     	; 0x1ff6 <qsort+0x240>
    202c:	98 01       	movw	r18, r16
    202e:	28 0f       	add	r18, r24
    2030:	39 1f       	adc	r19, r25
    2032:	3a 83       	std	Y+2, r19	; 0x02
    2034:	29 83       	std	Y+1, r18	; 0x01
    2036:	27 01       	movw	r4, r14
    2038:	42 18       	sub	r4, r2
    203a:	53 08       	sbc	r5, r3
    203c:	a1 01       	movw	r20, r2
    203e:	40 1b       	sub	r20, r16
    2040:	51 0b       	sbc	r21, r17
    2042:	44 16       	cp	r4, r20
    2044:	55 06       	cpc	r5, r21
    2046:	0c f4       	brge	.+2      	; 0x204a <qsort+0x294>
    2048:	a2 01       	movw	r20, r4
    204a:	14 16       	cp	r1, r20
    204c:	15 06       	cpc	r1, r21
    204e:	2c f4       	brge	.+10     	; 0x205a <qsort+0x2a4>
    2050:	b7 01       	movw	r22, r14
    2052:	64 1b       	sub	r22, r20
    2054:	75 0b       	sbc	r23, r21
    2056:	c8 01       	movw	r24, r16
    2058:	6c de       	rcall	.-808    	; 0x1d32 <swapfunc>
    205a:	63 01       	movw	r12, r6
    205c:	c8 18       	sub	r12, r8
    205e:	d9 08       	sbc	r13, r9
    2060:	49 81       	ldd	r20, Y+1	; 0x01
    2062:	5a 81       	ldd	r21, Y+2	; 0x02
    2064:	46 19       	sub	r20, r6
    2066:	57 09       	sbc	r21, r7
    2068:	6f 81       	ldd	r22, Y+7	; 0x07
    206a:	78 85       	ldd	r23, Y+8	; 0x08
    206c:	46 1b       	sub	r20, r22
    206e:	57 0b       	sbc	r21, r23
    2070:	c4 16       	cp	r12, r20
    2072:	d5 06       	cpc	r13, r21
    2074:	08 f4       	brcc	.+2      	; 0x2078 <qsort+0x2c2>
    2076:	a6 01       	movw	r20, r12
    2078:	14 16       	cp	r1, r20
    207a:	15 06       	cpc	r1, r21
    207c:	34 f4       	brge	.+12     	; 0x208a <qsort+0x2d4>
    207e:	69 81       	ldd	r22, Y+1	; 0x01
    2080:	7a 81       	ldd	r23, Y+2	; 0x02
    2082:	64 1b       	sub	r22, r20
    2084:	75 0b       	sbc	r23, r21
    2086:	c7 01       	movw	r24, r14
    2088:	54 de       	rcall	.-856    	; 0x1d32 <swapfunc>
    208a:	8f 81       	ldd	r24, Y+7	; 0x07
    208c:	98 85       	ldd	r25, Y+8	; 0x08
    208e:	84 15       	cp	r24, r4
    2090:	95 05       	cpc	r25, r5
    2092:	48 f4       	brcc	.+18     	; 0x20a6 <qsort+0x2f0>
    2094:	c2 01       	movw	r24, r4
    2096:	6f 81       	ldd	r22, Y+7	; 0x07
    2098:	78 85       	ldd	r23, Y+8	; 0x08
    209a:	47 d0       	rcall	.+142    	; 0x212a <__udivmodhi4>
    209c:	95 01       	movw	r18, r10
    209e:	4f 81       	ldd	r20, Y+7	; 0x07
    20a0:	58 85       	ldd	r21, Y+8	; 0x08
    20a2:	c8 01       	movw	r24, r16
    20a4:	88 de       	rcall	.-752    	; 0x1db6 <qsort>
    20a6:	ef 81       	ldd	r30, Y+7	; 0x07
    20a8:	f8 85       	ldd	r31, Y+8	; 0x08
    20aa:	ec 15       	cp	r30, r12
    20ac:	fd 05       	cpc	r31, r13
    20ae:	20 f5       	brcc	.+72     	; 0x20f8 <qsort+0x342>
    20b0:	09 81       	ldd	r16, Y+1	; 0x01
    20b2:	1a 81       	ldd	r17, Y+2	; 0x02
    20b4:	0c 19       	sub	r16, r12
    20b6:	1d 09       	sbc	r17, r13
    20b8:	c6 01       	movw	r24, r12
    20ba:	bf 01       	movw	r22, r30
    20bc:	36 d0       	rcall	.+108    	; 0x212a <__udivmodhi4>
    20be:	6b 01       	movw	r12, r22
    20c0:	9b ce       	rjmp	.-714    	; 0x1df8 <qsort+0x42>
    20c2:	4b 81       	ldd	r20, Y+3	; 0x03
    20c4:	5c 81       	ldd	r21, Y+4	; 0x04
    20c6:	b4 01       	movw	r22, r8
    20c8:	c7 01       	movw	r24, r14
    20ca:	33 de       	rcall	.-922    	; 0x1d32 <swapfunc>
    20cc:	2f 81       	ldd	r18, Y+7	; 0x07
    20ce:	38 85       	ldd	r19, Y+8	; 0x08
    20d0:	e2 0e       	add	r14, r18
    20d2:	f3 1e       	adc	r15, r19
    20d4:	89 80       	ldd	r8, Y+1	; 0x01
    20d6:	9a 80       	ldd	r9, Y+2	; 0x02
    20d8:	21 e0       	ldi	r18, 0x01	; 1
    20da:	30 e0       	ldi	r19, 0x00	; 0
    20dc:	4e cf       	rjmp	.-356    	; 0x1f7a <qsort+0x1c4>
    20de:	4f 81       	ldd	r20, Y+7	; 0x07
    20e0:	58 85       	ldd	r21, Y+8	; 0x08
    20e2:	c4 9e       	mul	r12, r20
    20e4:	c0 01       	movw	r24, r0
    20e6:	c5 9e       	mul	r12, r21
    20e8:	90 0d       	add	r25, r0
    20ea:	d4 9e       	mul	r13, r20
    20ec:	90 0d       	add	r25, r0
    20ee:	11 24       	eor	r1, r1
    20f0:	23 2b       	or	r18, r19
    20f2:	09 f0       	breq	.+2      	; 0x20f6 <qsort+0x340>
    20f4:	9b cf       	rjmp	.-202    	; 0x202c <qsort+0x276>
    20f6:	75 cf       	rjmp	.-278    	; 0x1fe2 <qsort+0x22c>
    20f8:	28 96       	adiw	r28, 0x08	; 8
    20fa:	0f b6       	in	r0, 0x3f	; 63
    20fc:	f8 94       	cli
    20fe:	de bf       	out	0x3e, r29	; 62
    2100:	0f be       	out	0x3f, r0	; 63
    2102:	cd bf       	out	0x3d, r28	; 61
    2104:	df 91       	pop	r29
    2106:	cf 91       	pop	r28
    2108:	1f 91       	pop	r17
    210a:	0f 91       	pop	r16
    210c:	ff 90       	pop	r15
    210e:	ef 90       	pop	r14
    2110:	df 90       	pop	r13
    2112:	cf 90       	pop	r12
    2114:	bf 90       	pop	r11
    2116:	af 90       	pop	r10
    2118:	9f 90       	pop	r9
    211a:	8f 90       	pop	r8
    211c:	7f 90       	pop	r7
    211e:	6f 90       	pop	r6
    2120:	5f 90       	pop	r5
    2122:	4f 90       	pop	r4
    2124:	3f 90       	pop	r3
    2126:	2f 90       	pop	r2
    2128:	08 95       	ret

0000212a <__udivmodhi4>:
    212a:	aa 1b       	sub	r26, r26
    212c:	bb 1b       	sub	r27, r27
    212e:	51 e1       	ldi	r21, 0x11	; 17
    2130:	07 c0       	rjmp	.+14     	; 0x2140 <__udivmodhi4_ep>

00002132 <__udivmodhi4_loop>:
    2132:	aa 1f       	adc	r26, r26
    2134:	bb 1f       	adc	r27, r27
    2136:	a6 17       	cp	r26, r22
    2138:	b7 07       	cpc	r27, r23
    213a:	10 f0       	brcs	.+4      	; 0x2140 <__udivmodhi4_ep>
    213c:	a6 1b       	sub	r26, r22
    213e:	b7 0b       	sbc	r27, r23

00002140 <__udivmodhi4_ep>:
    2140:	88 1f       	adc	r24, r24
    2142:	99 1f       	adc	r25, r25
    2144:	5a 95       	dec	r21
    2146:	a9 f7       	brne	.-22     	; 0x2132 <__udivmodhi4_loop>
    2148:	80 95       	com	r24
    214a:	90 95       	com	r25
    214c:	bc 01       	movw	r22, r24
    214e:	cd 01       	movw	r24, r26
    2150:	08 95       	ret

00002152 <_exit>:
    2152:	f8 94       	cli

00002154 <__stop_program>:
    2154:	ff cf       	rjmp	.-2      	; 0x2154 <__stop_program>
