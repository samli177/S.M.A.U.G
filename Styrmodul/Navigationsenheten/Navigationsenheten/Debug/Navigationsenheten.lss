
Navigationsenheten.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00001202  00800100  00001eb4  00001f48  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001eb4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000653  00801302  00801302  0000314a  2**0
                  ALLOC
  3 .stab         00002dfc  00000000  00000000  0000314c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000cd6  00000000  00000000  00005f48  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00006c1e  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000003a8  00000000  00000000  00006c4d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00003635  00000000  00000000  00006ff5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000f4e  00000000  00000000  0000a62a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000221f  00000000  00000000  0000b578  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000aa8  00000000  00000000  0000d798  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000cf1  00000000  00000000  0000e240  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00002793  00000000  00000000  0000ef31  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000370  00000000  00000000  000116c4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	6b c0       	rjmp	.+214    	; 0xd8 <__ctors_end>
       2:	00 00       	nop
       4:	87 c0       	rjmp	.+270    	; 0x114 <__bad_interrupt>
       6:	00 00       	nop
       8:	85 c0       	rjmp	.+266    	; 0x114 <__bad_interrupt>
       a:	00 00       	nop
       c:	83 c0       	rjmp	.+262    	; 0x114 <__bad_interrupt>
       e:	00 00       	nop
      10:	81 c0       	rjmp	.+258    	; 0x114 <__bad_interrupt>
      12:	00 00       	nop
      14:	7f c0       	rjmp	.+254    	; 0x114 <__bad_interrupt>
      16:	00 00       	nop
      18:	7d c0       	rjmp	.+250    	; 0x114 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	7b c0       	rjmp	.+246    	; 0x114 <__bad_interrupt>
      1e:	00 00       	nop
      20:	79 c0       	rjmp	.+242    	; 0x114 <__bad_interrupt>
      22:	00 00       	nop
      24:	77 c0       	rjmp	.+238    	; 0x114 <__bad_interrupt>
      26:	00 00       	nop
      28:	75 c0       	rjmp	.+234    	; 0x114 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	73 c0       	rjmp	.+230    	; 0x114 <__bad_interrupt>
      2e:	00 00       	nop
      30:	71 c0       	rjmp	.+226    	; 0x114 <__bad_interrupt>
      32:	00 00       	nop
      34:	d2 c3       	rjmp	.+1956   	; 0x7da <__vector_13>
      36:	00 00       	nop
      38:	6d c0       	rjmp	.+218    	; 0x114 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	6b c0       	rjmp	.+214    	; 0x114 <__bad_interrupt>
      3e:	00 00       	nop
      40:	69 c0       	rjmp	.+210    	; 0x114 <__bad_interrupt>
      42:	00 00       	nop
      44:	67 c0       	rjmp	.+206    	; 0x114 <__bad_interrupt>
      46:	00 00       	nop
      48:	65 c0       	rjmp	.+202    	; 0x114 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	63 c0       	rjmp	.+198    	; 0x114 <__bad_interrupt>
      4e:	00 00       	nop
      50:	0c 94 00 0a 	jmp	0x1400	; 0x1400 <__vector_20>
      54:	5f c0       	rjmp	.+190    	; 0x114 <__bad_interrupt>
      56:	00 00       	nop
      58:	5d c0       	rjmp	.+186    	; 0x114 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	5b c0       	rjmp	.+182    	; 0x114 <__bad_interrupt>
      5e:	00 00       	nop
      60:	59 c0       	rjmp	.+178    	; 0x114 <__bad_interrupt>
      62:	00 00       	nop
      64:	57 c0       	rjmp	.+174    	; 0x114 <__bad_interrupt>
      66:	00 00       	nop
      68:	2f c6       	rjmp	.+3166   	; 0xcc8 <__vector_26>
      6a:	00 00       	nop
      6c:	53 c0       	rjmp	.+166    	; 0x114 <__bad_interrupt>
      6e:	00 00       	nop
      70:	51 c0       	rjmp	.+162    	; 0x114 <__bad_interrupt>
      72:	00 00       	nop
      74:	4f c0       	rjmp	.+158    	; 0x114 <__bad_interrupt>
      76:	00 00       	nop
      78:	4d c0       	rjmp	.+154    	; 0x114 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	4b c0       	rjmp	.+150    	; 0x114 <__bad_interrupt>
      7e:	00 00       	nop
      80:	d9 c3       	rjmp	.+1970   	; 0x834 <__vector_32>
      82:	00 00       	nop
      84:	47 c0       	rjmp	.+142    	; 0x114 <__bad_interrupt>
      86:	00 00       	nop
      88:	45 c0       	rjmp	.+138    	; 0x114 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	08 4a       	sbci	r16, 0xA8	; 168
      8e:	d7 3b       	cpi	r29, 0xB7	; 183
      90:	3b ce       	rjmp	.-906    	; 0xfffffd08 <__eeprom_end+0xff7efd08>
      92:	01 6e       	ori	r16, 0xE1	; 225
      94:	84 bc       	out	0x24, r8	; 36
      96:	bf fd       	.word	0xfdbf	; ????
      98:	c1 2f       	mov	r28, r17
      9a:	3d 6c       	ori	r19, 0xCD	; 205
      9c:	74 31       	cpi	r23, 0x14	; 20
      9e:	9a bd       	out	0x2a, r25	; 42
      a0:	56 83       	std	Z+6, r21	; 0x06
      a2:	3d da       	rcall	.-2950   	; 0xfffff51e <__eeprom_end+0xff7ef51e>
      a4:	3d 00       	.word	0x003d	; ????
      a6:	c7 7f       	andi	r28, 0xF7	; 247
      a8:	11 be       	out	0x31, r1	; 49
      aa:	d9 e4       	ldi	r29, 0x49	; 73
      ac:	bb 4c       	sbci	r27, 0xCB	; 203
      ae:	3e 91       	ld	r19, -X
      b0:	6b aa       	std	Y+51, r6	; 0x33
      b2:	aa be       	out	0x3a, r10	; 58
      b4:	00 00       	nop
      b6:	00 80       	ld	r0, Z
      b8:	3f 05       	cpc	r19, r15
      ba:	a8 4c       	sbci	r26, 0xC8	; 200
      bc:	cd b2       	in	r12, 0x1d	; 29
      be:	d4 4e       	sbci	r29, 0xE4	; 228
      c0:	b9 38       	cpi	r27, 0x89	; 137
      c2:	36 a9       	ldd	r19, Z+54	; 0x36
      c4:	02 0c       	add	r0, r2
      c6:	50 b9       	out	0x00, r21	; 0
      c8:	91 86       	std	Z+9, r9	; 0x09
      ca:	88 08       	sbc	r8, r8
      cc:	3c a6       	std	Y+44, r3	; 0x2c
      ce:	aa aa       	std	Y+50, r10	; 0x32
      d0:	2a be       	out	0x3a, r2	; 58
      d2:	00 00       	nop
      d4:	00 80       	ld	r0, Z
      d6:	3f 00       	.word	0x003f	; ????

000000d8 <__ctors_end>:
      d8:	11 24       	eor	r1, r1
      da:	1f be       	out	0x3f, r1	; 63
      dc:	cf ef       	ldi	r28, 0xFF	; 255
      de:	d0 e4       	ldi	r29, 0x40	; 64
      e0:	de bf       	out	0x3e, r29	; 62
      e2:	cd bf       	out	0x3d, r28	; 61

000000e4 <__do_copy_data>:
      e4:	13 e1       	ldi	r17, 0x13	; 19
      e6:	a0 e0       	ldi	r26, 0x00	; 0
      e8:	b1 e0       	ldi	r27, 0x01	; 1
      ea:	e4 eb       	ldi	r30, 0xB4	; 180
      ec:	fe e1       	ldi	r31, 0x1E	; 30
      ee:	00 e0       	ldi	r16, 0x00	; 0
      f0:	0b bf       	out	0x3b, r16	; 59
      f2:	02 c0       	rjmp	.+4      	; 0xf8 <__do_copy_data+0x14>
      f4:	07 90       	elpm	r0, Z+
      f6:	0d 92       	st	X+, r0
      f8:	a2 30       	cpi	r26, 0x02	; 2
      fa:	b1 07       	cpc	r27, r17
      fc:	d9 f7       	brne	.-10     	; 0xf4 <__do_copy_data+0x10>

000000fe <__do_clear_bss>:
      fe:	29 e1       	ldi	r18, 0x19	; 25
     100:	a2 e0       	ldi	r26, 0x02	; 2
     102:	b3 e1       	ldi	r27, 0x13	; 19
     104:	01 c0       	rjmp	.+2      	; 0x108 <.do_clear_bss_start>

00000106 <.do_clear_bss_loop>:
     106:	1d 92       	st	X+, r1

00000108 <.do_clear_bss_start>:
     108:	a5 35       	cpi	r26, 0x55	; 85
     10a:	b2 07       	cpc	r27, r18
     10c:	e1 f7       	brne	.-8      	; 0x106 <.do_clear_bss_loop>
     10e:	a0 d3       	rcall	.+1856   	; 0x850 <main>
     110:	0c 94 58 0f 	jmp	0x1eb0	; 0x1eb0 <_exit>

00000114 <__bad_interrupt>:
     114:	75 cf       	rjmp	.-278    	; 0x0 <__vectors>

00000116 <turn_around>:
		walk_forward(sensors);
	}
}

void turn_around(uint8_t frontSensor)
{
     116:	cf 93       	push	r28
     118:	c8 2f       	mov	r28, r24
	if(gStatus)
     11a:	80 91 00 01 	lds	r24, 0x0100
     11e:	88 23       	and	r24, r24
     120:	21 f0       	breq	.+8      	; 0x12a <turn_around+0x14>
	{
		TWI_send_string(C_ADDRESS, "Starting to turn around.");
     122:	6e e0       	ldi	r22, 0x0E	; 14
     124:	71 e1       	ldi	r23, 0x11	; 17
     126:	80 e8       	ldi	r24, 0x80	; 128
     128:	e5 d4       	rcall	.+2506   	; 0xaf4 <TWI_send_string>
	}
	while (frontSensor < CORRIDOR_WIDTH)
     12a:	c0 35       	cpi	r28, 0x50	; 80
     12c:	48 f4       	brcc	.+18     	; 0x140 <turn_around+0x2a>
	{
		if(gStatus)
     12e:	80 91 00 01 	lds	r24, 0x0100
     132:	88 23       	and	r24, r24
     134:	71 f0       	breq	.+28     	; 0x152 <turn_around+0x3c>
		{
			TWI_send_string(C_ADDRESS, "Turning around.");
     136:	67 e2       	ldi	r22, 0x27	; 39
     138:	71 e1       	ldi	r23, 0x11	; 17
     13a:	80 e8       	ldi	r24, 0x80	; 128
     13c:	db d4       	rcall	.+2486   	; 0xaf4 <TWI_send_string>
     13e:	09 c0       	rjmp	.+18     	; 0x152 <turn_around+0x3c>
		}
		USART_send_command_parameters(0, MAX_ROTATION_COUNTER_CLOCKWISE, gSpeed);
		_delay_ms(STEPPING_TIME);
	}
	if(gStatus)
     140:	80 91 00 01 	lds	r24, 0x0100
     144:	88 23       	and	r24, r24
     146:	a9 f0       	breq	.+42     	; 0x172 <turn_around+0x5c>
	{
		TWI_send_string(C_ADDRESS, "Corridor ahead, done turning around.");
     148:	67 e3       	ldi	r22, 0x37	; 55
     14a:	71 e1       	ldi	r23, 0x11	; 17
     14c:	80 e8       	ldi	r24, 0x80	; 128
     14e:	d2 d4       	rcall	.+2468   	; 0xaf4 <TWI_send_string>
     150:	10 c0       	rjmp	.+32     	; 0x172 <turn_around+0x5c>
	{
		if(gStatus)
		{
			TWI_send_string(C_ADDRESS, "Turning around.");
		}
		USART_send_command_parameters(0, MAX_ROTATION_COUNTER_CLOCKWISE, gSpeed);
     152:	40 91 01 01 	lds	r20, 0x0101
     156:	6a e0       	ldi	r22, 0x0A	; 10
     158:	80 e0       	ldi	r24, 0x00	; 0
     15a:	0e 94 8b 0a 	call	0x1516	; 0x1516 <USART_send_command_parameters>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     15e:	2f ef       	ldi	r18, 0xFF	; 255
     160:	87 ea       	ldi	r24, 0xA7	; 167
     162:	91 e6       	ldi	r25, 0x61	; 97
     164:	21 50       	subi	r18, 0x01	; 1
     166:	80 40       	sbci	r24, 0x00	; 0
     168:	90 40       	sbci	r25, 0x00	; 0
     16a:	e1 f7       	brne	.-8      	; 0x164 <turn_around+0x4e>
     16c:	00 c0       	rjmp	.+0      	; 0x16e <turn_around+0x58>
     16e:	00 00       	nop
     170:	de cf       	rjmp	.-68     	; 0x12e <turn_around+0x18>
	}
	if(gStatus)
	{
		TWI_send_string(C_ADDRESS, "Corridor ahead, done turning around.");
	}
}
     172:	cf 91       	pop	r28
     174:	08 95       	ret

00000176 <walk_forward>:

void walk_forward(uint8_t sensors[5])
{
     176:	8f 92       	push	r8
     178:	9f 92       	push	r9
     17a:	af 92       	push	r10
     17c:	bf 92       	push	r11
     17e:	cf 92       	push	r12
     180:	df 92       	push	r13
     182:	ef 92       	push	r14
     184:	ff 92       	push	r15
     186:	cf 93       	push	r28
     188:	df 93       	push	r29
     18a:	ec 01       	movw	r28, r24
	if(gStatus)
     18c:	80 91 00 01 	lds	r24, 0x0100
     190:	88 23       	and	r24, r24
     192:	21 f0       	breq	.+8      	; 0x19c <walk_forward+0x26>
	{
		TWI_send_string(C_ADDRESS, "Finding regulation parameters.");
     194:	6c e5       	ldi	r22, 0x5C	; 92
     196:	71 e1       	ldi	r23, 0x11	; 17
     198:	80 e8       	ldi	r24, 0x80	; 128
     19a:	ac d4       	rcall	.+2392   	; 0xaf4 <TWI_send_string>
	}
	float angleOffset = navigation_angle_offset(sensors);
     19c:	ce 01       	movw	r24, r28
     19e:	cf d1       	rcall	.+926    	; 0x53e <navigation_angle_offset>
     1a0:	6b 01       	movw	r12, r22
     1a2:	7c 01       	movw	r14, r24
	float directionCompensationAngle = navigation_direction_regulation(sensors, angleOffset);
     1a4:	ab 01       	movw	r20, r22
     1a6:	bc 01       	movw	r22, r24
     1a8:	ce 01       	movw	r24, r28
     1aa:	2e d2       	rcall	.+1116   	; 0x608 <navigation_direction_regulation>
     1ac:	4b 01       	movw	r8, r22
     1ae:	5c 01       	movw	r10, r24
	if(gStatus)
     1b0:	80 91 00 01 	lds	r24, 0x0100
     1b4:	88 23       	and	r24, r24
     1b6:	21 f0       	breq	.+8      	; 0x1c0 <walk_forward+0x4a>
	{
		TWI_send_string(C_ADDRESS, "Found regulation parameters.");
     1b8:	6b e7       	ldi	r22, 0x7B	; 123
     1ba:	71 e1       	ldi	r23, 0x11	; 17
     1bc:	80 e8       	ldi	r24, 0x80	; 128
     1be:	9a d4       	rcall	.+2356   	; 0xaf4 <TWI_send_string>
	}
	int adjustmentRotation = (50 + 50 * angleOffset/MAX_ROTATION_RADIANS);
     1c0:	20 e0       	ldi	r18, 0x00	; 0
     1c2:	30 e0       	ldi	r19, 0x00	; 0
     1c4:	48 e4       	ldi	r20, 0x48	; 72
     1c6:	52 e4       	ldi	r21, 0x42	; 66
     1c8:	c7 01       	movw	r24, r14
     1ca:	b6 01       	movw	r22, r12
     1cc:	0e 94 b0 0c 	call	0x1960	; 0x1960 <__mulsf3>
     1d0:	26 e5       	ldi	r18, 0x56	; 86
     1d2:	3e e0       	ldi	r19, 0x0E	; 14
     1d4:	49 e4       	ldi	r20, 0x49	; 73
     1d6:	50 e4       	ldi	r21, 0x40	; 64
     1d8:	0e 94 24 0b 	call	0x1648	; 0x1648 <__divsf3>
     1dc:	20 e0       	ldi	r18, 0x00	; 0
     1de:	30 e0       	ldi	r19, 0x00	; 0
     1e0:	40 ec       	ldi	r20, 0xC0	; 192
     1e2:	50 e4       	ldi	r21, 0x40	; 64
     1e4:	0e 94 24 0b 	call	0x1648	; 0x1648 <__divsf3>
     1e8:	20 e0       	ldi	r18, 0x00	; 0
     1ea:	30 e0       	ldi	r19, 0x00	; 0
     1ec:	48 e4       	ldi	r20, 0x48	; 72
     1ee:	52 e4       	ldi	r21, 0x42	; 66
     1f0:	0e 94 95 0a 	call	0x152a	; 0x152a <__addsf3>
     1f4:	0e 94 8c 0b 	call	0x1718	; 0x1718 <__fixsfsi>
	if (adjustmentRotation >= 100)
     1f8:	64 36       	cpi	r22, 0x64	; 100
     1fa:	71 05       	cpc	r23, r1
     1fc:	34 f4       	brge	.+12     	; 0x20a <walk_forward+0x94>
     1fe:	eb 01       	movw	r28, r22
     200:	dd 23       	and	r29, r29
     202:	2c f4       	brge	.+10     	; 0x20e <walk_forward+0x98>
     204:	c0 e0       	ldi	r28, 0x00	; 0
     206:	d0 e0       	ldi	r29, 0x00	; 0
     208:	02 c0       	rjmp	.+4      	; 0x20e <walk_forward+0x98>
	{
		adjustmentRotation = 100;
     20a:	c4 e6       	ldi	r28, 0x64	; 100
     20c:	d0 e0       	ldi	r29, 0x00	; 0
	}
	else if(adjustmentRotation<=0)
	{
		adjustmentRotation = 0;
	}
	int adjustmentDirection = 90* directionCompensationAngle/(2*PI);
     20e:	20 e0       	ldi	r18, 0x00	; 0
     210:	30 e0       	ldi	r19, 0x00	; 0
     212:	44 eb       	ldi	r20, 0xB4	; 180
     214:	52 e4       	ldi	r21, 0x42	; 66
     216:	c5 01       	movw	r24, r10
     218:	b4 01       	movw	r22, r8
     21a:	0e 94 b0 0c 	call	0x1960	; 0x1960 <__mulsf3>
     21e:	2b ed       	ldi	r18, 0xDB	; 219
     220:	3f e0       	ldi	r19, 0x0F	; 15
     222:	49 ec       	ldi	r20, 0xC9	; 201
     224:	50 e4       	ldi	r21, 0x40	; 64
     226:	0e 94 24 0b 	call	0x1648	; 0x1648 <__divsf3>
     22a:	0e 94 8c 0b 	call	0x1718	; 0x1718 <__fixsfsi>
     22e:	7b 01       	movw	r14, r22
	if(adjustmentDirection < 0)
     230:	77 23       	and	r23, r23
     232:	1c f4       	brge	.+6      	; 0x23a <walk_forward+0xc4>
	{
		adjustmentDirection = 90 + adjustmentDirection;
     234:	2a e5       	ldi	r18, 0x5A	; 90
     236:	e2 0e       	add	r14, r18
     238:	f1 1c       	adc	r15, r1
	}
	if(gStatus)
     23a:	80 91 00 01 	lds	r24, 0x0100
     23e:	88 23       	and	r24, r24
     240:	21 f0       	breq	.+8      	; 0x24a <walk_forward+0xd4>
	{
		TWI_send_string(C_ADDRESS, "Taking a step.");
     242:	68 e9       	ldi	r22, 0x98	; 152
     244:	71 e1       	ldi	r23, 0x11	; 17
     246:	80 e8       	ldi	r24, 0x80	; 128
     248:	55 d4       	rcall	.+2218   	; 0xaf4 <TWI_send_string>
	}
	USART_send_command_parameters((uint8_t)adjustmentDirection, (uint8_t)adjustmentRotation, gSpeed);
     24a:	40 91 01 01 	lds	r20, 0x0101
     24e:	6c 2f       	mov	r22, r28
     250:	8e 2d       	mov	r24, r14
     252:	0e 94 8b 0a 	call	0x1516	; 0x1516 <USART_send_command_parameters>
     256:	8f ef       	ldi	r24, 0xFF	; 255
     258:	97 ea       	ldi	r25, 0xA7	; 167
     25a:	21 e6       	ldi	r18, 0x61	; 97
     25c:	81 50       	subi	r24, 0x01	; 1
     25e:	90 40       	sbci	r25, 0x00	; 0
     260:	20 40       	sbci	r18, 0x00	; 0
     262:	e1 f7       	brne	.-8      	; 0x25c <walk_forward+0xe6>
     264:	00 c0       	rjmp	.+0      	; 0x266 <walk_forward+0xf0>
     266:	00 00       	nop
	_delay_ms(STEPPING_TIME);
}
     268:	df 91       	pop	r29
     26a:	cf 91       	pop	r28
     26c:	ff 90       	pop	r15
     26e:	ef 90       	pop	r14
     270:	df 90       	pop	r13
     272:	cf 90       	pop	r12
     274:	bf 90       	pop	r11
     276:	af 90       	pop	r10
     278:	9f 90       	pop	r9
     27a:	8f 90       	pop	r8
     27c:	08 95       	ret

0000027e <turn_right>:
		walk_forward(sensors);
	}
}

void turn_right(uint8_t sensors[6])
{
     27e:	cf 93       	push	r28
     280:	df 93       	push	r29
     282:	ec 01       	movw	r28, r24
	if(gStatus)
     284:	80 91 00 01 	lds	r24, 0x0100
     288:	88 23       	and	r24, r24
     28a:	21 f0       	breq	.+8      	; 0x294 <turn_right+0x16>
	{
		TWI_send_string(C_ADDRESS, "Starting turning right.");
     28c:	67 ea       	ldi	r22, 0xA7	; 167
     28e:	71 e1       	ldi	r23, 0x11	; 17
     290:	80 e8       	ldi	r24, 0x80	; 128
     292:	30 d4       	rcall	.+2144   	; 0xaf4 <TWI_send_string>
	}
	walk_forward(sensors);
     294:	ce 01       	movw	r24, r28
     296:	6f df       	rcall	.-290    	; 0x176 <walk_forward>
     298:	2f ef       	ldi	r18, 0xFF	; 255
     29a:	87 ea       	ldi	r24, 0xA7	; 167
     29c:	91 e6       	ldi	r25, 0x61	; 97
     29e:	21 50       	subi	r18, 0x01	; 1
     2a0:	80 40       	sbci	r24, 0x00	; 0
     2a2:	90 40       	sbci	r25, 0x00	; 0
     2a4:	e1 f7       	brne	.-8      	; 0x29e <turn_right+0x20>
     2a6:	00 c0       	rjmp	.+0      	; 0x2a8 <turn_right+0x2a>
     2a8:	00 00       	nop
	_delay_ms(STEPPING_TIME);
	while(sensors[4] < CORRIDOR_WIDTH && sensors[5] > (CORRIDOR_WIDTH/2))
     2aa:	8c 81       	ldd	r24, Y+4	; 0x04
     2ac:	80 35       	cpi	r24, 0x50	; 80
     2ae:	00 f5       	brcc	.+64     	; 0x2f0 <turn_right+0x72>
     2b0:	8d 81       	ldd	r24, Y+5	; 0x05
     2b2:	89 32       	cpi	r24, 0x29	; 41
     2b4:	e8 f0       	brcs	.+58     	; 0x2f0 <turn_right+0x72>
	{
		if(gStatus)
     2b6:	80 91 00 01 	lds	r24, 0x0100
     2ba:	88 23       	and	r24, r24
     2bc:	21 f0       	breq	.+8      	; 0x2c6 <turn_right+0x48>
		{
			TWI_send_string(C_ADDRESS, "Rotating right.");
     2be:	6f eb       	ldi	r22, 0xBF	; 191
     2c0:	71 e1       	ldi	r23, 0x11	; 17
     2c2:	80 e8       	ldi	r24, 0x80	; 128
     2c4:	17 d4       	rcall	.+2094   	; 0xaf4 <TWI_send_string>
		}
		USART_send_command_parameters(0, MAX_ROTATION_CLOCKWISE, gSpeed);
     2c6:	40 91 01 01 	lds	r20, 0x0101
     2ca:	6a e5       	ldi	r22, 0x5A	; 90
     2cc:	80 e0       	ldi	r24, 0x00	; 0
     2ce:	0e 94 8b 0a 	call	0x1516	; 0x1516 <USART_send_command_parameters>
     2d2:	2f ef       	ldi	r18, 0xFF	; 255
     2d4:	87 ea       	ldi	r24, 0xA7	; 167
     2d6:	91 e6       	ldi	r25, 0x61	; 97
     2d8:	21 50       	subi	r18, 0x01	; 1
     2da:	80 40       	sbci	r24, 0x00	; 0
     2dc:	90 40       	sbci	r25, 0x00	; 0
     2de:	e1 f7       	brne	.-8      	; 0x2d8 <turn_right+0x5a>
     2e0:	00 c0       	rjmp	.+0      	; 0x2e2 <turn_right+0x64>
     2e2:	00 00       	nop
	{
		TWI_send_string(C_ADDRESS, "Starting turning right.");
	}
	walk_forward(sensors);
	_delay_ms(STEPPING_TIME);
	while(sensors[4] < CORRIDOR_WIDTH && sensors[5] > (CORRIDOR_WIDTH/2))
     2e4:	8c 81       	ldd	r24, Y+4	; 0x04
     2e6:	80 35       	cpi	r24, 0x50	; 80
     2e8:	18 f4       	brcc	.+6      	; 0x2f0 <turn_right+0x72>
     2ea:	8d 81       	ldd	r24, Y+5	; 0x05
     2ec:	89 32       	cpi	r24, 0x29	; 41
     2ee:	18 f7       	brcc	.-58     	; 0x2b6 <turn_right+0x38>
		USART_send_command_parameters(0, MAX_ROTATION_CLOCKWISE, gSpeed);
		_delay_ms(STEPPING_TIME);
	}
	for(int i=0; i < 3; ++i)
	{
		walk_forward(sensors);
     2f0:	ce 01       	movw	r24, r28
     2f2:	41 df       	rcall	.-382    	; 0x176 <walk_forward>
     2f4:	ce 01       	movw	r24, r28
     2f6:	3f df       	rcall	.-386    	; 0x176 <walk_forward>
     2f8:	ce 01       	movw	r24, r28
     2fa:	3d df       	rcall	.-390    	; 0x176 <walk_forward>
	}
}
     2fc:	df 91       	pop	r29
     2fe:	cf 91       	pop	r28
     300:	08 95       	ret

00000302 <turn_left>:
{
	return gStatus;
}

void turn_left(uint8_t sensors[6])
{
     302:	cf 93       	push	r28
     304:	df 93       	push	r29
     306:	ec 01       	movw	r28, r24
	if(gStatus)
     308:	80 91 00 01 	lds	r24, 0x0100
     30c:	88 23       	and	r24, r24
     30e:	21 f0       	breq	.+8      	; 0x318 <turn_left+0x16>
	{
		TWI_send_string(C_ADDRESS, "Starting turning left.");
     310:	6f ec       	ldi	r22, 0xCF	; 207
     312:	71 e1       	ldi	r23, 0x11	; 17
     314:	80 e8       	ldi	r24, 0x80	; 128
     316:	ee d3       	rcall	.+2012   	; 0xaf4 <TWI_send_string>
	}
	walk_forward(sensors);
     318:	ce 01       	movw	r24, r28
     31a:	2d df       	rcall	.-422    	; 0x176 <walk_forward>
     31c:	2f ef       	ldi	r18, 0xFF	; 255
     31e:	87 ea       	ldi	r24, 0xA7	; 167
     320:	91 e6       	ldi	r25, 0x61	; 97
     322:	21 50       	subi	r18, 0x01	; 1
     324:	80 40       	sbci	r24, 0x00	; 0
     326:	90 40       	sbci	r25, 0x00	; 0
     328:	e1 f7       	brne	.-8      	; 0x322 <turn_left+0x20>
     32a:	00 c0       	rjmp	.+0      	; 0x32c <turn_left+0x2a>
     32c:	00 00       	nop
	_delay_ms(STEPPING_TIME);
	while(sensors[4] < CORRIDOR_WIDTH && sensors[5] > (CORRIDOR_WIDTH/2))
     32e:	8c 81       	ldd	r24, Y+4	; 0x04
     330:	80 35       	cpi	r24, 0x50	; 80
     332:	00 f5       	brcc	.+64     	; 0x374 <turn_left+0x72>
     334:	8d 81       	ldd	r24, Y+5	; 0x05
     336:	89 32       	cpi	r24, 0x29	; 41
     338:	e8 f0       	brcs	.+58     	; 0x374 <turn_left+0x72>
	{
		if(gStatus)
     33a:	80 91 00 01 	lds	r24, 0x0100
     33e:	88 23       	and	r24, r24
     340:	21 f0       	breq	.+8      	; 0x34a <turn_left+0x48>
		{
			TWI_send_string(C_ADDRESS, "Rotating left.");
     342:	66 ee       	ldi	r22, 0xE6	; 230
     344:	71 e1       	ldi	r23, 0x11	; 17
     346:	80 e8       	ldi	r24, 0x80	; 128
     348:	d5 d3       	rcall	.+1962   	; 0xaf4 <TWI_send_string>
		}
		USART_send_command_parameters(0, MAX_ROTATION_COUNTER_CLOCKWISE, gSpeed);
     34a:	40 91 01 01 	lds	r20, 0x0101
     34e:	6a e0       	ldi	r22, 0x0A	; 10
     350:	80 e0       	ldi	r24, 0x00	; 0
     352:	0e 94 8b 0a 	call	0x1516	; 0x1516 <USART_send_command_parameters>
     356:	2f ef       	ldi	r18, 0xFF	; 255
     358:	87 ea       	ldi	r24, 0xA7	; 167
     35a:	91 e6       	ldi	r25, 0x61	; 97
     35c:	21 50       	subi	r18, 0x01	; 1
     35e:	80 40       	sbci	r24, 0x00	; 0
     360:	90 40       	sbci	r25, 0x00	; 0
     362:	e1 f7       	brne	.-8      	; 0x35c <turn_left+0x5a>
     364:	00 c0       	rjmp	.+0      	; 0x366 <turn_left+0x64>
     366:	00 00       	nop
	{
		TWI_send_string(C_ADDRESS, "Starting turning left.");
	}
	walk_forward(sensors);
	_delay_ms(STEPPING_TIME);
	while(sensors[4] < CORRIDOR_WIDTH && sensors[5] > (CORRIDOR_WIDTH/2))
     368:	8c 81       	ldd	r24, Y+4	; 0x04
     36a:	80 35       	cpi	r24, 0x50	; 80
     36c:	18 f4       	brcc	.+6      	; 0x374 <turn_left+0x72>
     36e:	8d 81       	ldd	r24, Y+5	; 0x05
     370:	89 32       	cpi	r24, 0x29	; 41
     372:	18 f7       	brcc	.-58     	; 0x33a <turn_left+0x38>
		USART_send_command_parameters(0, MAX_ROTATION_COUNTER_CLOCKWISE, gSpeed);
		_delay_ms(STEPPING_TIME);
	}
	for(int i=0; i < 3; ++i)
	{
		walk_forward(sensors);
     374:	ce 01       	movw	r24, r28
     376:	ff de       	rcall	.-514    	; 0x176 <walk_forward>
     378:	ce 01       	movw	r24, r28
     37a:	fd de       	rcall	.-518    	; 0x176 <walk_forward>
     37c:	ce 01       	movw	r24, r28
     37e:	fb de       	rcall	.-522    	; 0x176 <walk_forward>
	}
}
     380:	df 91       	pop	r29
     382:	cf 91       	pop	r28
     384:	08 95       	ret

00000386 <autonomouswalk_walk>:
	USART_send_command_parameters((uint8_t)adjustmentDirection, (uint8_t)adjustmentRotation, gSpeed);
	_delay_ms(STEPPING_TIME);
}

void autonomouswalk_walk(uint8_t sensors[6])
{
     386:	cf 93       	push	r28
     388:	df 93       	push	r29
     38a:	ec 01       	movw	r28, r24
	uint8_t leftSideAlgorithm = navigation_left_algorithm();
     38c:	d2 d0       	rcall	.+420    	; 0x532 <navigation_left_algorithm>
	if(leftSideAlgorithm)
     38e:	88 23       	and	r24, r24
     390:	c9 f0       	breq	.+50     	; 0x3c4 <autonomouswalk_walk+0x3e>
	{
		if(navigation_check_left_turn(sensors[0], sensors[2]) == 2)
     392:	6a 81       	ldd	r22, Y+2	; 0x02
     394:	88 81       	ld	r24, Y
     396:	89 d1       	rcall	.+786    	; 0x6aa <navigation_check_left_turn>
     398:	82 30       	cpi	r24, 0x02	; 2
     39a:	19 f4       	brne	.+6      	; 0x3a2 <autonomouswalk_walk+0x1c>
		{
			turn_left(sensors);
     39c:	ce 01       	movw	r24, r28
     39e:	b1 df       	rcall	.-158    	; 0x302 <turn_left>
     3a0:	29 c0       	rjmp	.+82     	; 0x3f4 <autonomouswalk_walk+0x6e>
		}
		else if(sensors[4] > CORRIDOR_WIDTH)
     3a2:	8c 81       	ldd	r24, Y+4	; 0x04
     3a4:	81 35       	cpi	r24, 0x51	; 81
     3a6:	18 f0       	brcs	.+6      	; 0x3ae <autonomouswalk_walk+0x28>
		{
			walk_forward(sensors);
     3a8:	ce 01       	movw	r24, r28
     3aa:	e5 de       	rcall	.-566    	; 0x176 <walk_forward>
     3ac:	23 c0       	rjmp	.+70     	; 0x3f4 <autonomouswalk_walk+0x6e>
		}
		else if(navigation_check_right_turn(sensors[1], sensors[3]) == 2)
     3ae:	6b 81       	ldd	r22, Y+3	; 0x03
     3b0:	89 81       	ldd	r24, Y+1	; 0x01
     3b2:	87 d1       	rcall	.+782    	; 0x6c2 <navigation_check_right_turn>
     3b4:	82 30       	cpi	r24, 0x02	; 2
     3b6:	19 f4       	brne	.+6      	; 0x3be <autonomouswalk_walk+0x38>
		{
			turn_right(sensors);
     3b8:	ce 01       	movw	r24, r28
     3ba:	61 df       	rcall	.-318    	; 0x27e <turn_right>
     3bc:	1b c0       	rjmp	.+54     	; 0x3f4 <autonomouswalk_walk+0x6e>
		}
		else
		{
			turn_around(sensors[4]);
     3be:	8c 81       	ldd	r24, Y+4	; 0x04
     3c0:	aa de       	rcall	.-684    	; 0x116 <turn_around>
     3c2:	18 c0       	rjmp	.+48     	; 0x3f4 <autonomouswalk_walk+0x6e>
		}
	}
	else
	{
		if(navigation_check_right_turn(sensors[1], sensors[3]) == 2)
     3c4:	6b 81       	ldd	r22, Y+3	; 0x03
     3c6:	89 81       	ldd	r24, Y+1	; 0x01
     3c8:	7c d1       	rcall	.+760    	; 0x6c2 <navigation_check_right_turn>
     3ca:	82 30       	cpi	r24, 0x02	; 2
     3cc:	19 f4       	brne	.+6      	; 0x3d4 <autonomouswalk_walk+0x4e>
		{
			turn_left(sensors);
     3ce:	ce 01       	movw	r24, r28
     3d0:	98 df       	rcall	.-208    	; 0x302 <turn_left>
     3d2:	10 c0       	rjmp	.+32     	; 0x3f4 <autonomouswalk_walk+0x6e>
		}
		else if(sensors[4] > CORRIDOR_WIDTH)
     3d4:	8c 81       	ldd	r24, Y+4	; 0x04
     3d6:	81 35       	cpi	r24, 0x51	; 81
     3d8:	18 f0       	brcs	.+6      	; 0x3e0 <autonomouswalk_walk+0x5a>
		{
			walk_forward(sensors);
     3da:	ce 01       	movw	r24, r28
     3dc:	cc de       	rcall	.-616    	; 0x176 <walk_forward>
     3de:	0a c0       	rjmp	.+20     	; 0x3f4 <autonomouswalk_walk+0x6e>
		}
		else if(navigation_check_left_turn(sensors[0], sensors[2]) == 2)
     3e0:	6a 81       	ldd	r22, Y+2	; 0x02
     3e2:	88 81       	ld	r24, Y
     3e4:	62 d1       	rcall	.+708    	; 0x6aa <navigation_check_left_turn>
     3e6:	82 30       	cpi	r24, 0x02	; 2
     3e8:	19 f4       	brne	.+6      	; 0x3f0 <autonomouswalk_walk+0x6a>
		{
			turn_right(sensors);
     3ea:	ce 01       	movw	r24, r28
     3ec:	48 df       	rcall	.-368    	; 0x27e <turn_right>
     3ee:	02 c0       	rjmp	.+4      	; 0x3f4 <autonomouswalk_walk+0x6e>
		}
		else
		{
			turn_around(sensors[4]);
     3f0:	8c 81       	ldd	r24, Y+4	; 0x04
     3f2:	91 de       	rcall	.-734    	; 0x116 <turn_around>
		}
	}
     3f4:	df 91       	pop	r29
     3f6:	cf 91       	pop	r28
     3f8:	08 95       	ret

000003fa <set_counter_1>:
     3fa:	bc 01       	movw	r22, r24
     3fc:	80 e0       	ldi	r24, 0x00	; 0
     3fe:	90 e0       	ldi	r25, 0x00	; 0
     400:	0e 94 bd 0b 	call	0x177a	; 0x177a <__floatunsisf>
     404:	20 e0       	ldi	r18, 0x00	; 0
     406:	30 e0       	ldi	r19, 0x00	; 0
     408:	4a e7       	ldi	r20, 0x7A	; 122
     40a:	51 e4       	ldi	r21, 0x41	; 65
     40c:	0e 94 b0 0c 	call	0x1960	; 0x1960 <__mulsf3>
     410:	0e 94 91 0b 	call	0x1722	; 0x1722 <__fixunssfsi>
     414:	70 93 89 00 	sts	0x0089, r23
     418:	60 93 88 00 	sts	0x0088, r22
     41c:	08 95       	ret

0000041e <set_counter_2>:
     41e:	bc 01       	movw	r22, r24
     420:	80 e0       	ldi	r24, 0x00	; 0
     422:	90 e0       	ldi	r25, 0x00	; 0
     424:	0e 94 bd 0b 	call	0x177a	; 0x177a <__floatunsisf>
     428:	20 e0       	ldi	r18, 0x00	; 0
     42a:	30 e0       	ldi	r19, 0x00	; 0
     42c:	4a e7       	ldi	r20, 0x7A	; 122
     42e:	51 e4       	ldi	r21, 0x41	; 65
     430:	0e 94 b0 0c 	call	0x1960	; 0x1960 <__mulsf3>
     434:	0e 94 91 0b 	call	0x1722	; 0x1722 <__fixunssfsi>
     438:	70 93 99 00 	sts	0x0099, r23
     43c:	60 93 98 00 	sts	0x0098, r22
     440:	08 95       	ret

00000442 <init_counters>:
     442:	e1 e8       	ldi	r30, 0x81	; 129
     444:	f0 e0       	ldi	r31, 0x00	; 0
     446:	80 81       	ld	r24, Z
     448:	85 60       	ori	r24, 0x05	; 5
     44a:	80 83       	st	Z, r24
     44c:	e1 e9       	ldi	r30, 0x91	; 145
     44e:	f0 e0       	ldi	r31, 0x00	; 0
     450:	80 81       	ld	r24, Z
     452:	85 60       	ori	r24, 0x05	; 5
     454:	80 83       	st	Z, r24
     456:	88 ee       	ldi	r24, 0xE8	; 232
     458:	93 e0       	ldi	r25, 0x03	; 3
     45a:	cf df       	rcall	.-98     	; 0x3fa <set_counter_1>
     45c:	88 ee       	ldi	r24, 0xE8	; 232
     45e:	93 e0       	ldi	r25, 0x03	; 3
     460:	de df       	rcall	.-68     	; 0x41e <set_counter_2>
     462:	ef e6       	ldi	r30, 0x6F	; 111
     464:	f0 e0       	ldi	r31, 0x00	; 0
     466:	80 81       	ld	r24, Z
     468:	82 60       	ori	r24, 0x02	; 2
     46a:	80 83       	st	Z, r24
     46c:	e1 e7       	ldi	r30, 0x71	; 113
     46e:	f0 e0       	ldi	r31, 0x00	; 0
     470:	80 81       	ld	r24, Z
     472:	82 60       	ori	r24, 0x02	; 2
     474:	80 83       	st	Z, r24
     476:	10 92 85 00 	sts	0x0085, r1
     47a:	10 92 84 00 	sts	0x0084, r1
     47e:	10 92 95 00 	sts	0x0095, r1
     482:	10 92 94 00 	sts	0x0094, r1
     486:	08 95       	ret

00000488 <FifoDataLength>:
     488:	fc 01       	movw	r30, r24
     48a:	90 81       	ld	r25, Z
     48c:	91 50       	subi	r25, 0x01	; 1
     48e:	84 81       	ldd	r24, Z+4	; 0x04
     490:	22 81       	ldd	r18, Z+2	; 0x02
     492:	82 1b       	sub	r24, r18
     494:	89 23       	and	r24, r25
     496:	08 95       	ret

00000498 <FifoWrite>:
     498:	1f 93       	push	r17
     49a:	cf 93       	push	r28
     49c:	df 93       	push	r29
     49e:	ec 01       	movw	r28, r24
     4a0:	16 2f       	mov	r17, r22
     4a2:	f2 df       	rcall	.-28     	; 0x488 <FifoDataLength>
     4a4:	28 81       	ld	r18, Y
     4a6:	39 81       	ldd	r19, Y+1	; 0x01
     4a8:	21 50       	subi	r18, 0x01	; 1
     4aa:	31 09       	sbc	r19, r1
     4ac:	90 e0       	ldi	r25, 0x00	; 0
     4ae:	82 17       	cp	r24, r18
     4b0:	93 07       	cpc	r25, r19
     4b2:	69 f0       	breq	.+26     	; 0x4ce <FifoWrite+0x36>
     4b4:	8c 81       	ldd	r24, Y+4	; 0x04
     4b6:	9d 81       	ldd	r25, Y+5	; 0x05
     4b8:	fe 01       	movw	r30, r28
     4ba:	e8 0f       	add	r30, r24
     4bc:	f9 1f       	adc	r31, r25
     4be:	16 83       	std	Z+6, r17	; 0x06
     4c0:	01 96       	adiw	r24, 0x01	; 1
     4c2:	28 23       	and	r18, r24
     4c4:	39 23       	and	r19, r25
     4c6:	3d 83       	std	Y+5, r19	; 0x05
     4c8:	2c 83       	std	Y+4, r18	; 0x04
     4ca:	80 e0       	ldi	r24, 0x00	; 0
     4cc:	01 c0       	rjmp	.+2      	; 0x4d0 <FifoWrite+0x38>
     4ce:	81 e0       	ldi	r24, 0x01	; 1
     4d0:	df 91       	pop	r29
     4d2:	cf 91       	pop	r28
     4d4:	1f 91       	pop	r17
     4d6:	08 95       	ret

000004d8 <FifoRead>:
     4d8:	0f 93       	push	r16
     4da:	1f 93       	push	r17
     4dc:	cf 93       	push	r28
     4de:	df 93       	push	r29
     4e0:	ec 01       	movw	r28, r24
     4e2:	8b 01       	movw	r16, r22
     4e4:	d1 df       	rcall	.-94     	; 0x488 <FifoDataLength>
     4e6:	88 23       	and	r24, r24
     4e8:	a1 f0       	breq	.+40     	; 0x512 <FifoRead+0x3a>
     4ea:	ea 81       	ldd	r30, Y+2	; 0x02
     4ec:	fb 81       	ldd	r31, Y+3	; 0x03
     4ee:	ec 0f       	add	r30, r28
     4f0:	fd 1f       	adc	r31, r29
     4f2:	86 81       	ldd	r24, Z+6	; 0x06
     4f4:	f8 01       	movw	r30, r16
     4f6:	80 83       	st	Z, r24
     4f8:	28 81       	ld	r18, Y
     4fa:	39 81       	ldd	r19, Y+1	; 0x01
     4fc:	21 50       	subi	r18, 0x01	; 1
     4fe:	31 09       	sbc	r19, r1
     500:	8a 81       	ldd	r24, Y+2	; 0x02
     502:	9b 81       	ldd	r25, Y+3	; 0x03
     504:	01 96       	adiw	r24, 0x01	; 1
     506:	82 23       	and	r24, r18
     508:	93 23       	and	r25, r19
     50a:	9b 83       	std	Y+3, r25	; 0x03
     50c:	8a 83       	std	Y+2, r24	; 0x02
     50e:	80 e0       	ldi	r24, 0x00	; 0
     510:	01 c0       	rjmp	.+2      	; 0x514 <FifoRead+0x3c>
     512:	81 e0       	ldi	r24, 0x01	; 1
     514:	df 91       	pop	r29
     516:	cf 91       	pop	r28
     518:	1f 91       	pop	r17
     51a:	0f 91       	pop	r16
     51c:	08 95       	ret

0000051e <compare>:
     51e:	fc 01       	movw	r30, r24
     520:	20 81       	ld	r18, Z
     522:	30 e0       	ldi	r19, 0x00	; 0
     524:	fb 01       	movw	r30, r22
     526:	80 81       	ld	r24, Z
     528:	28 1b       	sub	r18, r24
     52a:	31 09       	sbc	r19, r1
     52c:	82 2f       	mov	r24, r18
     52e:	93 2f       	mov	r25, r19
     530:	08 95       	ret

00000532 <navigation_left_algorithm>:
     532:	80 91 05 01 	lds	r24, 0x0105
     536:	08 95       	ret

00000538 <navigation_autonomous_walk>:
     538:	80 91 02 13 	lds	r24, 0x1302
     53c:	08 95       	ret

0000053e <navigation_angle_offset>:
     53e:	fc 01       	movw	r30, r24
     540:	80 91 05 01 	lds	r24, 0x0105
     544:	88 23       	and	r24, r24
     546:	71 f1       	breq	.+92     	; 0x5a4 <navigation_angle_offset+0x66>
     548:	82 81       	ldd	r24, Z+2	; 0x02
     54a:	90 e0       	ldi	r25, 0x00	; 0
     54c:	20 81       	ld	r18, Z
     54e:	30 e0       	ldi	r19, 0x00	; 0
     550:	ac 01       	movw	r20, r24
     552:	42 0f       	add	r20, r18
     554:	53 1f       	adc	r21, r19
     556:	44 36       	cpi	r20, 0x64	; 100
     558:	51 05       	cpc	r21, r1
     55a:	7c f4       	brge	.+30     	; 0x57a <navigation_angle_offset+0x3c>
     55c:	82 1b       	sub	r24, r18
     55e:	93 0b       	sbc	r25, r19
     560:	60 e9       	ldi	r22, 0x90	; 144
     562:	71 e0       	ldi	r23, 0x01	; 1
     564:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <__divmodhi4>
     568:	88 27       	eor	r24, r24
     56a:	77 fd       	sbrc	r23, 7
     56c:	80 95       	com	r24
     56e:	98 2f       	mov	r25, r24
     570:	0e 94 bf 0b 	call	0x177e	; 0x177e <__floatsisf>
     574:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <atan>
     578:	46 c0       	rjmp	.+140    	; 0x606 <navigation_angle_offset+0xc8>
     57a:	84 81       	ldd	r24, Z+4	; 0x04
     57c:	81 35       	cpi	r24, 0x51	; 81
     57e:	90 f0       	brcs	.+36     	; 0x5a4 <navigation_angle_offset+0x66>
     580:	81 81       	ldd	r24, Z+1	; 0x01
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	23 81       	ldd	r18, Z+3	; 0x03
     586:	82 1b       	sub	r24, r18
     588:	91 09       	sbc	r25, r1
     58a:	60 e9       	ldi	r22, 0x90	; 144
     58c:	71 e0       	ldi	r23, 0x01	; 1
     58e:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <__divmodhi4>
     592:	88 27       	eor	r24, r24
     594:	77 fd       	sbrc	r23, 7
     596:	80 95       	com	r24
     598:	98 2f       	mov	r25, r24
     59a:	0e 94 bf 0b 	call	0x177e	; 0x177e <__floatsisf>
     59e:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <atan>
     5a2:	31 c0       	rjmp	.+98     	; 0x606 <navigation_angle_offset+0xc8>
     5a4:	81 81       	ldd	r24, Z+1	; 0x01
     5a6:	90 e0       	ldi	r25, 0x00	; 0
     5a8:	23 81       	ldd	r18, Z+3	; 0x03
     5aa:	30 e0       	ldi	r19, 0x00	; 0
     5ac:	ac 01       	movw	r20, r24
     5ae:	42 0f       	add	r20, r18
     5b0:	53 1f       	adc	r21, r19
     5b2:	44 36       	cpi	r20, 0x64	; 100
     5b4:	51 05       	cpc	r21, r1
     5b6:	7c f4       	brge	.+30     	; 0x5d6 <navigation_angle_offset+0x98>
     5b8:	82 1b       	sub	r24, r18
     5ba:	93 0b       	sbc	r25, r19
     5bc:	60 e9       	ldi	r22, 0x90	; 144
     5be:	71 e0       	ldi	r23, 0x01	; 1
     5c0:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <__divmodhi4>
     5c4:	88 27       	eor	r24, r24
     5c6:	77 fd       	sbrc	r23, 7
     5c8:	80 95       	com	r24
     5ca:	98 2f       	mov	r25, r24
     5cc:	0e 94 bf 0b 	call	0x177e	; 0x177e <__floatsisf>
     5d0:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <atan>
     5d4:	18 c0       	rjmp	.+48     	; 0x606 <navigation_angle_offset+0xc8>
     5d6:	84 81       	ldd	r24, Z+4	; 0x04
     5d8:	81 35       	cpi	r24, 0x51	; 81
     5da:	88 f0       	brcs	.+34     	; 0x5fe <navigation_angle_offset+0xc0>
     5dc:	82 81       	ldd	r24, Z+2	; 0x02
     5de:	90 e0       	ldi	r25, 0x00	; 0
     5e0:	20 81       	ld	r18, Z
     5e2:	82 1b       	sub	r24, r18
     5e4:	91 09       	sbc	r25, r1
     5e6:	60 e9       	ldi	r22, 0x90	; 144
     5e8:	71 e0       	ldi	r23, 0x01	; 1
     5ea:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <__divmodhi4>
     5ee:	88 27       	eor	r24, r24
     5f0:	77 fd       	sbrc	r23, 7
     5f2:	80 95       	com	r24
     5f4:	98 2f       	mov	r25, r24
     5f6:	0e 94 bf 0b 	call	0x177e	; 0x177e <__floatsisf>
     5fa:	fb d7       	rcall	.+4086   	; 0x15f2 <atan>
     5fc:	04 c0       	rjmp	.+8      	; 0x606 <navigation_angle_offset+0xc8>
     5fe:	60 e0       	ldi	r22, 0x00	; 0
     600:	70 e0       	ldi	r23, 0x00	; 0
     602:	80 e0       	ldi	r24, 0x00	; 0
     604:	90 e0       	ldi	r25, 0x00	; 0
     606:	08 95       	ret

00000608 <navigation_direction_regulation>:
     608:	20 91 05 01 	lds	r18, 0x0105
     60c:	22 23       	and	r18, r18
     60e:	89 f0       	breq	.+34     	; 0x632 <navigation_direction_regulation+0x2a>
     610:	fc 01       	movw	r30, r24
     612:	84 81       	ldd	r24, Z+4	; 0x04
     614:	81 35       	cpi	r24, 0x51	; 81
     616:	d0 f1       	brcs	.+116    	; 0x68c <navigation_direction_regulation+0x84>
     618:	cb 01       	movw	r24, r22
     61a:	ba 01       	movw	r22, r20
     61c:	0e 94 21 0b 	call	0x1642	; 0x1642 <cos>
     620:	20 e0       	ldi	r18, 0x00	; 0
     622:	30 e0       	ldi	r19, 0x00	; 0
     624:	48 e4       	ldi	r20, 0x48	; 72
     626:	53 e4       	ldi	r21, 0x43	; 67
     628:	0e 94 b0 0c 	call	0x1960	; 0x1960 <__mulsf3>
     62c:	0e 94 8c 0b 	call	0x1718	; 0x1718 <__fixsfsi>
     630:	17 c0       	rjmp	.+46     	; 0x660 <navigation_direction_regulation+0x58>
     632:	fc 01       	movw	r30, r24
     634:	84 81       	ldd	r24, Z+4	; 0x04
     636:	81 35       	cpi	r24, 0x51	; 81
     638:	70 f1       	brcs	.+92     	; 0x696 <navigation_direction_regulation+0x8e>
     63a:	cb 01       	movw	r24, r22
     63c:	ba 01       	movw	r22, r20
     63e:	0e 94 21 0b 	call	0x1642	; 0x1642 <cos>
     642:	20 e0       	ldi	r18, 0x00	; 0
     644:	30 e0       	ldi	r19, 0x00	; 0
     646:	48 e4       	ldi	r20, 0x48	; 72
     648:	53 e4       	ldi	r21, 0x43	; 67
     64a:	0e 94 b0 0c 	call	0x1960	; 0x1960 <__mulsf3>
     64e:	9b 01       	movw	r18, r22
     650:	ac 01       	movw	r20, r24
     652:	60 e0       	ldi	r22, 0x00	; 0
     654:	70 e0       	ldi	r23, 0x00	; 0
     656:	80 ea       	ldi	r24, 0xA0	; 160
     658:	92 e4       	ldi	r25, 0x42	; 66
     65a:	66 d7       	rcall	.+3788   	; 0x1528 <__subsf3>
     65c:	0e 94 8c 0b 	call	0x1718	; 0x1718 <__fixsfsi>
     660:	88 e2       	ldi	r24, 0x28	; 40
     662:	90 e0       	ldi	r25, 0x00	; 0
     664:	86 1b       	sub	r24, r22
     666:	97 0b       	sbc	r25, r23
     668:	85 30       	cpi	r24, 0x05	; 5
     66a:	91 05       	cpc	r25, r1
     66c:	cc f0       	brlt	.+50     	; 0x6a0 <navigation_direction_regulation+0x98>
     66e:	20 91 04 01 	lds	r18, 0x0104
     672:	28 9f       	mul	r18, r24
     674:	b0 01       	movw	r22, r0
     676:	29 9f       	mul	r18, r25
     678:	70 0d       	add	r23, r0
     67a:	11 24       	eor	r1, r1
     67c:	88 27       	eor	r24, r24
     67e:	77 fd       	sbrc	r23, 7
     680:	80 95       	com	r24
     682:	98 2f       	mov	r25, r24
     684:	0e 94 bf 0b 	call	0x177e	; 0x177e <__floatsisf>
     688:	b4 d7       	rcall	.+3944   	; 0x15f2 <atan>
     68a:	0e c0       	rjmp	.+28     	; 0x6a8 <navigation_direction_regulation+0xa0>
     68c:	60 e0       	ldi	r22, 0x00	; 0
     68e:	70 e0       	ldi	r23, 0x00	; 0
     690:	80 e0       	ldi	r24, 0x00	; 0
     692:	90 e0       	ldi	r25, 0x00	; 0
     694:	09 c0       	rjmp	.+18     	; 0x6a8 <navigation_direction_regulation+0xa0>
     696:	60 e0       	ldi	r22, 0x00	; 0
     698:	70 e0       	ldi	r23, 0x00	; 0
     69a:	80 e0       	ldi	r24, 0x00	; 0
     69c:	90 e0       	ldi	r25, 0x00	; 0
     69e:	04 c0       	rjmp	.+8      	; 0x6a8 <navigation_direction_regulation+0xa0>
     6a0:	60 e0       	ldi	r22, 0x00	; 0
     6a2:	70 e0       	ldi	r23, 0x00	; 0
     6a4:	80 e0       	ldi	r24, 0x00	; 0
     6a6:	90 e0       	ldi	r25, 0x00	; 0
     6a8:	08 95       	ret

000006aa <navigation_check_left_turn>:
     6aa:	81 35       	cpi	r24, 0x51	; 81
     6ac:	10 f0       	brcs	.+4      	; 0x6b2 <navigation_check_left_turn+0x8>
     6ae:	61 35       	cpi	r22, 0x51	; 81
     6b0:	28 f4       	brcc	.+10     	; 0x6bc <navigation_check_left_turn+0x12>
     6b2:	91 e0       	ldi	r25, 0x01	; 1
     6b4:	81 35       	cpi	r24, 0x51	; 81
     6b6:	18 f4       	brcc	.+6      	; 0x6be <navigation_check_left_turn+0x14>
     6b8:	90 e0       	ldi	r25, 0x00	; 0
     6ba:	01 c0       	rjmp	.+2      	; 0x6be <navigation_check_left_turn+0x14>
     6bc:	92 e0       	ldi	r25, 0x02	; 2
     6be:	89 2f       	mov	r24, r25
     6c0:	08 95       	ret

000006c2 <navigation_check_right_turn>:
     6c2:	81 35       	cpi	r24, 0x51	; 81
     6c4:	10 f0       	brcs	.+4      	; 0x6ca <navigation_check_right_turn+0x8>
     6c6:	61 35       	cpi	r22, 0x51	; 81
     6c8:	28 f4       	brcc	.+10     	; 0x6d4 <navigation_check_right_turn+0x12>
     6ca:	91 e0       	ldi	r25, 0x01	; 1
     6cc:	81 35       	cpi	r24, 0x51	; 81
     6ce:	18 f4       	brcc	.+6      	; 0x6d6 <navigation_check_right_turn+0x14>
     6d0:	90 e0       	ldi	r25, 0x00	; 0
     6d2:	01 c0       	rjmp	.+2      	; 0x6d6 <navigation_check_right_turn+0x14>
     6d4:	92 e0       	ldi	r25, 0x02	; 2
     6d6:	89 2f       	mov	r24, r25
     6d8:	08 95       	ret

000006da <navigation_get_sensor>:
     6da:	ef 92       	push	r14
     6dc:	ff 92       	push	r15
     6de:	0f 93       	push	r16
     6e0:	1f 93       	push	r17
     6e2:	cf 93       	push	r28
     6e4:	df 93       	push	r29
     6e6:	cd b7       	in	r28, 0x3d	; 61
     6e8:	de b7       	in	r29, 0x3e	; 62
     6ea:	ed b6       	in	r14, 0x3d	; 61
     6ec:	fe b6       	in	r15, 0x3e	; 62
     6ee:	60 91 02 01 	lds	r22, 0x0102
     6f2:	70 91 03 01 	lds	r23, 0x0103
     6f6:	2d b7       	in	r18, 0x3d	; 61
     6f8:	3e b7       	in	r19, 0x3e	; 62
     6fa:	26 1b       	sub	r18, r22
     6fc:	37 0b       	sbc	r19, r23
     6fe:	0f b6       	in	r0, 0x3f	; 63
     700:	f8 94       	cli
     702:	3e bf       	out	0x3e, r19	; 62
     704:	0f be       	out	0x3f, r0	; 63
     706:	2d bf       	out	0x3d, r18	; 61
     708:	0d b7       	in	r16, 0x3d	; 61
     70a:	1e b7       	in	r17, 0x3e	; 62
     70c:	0f 5f       	subi	r16, 0xFF	; 255
     70e:	1f 4f       	sbci	r17, 0xFF	; 255
     710:	16 16       	cp	r1, r22
     712:	17 06       	cpc	r1, r23
     714:	84 f4       	brge	.+32     	; 0x736 <navigation_get_sensor+0x5c>
     716:	dc 01       	movw	r26, r24
     718:	aa 0f       	add	r26, r26
     71a:	bb 1f       	adc	r27, r27
     71c:	a8 0f       	add	r26, r24
     71e:	b9 1f       	adc	r27, r25
     720:	a2 5f       	subi	r26, 0xF2	; 242
     722:	bc 4e       	sbci	r27, 0xEC	; 236
     724:	f8 01       	movw	r30, r16
     726:	c8 01       	movw	r24, r16
     728:	86 0f       	add	r24, r22
     72a:	97 1f       	adc	r25, r23
     72c:	2d 91       	ld	r18, X+
     72e:	21 93       	st	Z+, r18
     730:	e8 17       	cp	r30, r24
     732:	f9 07       	cpc	r31, r25
     734:	d9 f7       	brne	.-10     	; 0x72c <navigation_get_sensor+0x52>
     736:	2f e8       	ldi	r18, 0x8F	; 143
     738:	32 e0       	ldi	r19, 0x02	; 2
     73a:	41 e0       	ldi	r20, 0x01	; 1
     73c:	50 e0       	ldi	r21, 0x00	; 0
     73e:	c8 01       	movw	r24, r16
     740:	0e 94 9e 0d 	call	0x1b3c	; 0x1b3c <qsort>
     744:	20 91 02 01 	lds	r18, 0x0102
     748:	30 91 03 01 	lds	r19, 0x0103
     74c:	33 23       	and	r19, r19
     74e:	14 f4       	brge	.+4      	; 0x754 <navigation_get_sensor+0x7a>
     750:	2f 5f       	subi	r18, 0xFF	; 255
     752:	3f 4f       	sbci	r19, 0xFF	; 255
     754:	35 95       	asr	r19
     756:	27 95       	ror	r18
     758:	f8 01       	movw	r30, r16
     75a:	e2 0f       	add	r30, r18
     75c:	f3 1f       	adc	r31, r19
     75e:	80 81       	ld	r24, Z
     760:	0f b6       	in	r0, 0x3f	; 63
     762:	f8 94       	cli
     764:	fe be       	out	0x3e, r15	; 62
     766:	0f be       	out	0x3f, r0	; 63
     768:	ed be       	out	0x3d, r14	; 61
     76a:	df 91       	pop	r29
     76c:	cf 91       	pop	r28
     76e:	1f 91       	pop	r17
     770:	0f 91       	pop	r16
     772:	ff 90       	pop	r15
     774:	ef 90       	pop	r14
     776:	08 95       	ret

00000778 <navigation_fill_buffer>:
     778:	0f 93       	push	r16
     77a:	1f 93       	push	r17
     77c:	cf 93       	push	r28
     77e:	df 93       	push	r29
     780:	c0 e0       	ldi	r28, 0x00	; 0
     782:	d0 e0       	ldi	r29, 0x00	; 0
     784:	00 91 0d 13 	lds	r16, 0x130D
     788:	10 e0       	ldi	r17, 0x00	; 0
     78a:	ce 01       	movw	r24, r28
     78c:	84 d2       	rcall	.+1288   	; 0xc96 <TWI_get_sensor>
     78e:	fe 01       	movw	r30, r28
     790:	ee 0f       	add	r30, r30
     792:	ff 1f       	adc	r31, r31
     794:	ec 0f       	add	r30, r28
     796:	fd 1f       	adc	r31, r29
     798:	0e 0f       	add	r16, r30
     79a:	1f 1f       	adc	r17, r31
     79c:	f8 01       	movw	r30, r16
     79e:	e2 5f       	subi	r30, 0xF2	; 242
     7a0:	fc 4e       	sbci	r31, 0xEC	; 236
     7a2:	80 83       	st	Z, r24
     7a4:	21 96       	adiw	r28, 0x01	; 1
     7a6:	c8 30       	cpi	r28, 0x08	; 8
     7a8:	d1 05       	cpc	r29, r1
     7aa:	61 f7       	brne	.-40     	; 0x784 <navigation_fill_buffer+0xc>
     7ac:	40 91 0d 13 	lds	r20, 0x130D
     7b0:	24 2f       	mov	r18, r20
     7b2:	30 e0       	ldi	r19, 0x00	; 0
     7b4:	80 91 02 01 	lds	r24, 0x0102
     7b8:	90 91 03 01 	lds	r25, 0x0103
     7bc:	01 97       	sbiw	r24, 0x01	; 1
     7be:	28 17       	cp	r18, r24
     7c0:	39 07       	cpc	r19, r25
     7c2:	19 f4       	brne	.+6      	; 0x7ca <navigation_fill_buffer+0x52>
     7c4:	10 92 0d 13 	sts	0x130D, r1
     7c8:	03 c0       	rjmp	.+6      	; 0x7d0 <navigation_fill_buffer+0x58>
     7ca:	4f 5f       	subi	r20, 0xFF	; 255
     7cc:	40 93 0d 13 	sts	0x130D, r20
     7d0:	df 91       	pop	r29
     7d2:	cf 91       	pop	r28
     7d4:	1f 91       	pop	r17
     7d6:	0f 91       	pop	r16
     7d8:	08 95       	ret

000007da <__vector_13>:
     7da:	1f 92       	push	r1
     7dc:	0f 92       	push	r0
     7de:	0f b6       	in	r0, 0x3f	; 63
     7e0:	0f 92       	push	r0
     7e2:	11 24       	eor	r1, r1
     7e4:	0b b6       	in	r0, 0x3b	; 59
     7e6:	0f 92       	push	r0
     7e8:	2f 93       	push	r18
     7ea:	3f 93       	push	r19
     7ec:	4f 93       	push	r20
     7ee:	5f 93       	push	r21
     7f0:	6f 93       	push	r22
     7f2:	7f 93       	push	r23
     7f4:	8f 93       	push	r24
     7f6:	9f 93       	push	r25
     7f8:	af 93       	push	r26
     7fa:	bf 93       	push	r27
     7fc:	ef 93       	push	r30
     7fe:	ff 93       	push	r31
     800:	4f d2       	rcall	.+1182   	; 0xca0 <TWI_sensor_flag>
     802:	81 11       	cpse	r24, r1
     804:	b9 df       	rcall	.-142    	; 0x778 <navigation_fill_buffer>
     806:	10 92 85 00 	sts	0x0085, r1
     80a:	10 92 84 00 	sts	0x0084, r1
     80e:	ff 91       	pop	r31
     810:	ef 91       	pop	r30
     812:	bf 91       	pop	r27
     814:	af 91       	pop	r26
     816:	9f 91       	pop	r25
     818:	8f 91       	pop	r24
     81a:	7f 91       	pop	r23
     81c:	6f 91       	pop	r22
     81e:	5f 91       	pop	r21
     820:	4f 91       	pop	r20
     822:	3f 91       	pop	r19
     824:	2f 91       	pop	r18
     826:	0f 90       	pop	r0
     828:	0b be       	out	0x3b, r0	; 59
     82a:	0f 90       	pop	r0
     82c:	0f be       	out	0x3f, r0	; 63
     82e:	0f 90       	pop	r0
     830:	1f 90       	pop	r1
     832:	18 95       	reti

00000834 <__vector_32>:
     834:	1f 92       	push	r1
     836:	0f 92       	push	r0
     838:	0f b6       	in	r0, 0x3f	; 63
     83a:	0f 92       	push	r0
     83c:	11 24       	eor	r1, r1
     83e:	10 92 95 00 	sts	0x0095, r1
     842:	10 92 94 00 	sts	0x0094, r1
     846:	0f 90       	pop	r0
     848:	0f be       	out	0x3f, r0	; 63
     84a:	0f 90       	pop	r0
     84c:	1f 90       	pop	r1
     84e:	18 95       	reti

00000850 <main>:
#include "counter.h"
#include "Navigation.h"
#include "autonomouswalk.h"

int main(void)
{
     850:	cf 93       	push	r28
     852:	df 93       	push	r29
     854:	00 d0       	rcall	.+0      	; 0x856 <main+0x6>
     856:	00 d0       	rcall	.+0      	; 0x858 <main+0x8>
     858:	00 d0       	rcall	.+0      	; 0x85a <main+0xa>
     85a:	cd b7       	in	r28, 0x3d	; 61
     85c:	de b7       	in	r29, 0x3e	; 62
	USART_init();
     85e:	ab d3       	rcall	.+1878   	; 0xfb6 <USART_init>
	sei();
     860:	78 94       	sei
	TWI_init(ST_ADDRESS);
     862:	80 e2       	ldi	r24, 0x20	; 32
     864:	d5 d0       	rcall	.+426    	; 0xa10 <TWI_init>
	init_counters();
     866:	ed dd       	rcall	.-1062   	; 0x442 <init_counters>
	DDRA |= (1<<PORTA0 | 1<<PORTA1);
     868:	81 b1       	in	r24, 0x01	; 1
     86a:	83 60       	ori	r24, 0x03	; 3
     86c:	81 b9       	out	0x01, r24	; 1
     86e:	2f ef       	ldi	r18, 0xFF	; 255
     870:	83 ed       	ldi	r24, 0xD3	; 211
     872:	90 e3       	ldi	r25, 0x30	; 48
     874:	21 50       	subi	r18, 0x01	; 1
     876:	80 40       	sbci	r24, 0x00	; 0
     878:	90 40       	sbci	r25, 0x00	; 0
     87a:	e1 f7       	brne	.-8      	; 0x874 <main+0x24>
     87c:	00 c0       	rjmp	.+0      	; 0x87e <main+0x2e>
     87e:	00 00       	nop
	
	_delay_ms(1000);
	USART_send_command_parameters(0,50,100);
     880:	44 e6       	ldi	r20, 0x64	; 100
     882:	62 e3       	ldi	r22, 0x32	; 50
     884:	80 e0       	ldi	r24, 0x00	; 0
     886:	47 d6       	rcall	.+3214   	; 0x1516 <USART_send_command_parameters>
			autonomouswalk_walk(sensors);
		}
		else
		{
			if(TWI_command_flag()){
				PORTA ^= (1<<PORTA1);
     888:	12 e0       	ldi	r17, 0x02	; 2
		*/
		
		//USART_send_command_parameters(0,50,100);
		//_delay_ms(1000);
		
		if(navigation_autonomous_walk() == 1)
     88a:	56 de       	rcall	.-852    	; 0x538 <navigation_autonomous_walk>
     88c:	81 30       	cpi	r24, 0x01	; 1
     88e:	e1 f4       	brne	.+56     	; 0x8c8 <main+0x78>
		{
			uint8_t sensors[6];
			sensors[0]=navigation_get_sensor(0);
     890:	80 e0       	ldi	r24, 0x00	; 0
     892:	90 e0       	ldi	r25, 0x00	; 0
     894:	22 df       	rcall	.-444    	; 0x6da <navigation_get_sensor>
     896:	89 83       	std	Y+1, r24	; 0x01
			sensors[1]=navigation_get_sensor(1);
     898:	81 e0       	ldi	r24, 0x01	; 1
     89a:	90 e0       	ldi	r25, 0x00	; 0
     89c:	1e df       	rcall	.-452    	; 0x6da <navigation_get_sensor>
     89e:	8a 83       	std	Y+2, r24	; 0x02
			sensors[2]=navigation_get_sensor(2);
     8a0:	82 e0       	ldi	r24, 0x02	; 2
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	1a df       	rcall	.-460    	; 0x6da <navigation_get_sensor>
     8a6:	8b 83       	std	Y+3, r24	; 0x03
			sensors[3]=navigation_get_sensor(3);
     8a8:	83 e0       	ldi	r24, 0x03	; 3
     8aa:	90 e0       	ldi	r25, 0x00	; 0
     8ac:	16 df       	rcall	.-468    	; 0x6da <navigation_get_sensor>
     8ae:	8c 83       	std	Y+4, r24	; 0x04
			sensors[4]=navigation_get_sensor(4);
     8b0:	84 e0       	ldi	r24, 0x04	; 4
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	12 df       	rcall	.-476    	; 0x6da <navigation_get_sensor>
     8b6:	8d 83       	std	Y+5, r24	; 0x05
			sensors[5]=navigation_get_sensor(5);
     8b8:	85 e0       	ldi	r24, 0x05	; 5
     8ba:	90 e0       	ldi	r25, 0x00	; 0
     8bc:	0e df       	rcall	.-484    	; 0x6da <navigation_get_sensor>
     8be:	8e 83       	std	Y+6, r24	; 0x06
			autonomouswalk_walk(sensors);
     8c0:	ce 01       	movw	r24, r28
     8c2:	01 96       	adiw	r24, 0x01	; 1
     8c4:	60 dd       	rcall	.-1344   	; 0x386 <autonomouswalk_walk>
     8c6:	07 c0       	rjmp	.+14     	; 0x8d6 <main+0x86>
		}
		else
		{
			if(TWI_command_flag()){
     8c8:	f5 d1       	rcall	.+1002   	; 0xcb4 <TWI_command_flag>
     8ca:	88 23       	and	r24, r24
     8cc:	21 f0       	breq	.+8      	; 0x8d6 <main+0x86>
				PORTA ^= (1<<PORTA1);
     8ce:	82 b1       	in	r24, 0x02	; 2
     8d0:	81 27       	eor	r24, r17
     8d2:	82 b9       	out	0x02, r24	; 2
				USART_SendCommand();
     8d4:	42 d4       	rcall	.+2180   	; 0x115a <USART_SendCommand>
			}
		}
		USART_DecodeRxFIFO();
     8d6:	76 d5       	rcall	.+2796   	; 0x13c4 <USART_DecodeRxFIFO>
    }
     8d8:	d8 cf       	rjmp	.-80     	; 0x88a <main+0x3a>

000008da <set_twi_reciever_enable>:
     8da:	85 e4       	ldi	r24, 0x45	; 69
     8dc:	80 93 bc 00 	sts	0x00BC, r24
     8e0:	08 95       	ret

000008e2 <clear_int>:
     8e2:	81 ec       	ldi	r24, 0xC1	; 193
     8e4:	80 93 bc 00 	sts	0x00BC, r24
     8e8:	08 95       	ret

000008ea <start_bus>:
     8ea:	84 ea       	ldi	r24, 0xA4	; 164
     8ec:	80 93 bc 00 	sts	0x00BC, r24
     8f0:	08 95       	ret

000008f2 <stop_bus>:
     8f2:	85 ed       	ldi	r24, 0xD5	; 213
     8f4:	80 93 bc 00 	sts	0x00BC, r24
     8f8:	08 95       	ret

000008fa <Error>:
     8fa:	80 91 b9 00 	lds	r24, 0x00B9
     8fe:	88 7f       	andi	r24, 0xF8	; 248
     900:	88 33       	cpi	r24, 0x38	; 56
     902:	09 f0       	breq	.+2      	; 0x906 <Error+0xc>
     904:	f6 cf       	rjmp	.-20     	; 0x8f2 <stop_bus>
     906:	ed cf       	rjmp	.-38     	; 0x8e2 <clear_int>

00000908 <get_data>:
     908:	80 91 bb 00 	lds	r24, 0x00BB
     90c:	08 95       	ret

0000090e <wait_for_bus>:
     90e:	ec eb       	ldi	r30, 0xBC	; 188
     910:	f0 e0       	ldi	r31, 0x00	; 0
     912:	80 81       	ld	r24, Z
     914:	88 23       	and	r24, r24
     916:	ec f7       	brge	.-6      	; 0x912 <wait_for_bus+0x4>
     918:	08 95       	ret

0000091a <send_data_and_wait>:
     91a:	80 93 bb 00 	sts	0x00BB, r24
     91e:	84 e8       	ldi	r24, 0x84	; 132
     920:	80 93 bc 00 	sts	0x00BC, r24
     924:	f4 cf       	rjmp	.-24     	; 0x90e <wait_for_bus>

00000926 <stop_twi>:
     926:	10 92 39 14 	sts	0x1439, r1
     92a:	10 92 38 14 	sts	0x1438, r1
     92e:	10 92 43 14 	sts	0x1443, r1
     932:	10 92 42 14 	sts	0x1442, r1
     936:	10 92 2e 14 	sts	0x142E, r1
     93a:	10 92 2d 14 	sts	0x142D, r1
     93e:	10 92 33 14 	sts	0x1433, r1
     942:	10 92 32 14 	sts	0x1432, r1
     946:	10 92 36 14 	sts	0x1436, r1
     94a:	10 92 35 14 	sts	0x1435, r1
     94e:	08 95       	ret

00000950 <reset_TWI>:
     950:	ec eb       	ldi	r30, 0xBC	; 188
     952:	f0 e0       	ldi	r31, 0x00	; 0
     954:	80 81       	ld	r24, Z
     956:	80 6c       	ori	r24, 0xC0	; 192
     958:	80 83       	st	Z, r24
     95a:	08 95       	ret

0000095c <get_sensor_from_bus>:
     95c:	cf 93       	push	r28
     95e:	df 93       	push	r29
     960:	c0 91 42 14 	lds	r28, 0x1442
     964:	d0 91 43 14 	lds	r29, 0x1443
     968:	c8 30       	cpi	r28, 0x08	; 8
     96a:	d1 05       	cpc	r29, r1
     96c:	91 f4       	brne	.+36     	; 0x992 <get_sensor_from_bus+0x36>
     96e:	ee e0       	ldi	r30, 0x0E	; 14
     970:	f3 e1       	ldi	r31, 0x13	; 19
     972:	a4 e4       	ldi	r26, 0x44	; 68
     974:	b4 e1       	ldi	r27, 0x14	; 20
     976:	86 e1       	ldi	r24, 0x16	; 22
     978:	93 e1       	ldi	r25, 0x13	; 19
     97a:	21 91       	ld	r18, Z+
     97c:	2d 93       	st	X+, r18
     97e:	e8 17       	cp	r30, r24
     980:	f9 07       	cpc	r31, r25
     982:	d9 f7       	brne	.-10     	; 0x97a <get_sensor_from_bus+0x1e>
     984:	c1 df       	rcall	.-126    	; 0x908 <get_data>
     986:	80 93 3c 14 	sts	0x143C, r24
     98a:	81 e0       	ldi	r24, 0x01	; 1
     98c:	80 93 08 13 	sts	0x1308, r24
     990:	0d c0       	rjmp	.+26     	; 0x9ac <get_sensor_from_bus+0x50>
     992:	ba df       	rcall	.-140    	; 0x908 <get_data>
     994:	c2 5f       	subi	r28, 0xF2	; 242
     996:	dc 4e       	sbci	r29, 0xEC	; 236
     998:	88 83       	st	Y, r24
     99a:	80 91 42 14 	lds	r24, 0x1442
     99e:	90 91 43 14 	lds	r25, 0x1443
     9a2:	01 96       	adiw	r24, 0x01	; 1
     9a4:	90 93 43 14 	sts	0x1443, r25
     9a8:	80 93 42 14 	sts	0x1442, r24
     9ac:	df 91       	pop	r29
     9ae:	cf 91       	pop	r28
     9b0:	08 95       	ret

000009b2 <get_control_settings_from_bus>:
     9b2:	cf 93       	push	r28
     9b4:	df 93       	push	r29
     9b6:	c0 91 32 14 	lds	r28, 0x1432
     9ba:	d0 91 33 14 	lds	r29, 0x1433
     9be:	a4 df       	rcall	.-184    	; 0x908 <get_data>
     9c0:	c1 5d       	subi	r28, 0xD1	; 209
     9c2:	db 4e       	sbci	r29, 0xEB	; 235
     9c4:	88 83       	st	Y, r24
     9c6:	10 92 33 14 	sts	0x1433, r1
     9ca:	10 92 32 14 	sts	0x1432, r1
     9ce:	df 91       	pop	r29
     9d0:	cf 91       	pop	r28
     9d2:	08 95       	ret

000009d4 <get_autonom_settings_from_bus>:
     9d4:	99 df       	rcall	.-206    	; 0x908 <get_data>
     9d6:	80 93 2d 13 	sts	0x132D, r24
     9da:	08 95       	ret

000009dc <get_char_from_bus>:
     9dc:	cf 93       	push	r28
     9de:	df 93       	push	r29
     9e0:	c0 91 2d 14 	lds	r28, 0x142D
     9e4:	d0 91 2e 14 	lds	r29, 0x142E
     9e8:	8f df       	rcall	.-226    	; 0x908 <get_data>
     9ea:	c2 5d       	subi	r28, 0xD2	; 210
     9ec:	dc 4e       	sbci	r29, 0xEC	; 236
     9ee:	88 83       	st	Y, r24
     9f0:	80 91 2d 14 	lds	r24, 0x142D
     9f4:	90 91 2e 14 	lds	r25, 0x142E
     9f8:	01 96       	adiw	r24, 0x01	; 1
     9fa:	90 93 2e 14 	sts	0x142E, r25
     9fe:	80 93 2d 14 	sts	0x142D, r24
     a02:	90 93 3e 14 	sts	0x143E, r25
     a06:	80 93 3d 14 	sts	0x143D, r24
     a0a:	df 91       	pop	r29
     a0c:	cf 91       	pop	r28
     a0e:	08 95       	ret

00000a10 <TWI_init>:
     a10:	80 93 34 14 	sts	0x1434, r24
     a14:	80 34       	cpi	r24, 0x40	; 64
     a16:	79 f0       	breq	.+30     	; 0xa36 <TWI_init+0x26>
     a18:	80 38       	cpi	r24, 0x80	; 128
     a1a:	19 f0       	breq	.+6      	; 0xa22 <TWI_init+0x12>
     a1c:	80 32       	cpi	r24, 0x20	; 32
     a1e:	d1 f4       	brne	.+52     	; 0xa54 <TWI_init+0x44>
     a20:	12 c0       	rjmp	.+36     	; 0xa46 <TWI_init+0x36>
     a22:	83 e0       	ldi	r24, 0x03	; 3
     a24:	88 b9       	out	0x08, r24	; 8
     a26:	59 df       	rcall	.-334    	; 0x8da <set_twi_reciever_enable>
     a28:	8f e3       	ldi	r24, 0x3F	; 63
     a2a:	80 93 b8 00 	sts	0x00B8, r24
     a2e:	81 e8       	ldi	r24, 0x81	; 129
     a30:	80 93 ba 00 	sts	0x00BA, r24
     a34:	0f c0       	rjmp	.+30     	; 0xa54 <TWI_init+0x44>
     a36:	8f e3       	ldi	r24, 0x3F	; 63
     a38:	80 93 b8 00 	sts	0x00B8, r24
     a3c:	4e df       	rcall	.-356    	; 0x8da <set_twi_reciever_enable>
     a3e:	80 e4       	ldi	r24, 0x40	; 64
     a40:	80 93 ba 00 	sts	0x00BA, r24
     a44:	07 c0       	rjmp	.+14     	; 0xa54 <TWI_init+0x44>
     a46:	8f e3       	ldi	r24, 0x3F	; 63
     a48:	80 93 b8 00 	sts	0x00B8, r24
     a4c:	46 df       	rcall	.-372    	; 0x8da <set_twi_reciever_enable>
     a4e:	81 e2       	ldi	r24, 0x21	; 33
     a50:	80 93 ba 00 	sts	0x00BA, r24
     a54:	10 92 2a 13 	sts	0x132A, r1
     a58:	82 e3       	ldi	r24, 0x32	; 50
     a5a:	80 93 2b 13 	sts	0x132B, r24
     a5e:	10 92 2c 13 	sts	0x132C, r1
     a62:	08 95       	ret

00000a64 <TWI_send_command>:
     a64:	1f 93       	push	r17
     a66:	cf 93       	push	r28
     a68:	df 93       	push	r29
     a6a:	c8 2f       	mov	r28, r24
     a6c:	d6 2f       	mov	r29, r22
     a6e:	14 2f       	mov	r17, r20
     a70:	3c df       	rcall	.-392    	; 0x8ea <start_bus>
     a72:	4d df       	rcall	.-358    	; 0x90e <wait_for_bus>
     a74:	90 91 b9 00 	lds	r25, 0x00B9
     a78:	98 7f       	andi	r25, 0xF8	; 248
     a7a:	98 30       	cpi	r25, 0x08	; 8
     a7c:	19 f0       	breq	.+6      	; 0xa84 <TWI_send_command+0x20>
     a7e:	3d df       	rcall	.-390    	; 0x8fa <Error>
     a80:	80 e0       	ldi	r24, 0x00	; 0
     a82:	34 c0       	rjmp	.+104    	; 0xaec <TWI_send_command+0x88>
     a84:	80 e2       	ldi	r24, 0x20	; 32
     a86:	49 df       	rcall	.-366    	; 0x91a <send_data_and_wait>
     a88:	80 91 b9 00 	lds	r24, 0x00B9
     a8c:	88 7f       	andi	r24, 0xF8	; 248
     a8e:	88 31       	cpi	r24, 0x18	; 24
     a90:	19 f0       	breq	.+6      	; 0xa98 <TWI_send_command+0x34>
     a92:	33 df       	rcall	.-410    	; 0x8fa <Error>
     a94:	80 e0       	ldi	r24, 0x00	; 0
     a96:	2a c0       	rjmp	.+84     	; 0xaec <TWI_send_command+0x88>
     a98:	80 e0       	ldi	r24, 0x00	; 0
     a9a:	3f df       	rcall	.-386    	; 0x91a <send_data_and_wait>
     a9c:	80 91 b9 00 	lds	r24, 0x00B9
     aa0:	88 7f       	andi	r24, 0xF8	; 248
     aa2:	88 32       	cpi	r24, 0x28	; 40
     aa4:	19 f0       	breq	.+6      	; 0xaac <TWI_send_command+0x48>
     aa6:	29 df       	rcall	.-430    	; 0x8fa <Error>
     aa8:	80 e0       	ldi	r24, 0x00	; 0
     aaa:	20 c0       	rjmp	.+64     	; 0xaec <TWI_send_command+0x88>
     aac:	8c 2f       	mov	r24, r28
     aae:	35 df       	rcall	.-406    	; 0x91a <send_data_and_wait>
     ab0:	80 91 b9 00 	lds	r24, 0x00B9
     ab4:	88 7f       	andi	r24, 0xF8	; 248
     ab6:	88 32       	cpi	r24, 0x28	; 40
     ab8:	19 f0       	breq	.+6      	; 0xac0 <TWI_send_command+0x5c>
     aba:	1f df       	rcall	.-450    	; 0x8fa <Error>
     abc:	80 e0       	ldi	r24, 0x00	; 0
     abe:	16 c0       	rjmp	.+44     	; 0xaec <TWI_send_command+0x88>
     ac0:	8d 2f       	mov	r24, r29
     ac2:	2b df       	rcall	.-426    	; 0x91a <send_data_and_wait>
     ac4:	80 91 b9 00 	lds	r24, 0x00B9
     ac8:	88 7f       	andi	r24, 0xF8	; 248
     aca:	88 32       	cpi	r24, 0x28	; 40
     acc:	19 f0       	breq	.+6      	; 0xad4 <TWI_send_command+0x70>
     ace:	15 df       	rcall	.-470    	; 0x8fa <Error>
     ad0:	80 e0       	ldi	r24, 0x00	; 0
     ad2:	0c c0       	rjmp	.+24     	; 0xaec <TWI_send_command+0x88>
     ad4:	81 2f       	mov	r24, r17
     ad6:	21 df       	rcall	.-446    	; 0x91a <send_data_and_wait>
     ad8:	80 91 b9 00 	lds	r24, 0x00B9
     adc:	88 7f       	andi	r24, 0xF8	; 248
     ade:	88 32       	cpi	r24, 0x28	; 40
     ae0:	19 f0       	breq	.+6      	; 0xae8 <TWI_send_command+0x84>
     ae2:	0b df       	rcall	.-490    	; 0x8fa <Error>
     ae4:	80 e0       	ldi	r24, 0x00	; 0
     ae6:	02 c0       	rjmp	.+4      	; 0xaec <TWI_send_command+0x88>
     ae8:	04 df       	rcall	.-504    	; 0x8f2 <stop_bus>
     aea:	81 e0       	ldi	r24, 0x01	; 1
     aec:	df 91       	pop	r29
     aee:	cf 91       	pop	r28
     af0:	1f 91       	pop	r17
     af2:	08 95       	ret

00000af4 <TWI_send_string>:
     af4:	ef 92       	push	r14
     af6:	ff 92       	push	r15
     af8:	0f 93       	push	r16
     afa:	1f 93       	push	r17
     afc:	cf 93       	push	r28
     afe:	df 93       	push	r29
     b00:	c8 2f       	mov	r28, r24
     b02:	e6 2e       	mov	r14, r22
     b04:	f7 2e       	mov	r15, r23
     b06:	f1 de       	rcall	.-542    	; 0x8ea <start_bus>
     b08:	02 df       	rcall	.-508    	; 0x90e <wait_for_bus>
     b0a:	90 91 b9 00 	lds	r25, 0x00B9
     b0e:	98 7f       	andi	r25, 0xF8	; 248
     b10:	98 30       	cpi	r25, 0x08	; 8
     b12:	19 f0       	breq	.+6      	; 0xb1a <TWI_send_string+0x26>
     b14:	f2 de       	rcall	.-540    	; 0x8fa <Error>
     b16:	80 e0       	ldi	r24, 0x00	; 0
     b18:	2c c0       	rjmp	.+88     	; 0xb72 <TWI_send_string+0x7e>
     b1a:	8c 2f       	mov	r24, r28
     b1c:	fe de       	rcall	.-516    	; 0x91a <send_data_and_wait>
     b1e:	80 91 b9 00 	lds	r24, 0x00B9
     b22:	88 7f       	andi	r24, 0xF8	; 248
     b24:	88 31       	cpi	r24, 0x18	; 24
     b26:	19 f0       	breq	.+6      	; 0xb2e <TWI_send_string+0x3a>
     b28:	e8 de       	rcall	.-560    	; 0x8fa <Error>
     b2a:	80 e0       	ldi	r24, 0x00	; 0
     b2c:	22 c0       	rjmp	.+68     	; 0xb72 <TWI_send_string+0x7e>
     b2e:	89 e1       	ldi	r24, 0x19	; 25
     b30:	f4 de       	rcall	.-536    	; 0x91a <send_data_and_wait>
     b32:	80 91 b9 00 	lds	r24, 0x00B9
     b36:	88 7f       	andi	r24, 0xF8	; 248
     b38:	88 32       	cpi	r24, 0x28	; 40
     b3a:	29 f4       	brne	.+10     	; 0xb46 <TWI_send_string+0x52>
     b3c:	0e 2d       	mov	r16, r14
     b3e:	1f 2d       	mov	r17, r15
     b40:	c0 e0       	ldi	r28, 0x00	; 0
     b42:	d0 e0       	ldi	r29, 0x00	; 0
     b44:	08 c0       	rjmp	.+16     	; 0xb56 <TWI_send_string+0x62>
     b46:	d9 de       	rcall	.-590    	; 0x8fa <Error>
     b48:	80 e0       	ldi	r24, 0x00	; 0
     b4a:	13 c0       	rjmp	.+38     	; 0xb72 <TWI_send_string+0x7e>
     b4c:	f8 01       	movw	r30, r16
     b4e:	81 91       	ld	r24, Z+
     b50:	8f 01       	movw	r16, r30
     b52:	e3 de       	rcall	.-570    	; 0x91a <send_data_and_wait>
     b54:	21 96       	adiw	r28, 0x01	; 1
     b56:	ee 2d       	mov	r30, r14
     b58:	ff 2d       	mov	r31, r15
     b5a:	df 01       	movw	r26, r30
     b5c:	0d 90       	ld	r0, X+
     b5e:	00 20       	and	r0, r0
     b60:	e9 f7       	brne	.-6      	; 0xb5c <TWI_send_string+0x68>
     b62:	11 97       	sbiw	r26, 0x01	; 1
     b64:	ae 1b       	sub	r26, r30
     b66:	bf 0b       	sbc	r27, r31
     b68:	ca 17       	cp	r28, r26
     b6a:	db 07       	cpc	r29, r27
     b6c:	78 f3       	brcs	.-34     	; 0xb4c <TWI_send_string+0x58>
     b6e:	c1 de       	rcall	.-638    	; 0x8f2 <stop_bus>
     b70:	81 e0       	ldi	r24, 0x01	; 1
     b72:	df 91       	pop	r29
     b74:	cf 91       	pop	r28
     b76:	1f 91       	pop	r17
     b78:	0f 91       	pop	r16
     b7a:	ff 90       	pop	r15
     b7c:	ef 90       	pop	r14
     b7e:	08 95       	ret

00000b80 <TWI_send_string_fixed_length>:
     b80:	ef 92       	push	r14
     b82:	ff 92       	push	r15
     b84:	0f 93       	push	r16
     b86:	1f 93       	push	r17
     b88:	cf 93       	push	r28
     b8a:	df 93       	push	r29
     b8c:	c8 2f       	mov	r28, r24
     b8e:	e6 2e       	mov	r14, r22
     b90:	f7 2e       	mov	r15, r23
     b92:	8a 01       	movw	r16, r20
     b94:	aa de       	rcall	.-684    	; 0x8ea <start_bus>
     b96:	bb de       	rcall	.-650    	; 0x90e <wait_for_bus>
     b98:	90 91 b9 00 	lds	r25, 0x00B9
     b9c:	98 7f       	andi	r25, 0xF8	; 248
     b9e:	98 30       	cpi	r25, 0x08	; 8
     ba0:	19 f0       	breq	.+6      	; 0xba8 <TWI_send_string_fixed_length+0x28>
     ba2:	ab de       	rcall	.-682    	; 0x8fa <Error>
     ba4:	80 e0       	ldi	r24, 0x00	; 0
     ba6:	23 c0       	rjmp	.+70     	; 0xbee <TWI_send_string_fixed_length+0x6e>
     ba8:	8c 2f       	mov	r24, r28
     baa:	b7 de       	rcall	.-658    	; 0x91a <send_data_and_wait>
     bac:	80 91 b9 00 	lds	r24, 0x00B9
     bb0:	88 7f       	andi	r24, 0xF8	; 248
     bb2:	88 31       	cpi	r24, 0x18	; 24
     bb4:	19 f0       	breq	.+6      	; 0xbbc <TWI_send_string_fixed_length+0x3c>
     bb6:	a1 de       	rcall	.-702    	; 0x8fa <Error>
     bb8:	80 e0       	ldi	r24, 0x00	; 0
     bba:	19 c0       	rjmp	.+50     	; 0xbee <TWI_send_string_fixed_length+0x6e>
     bbc:	89 e1       	ldi	r24, 0x19	; 25
     bbe:	ad de       	rcall	.-678    	; 0x91a <send_data_and_wait>
     bc0:	80 91 b9 00 	lds	r24, 0x00B9
     bc4:	88 7f       	andi	r24, 0xF8	; 248
     bc6:	88 32       	cpi	r24, 0x28	; 40
     bc8:	21 f4       	brne	.+8      	; 0xbd2 <TWI_send_string_fixed_length+0x52>
     bca:	10 16       	cp	r1, r16
     bcc:	11 06       	cpc	r1, r17
     bce:	24 f0       	brlt	.+8      	; 0xbd8 <TWI_send_string_fixed_length+0x58>
     bd0:	0c c0       	rjmp	.+24     	; 0xbea <TWI_send_string_fixed_length+0x6a>
     bd2:	93 de       	rcall	.-730    	; 0x8fa <Error>
     bd4:	80 e0       	ldi	r24, 0x00	; 0
     bd6:	0b c0       	rjmp	.+22     	; 0xbee <TWI_send_string_fixed_length+0x6e>
     bd8:	ce 2d       	mov	r28, r14
     bda:	df 2d       	mov	r29, r15
     bdc:	0c 0f       	add	r16, r28
     bde:	1d 1f       	adc	r17, r29
     be0:	89 91       	ld	r24, Y+
     be2:	9b de       	rcall	.-714    	; 0x91a <send_data_and_wait>
     be4:	c0 17       	cp	r28, r16
     be6:	d1 07       	cpc	r29, r17
     be8:	d9 f7       	brne	.-10     	; 0xbe0 <TWI_send_string_fixed_length+0x60>
     bea:	83 de       	rcall	.-762    	; 0x8f2 <stop_bus>
     bec:	81 e0       	ldi	r24, 0x01	; 1
     bee:	df 91       	pop	r29
     bf0:	cf 91       	pop	r28
     bf2:	1f 91       	pop	r17
     bf4:	0f 91       	pop	r16
     bf6:	ff 90       	pop	r15
     bf8:	ef 90       	pop	r14
     bfa:	08 95       	ret

00000bfc <TWI_send_float>:
     bfc:	ef 92       	push	r14
     bfe:	ff 92       	push	r15
     c00:	0f 93       	push	r16
     c02:	1f 93       	push	r17
     c04:	cf 93       	push	r28
     c06:	df 93       	push	r29
     c08:	00 d0       	rcall	.+0      	; 0xc0a <TWI_send_float+0xe>
     c0a:	00 d0       	rcall	.+0      	; 0xc0c <TWI_send_float+0x10>
     c0c:	cd b7       	in	r28, 0x3d	; 61
     c0e:	de b7       	in	r29, 0x3e	; 62
     c10:	18 2f       	mov	r17, r24
     c12:	49 83       	std	Y+1, r20	; 0x01
     c14:	5a 83       	std	Y+2, r21	; 0x02
     c16:	6b 83       	std	Y+3, r22	; 0x03
     c18:	7c 83       	std	Y+4, r23	; 0x04
     c1a:	67 de       	rcall	.-818    	; 0x8ea <start_bus>
     c1c:	78 de       	rcall	.-784    	; 0x90e <wait_for_bus>
     c1e:	90 91 b9 00 	lds	r25, 0x00B9
     c22:	98 7f       	andi	r25, 0xF8	; 248
     c24:	98 30       	cpi	r25, 0x08	; 8
     c26:	19 f0       	breq	.+6      	; 0xc2e <TWI_send_float+0x32>
     c28:	68 de       	rcall	.-816    	; 0x8fa <Error>
     c2a:	80 e0       	ldi	r24, 0x00	; 0
     c2c:	24 c0       	rjmp	.+72     	; 0xc76 <TWI_send_float+0x7a>
     c2e:	81 2f       	mov	r24, r17
     c30:	74 de       	rcall	.-792    	; 0x91a <send_data_and_wait>
     c32:	80 91 b9 00 	lds	r24, 0x00B9
     c36:	88 7f       	andi	r24, 0xF8	; 248
     c38:	88 31       	cpi	r24, 0x18	; 24
     c3a:	19 f0       	breq	.+6      	; 0xc42 <TWI_send_float+0x46>
     c3c:	5e de       	rcall	.-836    	; 0x8fa <Error>
     c3e:	80 e0       	ldi	r24, 0x00	; 0
     c40:	1a c0       	rjmp	.+52     	; 0xc76 <TWI_send_float+0x7a>
     c42:	86 e0       	ldi	r24, 0x06	; 6
     c44:	6a de       	rcall	.-812    	; 0x91a <send_data_and_wait>
     c46:	80 91 b9 00 	lds	r24, 0x00B9
     c4a:	88 7f       	andi	r24, 0xF8	; 248
     c4c:	88 32       	cpi	r24, 0x28	; 40
     c4e:	19 f0       	breq	.+6      	; 0xc56 <TWI_send_float+0x5a>
     c50:	54 de       	rcall	.-856    	; 0x8fa <Error>
     c52:	80 e0       	ldi	r24, 0x00	; 0
     c54:	10 c0       	rjmp	.+32     	; 0xc76 <TWI_send_float+0x7a>
     c56:	8e 01       	movw	r16, r28
     c58:	0f 5f       	subi	r16, 0xFF	; 255
     c5a:	1f 4f       	sbci	r17, 0xFF	; 255
     c5c:	7e 01       	movw	r14, r28
     c5e:	85 e0       	ldi	r24, 0x05	; 5
     c60:	e8 0e       	add	r14, r24
     c62:	f1 1c       	adc	r15, r1
     c64:	f8 01       	movw	r30, r16
     c66:	81 91       	ld	r24, Z+
     c68:	8f 01       	movw	r16, r30
     c6a:	57 de       	rcall	.-850    	; 0x91a <send_data_and_wait>
     c6c:	0e 15       	cp	r16, r14
     c6e:	1f 05       	cpc	r17, r15
     c70:	c9 f7       	brne	.-14     	; 0xc64 <TWI_send_float+0x68>
     c72:	3f de       	rcall	.-898    	; 0x8f2 <stop_bus>
     c74:	81 e0       	ldi	r24, 0x01	; 1
     c76:	0f 90       	pop	r0
     c78:	0f 90       	pop	r0
     c7a:	0f 90       	pop	r0
     c7c:	0f 90       	pop	r0
     c7e:	df 91       	pop	r29
     c80:	cf 91       	pop	r28
     c82:	1f 91       	pop	r17
     c84:	0f 91       	pop	r16
     c86:	ff 90       	pop	r15
     c88:	ef 90       	pop	r14
     c8a:	08 95       	ret

00000c8c <TWI_get_command>:
     c8c:	86 5d       	subi	r24, 0xD6	; 214
     c8e:	9c 4e       	sbci	r25, 0xEC	; 236
     c90:	fc 01       	movw	r30, r24
     c92:	80 81       	ld	r24, Z
     c94:	08 95       	ret

00000c96 <TWI_get_sensor>:
     c96:	8c 5b       	subi	r24, 0xBC	; 188
     c98:	9b 4e       	sbci	r25, 0xEB	; 235
     c9a:	fc 01       	movw	r30, r24
     c9c:	80 81       	ld	r24, Z
     c9e:	08 95       	ret

00000ca0 <TWI_sensor_flag>:
     ca0:	80 91 08 13 	lds	r24, 0x1308
     ca4:	88 23       	and	r24, r24
     ca6:	21 f0       	breq	.+8      	; 0xcb0 <TWI_sensor_flag+0x10>
     ca8:	10 92 08 13 	sts	0x1308, r1
     cac:	81 e0       	ldi	r24, 0x01	; 1
     cae:	08 95       	ret
     cb0:	80 e0       	ldi	r24, 0x00	; 0
     cb2:	08 95       	ret

00000cb4 <TWI_command_flag>:
     cb4:	80 91 07 13 	lds	r24, 0x1307
     cb8:	88 23       	and	r24, r24
     cba:	21 f0       	breq	.+8      	; 0xcc4 <TWI_command_flag+0x10>
     cbc:	10 92 07 13 	sts	0x1307, r1
     cc0:	81 e0       	ldi	r24, 0x01	; 1
     cc2:	08 95       	ret
     cc4:	80 e0       	ldi	r24, 0x00	; 0
     cc6:	08 95       	ret

00000cc8 <__vector_26>:
     cc8:	1f 92       	push	r1
     cca:	0f 92       	push	r0
     ccc:	0f b6       	in	r0, 0x3f	; 63
     cce:	0f 92       	push	r0
     cd0:	11 24       	eor	r1, r1
     cd2:	0b b6       	in	r0, 0x3b	; 59
     cd4:	0f 92       	push	r0
     cd6:	2f 93       	push	r18
     cd8:	3f 93       	push	r19
     cda:	4f 93       	push	r20
     cdc:	5f 93       	push	r21
     cde:	6f 93       	push	r22
     ce0:	7f 93       	push	r23
     ce2:	8f 93       	push	r24
     ce4:	9f 93       	push	r25
     ce6:	af 93       	push	r26
     ce8:	bf 93       	push	r27
     cea:	cf 93       	push	r28
     cec:	df 93       	push	r29
     cee:	ef 93       	push	r30
     cf0:	ff 93       	push	r31
     cf2:	80 91 34 14 	lds	r24, 0x1434
     cf6:	80 34       	cpi	r24, 0x40	; 64
     cf8:	09 f4       	brne	.+2      	; 0xcfc <__vector_26+0x34>
     cfa:	6f c0       	rjmp	.+222    	; 0xdda <__vector_26+0x112>
     cfc:	80 38       	cpi	r24, 0x80	; 128
     cfe:	21 f0       	breq	.+8      	; 0xd08 <__vector_26+0x40>
     d00:	80 32       	cpi	r24, 0x20	; 32
     d02:	09 f0       	breq	.+2      	; 0xd06 <__vector_26+0x3e>
     d04:	43 c1       	rjmp	.+646    	; 0xf8c <__vector_26+0x2c4>
     d06:	a9 c0       	rjmp	.+338    	; 0xe5a <__vector_26+0x192>
     d08:	80 91 b9 00 	lds	r24, 0x00B9
     d0c:	88 7f       	andi	r24, 0xF8	; 248
     d0e:	80 36       	cpi	r24, 0x60	; 96
     d10:	29 f0       	breq	.+10     	; 0xd1c <__vector_26+0x54>
     d12:	80 91 b9 00 	lds	r24, 0x00B9
     d16:	88 7f       	andi	r24, 0xF8	; 248
     d18:	88 36       	cpi	r24, 0x68	; 104
     d1a:	21 f4       	brne	.+8      	; 0xd24 <__vector_26+0x5c>
     d1c:	81 e0       	ldi	r24, 0x01	; 1
     d1e:	80 93 37 14 	sts	0x1437, r24
     d22:	59 c0       	rjmp	.+178    	; 0xdd6 <__vector_26+0x10e>
     d24:	80 91 b9 00 	lds	r24, 0x00B9
     d28:	88 7f       	andi	r24, 0xF8	; 248
     d2a:	80 38       	cpi	r24, 0x80	; 128
     d2c:	b1 f5       	brne	.+108    	; 0xd9a <__vector_26+0xd2>
     d2e:	80 91 37 14 	lds	r24, 0x1437
     d32:	88 23       	and	r24, r24
     d34:	41 f0       	breq	.+16     	; 0xd46 <__vector_26+0x7e>
     d36:	e8 dd       	rcall	.-1072   	; 0x908 <get_data>
     d38:	80 93 40 14 	sts	0x1440, r24
     d3c:	10 92 41 14 	sts	0x1441, r1
     d40:	10 92 37 14 	sts	0x1437, r1
     d44:	48 c0       	rjmp	.+144    	; 0xdd6 <__vector_26+0x10e>
     d46:	80 91 40 14 	lds	r24, 0x1440
     d4a:	90 91 41 14 	lds	r25, 0x1441
     d4e:	85 30       	cpi	r24, 0x05	; 5
     d50:	91 05       	cpc	r25, r1
     d52:	69 f0       	breq	.+26     	; 0xd6e <__vector_26+0xa6>
     d54:	24 f4       	brge	.+8      	; 0xd5e <__vector_26+0x96>
     d56:	01 97       	sbiw	r24, 0x01	; 1
     d58:	09 f0       	breq	.+2      	; 0xd5c <__vector_26+0x94>
     d5a:	3d c0       	rjmp	.+122    	; 0xdd6 <__vector_26+0x10e>
     d5c:	06 c0       	rjmp	.+12     	; 0xd6a <__vector_26+0xa2>
     d5e:	86 30       	cpi	r24, 0x06	; 6
     d60:	91 05       	cpc	r25, r1
     d62:	49 f0       	breq	.+18     	; 0xd76 <__vector_26+0xae>
     d64:	49 97       	sbiw	r24, 0x19	; 25
     d66:	b9 f5       	brne	.+110    	; 0xdd6 <__vector_26+0x10e>
     d68:	04 c0       	rjmp	.+8      	; 0xd72 <__vector_26+0xaa>
     d6a:	23 de       	rcall	.-954    	; 0x9b2 <get_control_settings_from_bus>
     d6c:	34 c0       	rjmp	.+104    	; 0xdd6 <__vector_26+0x10e>
     d6e:	32 de       	rcall	.-924    	; 0x9d4 <get_autonom_settings_from_bus>
     d70:	32 c0       	rjmp	.+100    	; 0xdd6 <__vector_26+0x10e>
     d72:	34 de       	rcall	.-920    	; 0x9dc <get_char_from_bus>
     d74:	30 c0       	rjmp	.+96     	; 0xdd6 <__vector_26+0x10e>
     d76:	c0 91 35 14 	lds	r28, 0x1435
     d7a:	d0 91 36 14 	lds	r29, 0x1436
     d7e:	c4 dd       	rcall	.-1144   	; 0x908 <get_data>
     d80:	ca 5d       	subi	r28, 0xDA	; 218
     d82:	dc 4e       	sbci	r29, 0xEC	; 236
     d84:	88 83       	st	Y, r24
     d86:	80 91 35 14 	lds	r24, 0x1435
     d8a:	90 91 36 14 	lds	r25, 0x1436
     d8e:	01 96       	adiw	r24, 0x01	; 1
     d90:	90 93 36 14 	sts	0x1436, r25
     d94:	80 93 35 14 	sts	0x1435, r24
     d98:	1e c0       	rjmp	.+60     	; 0xdd6 <__vector_26+0x10e>
     d9a:	80 91 b9 00 	lds	r24, 0x00B9
     d9e:	88 7f       	andi	r24, 0xF8	; 248
     da0:	80 39       	cpi	r24, 0x90	; 144
     da2:	11 f4       	brne	.+4      	; 0xda8 <__vector_26+0xe0>
     da4:	db dd       	rcall	.-1098   	; 0x95c <get_sensor_from_bus>
     da6:	17 c0       	rjmp	.+46     	; 0xdd6 <__vector_26+0x10e>
     da8:	80 91 b9 00 	lds	r24, 0x00B9
     dac:	88 7f       	andi	r24, 0xF8	; 248
     dae:	80 3a       	cpi	r24, 0xA0	; 160
     db0:	91 f4       	brne	.+36     	; 0xdd6 <__vector_26+0x10e>
     db2:	b9 dd       	rcall	.-1166   	; 0x926 <stop_twi>
     db4:	80 91 40 14 	lds	r24, 0x1440
     db8:	90 91 41 14 	lds	r25, 0x1441
     dbc:	81 30       	cpi	r24, 0x01	; 1
     dbe:	91 05       	cpc	r25, r1
     dc0:	19 f0       	breq	.+6      	; 0xdc8 <__vector_26+0x100>
     dc2:	05 97       	sbiw	r24, 0x05	; 5
     dc4:	41 f4       	brne	.+16     	; 0xdd6 <__vector_26+0x10e>
     dc6:	04 c0       	rjmp	.+8      	; 0xdd0 <__vector_26+0x108>
     dc8:	81 e0       	ldi	r24, 0x01	; 1
     dca:	80 93 06 13 	sts	0x1306, r24
     dce:	03 c0       	rjmp	.+6      	; 0xdd6 <__vector_26+0x10e>
     dd0:	81 e0       	ldi	r24, 0x01	; 1
     dd2:	80 93 05 13 	sts	0x1305, r24
     dd6:	bc dd       	rcall	.-1160   	; 0x950 <reset_TWI>
     dd8:	d9 c0       	rjmp	.+434    	; 0xf8c <__vector_26+0x2c4>
     dda:	80 91 b9 00 	lds	r24, 0x00B9
     dde:	88 7f       	andi	r24, 0xF8	; 248
     de0:	80 36       	cpi	r24, 0x60	; 96
     de2:	29 f0       	breq	.+10     	; 0xdee <__vector_26+0x126>
     de4:	80 91 b9 00 	lds	r24, 0x00B9
     de8:	88 7f       	andi	r24, 0xF8	; 248
     dea:	88 36       	cpi	r24, 0x68	; 104
     dec:	21 f4       	brne	.+8      	; 0xdf6 <__vector_26+0x12e>
     dee:	81 e0       	ldi	r24, 0x01	; 1
     df0:	80 93 37 14 	sts	0x1437, r24
     df4:	30 c0       	rjmp	.+96     	; 0xe56 <__vector_26+0x18e>
     df6:	80 91 b9 00 	lds	r24, 0x00B9
     dfa:	88 7f       	andi	r24, 0xF8	; 248
     dfc:	80 38       	cpi	r24, 0x80	; 128
     dfe:	e1 f4       	brne	.+56     	; 0xe38 <__vector_26+0x170>
     e00:	80 91 37 14 	lds	r24, 0x1437
     e04:	88 23       	and	r24, r24
     e06:	41 f0       	breq	.+16     	; 0xe18 <__vector_26+0x150>
     e08:	7f dd       	rcall	.-1282   	; 0x908 <get_data>
     e0a:	80 93 40 14 	sts	0x1440, r24
     e0e:	10 92 41 14 	sts	0x1441, r1
     e12:	10 92 37 14 	sts	0x1437, r1
     e16:	1f c0       	rjmp	.+62     	; 0xe56 <__vector_26+0x18e>
     e18:	80 91 40 14 	lds	r24, 0x1440
     e1c:	90 91 41 14 	lds	r25, 0x1441
     e20:	82 30       	cpi	r24, 0x02	; 2
     e22:	91 05       	cpc	r25, r1
     e24:	19 f0       	breq	.+6      	; 0xe2c <__vector_26+0x164>
     e26:	49 97       	sbiw	r24, 0x19	; 25
     e28:	b1 f4       	brne	.+44     	; 0xe56 <__vector_26+0x18e>
     e2a:	04 c0       	rjmp	.+8      	; 0xe34 <__vector_26+0x16c>
     e2c:	6d dd       	rcall	.-1318   	; 0x908 <get_data>
     e2e:	80 93 3f 14 	sts	0x143F, r24
     e32:	11 c0       	rjmp	.+34     	; 0xe56 <__vector_26+0x18e>
     e34:	d3 dd       	rcall	.-1114   	; 0x9dc <get_char_from_bus>
     e36:	0f c0       	rjmp	.+30     	; 0xe56 <__vector_26+0x18e>
     e38:	80 91 b9 00 	lds	r24, 0x00B9
     e3c:	88 7f       	andi	r24, 0xF8	; 248
     e3e:	80 3a       	cpi	r24, 0xA0	; 160
     e40:	51 f4       	brne	.+20     	; 0xe56 <__vector_26+0x18e>
     e42:	71 dd       	rcall	.-1310   	; 0x926 <stop_twi>
     e44:	80 91 40 14 	lds	r24, 0x1440
     e48:	90 91 41 14 	lds	r25, 0x1441
     e4c:	02 97       	sbiw	r24, 0x02	; 2
     e4e:	19 f4       	brne	.+6      	; 0xe56 <__vector_26+0x18e>
     e50:	81 e0       	ldi	r24, 0x01	; 1
     e52:	80 93 03 13 	sts	0x1303, r24
     e56:	7c dd       	rcall	.-1288   	; 0x950 <reset_TWI>
     e58:	99 c0       	rjmp	.+306    	; 0xf8c <__vector_26+0x2c4>
     e5a:	80 91 b9 00 	lds	r24, 0x00B9
     e5e:	88 7f       	andi	r24, 0xF8	; 248
     e60:	80 36       	cpi	r24, 0x60	; 96
     e62:	29 f0       	breq	.+10     	; 0xe6e <__vector_26+0x1a6>
     e64:	80 91 b9 00 	lds	r24, 0x00B9
     e68:	88 7f       	andi	r24, 0xF8	; 248
     e6a:	88 36       	cpi	r24, 0x68	; 104
     e6c:	21 f4       	brne	.+8      	; 0xe76 <__vector_26+0x1ae>
     e6e:	81 e0       	ldi	r24, 0x01	; 1
     e70:	80 93 37 14 	sts	0x1437, r24
     e74:	8a c0       	rjmp	.+276    	; 0xf8a <__vector_26+0x2c2>
     e76:	80 91 b9 00 	lds	r24, 0x00B9
     e7a:	88 7f       	andi	r24, 0xF8	; 248
     e7c:	80 38       	cpi	r24, 0x80	; 128
     e7e:	09 f0       	breq	.+2      	; 0xe82 <__vector_26+0x1ba>
     e80:	57 c0       	rjmp	.+174    	; 0xf30 <__vector_26+0x268>
     e82:	80 91 37 14 	lds	r24, 0x1437
     e86:	88 23       	and	r24, r24
     e88:	41 f0       	breq	.+16     	; 0xe9a <__vector_26+0x1d2>
     e8a:	3e dd       	rcall	.-1412   	; 0x908 <get_data>
     e8c:	80 93 40 14 	sts	0x1440, r24
     e90:	10 92 41 14 	sts	0x1441, r1
     e94:	10 92 37 14 	sts	0x1437, r1
     e98:	78 c0       	rjmp	.+240    	; 0xf8a <__vector_26+0x2c2>
     e9a:	80 91 40 14 	lds	r24, 0x1440
     e9e:	90 91 41 14 	lds	r25, 0x1441
     ea2:	81 30       	cpi	r24, 0x01	; 1
     ea4:	91 05       	cpc	r25, r1
     ea6:	09 f4       	brne	.+2      	; 0xeaa <__vector_26+0x1e2>
     ea8:	3f c0       	rjmp	.+126    	; 0xf28 <__vector_26+0x260>
     eaa:	1c f4       	brge	.+6      	; 0xeb2 <__vector_26+0x1ea>
     eac:	89 2b       	or	r24, r25
     eae:	41 f0       	breq	.+16     	; 0xec0 <__vector_26+0x1f8>
     eb0:	6c c0       	rjmp	.+216    	; 0xf8a <__vector_26+0x2c2>
     eb2:	84 30       	cpi	r24, 0x04	; 4
     eb4:	91 05       	cpc	r25, r1
     eb6:	b1 f0       	breq	.+44     	; 0xee4 <__vector_26+0x21c>
     eb8:	05 97       	sbiw	r24, 0x05	; 5
     eba:	09 f0       	breq	.+2      	; 0xebe <__vector_26+0x1f6>
     ebc:	66 c0       	rjmp	.+204    	; 0xf8a <__vector_26+0x2c2>
     ebe:	36 c0       	rjmp	.+108    	; 0xf2c <__vector_26+0x264>
     ec0:	c0 91 38 14 	lds	r28, 0x1438
     ec4:	d0 91 39 14 	lds	r29, 0x1439
     ec8:	1f dd       	rcall	.-1474   	; 0x908 <get_data>
     eca:	c6 5d       	subi	r28, 0xD6	; 214
     ecc:	dc 4e       	sbci	r29, 0xEC	; 236
     ece:	88 83       	st	Y, r24
     ed0:	80 91 38 14 	lds	r24, 0x1438
     ed4:	90 91 39 14 	lds	r25, 0x1439
     ed8:	01 96       	adiw	r24, 0x01	; 1
     eda:	90 93 39 14 	sts	0x1439, r25
     ede:	80 93 38 14 	sts	0x1438, r24
     ee2:	53 c0       	rjmp	.+166    	; 0xf8a <__vector_26+0x2c2>
     ee4:	11 dd       	rcall	.-1502   	; 0x908 <get_data>
     ee6:	20 91 3a 14 	lds	r18, 0x143A
     eea:	30 91 3b 14 	lds	r19, 0x143B
     eee:	a9 01       	movw	r20, r18
     ef0:	48 0f       	add	r20, r24
     ef2:	51 1d       	adc	r21, r1
     ef4:	ca 01       	movw	r24, r20
     ef6:	18 16       	cp	r1, r24
     ef8:	19 06       	cpc	r1, r25
     efa:	3c f0       	brlt	.+14     	; 0xf0a <__vector_26+0x242>
     efc:	81 e0       	ldi	r24, 0x01	; 1
     efe:	90 e0       	ldi	r25, 0x00	; 0
     f00:	90 93 3b 14 	sts	0x143B, r25
     f04:	80 93 3a 14 	sts	0x143A, r24
     f08:	40 c0       	rjmp	.+128    	; 0xf8a <__vector_26+0x2c2>
     f0a:	48 30       	cpi	r20, 0x08	; 8
     f0c:	51 05       	cpc	r21, r1
     f0e:	2c f4       	brge	.+10     	; 0xf1a <__vector_26+0x252>
     f10:	50 93 3b 14 	sts	0x143B, r21
     f14:	40 93 3a 14 	sts	0x143A, r20
     f18:	38 c0       	rjmp	.+112    	; 0xf8a <__vector_26+0x2c2>
     f1a:	87 e0       	ldi	r24, 0x07	; 7
     f1c:	90 e0       	ldi	r25, 0x00	; 0
     f1e:	90 93 3b 14 	sts	0x143B, r25
     f22:	80 93 3a 14 	sts	0x143A, r24
     f26:	31 c0       	rjmp	.+98     	; 0xf8a <__vector_26+0x2c2>
     f28:	44 dd       	rcall	.-1400   	; 0x9b2 <get_control_settings_from_bus>
     f2a:	2f c0       	rjmp	.+94     	; 0xf8a <__vector_26+0x2c2>
     f2c:	53 dd       	rcall	.-1370   	; 0x9d4 <get_autonom_settings_from_bus>
     f2e:	2d c0       	rjmp	.+90     	; 0xf8a <__vector_26+0x2c2>
     f30:	80 91 b9 00 	lds	r24, 0x00B9
     f34:	88 7f       	andi	r24, 0xF8	; 248
     f36:	80 39       	cpi	r24, 0x90	; 144
     f38:	11 f4       	brne	.+4      	; 0xf3e <__vector_26+0x276>
     f3a:	10 dd       	rcall	.-1504   	; 0x95c <get_sensor_from_bus>
     f3c:	26 c0       	rjmp	.+76     	; 0xf8a <__vector_26+0x2c2>
     f3e:	80 91 b9 00 	lds	r24, 0x00B9
     f42:	88 7f       	andi	r24, 0xF8	; 248
     f44:	80 3a       	cpi	r24, 0xA0	; 160
     f46:	09 f5       	brne	.+66     	; 0xf8a <__vector_26+0x2c2>
     f48:	ee dc       	rcall	.-1572   	; 0x926 <stop_twi>
     f4a:	80 91 40 14 	lds	r24, 0x1440
     f4e:	90 91 41 14 	lds	r25, 0x1441
     f52:	81 30       	cpi	r24, 0x01	; 1
     f54:	91 05       	cpc	r25, r1
     f56:	91 f0       	breq	.+36     	; 0xf7c <__vector_26+0x2b4>
     f58:	1c f4       	brge	.+6      	; 0xf60 <__vector_26+0x298>
     f5a:	89 2b       	or	r24, r25
     f5c:	39 f0       	breq	.+14     	; 0xf6c <__vector_26+0x2a4>
     f5e:	15 c0       	rjmp	.+42     	; 0xf8a <__vector_26+0x2c2>
     f60:	84 30       	cpi	r24, 0x04	; 4
     f62:	91 05       	cpc	r25, r1
     f64:	39 f0       	breq	.+14     	; 0xf74 <__vector_26+0x2ac>
     f66:	05 97       	sbiw	r24, 0x05	; 5
     f68:	81 f4       	brne	.+32     	; 0xf8a <__vector_26+0x2c2>
     f6a:	0c c0       	rjmp	.+24     	; 0xf84 <__vector_26+0x2bc>
     f6c:	81 e0       	ldi	r24, 0x01	; 1
     f6e:	80 93 07 13 	sts	0x1307, r24
     f72:	0b c0       	rjmp	.+22     	; 0xf8a <__vector_26+0x2c2>
     f74:	81 e0       	ldi	r24, 0x01	; 1
     f76:	80 93 04 13 	sts	0x1304, r24
     f7a:	07 c0       	rjmp	.+14     	; 0xf8a <__vector_26+0x2c2>
     f7c:	81 e0       	ldi	r24, 0x01	; 1
     f7e:	80 93 06 13 	sts	0x1306, r24
     f82:	03 c0       	rjmp	.+6      	; 0xf8a <__vector_26+0x2c2>
     f84:	81 e0       	ldi	r24, 0x01	; 1
     f86:	80 93 05 13 	sts	0x1305, r24
     f8a:	e2 dc       	rcall	.-1596   	; 0x950 <reset_TWI>
     f8c:	ff 91       	pop	r31
     f8e:	ef 91       	pop	r30
     f90:	df 91       	pop	r29
     f92:	cf 91       	pop	r28
     f94:	bf 91       	pop	r27
     f96:	af 91       	pop	r26
     f98:	9f 91       	pop	r25
     f9a:	8f 91       	pop	r24
     f9c:	7f 91       	pop	r23
     f9e:	6f 91       	pop	r22
     fa0:	5f 91       	pop	r21
     fa2:	4f 91       	pop	r20
     fa4:	3f 91       	pop	r19
     fa6:	2f 91       	pop	r18
     fa8:	0f 90       	pop	r0
     faa:	0b be       	out	0x3b, r0	; 59
     fac:	0f 90       	pop	r0
     fae:	0f be       	out	0x3f, r0	; 63
     fb0:	0f 90       	pop	r0
     fb2:	1f 90       	pop	r1
     fb4:	18 95       	reti

00000fb6 <USART_init>:
     fb6:	10 92 c5 00 	sts	0x00C5, r1
     fba:	87 e0       	ldi	r24, 0x07	; 7
     fbc:	80 93 c4 00 	sts	0x00C4, r24
     fc0:	88 e9       	ldi	r24, 0x98	; 152
     fc2:	80 93 c1 00 	sts	0x00C1, r24
     fc6:	86 e0       	ldi	r24, 0x06	; 6
     fc8:	80 93 c2 00 	sts	0x00C2, r24
     fcc:	08 95       	ret

00000fce <USART_CheckTxReady>:
     fce:	80 91 c0 00 	lds	r24, 0x00C0
     fd2:	80 72       	andi	r24, 0x20	; 32
     fd4:	08 95       	ret

00000fd6 <USART_WriteByte>:
     fd6:	cf 93       	push	r28
     fd8:	c8 2f       	mov	r28, r24
     fda:	f9 df       	rcall	.-14     	; 0xfce <USART_CheckTxReady>
     fdc:	88 23       	and	r24, r24
     fde:	e9 f3       	breq	.-6      	; 0xfda <USART_WriteByte+0x4>
     fe0:	c0 93 c6 00 	sts	0x00C6, r28
     fe4:	cf 91       	pop	r28
     fe6:	08 95       	ret

00000fe8 <USART_crc16>:
     fe8:	cf 92       	push	r12
     fea:	df 92       	push	r13
     fec:	ef 92       	push	r14
     fee:	ff 92       	push	r15
     ff0:	0f 93       	push	r16
     ff2:	1f 93       	push	r17
     ff4:	cf 93       	push	r28
     ff6:	df 93       	push	r29
     ff8:	66 23       	and	r22, r22
     ffa:	09 f4       	brne	.+2      	; 0xffe <USART_crc16+0x16>
     ffc:	3e c0       	rjmp	.+124    	; 0x107a <USART_crc16+0x92>
     ffe:	06 2f       	mov	r16, r22
    1000:	10 e0       	ldi	r17, 0x00	; 0
    1002:	4f ef       	ldi	r20, 0xFF	; 255
    1004:	5f ef       	ldi	r21, 0xFF	; 255
    1006:	ee ef       	ldi	r30, 0xFE	; 254
    1008:	ff ef       	ldi	r31, 0xFF	; 255
    100a:	c6 2e       	mov	r12, r22
    100c:	d1 2c       	mov	r13, r1
    100e:	e8 2e       	mov	r14, r24
    1010:	f1 2c       	mov	r15, r1
    1012:	c8 e0       	ldi	r28, 0x08	; 8
    1014:	d0 e0       	ldi	r29, 0x00	; 0
    1016:	ee 3f       	cpi	r30, 0xFE	; 254
    1018:	6f ef       	ldi	r22, 0xFF	; 255
    101a:	f6 07       	cpc	r31, r22
    101c:	19 f4       	brne	.+6      	; 0x1024 <USART_crc16+0x3c>
    101e:	8e 2d       	mov	r24, r14
    1020:	9f 2d       	mov	r25, r15
    1022:	30 c0       	rjmp	.+96     	; 0x1084 <USART_crc16+0x9c>
    1024:	ef 3f       	cpi	r30, 0xFF	; 255
    1026:	8f ef       	ldi	r24, 0xFF	; 255
    1028:	f8 07       	cpc	r31, r24
    102a:	19 f4       	brne	.+6      	; 0x1032 <USART_crc16+0x4a>
    102c:	8c 2d       	mov	r24, r12
    102e:	9d 2d       	mov	r25, r13
    1030:	29 c0       	rjmp	.+82     	; 0x1084 <USART_crc16+0x9c>
    1032:	df 01       	movw	r26, r30
    1034:	af 5a       	subi	r26, 0xAF	; 175
    1036:	b9 4e       	sbci	r27, 0xE9	; 233
    1038:	8c 91       	ld	r24, X
    103a:	90 e0       	ldi	r25, 0x00	; 0
    103c:	23 c0       	rjmp	.+70     	; 0x1084 <USART_crc16+0x9c>
    103e:	ba 01       	movw	r22, r20
    1040:	68 27       	eor	r22, r24
    1042:	79 27       	eor	r23, r25
    1044:	60 ff       	sbrs	r22, 0
    1046:	07 c0       	rjmp	.+14     	; 0x1056 <USART_crc16+0x6e>
    1048:	56 95       	lsr	r21
    104a:	47 95       	ror	r20
    104c:	68 e0       	ldi	r22, 0x08	; 8
    104e:	46 27       	eor	r20, r22
    1050:	64 e8       	ldi	r22, 0x84	; 132
    1052:	56 27       	eor	r21, r22
    1054:	02 c0       	rjmp	.+4      	; 0x105a <USART_crc16+0x72>
    1056:	56 95       	lsr	r21
    1058:	47 95       	ror	r20
    105a:	96 95       	lsr	r25
    105c:	87 95       	ror	r24
    105e:	21 50       	subi	r18, 0x01	; 1
    1060:	31 09       	sbc	r19, r1
    1062:	69 f7       	brne	.-38     	; 0x103e <USART_crc16+0x56>
    1064:	31 96       	adiw	r30, 0x01	; 1
    1066:	e0 17       	cp	r30, r16
    1068:	f1 07       	cpc	r31, r17
    106a:	a9 f6       	brne	.-86     	; 0x1016 <USART_crc16+0x2e>
    106c:	9a 01       	movw	r18, r20
    106e:	20 95       	com	r18
    1070:	30 95       	com	r19
    1072:	32 27       	eor	r19, r18
    1074:	23 27       	eor	r18, r19
    1076:	32 27       	eor	r19, r18
    1078:	02 c0       	rjmp	.+4      	; 0x107e <USART_crc16+0x96>
    107a:	20 e0       	ldi	r18, 0x00	; 0
    107c:	30 e0       	ldi	r19, 0x00	; 0
    107e:	82 2f       	mov	r24, r18
    1080:	93 2f       	mov	r25, r19
    1082:	02 c0       	rjmp	.+4      	; 0x1088 <USART_crc16+0xa0>
    1084:	9e 01       	movw	r18, r28
    1086:	db cf       	rjmp	.-74     	; 0x103e <USART_crc16+0x56>
    1088:	df 91       	pop	r29
    108a:	cf 91       	pop	r28
    108c:	1f 91       	pop	r17
    108e:	0f 91       	pop	r16
    1090:	ff 90       	pop	r15
    1092:	ef 90       	pop	r14
    1094:	df 90       	pop	r13
    1096:	cf 90       	pop	r12
    1098:	08 95       	ret

0000109a <USART_SendPacket>:
    109a:	0f 93       	push	r16
    109c:	1f 93       	push	r17
    109e:	cf 93       	push	r28
    10a0:	df 93       	push	r29
    10a2:	9e e7       	ldi	r25, 0x7E	; 126
    10a4:	90 93 50 17 	sts	0x1750, r25
    10a8:	80 93 51 17 	sts	0x1751, r24
    10ac:	60 93 52 17 	sts	0x1752, r22
    10b0:	26 2f       	mov	r18, r22
    10b2:	30 e0       	ldi	r19, 0x00	; 0
    10b4:	12 16       	cp	r1, r18
    10b6:	13 06       	cpc	r1, r19
    10b8:	4c f5       	brge	.+82     	; 0x110c <USART_SendPacket+0x72>
    10ba:	e1 e5       	ldi	r30, 0x51	; 81
    10bc:	f6 e1       	ldi	r31, 0x16	; 22
    10be:	03 e0       	ldi	r16, 0x03	; 3
    10c0:	10 e0       	ldi	r17, 0x00	; 0
    10c2:	c0 e0       	ldi	r28, 0x00	; 0
    10c4:	d0 e0       	ldi	r29, 0x00	; 0
    10c6:	7d e7       	ldi	r23, 0x7D	; 125
    10c8:	50 e2       	ldi	r21, 0x20	; 32
    10ca:	90 81       	ld	r25, Z
    10cc:	49 2f       	mov	r20, r25
    10ce:	4d 57       	subi	r20, 0x7D	; 125
    10d0:	42 30       	cpi	r20, 0x02	; 2
    10d2:	80 f4       	brcc	.+32     	; 0x10f4 <USART_SendPacket+0x5a>
    10d4:	d8 01       	movw	r26, r16
    10d6:	a0 5b       	subi	r26, 0xB0	; 176
    10d8:	b8 4e       	sbci	r27, 0xE8	; 232
    10da:	ac 0f       	add	r26, r28
    10dc:	bd 1f       	adc	r27, r29
    10de:	7c 93       	st	X, r23
    10e0:	0f 5f       	subi	r16, 0xFF	; 255
    10e2:	1f 4f       	sbci	r17, 0xFF	; 255
    10e4:	d8 01       	movw	r26, r16
    10e6:	a0 5b       	subi	r26, 0xB0	; 176
    10e8:	b8 4e       	sbci	r27, 0xE8	; 232
    10ea:	ac 0f       	add	r26, r28
    10ec:	bd 1f       	adc	r27, r29
    10ee:	95 27       	eor	r25, r21
    10f0:	9c 93       	st	X, r25
    10f2:	06 c0       	rjmp	.+12     	; 0x1100 <USART_SendPacket+0x66>
    10f4:	d8 01       	movw	r26, r16
    10f6:	a0 5b       	subi	r26, 0xB0	; 176
    10f8:	b8 4e       	sbci	r27, 0xE8	; 232
    10fa:	ac 0f       	add	r26, r28
    10fc:	bd 1f       	adc	r27, r29
    10fe:	9c 93       	st	X, r25
    1100:	21 96       	adiw	r28, 0x01	; 1
    1102:	31 96       	adiw	r30, 0x01	; 1
    1104:	c2 17       	cp	r28, r18
    1106:	d3 07       	cpc	r29, r19
    1108:	01 f7       	brne	.-64     	; 0x10ca <USART_SendPacket+0x30>
    110a:	04 c0       	rjmp	.+8      	; 0x1114 <USART_SendPacket+0x7a>
    110c:	03 e0       	ldi	r16, 0x03	; 3
    110e:	10 e0       	ldi	r17, 0x00	; 0
    1110:	c0 e0       	ldi	r28, 0x00	; 0
    1112:	d0 e0       	ldi	r29, 0x00	; 0
    1114:	69 df       	rcall	.-302    	; 0xfe8 <USART_crc16>
    1116:	f8 01       	movw	r30, r16
    1118:	e0 5b       	subi	r30, 0xB0	; 176
    111a:	f8 4e       	sbci	r31, 0xE8	; 232
    111c:	ec 0f       	add	r30, r28
    111e:	fd 1f       	adc	r31, r29
    1120:	90 83       	st	Z, r25
    1122:	81 83       	std	Z+1, r24	; 0x01
    1124:	22 96       	adiw	r28, 0x02	; 2
    1126:	0c 0f       	add	r16, r28
    1128:	1d 1f       	adc	r17, r29
    112a:	f8 01       	movw	r30, r16
    112c:	e0 5b       	subi	r30, 0xB0	; 176
    112e:	f8 4e       	sbci	r31, 0xE8	; 232
    1130:	8e e7       	ldi	r24, 0x7E	; 126
    1132:	80 83       	st	Z, r24
    1134:	c8 01       	movw	r24, r16
    1136:	01 96       	adiw	r24, 0x01	; 1
    1138:	18 16       	cp	r1, r24
    113a:	19 06       	cpc	r1, r25
    113c:	4c f4       	brge	.+18     	; 0x1150 <USART_SendPacket+0xb6>
    113e:	c0 e5       	ldi	r28, 0x50	; 80
    1140:	d7 e1       	ldi	r29, 0x17	; 23
    1142:	0f 5a       	subi	r16, 0xAF	; 175
    1144:	18 4e       	sbci	r17, 0xE8	; 232
    1146:	89 91       	ld	r24, Y+
    1148:	46 df       	rcall	.-372    	; 0xfd6 <USART_WriteByte>
    114a:	c0 17       	cp	r28, r16
    114c:	d1 07       	cpc	r29, r17
    114e:	d9 f7       	brne	.-10     	; 0x1146 <USART_SendPacket+0xac>
    1150:	df 91       	pop	r29
    1152:	cf 91       	pop	r28
    1154:	1f 91       	pop	r17
    1156:	0f 91       	pop	r16
    1158:	08 95       	ret

0000115a <USART_SendCommand>:
    115a:	80 e0       	ldi	r24, 0x00	; 0
    115c:	90 e0       	ldi	r25, 0x00	; 0
    115e:	96 dd       	rcall	.-1236   	; 0xc8c <TWI_get_command>
    1160:	80 93 51 16 	sts	0x1651, r24
    1164:	81 e0       	ldi	r24, 0x01	; 1
    1166:	90 e0       	ldi	r25, 0x00	; 0
    1168:	91 dd       	rcall	.-1246   	; 0xc8c <TWI_get_command>
    116a:	80 93 52 16 	sts	0x1652, r24
    116e:	82 e0       	ldi	r24, 0x02	; 2
    1170:	90 e0       	ldi	r25, 0x00	; 0
    1172:	8c dd       	rcall	.-1256   	; 0xc8c <TWI_get_command>
    1174:	80 93 53 16 	sts	0x1653, r24
    1178:	63 e0       	ldi	r22, 0x03	; 3
    117a:	83 e4       	ldi	r24, 0x43	; 67
    117c:	8e cf       	rjmp	.-228    	; 0x109a <USART_SendPacket>

0000117e <USART_DecodeMessageRxFIFO>:
    117e:	8f 92       	push	r8
    1180:	9f 92       	push	r9
    1182:	af 92       	push	r10
    1184:	bf 92       	push	r11
    1186:	cf 92       	push	r12
    1188:	df 92       	push	r13
    118a:	ef 92       	push	r14
    118c:	ff 92       	push	r15
    118e:	0f 93       	push	r16
    1190:	1f 93       	push	r17
    1192:	cf 93       	push	r28
    1194:	df 93       	push	r29
    1196:	cd b7       	in	r28, 0x3d	; 61
    1198:	de b7       	in	r29, 0x3e	; 62
    119a:	ad b6       	in	r10, 0x3d	; 61
    119c:	be b6       	in	r11, 0x3e	; 62
    119e:	60 e0       	ldi	r22, 0x00	; 0
    11a0:	70 e0       	ldi	r23, 0x00	; 0
    11a2:	80 91 06 01 	lds	r24, 0x0106
    11a6:	90 91 07 01 	lds	r25, 0x0107
    11aa:	96 d9       	rcall	.-3284   	; 0x4d8 <FifoRead>
    11ac:	88 23       	and	r24, r24
    11ae:	31 f0       	breq	.+12     	; 0x11bc <USART_DecodeMessageRxFIFO+0x3e>
    11b0:	65 ef       	ldi	r22, 0xF5	; 245
    11b2:	71 e1       	ldi	r23, 0x11	; 17
    11b4:	80 e4       	ldi	r24, 0x40	; 64
    11b6:	9e dc       	rcall	.-1732   	; 0xaf4 <TWI_send_string>
    11b8:	81 e0       	ldi	r24, 0x01	; 1
    11ba:	43 c0       	rjmp	.+134    	; 0x1242 <USART_DecodeMessageRxFIFO+0xc4>
    11bc:	c0 90 00 00 	lds	r12, 0x0000
    11c0:	d1 2c       	mov	r13, r1
    11c2:	96 01       	movw	r18, r12
    11c4:	21 50       	subi	r18, 0x01	; 1
    11c6:	31 09       	sbc	r19, r1
    11c8:	81 e0       	ldi	r24, 0x01	; 1
    11ca:	90 e0       	ldi	r25, 0x00	; 0
    11cc:	c1 14       	cp	r12, r1
    11ce:	d1 04       	cpc	r13, r1
    11d0:	11 f0       	breq	.+4      	; 0x11d6 <USART_DecodeMessageRxFIFO+0x58>
    11d2:	80 e0       	ldi	r24, 0x00	; 0
    11d4:	90 e0       	ldi	r25, 0x00	; 0
    11d6:	82 0f       	add	r24, r18
    11d8:	93 1f       	adc	r25, r19
    11da:	2d b7       	in	r18, 0x3d	; 61
    11dc:	3e b7       	in	r19, 0x3e	; 62
    11de:	28 1b       	sub	r18, r24
    11e0:	39 0b       	sbc	r19, r25
    11e2:	0f b6       	in	r0, 0x3f	; 63
    11e4:	f8 94       	cli
    11e6:	3e bf       	out	0x3e, r19	; 62
    11e8:	0f be       	out	0x3f, r0	; 63
    11ea:	2d bf       	out	0x3d, r18	; 61
    11ec:	8d b7       	in	r24, 0x3d	; 61
    11ee:	9e b7       	in	r25, 0x3e	; 62
    11f0:	01 96       	adiw	r24, 0x01	; 1
    11f2:	88 2e       	mov	r8, r24
    11f4:	99 2e       	mov	r9, r25
    11f6:	1c 14       	cp	r1, r12
    11f8:	1d 04       	cpc	r1, r13
    11fa:	ec f4       	brge	.+58     	; 0x1236 <USART_DecodeMessageRxFIFO+0xb8>
    11fc:	e8 2e       	mov	r14, r24
    11fe:	f9 2e       	mov	r15, r25
    1200:	00 e0       	ldi	r16, 0x00	; 0
    1202:	10 e0       	ldi	r17, 0x00	; 0
    1204:	60 e0       	ldi	r22, 0x00	; 0
    1206:	70 e0       	ldi	r23, 0x00	; 0
    1208:	80 91 06 01 	lds	r24, 0x0106
    120c:	90 91 07 01 	lds	r25, 0x0107
    1210:	63 d9       	rcall	.-3386   	; 0x4d8 <FifoRead>
    1212:	88 23       	and	r24, r24
    1214:	31 f0       	breq	.+12     	; 0x1222 <USART_DecodeMessageRxFIFO+0xa4>
    1216:	67 e1       	ldi	r22, 0x17	; 23
    1218:	72 e1       	ldi	r23, 0x12	; 18
    121a:	80 e4       	ldi	r24, 0x40	; 64
    121c:	6b dc       	rcall	.-1834   	; 0xaf4 <TWI_send_string>
    121e:	81 e0       	ldi	r24, 0x01	; 1
    1220:	10 c0       	rjmp	.+32     	; 0x1242 <USART_DecodeMessageRxFIFO+0xc4>
    1222:	80 91 00 00 	lds	r24, 0x0000
    1226:	f7 01       	movw	r30, r14
    1228:	81 93       	st	Z+, r24
    122a:	7f 01       	movw	r14, r30
    122c:	0f 5f       	subi	r16, 0xFF	; 255
    122e:	1f 4f       	sbci	r17, 0xFF	; 255
    1230:	0c 15       	cp	r16, r12
    1232:	1d 05       	cpc	r17, r13
    1234:	3c f3       	brlt	.-50     	; 0x1204 <USART_DecodeMessageRxFIFO+0x86>
    1236:	a6 01       	movw	r20, r12
    1238:	68 2d       	mov	r22, r8
    123a:	79 2d       	mov	r23, r9
    123c:	80 e8       	ldi	r24, 0x80	; 128
    123e:	a0 dc       	rcall	.-1728   	; 0xb80 <TWI_send_string_fixed_length>
    1240:	80 e0       	ldi	r24, 0x00	; 0
    1242:	0f b6       	in	r0, 0x3f	; 63
    1244:	f8 94       	cli
    1246:	be be       	out	0x3e, r11	; 62
    1248:	0f be       	out	0x3f, r0	; 63
    124a:	ad be       	out	0x3d, r10	; 61
    124c:	df 91       	pop	r29
    124e:	cf 91       	pop	r28
    1250:	1f 91       	pop	r17
    1252:	0f 91       	pop	r16
    1254:	ff 90       	pop	r15
    1256:	ef 90       	pop	r14
    1258:	df 90       	pop	r13
    125a:	cf 90       	pop	r12
    125c:	bf 90       	pop	r11
    125e:	af 90       	pop	r10
    1260:	9f 90       	pop	r9
    1262:	8f 90       	pop	r8
    1264:	08 95       	ret

00001266 <USART_DecodeCommandRxFIFO>:
    1266:	cf 93       	push	r28
    1268:	df 93       	push	r29
    126a:	60 e0       	ldi	r22, 0x00	; 0
    126c:	70 e0       	ldi	r23, 0x00	; 0
    126e:	80 91 06 01 	lds	r24, 0x0106
    1272:	90 91 07 01 	lds	r25, 0x0107
    1276:	30 d9       	rcall	.-3488   	; 0x4d8 <FifoRead>
    1278:	88 23       	and	r24, r24
    127a:	31 f0       	breq	.+12     	; 0x1288 <USART_DecodeCommandRxFIFO+0x22>
    127c:	6a e3       	ldi	r22, 0x3A	; 58
    127e:	72 e1       	ldi	r23, 0x12	; 18
    1280:	80 e4       	ldi	r24, 0x40	; 64
    1282:	38 dc       	rcall	.-1936   	; 0xaf4 <TWI_send_string>
    1284:	81 e0       	ldi	r24, 0x01	; 1
    1286:	42 c0       	rjmp	.+132    	; 0x130c <USART_DecodeCommandRxFIFO+0xa6>
    1288:	80 91 00 00 	lds	r24, 0x0000
    128c:	83 30       	cpi	r24, 0x03	; 3
    128e:	09 f0       	breq	.+2      	; 0x1292 <USART_DecodeCommandRxFIFO+0x2c>
    1290:	38 c0       	rjmp	.+112    	; 0x1302 <USART_DecodeCommandRxFIFO+0x9c>
    1292:	60 e0       	ldi	r22, 0x00	; 0
    1294:	70 e0       	ldi	r23, 0x00	; 0
    1296:	80 91 06 01 	lds	r24, 0x0106
    129a:	90 91 07 01 	lds	r25, 0x0107
    129e:	1c d9       	rcall	.-3528   	; 0x4d8 <FifoRead>
    12a0:	88 23       	and	r24, r24
    12a2:	31 f0       	breq	.+12     	; 0x12b0 <USART_DecodeCommandRxFIFO+0x4a>
    12a4:	6c e5       	ldi	r22, 0x5C	; 92
    12a6:	72 e1       	ldi	r23, 0x12	; 18
    12a8:	80 e4       	ldi	r24, 0x40	; 64
    12aa:	24 dc       	rcall	.-1976   	; 0xaf4 <TWI_send_string>
    12ac:	81 e0       	ldi	r24, 0x01	; 1
    12ae:	2e c0       	rjmp	.+92     	; 0x130c <USART_DecodeCommandRxFIFO+0xa6>
    12b0:	c0 91 00 00 	lds	r28, 0x0000
    12b4:	60 e0       	ldi	r22, 0x00	; 0
    12b6:	70 e0       	ldi	r23, 0x00	; 0
    12b8:	80 91 06 01 	lds	r24, 0x0106
    12bc:	90 91 07 01 	lds	r25, 0x0107
    12c0:	0b d9       	rcall	.-3562   	; 0x4d8 <FifoRead>
    12c2:	88 23       	and	r24, r24
    12c4:	31 f0       	breq	.+12     	; 0x12d2 <USART_DecodeCommandRxFIFO+0x6c>
    12c6:	64 e8       	ldi	r22, 0x84	; 132
    12c8:	72 e1       	ldi	r23, 0x12	; 18
    12ca:	80 e4       	ldi	r24, 0x40	; 64
    12cc:	13 dc       	rcall	.-2010   	; 0xaf4 <TWI_send_string>
    12ce:	81 e0       	ldi	r24, 0x01	; 1
    12d0:	1d c0       	rjmp	.+58     	; 0x130c <USART_DecodeCommandRxFIFO+0xa6>
    12d2:	d0 91 00 00 	lds	r29, 0x0000
    12d6:	60 e0       	ldi	r22, 0x00	; 0
    12d8:	70 e0       	ldi	r23, 0x00	; 0
    12da:	80 91 06 01 	lds	r24, 0x0106
    12de:	90 91 07 01 	lds	r25, 0x0107
    12e2:	fa d8       	rcall	.-3596   	; 0x4d8 <FifoRead>
    12e4:	88 23       	and	r24, r24
    12e6:	31 f0       	breq	.+12     	; 0x12f4 <USART_DecodeCommandRxFIFO+0x8e>
    12e8:	6b ea       	ldi	r22, 0xAB	; 171
    12ea:	72 e1       	ldi	r23, 0x12	; 18
    12ec:	80 e4       	ldi	r24, 0x40	; 64
    12ee:	02 dc       	rcall	.-2044   	; 0xaf4 <TWI_send_string>
    12f0:	81 e0       	ldi	r24, 0x01	; 1
    12f2:	0c c0       	rjmp	.+24     	; 0x130c <USART_DecodeCommandRxFIFO+0xa6>
    12f4:	40 91 00 00 	lds	r20, 0x0000
    12f8:	6d 2f       	mov	r22, r29
    12fa:	8c 2f       	mov	r24, r28
    12fc:	b3 db       	rcall	.-2202   	; 0xa64 <TWI_send_command>
    12fe:	80 e0       	ldi	r24, 0x00	; 0
    1300:	05 c0       	rjmp	.+10     	; 0x130c <USART_DecodeCommandRxFIFO+0xa6>
    1302:	6f ec       	ldi	r22, 0xCF	; 207
    1304:	72 e1       	ldi	r23, 0x12	; 18
    1306:	80 e4       	ldi	r24, 0x40	; 64
    1308:	f5 db       	rcall	.-2070   	; 0xaf4 <TWI_send_string>
    130a:	81 e0       	ldi	r24, 0x01	; 1
    130c:	df 91       	pop	r29
    130e:	cf 91       	pop	r28
    1310:	08 95       	ret

00001312 <USART_DecodeValueFIFO>:
    1312:	ef 92       	push	r14
    1314:	ff 92       	push	r15
    1316:	0f 93       	push	r16
    1318:	1f 93       	push	r17
    131a:	cf 93       	push	r28
    131c:	df 93       	push	r29
    131e:	00 d0       	rcall	.+0      	; 0x1320 <USART_DecodeValueFIFO+0xe>
    1320:	00 d0       	rcall	.+0      	; 0x1322 <USART_DecodeValueFIFO+0x10>
    1322:	cd b7       	in	r28, 0x3d	; 61
    1324:	de b7       	in	r29, 0x3e	; 62
    1326:	60 e0       	ldi	r22, 0x00	; 0
    1328:	70 e0       	ldi	r23, 0x00	; 0
    132a:	80 91 06 01 	lds	r24, 0x0106
    132e:	90 91 07 01 	lds	r25, 0x0107
    1332:	d2 d8       	rcall	.-3676   	; 0x4d8 <FifoRead>
    1334:	88 23       	and	r24, r24
    1336:	31 f0       	breq	.+12     	; 0x1344 <USART_DecodeValueFIFO+0x32>
    1338:	6a e3       	ldi	r22, 0x3A	; 58
    133a:	72 e1       	ldi	r23, 0x12	; 18
    133c:	80 e4       	ldi	r24, 0x40	; 64
    133e:	da db       	rcall	.-2124   	; 0xaf4 <TWI_send_string>
    1340:	81 e0       	ldi	r24, 0x01	; 1
    1342:	35 c0       	rjmp	.+106    	; 0x13ae <USART_DecodeValueFIFO+0x9c>
    1344:	80 91 00 00 	lds	r24, 0x0000
    1348:	84 30       	cpi	r24, 0x04	; 4
    134a:	71 f5       	brne	.+92     	; 0x13a8 <USART_DecodeValueFIFO+0x96>
    134c:	8e 01       	movw	r16, r28
    134e:	0f 5f       	subi	r16, 0xFF	; 255
    1350:	1f 4f       	sbci	r17, 0xFF	; 255
    1352:	7e 01       	movw	r14, r28
    1354:	85 e0       	ldi	r24, 0x05	; 5
    1356:	e8 0e       	add	r14, r24
    1358:	f1 1c       	adc	r15, r1
    135a:	60 e0       	ldi	r22, 0x00	; 0
    135c:	70 e0       	ldi	r23, 0x00	; 0
    135e:	80 91 06 01 	lds	r24, 0x0106
    1362:	90 91 07 01 	lds	r25, 0x0107
    1366:	b8 d8       	rcall	.-3728   	; 0x4d8 <FifoRead>
    1368:	81 11       	cpse	r24, r1
    136a:	20 c0       	rjmp	.+64     	; 0x13ac <USART_DecodeValueFIFO+0x9a>
    136c:	e0 e0       	ldi	r30, 0x00	; 0
    136e:	f0 e0       	ldi	r31, 0x00	; 0
    1370:	80 81       	ld	r24, Z
    1372:	d8 01       	movw	r26, r16
    1374:	8d 93       	st	X+, r24
    1376:	8d 01       	movw	r16, r26
    1378:	60 81       	ld	r22, Z
    137a:	70 e0       	ldi	r23, 0x00	; 0
    137c:	80 e0       	ldi	r24, 0x00	; 0
    137e:	90 e0       	ldi	r25, 0x00	; 0
    1380:	fc d1       	rcall	.+1016   	; 0x177a <__floatunsisf>
    1382:	ab 01       	movw	r20, r22
    1384:	bc 01       	movw	r22, r24
    1386:	80 e8       	ldi	r24, 0x80	; 128
    1388:	39 dc       	rcall	.-1934   	; 0xbfc <TWI_send_float>
    138a:	0e 15       	cp	r16, r14
    138c:	1f 05       	cpc	r17, r15
    138e:	29 f7       	brne	.-54     	; 0x135a <USART_DecodeValueFIFO+0x48>
    1390:	49 81       	ldd	r20, Y+1	; 0x01
    1392:	5a 81       	ldd	r21, Y+2	; 0x02
    1394:	6b 81       	ldd	r22, Y+3	; 0x03
    1396:	7c 81       	ldd	r23, Y+4	; 0x04
    1398:	80 e8       	ldi	r24, 0x80	; 128
    139a:	30 dc       	rcall	.-1952   	; 0xbfc <TWI_send_float>
    139c:	92 b1       	in	r25, 0x02	; 2
    139e:	81 e0       	ldi	r24, 0x01	; 1
    13a0:	89 27       	eor	r24, r25
    13a2:	82 b9       	out	0x02, r24	; 2
    13a4:	80 e0       	ldi	r24, 0x00	; 0
    13a6:	03 c0       	rjmp	.+6      	; 0x13ae <USART_DecodeValueFIFO+0x9c>
    13a8:	81 e0       	ldi	r24, 0x01	; 1
    13aa:	01 c0       	rjmp	.+2      	; 0x13ae <USART_DecodeValueFIFO+0x9c>
    13ac:	81 e0       	ldi	r24, 0x01	; 1
    13ae:	0f 90       	pop	r0
    13b0:	0f 90       	pop	r0
    13b2:	0f 90       	pop	r0
    13b4:	0f 90       	pop	r0
    13b6:	df 91       	pop	r29
    13b8:	cf 91       	pop	r28
    13ba:	1f 91       	pop	r17
    13bc:	0f 91       	pop	r16
    13be:	ff 90       	pop	r15
    13c0:	ef 90       	pop	r14
    13c2:	08 95       	ret

000013c4 <USART_DecodeRxFIFO>:
    13c4:	13 c0       	rjmp	.+38     	; 0x13ec <USART_DecodeRxFIFO+0x28>
    13c6:	80 91 00 00 	lds	r24, 0x0000
    13ca:	8d 34       	cpi	r24, 0x4D	; 77
    13cc:	29 f0       	breq	.+10     	; 0x13d8 <USART_DecodeRxFIFO+0x14>
    13ce:	86 35       	cpi	r24, 0x56	; 86
    13d0:	51 f0       	breq	.+20     	; 0x13e6 <USART_DecodeRxFIFO+0x22>
    13d2:	83 34       	cpi	r24, 0x43	; 67
    13d4:	59 f4       	brne	.+22     	; 0x13ec <USART_DecodeRxFIFO+0x28>
    13d6:	04 c0       	rjmp	.+8      	; 0x13e0 <USART_DecodeRxFIFO+0x1c>
    13d8:	d2 de       	rcall	.-604    	; 0x117e <USART_DecodeMessageRxFIFO>
    13da:	88 23       	and	r24, r24
    13dc:	39 f0       	breq	.+14     	; 0x13ec <USART_DecodeRxFIFO+0x28>
    13de:	08 95       	ret
    13e0:	42 df       	rcall	.-380    	; 0x1266 <USART_DecodeCommandRxFIFO>
    13e2:	81 11       	cpse	r24, r1
    13e4:	0c c0       	rjmp	.+24     	; 0x13fe <USART_DecodeRxFIFO+0x3a>
    13e6:	95 df       	rcall	.-214    	; 0x1312 <USART_DecodeValueFIFO>
    13e8:	81 11       	cpse	r24, r1
    13ea:	09 c0       	rjmp	.+18     	; 0x13fe <USART_DecodeRxFIFO+0x3a>
    13ec:	60 e0       	ldi	r22, 0x00	; 0
    13ee:	70 e0       	ldi	r23, 0x00	; 0
    13f0:	80 91 06 01 	lds	r24, 0x0106
    13f4:	90 91 07 01 	lds	r25, 0x0107
    13f8:	6f d8       	rcall	.-3874   	; 0x4d8 <FifoRead>
    13fa:	88 23       	and	r24, r24
    13fc:	21 f3       	breq	.-56     	; 0x13c6 <USART_DecodeRxFIFO+0x2>
    13fe:	08 95       	ret

00001400 <__vector_20>:
    1400:	1f 92       	push	r1
    1402:	0f 92       	push	r0
    1404:	0f b6       	in	r0, 0x3f	; 63
    1406:	0f 92       	push	r0
    1408:	11 24       	eor	r1, r1
    140a:	0b b6       	in	r0, 0x3b	; 59
    140c:	0f 92       	push	r0
    140e:	ef 92       	push	r14
    1410:	ff 92       	push	r15
    1412:	0f 93       	push	r16
    1414:	1f 93       	push	r17
    1416:	2f 93       	push	r18
    1418:	3f 93       	push	r19
    141a:	4f 93       	push	r20
    141c:	5f 93       	push	r21
    141e:	6f 93       	push	r22
    1420:	7f 93       	push	r23
    1422:	8f 93       	push	r24
    1424:	9f 93       	push	r25
    1426:	af 93       	push	r26
    1428:	bf 93       	push	r27
    142a:	cf 93       	push	r28
    142c:	df 93       	push	r29
    142e:	ef 93       	push	r30
    1430:	ff 93       	push	r31
    1432:	20 91 c6 00 	lds	r18, 0x00C6
    1436:	2e 37       	cpi	r18, 0x7E	; 126
    1438:	09 f0       	breq	.+2      	; 0x143c <__vector_20+0x3c>
    143a:	3e c0       	rjmp	.+124    	; 0x14b8 <__vector_20+0xb8>
    143c:	80 91 0b 13 	lds	r24, 0x130B
    1440:	90 91 0c 13 	lds	r25, 0x130C
    1444:	84 30       	cpi	r24, 0x04	; 4
    1446:	91 05       	cpc	r25, r1
    1448:	40 f4       	brcc	.+16     	; 0x145a <__vector_20+0x5a>
    144a:	20 91 4d 14 	lds	r18, 0x144D
    144e:	30 e0       	ldi	r19, 0x00	; 0
    1450:	2c 5f       	subi	r18, 0xFC	; 252
    1452:	3f 4f       	sbci	r19, 0xFF	; 255
    1454:	82 17       	cp	r24, r18
    1456:	93 07       	cpc	r25, r19
    1458:	51 f5       	brne	.+84     	; 0x14ae <__vector_20+0xae>
    145a:	80 91 09 13 	lds	r24, 0x1309
    145e:	90 91 0a 13 	lds	r25, 0x130A
    1462:	89 2b       	or	r24, r25
    1464:	21 f0       	breq	.+8      	; 0x146e <__vector_20+0x6e>
    1466:	10 92 0a 13 	sts	0x130A, r1
    146a:	10 92 09 13 	sts	0x1309, r1
    146e:	0c e4       	ldi	r16, 0x4C	; 76
    1470:	14 e1       	ldi	r17, 0x14	; 20
    1472:	c0 e0       	ldi	r28, 0x00	; 0
    1474:	d0 e0       	ldi	r29, 0x00	; 0
    1476:	0f 2e       	mov	r0, r31
    1478:	fd e4       	ldi	r31, 0x4D	; 77
    147a:	ef 2e       	mov	r14, r31
    147c:	f4 e1       	ldi	r31, 0x14	; 20
    147e:	ff 2e       	mov	r15, r31
    1480:	f0 2d       	mov	r31, r0
    1482:	f8 01       	movw	r30, r16
    1484:	61 91       	ld	r22, Z+
    1486:	8f 01       	movw	r16, r30
    1488:	80 91 06 01 	lds	r24, 0x0106
    148c:	90 91 07 01 	lds	r25, 0x0107
    1490:	03 d8       	rcall	.-4090   	; 0x498 <FifoWrite>
    1492:	88 23       	and	r24, r24
    1494:	21 f0       	breq	.+8      	; 0x149e <__vector_20+0x9e>
    1496:	66 ef       	ldi	r22, 0xF6	; 246
    1498:	72 e1       	ldi	r23, 0x12	; 18
    149a:	80 e4       	ldi	r24, 0x40	; 64
    149c:	2b db       	rcall	.-2474   	; 0xaf4 <TWI_send_string>
    149e:	21 96       	adiw	r28, 0x01	; 1
    14a0:	f7 01       	movw	r30, r14
    14a2:	80 81       	ld	r24, Z
    14a4:	90 e0       	ldi	r25, 0x00	; 0
    14a6:	02 96       	adiw	r24, 0x02	; 2
    14a8:	c8 17       	cp	r28, r24
    14aa:	d9 07       	cpc	r29, r25
    14ac:	54 f3       	brlt	.-44     	; 0x1482 <__vector_20+0x82>
    14ae:	10 92 0c 13 	sts	0x130C, r1
    14b2:	10 92 0b 13 	sts	0x130B, r1
    14b6:	16 c0       	rjmp	.+44     	; 0x14e4 <__vector_20+0xe4>
    14b8:	2d 37       	cpi	r18, 0x7D	; 125
    14ba:	39 f4       	brne	.+14     	; 0x14ca <__vector_20+0xca>
    14bc:	81 e0       	ldi	r24, 0x01	; 1
    14be:	90 e0       	ldi	r25, 0x00	; 0
    14c0:	90 93 0a 13 	sts	0x130A, r25
    14c4:	80 93 09 13 	sts	0x1309, r24
    14c8:	0d c0       	rjmp	.+26     	; 0x14e4 <__vector_20+0xe4>
    14ca:	80 91 0b 13 	lds	r24, 0x130B
    14ce:	90 91 0c 13 	lds	r25, 0x130C
    14d2:	fc 01       	movw	r30, r24
    14d4:	e4 5b       	subi	r30, 0xB4	; 180
    14d6:	fb 4e       	sbci	r31, 0xEB	; 235
    14d8:	20 83       	st	Z, r18
    14da:	01 96       	adiw	r24, 0x01	; 1
    14dc:	90 93 0c 13 	sts	0x130C, r25
    14e0:	80 93 0b 13 	sts	0x130B, r24
    14e4:	ff 91       	pop	r31
    14e6:	ef 91       	pop	r30
    14e8:	df 91       	pop	r29
    14ea:	cf 91       	pop	r28
    14ec:	bf 91       	pop	r27
    14ee:	af 91       	pop	r26
    14f0:	9f 91       	pop	r25
    14f2:	8f 91       	pop	r24
    14f4:	7f 91       	pop	r23
    14f6:	6f 91       	pop	r22
    14f8:	5f 91       	pop	r21
    14fa:	4f 91       	pop	r20
    14fc:	3f 91       	pop	r19
    14fe:	2f 91       	pop	r18
    1500:	1f 91       	pop	r17
    1502:	0f 91       	pop	r16
    1504:	ff 90       	pop	r15
    1506:	ef 90       	pop	r14
    1508:	0f 90       	pop	r0
    150a:	0b be       	out	0x3b, r0	; 59
    150c:	0f 90       	pop	r0
    150e:	0f be       	out	0x3f, r0	; 63
    1510:	0f 90       	pop	r0
    1512:	1f 90       	pop	r1
    1514:	18 95       	reti

00001516 <USART_send_command_parameters>:
    1516:	80 93 51 16 	sts	0x1651, r24
    151a:	60 93 52 16 	sts	0x1652, r22
    151e:	40 93 53 16 	sts	0x1653, r20
    1522:	63 e0       	ldi	r22, 0x03	; 3
    1524:	83 e4       	ldi	r24, 0x43	; 67
    1526:	b9 cd       	rjmp	.-1166   	; 0x109a <USART_SendPacket>

00001528 <__subsf3>:
    1528:	50 58       	subi	r21, 0x80	; 128

0000152a <__addsf3>:
    152a:	bb 27       	eor	r27, r27
    152c:	aa 27       	eor	r26, r26
    152e:	0e d0       	rcall	.+28     	; 0x154c <__addsf3x>
    1530:	c5 c1       	rjmp	.+906    	; 0x18bc <__fp_round>
    1532:	8e d1       	rcall	.+796    	; 0x1850 <__fp_pscA>
    1534:	30 f0       	brcs	.+12     	; 0x1542 <__addsf3+0x18>
    1536:	93 d1       	rcall	.+806    	; 0x185e <__fp_pscB>
    1538:	20 f0       	brcs	.+8      	; 0x1542 <__addsf3+0x18>
    153a:	31 f4       	brne	.+12     	; 0x1548 <__addsf3+0x1e>
    153c:	9f 3f       	cpi	r25, 0xFF	; 255
    153e:	11 f4       	brne	.+4      	; 0x1544 <__addsf3+0x1a>
    1540:	1e f4       	brtc	.+6      	; 0x1548 <__addsf3+0x1e>
    1542:	5e c1       	rjmp	.+700    	; 0x1800 <__fp_nan>
    1544:	0e f4       	brtc	.+2      	; 0x1548 <__addsf3+0x1e>
    1546:	e0 95       	com	r30
    1548:	e7 fb       	bst	r30, 7
    154a:	54 c1       	rjmp	.+680    	; 0x17f4 <__fp_inf>

0000154c <__addsf3x>:
    154c:	e9 2f       	mov	r30, r25
    154e:	d8 d1       	rcall	.+944    	; 0x1900 <__fp_split3>
    1550:	80 f3       	brcs	.-32     	; 0x1532 <__addsf3+0x8>
    1552:	ba 17       	cp	r27, r26
    1554:	62 07       	cpc	r22, r18
    1556:	73 07       	cpc	r23, r19
    1558:	84 07       	cpc	r24, r20
    155a:	95 07       	cpc	r25, r21
    155c:	18 f0       	brcs	.+6      	; 0x1564 <__addsf3x+0x18>
    155e:	71 f4       	brne	.+28     	; 0x157c <__addsf3x+0x30>
    1560:	9e f5       	brtc	.+102    	; 0x15c8 <__addsf3x+0x7c>
    1562:	f0 c1       	rjmp	.+992    	; 0x1944 <__fp_zero>
    1564:	0e f4       	brtc	.+2      	; 0x1568 <__addsf3x+0x1c>
    1566:	e0 95       	com	r30
    1568:	0b 2e       	mov	r0, r27
    156a:	ba 2f       	mov	r27, r26
    156c:	a0 2d       	mov	r26, r0
    156e:	0b 01       	movw	r0, r22
    1570:	b9 01       	movw	r22, r18
    1572:	90 01       	movw	r18, r0
    1574:	0c 01       	movw	r0, r24
    1576:	ca 01       	movw	r24, r20
    1578:	a0 01       	movw	r20, r0
    157a:	11 24       	eor	r1, r1
    157c:	ff 27       	eor	r31, r31
    157e:	59 1b       	sub	r21, r25
    1580:	99 f0       	breq	.+38     	; 0x15a8 <__addsf3x+0x5c>
    1582:	59 3f       	cpi	r21, 0xF9	; 249
    1584:	50 f4       	brcc	.+20     	; 0x159a <__addsf3x+0x4e>
    1586:	50 3e       	cpi	r21, 0xE0	; 224
    1588:	68 f1       	brcs	.+90     	; 0x15e4 <__addsf3x+0x98>
    158a:	1a 16       	cp	r1, r26
    158c:	f0 40       	sbci	r31, 0x00	; 0
    158e:	a2 2f       	mov	r26, r18
    1590:	23 2f       	mov	r18, r19
    1592:	34 2f       	mov	r19, r20
    1594:	44 27       	eor	r20, r20
    1596:	58 5f       	subi	r21, 0xF8	; 248
    1598:	f3 cf       	rjmp	.-26     	; 0x1580 <__addsf3x+0x34>
    159a:	46 95       	lsr	r20
    159c:	37 95       	ror	r19
    159e:	27 95       	ror	r18
    15a0:	a7 95       	ror	r26
    15a2:	f0 40       	sbci	r31, 0x00	; 0
    15a4:	53 95       	inc	r21
    15a6:	c9 f7       	brne	.-14     	; 0x159a <__addsf3x+0x4e>
    15a8:	7e f4       	brtc	.+30     	; 0x15c8 <__addsf3x+0x7c>
    15aa:	1f 16       	cp	r1, r31
    15ac:	ba 0b       	sbc	r27, r26
    15ae:	62 0b       	sbc	r22, r18
    15b0:	73 0b       	sbc	r23, r19
    15b2:	84 0b       	sbc	r24, r20
    15b4:	ba f0       	brmi	.+46     	; 0x15e4 <__addsf3x+0x98>
    15b6:	91 50       	subi	r25, 0x01	; 1
    15b8:	a1 f0       	breq	.+40     	; 0x15e2 <__addsf3x+0x96>
    15ba:	ff 0f       	add	r31, r31
    15bc:	bb 1f       	adc	r27, r27
    15be:	66 1f       	adc	r22, r22
    15c0:	77 1f       	adc	r23, r23
    15c2:	88 1f       	adc	r24, r24
    15c4:	c2 f7       	brpl	.-16     	; 0x15b6 <__addsf3x+0x6a>
    15c6:	0e c0       	rjmp	.+28     	; 0x15e4 <__addsf3x+0x98>
    15c8:	ba 0f       	add	r27, r26
    15ca:	62 1f       	adc	r22, r18
    15cc:	73 1f       	adc	r23, r19
    15ce:	84 1f       	adc	r24, r20
    15d0:	48 f4       	brcc	.+18     	; 0x15e4 <__addsf3x+0x98>
    15d2:	87 95       	ror	r24
    15d4:	77 95       	ror	r23
    15d6:	67 95       	ror	r22
    15d8:	b7 95       	ror	r27
    15da:	f7 95       	ror	r31
    15dc:	9e 3f       	cpi	r25, 0xFE	; 254
    15de:	08 f0       	brcs	.+2      	; 0x15e2 <__addsf3x+0x96>
    15e0:	b3 cf       	rjmp	.-154    	; 0x1548 <__addsf3+0x1e>
    15e2:	93 95       	inc	r25
    15e4:	88 0f       	add	r24, r24
    15e6:	08 f0       	brcs	.+2      	; 0x15ea <__addsf3x+0x9e>
    15e8:	99 27       	eor	r25, r25
    15ea:	ee 0f       	add	r30, r30
    15ec:	97 95       	ror	r25
    15ee:	87 95       	ror	r24
    15f0:	08 95       	ret

000015f2 <atan>:
    15f2:	df 93       	push	r29
    15f4:	dd 27       	eor	r29, r29
    15f6:	b9 2f       	mov	r27, r25
    15f8:	bf 77       	andi	r27, 0x7F	; 127
    15fa:	40 e8       	ldi	r20, 0x80	; 128
    15fc:	5f e3       	ldi	r21, 0x3F	; 63
    15fe:	16 16       	cp	r1, r22
    1600:	17 06       	cpc	r1, r23
    1602:	48 07       	cpc	r20, r24
    1604:	5b 07       	cpc	r21, r27
    1606:	10 f4       	brcc	.+4      	; 0x160c <atan+0x1a>
    1608:	d9 2f       	mov	r29, r25
    160a:	a3 d1       	rcall	.+838    	; 0x1952 <inverse>
    160c:	9f 93       	push	r25
    160e:	8f 93       	push	r24
    1610:	7f 93       	push	r23
    1612:	6f 93       	push	r22
    1614:	08 d2       	rcall	.+1040   	; 0x1a26 <square>
    1616:	ec e8       	ldi	r30, 0x8C	; 140
    1618:	f0 e0       	ldi	r31, 0x00	; 0
    161a:	f5 d0       	rcall	.+490    	; 0x1806 <__fp_powser>
    161c:	4f d1       	rcall	.+670    	; 0x18bc <__fp_round>
    161e:	2f 91       	pop	r18
    1620:	3f 91       	pop	r19
    1622:	4f 91       	pop	r20
    1624:	5f 91       	pop	r21
    1626:	a8 d1       	rcall	.+848    	; 0x1978 <__mulsf3x>
    1628:	dd 23       	and	r29, r29
    162a:	49 f0       	breq	.+18     	; 0x163e <atan+0x4c>
    162c:	90 58       	subi	r25, 0x80	; 128
    162e:	a2 ea       	ldi	r26, 0xA2	; 162
    1630:	2a ed       	ldi	r18, 0xDA	; 218
    1632:	3f e0       	ldi	r19, 0x0F	; 15
    1634:	49 ec       	ldi	r20, 0xC9	; 201
    1636:	5f e3       	ldi	r21, 0x3F	; 63
    1638:	d0 78       	andi	r29, 0x80	; 128
    163a:	5d 27       	eor	r21, r29
    163c:	87 df       	rcall	.-242    	; 0x154c <__addsf3x>
    163e:	df 91       	pop	r29
    1640:	3d c1       	rjmp	.+634    	; 0x18bc <__fp_round>

00001642 <cos>:
    1642:	15 d1       	rcall	.+554    	; 0x186e <__fp_rempio2>
    1644:	e3 95       	inc	r30
    1646:	4b c1       	rjmp	.+662    	; 0x18de <__fp_sinus>

00001648 <__divsf3>:
    1648:	0c d0       	rcall	.+24     	; 0x1662 <__divsf3x>
    164a:	38 c1       	rjmp	.+624    	; 0x18bc <__fp_round>
    164c:	08 d1       	rcall	.+528    	; 0x185e <__fp_pscB>
    164e:	40 f0       	brcs	.+16     	; 0x1660 <__divsf3+0x18>
    1650:	ff d0       	rcall	.+510    	; 0x1850 <__fp_pscA>
    1652:	30 f0       	brcs	.+12     	; 0x1660 <__divsf3+0x18>
    1654:	21 f4       	brne	.+8      	; 0x165e <__divsf3+0x16>
    1656:	5f 3f       	cpi	r21, 0xFF	; 255
    1658:	19 f0       	breq	.+6      	; 0x1660 <__divsf3+0x18>
    165a:	cc c0       	rjmp	.+408    	; 0x17f4 <__fp_inf>
    165c:	51 11       	cpse	r21, r1
    165e:	73 c1       	rjmp	.+742    	; 0x1946 <__fp_szero>
    1660:	cf c0       	rjmp	.+414    	; 0x1800 <__fp_nan>

00001662 <__divsf3x>:
    1662:	4e d1       	rcall	.+668    	; 0x1900 <__fp_split3>
    1664:	98 f3       	brcs	.-26     	; 0x164c <__divsf3+0x4>

00001666 <__divsf3_pse>:
    1666:	99 23       	and	r25, r25
    1668:	c9 f3       	breq	.-14     	; 0x165c <__divsf3+0x14>
    166a:	55 23       	and	r21, r21
    166c:	b1 f3       	breq	.-20     	; 0x165a <__divsf3+0x12>
    166e:	95 1b       	sub	r25, r21
    1670:	55 0b       	sbc	r21, r21
    1672:	bb 27       	eor	r27, r27
    1674:	aa 27       	eor	r26, r26
    1676:	62 17       	cp	r22, r18
    1678:	73 07       	cpc	r23, r19
    167a:	84 07       	cpc	r24, r20
    167c:	38 f0       	brcs	.+14     	; 0x168c <__divsf3_pse+0x26>
    167e:	9f 5f       	subi	r25, 0xFF	; 255
    1680:	5f 4f       	sbci	r21, 0xFF	; 255
    1682:	22 0f       	add	r18, r18
    1684:	33 1f       	adc	r19, r19
    1686:	44 1f       	adc	r20, r20
    1688:	aa 1f       	adc	r26, r26
    168a:	a9 f3       	breq	.-22     	; 0x1676 <__divsf3_pse+0x10>
    168c:	33 d0       	rcall	.+102    	; 0x16f4 <__divsf3_pse+0x8e>
    168e:	0e 2e       	mov	r0, r30
    1690:	3a f0       	brmi	.+14     	; 0x16a0 <__divsf3_pse+0x3a>
    1692:	e0 e8       	ldi	r30, 0x80	; 128
    1694:	30 d0       	rcall	.+96     	; 0x16f6 <__divsf3_pse+0x90>
    1696:	91 50       	subi	r25, 0x01	; 1
    1698:	50 40       	sbci	r21, 0x00	; 0
    169a:	e6 95       	lsr	r30
    169c:	00 1c       	adc	r0, r0
    169e:	ca f7       	brpl	.-14     	; 0x1692 <__divsf3_pse+0x2c>
    16a0:	29 d0       	rcall	.+82     	; 0x16f4 <__divsf3_pse+0x8e>
    16a2:	fe 2f       	mov	r31, r30
    16a4:	27 d0       	rcall	.+78     	; 0x16f4 <__divsf3_pse+0x8e>
    16a6:	66 0f       	add	r22, r22
    16a8:	77 1f       	adc	r23, r23
    16aa:	88 1f       	adc	r24, r24
    16ac:	bb 1f       	adc	r27, r27
    16ae:	26 17       	cp	r18, r22
    16b0:	37 07       	cpc	r19, r23
    16b2:	48 07       	cpc	r20, r24
    16b4:	ab 07       	cpc	r26, r27
    16b6:	b0 e8       	ldi	r27, 0x80	; 128
    16b8:	09 f0       	breq	.+2      	; 0x16bc <__divsf3_pse+0x56>
    16ba:	bb 0b       	sbc	r27, r27
    16bc:	80 2d       	mov	r24, r0
    16be:	bf 01       	movw	r22, r30
    16c0:	ff 27       	eor	r31, r31
    16c2:	93 58       	subi	r25, 0x83	; 131
    16c4:	5f 4f       	sbci	r21, 0xFF	; 255
    16c6:	2a f0       	brmi	.+10     	; 0x16d2 <__divsf3_pse+0x6c>
    16c8:	9e 3f       	cpi	r25, 0xFE	; 254
    16ca:	51 05       	cpc	r21, r1
    16cc:	68 f0       	brcs	.+26     	; 0x16e8 <__divsf3_pse+0x82>
    16ce:	92 c0       	rjmp	.+292    	; 0x17f4 <__fp_inf>
    16d0:	3a c1       	rjmp	.+628    	; 0x1946 <__fp_szero>
    16d2:	5f 3f       	cpi	r21, 0xFF	; 255
    16d4:	ec f3       	brlt	.-6      	; 0x16d0 <__divsf3_pse+0x6a>
    16d6:	98 3e       	cpi	r25, 0xE8	; 232
    16d8:	dc f3       	brlt	.-10     	; 0x16d0 <__divsf3_pse+0x6a>
    16da:	86 95       	lsr	r24
    16dc:	77 95       	ror	r23
    16de:	67 95       	ror	r22
    16e0:	b7 95       	ror	r27
    16e2:	f7 95       	ror	r31
    16e4:	9f 5f       	subi	r25, 0xFF	; 255
    16e6:	c9 f7       	brne	.-14     	; 0x16da <__divsf3_pse+0x74>
    16e8:	88 0f       	add	r24, r24
    16ea:	91 1d       	adc	r25, r1
    16ec:	96 95       	lsr	r25
    16ee:	87 95       	ror	r24
    16f0:	97 f9       	bld	r25, 7
    16f2:	08 95       	ret
    16f4:	e1 e0       	ldi	r30, 0x01	; 1
    16f6:	66 0f       	add	r22, r22
    16f8:	77 1f       	adc	r23, r23
    16fa:	88 1f       	adc	r24, r24
    16fc:	bb 1f       	adc	r27, r27
    16fe:	62 17       	cp	r22, r18
    1700:	73 07       	cpc	r23, r19
    1702:	84 07       	cpc	r24, r20
    1704:	ba 07       	cpc	r27, r26
    1706:	20 f0       	brcs	.+8      	; 0x1710 <__divsf3_pse+0xaa>
    1708:	62 1b       	sub	r22, r18
    170a:	73 0b       	sbc	r23, r19
    170c:	84 0b       	sbc	r24, r20
    170e:	ba 0b       	sbc	r27, r26
    1710:	ee 1f       	adc	r30, r30
    1712:	88 f7       	brcc	.-30     	; 0x16f6 <__divsf3_pse+0x90>
    1714:	e0 95       	com	r30
    1716:	08 95       	ret

00001718 <__fixsfsi>:
    1718:	04 d0       	rcall	.+8      	; 0x1722 <__fixunssfsi>
    171a:	68 94       	set
    171c:	b1 11       	cpse	r27, r1
    171e:	13 c1       	rjmp	.+550    	; 0x1946 <__fp_szero>
    1720:	08 95       	ret

00001722 <__fixunssfsi>:
    1722:	f6 d0       	rcall	.+492    	; 0x1910 <__fp_splitA>
    1724:	88 f0       	brcs	.+34     	; 0x1748 <__fixunssfsi+0x26>
    1726:	9f 57       	subi	r25, 0x7F	; 127
    1728:	90 f0       	brcs	.+36     	; 0x174e <__fixunssfsi+0x2c>
    172a:	b9 2f       	mov	r27, r25
    172c:	99 27       	eor	r25, r25
    172e:	b7 51       	subi	r27, 0x17	; 23
    1730:	a0 f0       	brcs	.+40     	; 0x175a <__fixunssfsi+0x38>
    1732:	d1 f0       	breq	.+52     	; 0x1768 <__fixunssfsi+0x46>
    1734:	66 0f       	add	r22, r22
    1736:	77 1f       	adc	r23, r23
    1738:	88 1f       	adc	r24, r24
    173a:	99 1f       	adc	r25, r25
    173c:	1a f0       	brmi	.+6      	; 0x1744 <__fixunssfsi+0x22>
    173e:	ba 95       	dec	r27
    1740:	c9 f7       	brne	.-14     	; 0x1734 <__fixunssfsi+0x12>
    1742:	12 c0       	rjmp	.+36     	; 0x1768 <__fixunssfsi+0x46>
    1744:	b1 30       	cpi	r27, 0x01	; 1
    1746:	81 f0       	breq	.+32     	; 0x1768 <__fixunssfsi+0x46>
    1748:	fd d0       	rcall	.+506    	; 0x1944 <__fp_zero>
    174a:	b1 e0       	ldi	r27, 0x01	; 1
    174c:	08 95       	ret
    174e:	fa c0       	rjmp	.+500    	; 0x1944 <__fp_zero>
    1750:	67 2f       	mov	r22, r23
    1752:	78 2f       	mov	r23, r24
    1754:	88 27       	eor	r24, r24
    1756:	b8 5f       	subi	r27, 0xF8	; 248
    1758:	39 f0       	breq	.+14     	; 0x1768 <__fixunssfsi+0x46>
    175a:	b9 3f       	cpi	r27, 0xF9	; 249
    175c:	cc f3       	brlt	.-14     	; 0x1750 <__fixunssfsi+0x2e>
    175e:	86 95       	lsr	r24
    1760:	77 95       	ror	r23
    1762:	67 95       	ror	r22
    1764:	b3 95       	inc	r27
    1766:	d9 f7       	brne	.-10     	; 0x175e <__fixunssfsi+0x3c>
    1768:	3e f4       	brtc	.+14     	; 0x1778 <__fixunssfsi+0x56>
    176a:	90 95       	com	r25
    176c:	80 95       	com	r24
    176e:	70 95       	com	r23
    1770:	61 95       	neg	r22
    1772:	7f 4f       	sbci	r23, 0xFF	; 255
    1774:	8f 4f       	sbci	r24, 0xFF	; 255
    1776:	9f 4f       	sbci	r25, 0xFF	; 255
    1778:	08 95       	ret

0000177a <__floatunsisf>:
    177a:	e8 94       	clt
    177c:	09 c0       	rjmp	.+18     	; 0x1790 <__floatsisf+0x12>

0000177e <__floatsisf>:
    177e:	97 fb       	bst	r25, 7
    1780:	3e f4       	brtc	.+14     	; 0x1790 <__floatsisf+0x12>
    1782:	90 95       	com	r25
    1784:	80 95       	com	r24
    1786:	70 95       	com	r23
    1788:	61 95       	neg	r22
    178a:	7f 4f       	sbci	r23, 0xFF	; 255
    178c:	8f 4f       	sbci	r24, 0xFF	; 255
    178e:	9f 4f       	sbci	r25, 0xFF	; 255
    1790:	99 23       	and	r25, r25
    1792:	a9 f0       	breq	.+42     	; 0x17be <__floatsisf+0x40>
    1794:	f9 2f       	mov	r31, r25
    1796:	96 e9       	ldi	r25, 0x96	; 150
    1798:	bb 27       	eor	r27, r27
    179a:	93 95       	inc	r25
    179c:	f6 95       	lsr	r31
    179e:	87 95       	ror	r24
    17a0:	77 95       	ror	r23
    17a2:	67 95       	ror	r22
    17a4:	b7 95       	ror	r27
    17a6:	f1 11       	cpse	r31, r1
    17a8:	f8 cf       	rjmp	.-16     	; 0x179a <__floatsisf+0x1c>
    17aa:	fa f4       	brpl	.+62     	; 0x17ea <__floatsisf+0x6c>
    17ac:	bb 0f       	add	r27, r27
    17ae:	11 f4       	brne	.+4      	; 0x17b4 <__floatsisf+0x36>
    17b0:	60 ff       	sbrs	r22, 0
    17b2:	1b c0       	rjmp	.+54     	; 0x17ea <__floatsisf+0x6c>
    17b4:	6f 5f       	subi	r22, 0xFF	; 255
    17b6:	7f 4f       	sbci	r23, 0xFF	; 255
    17b8:	8f 4f       	sbci	r24, 0xFF	; 255
    17ba:	9f 4f       	sbci	r25, 0xFF	; 255
    17bc:	16 c0       	rjmp	.+44     	; 0x17ea <__floatsisf+0x6c>
    17be:	88 23       	and	r24, r24
    17c0:	11 f0       	breq	.+4      	; 0x17c6 <__floatsisf+0x48>
    17c2:	96 e9       	ldi	r25, 0x96	; 150
    17c4:	11 c0       	rjmp	.+34     	; 0x17e8 <__floatsisf+0x6a>
    17c6:	77 23       	and	r23, r23
    17c8:	21 f0       	breq	.+8      	; 0x17d2 <__floatsisf+0x54>
    17ca:	9e e8       	ldi	r25, 0x8E	; 142
    17cc:	87 2f       	mov	r24, r23
    17ce:	76 2f       	mov	r23, r22
    17d0:	05 c0       	rjmp	.+10     	; 0x17dc <__floatsisf+0x5e>
    17d2:	66 23       	and	r22, r22
    17d4:	71 f0       	breq	.+28     	; 0x17f2 <__floatsisf+0x74>
    17d6:	96 e8       	ldi	r25, 0x86	; 134
    17d8:	86 2f       	mov	r24, r22
    17da:	70 e0       	ldi	r23, 0x00	; 0
    17dc:	60 e0       	ldi	r22, 0x00	; 0
    17de:	2a f0       	brmi	.+10     	; 0x17ea <__floatsisf+0x6c>
    17e0:	9a 95       	dec	r25
    17e2:	66 0f       	add	r22, r22
    17e4:	77 1f       	adc	r23, r23
    17e6:	88 1f       	adc	r24, r24
    17e8:	da f7       	brpl	.-10     	; 0x17e0 <__floatsisf+0x62>
    17ea:	88 0f       	add	r24, r24
    17ec:	96 95       	lsr	r25
    17ee:	87 95       	ror	r24
    17f0:	97 f9       	bld	r25, 7
    17f2:	08 95       	ret

000017f4 <__fp_inf>:
    17f4:	97 f9       	bld	r25, 7
    17f6:	9f 67       	ori	r25, 0x7F	; 127
    17f8:	80 e8       	ldi	r24, 0x80	; 128
    17fa:	70 e0       	ldi	r23, 0x00	; 0
    17fc:	60 e0       	ldi	r22, 0x00	; 0
    17fe:	08 95       	ret

00001800 <__fp_nan>:
    1800:	9f ef       	ldi	r25, 0xFF	; 255
    1802:	80 ec       	ldi	r24, 0xC0	; 192
    1804:	08 95       	ret

00001806 <__fp_powser>:
    1806:	df 93       	push	r29
    1808:	cf 93       	push	r28
    180a:	1f 93       	push	r17
    180c:	0f 93       	push	r16
    180e:	ff 92       	push	r15
    1810:	ef 92       	push	r14
    1812:	df 92       	push	r13
    1814:	7b 01       	movw	r14, r22
    1816:	8c 01       	movw	r16, r24
    1818:	68 94       	set
    181a:	05 c0       	rjmp	.+10     	; 0x1826 <__fp_powser+0x20>
    181c:	da 2e       	mov	r13, r26
    181e:	ef 01       	movw	r28, r30
    1820:	ab d0       	rcall	.+342    	; 0x1978 <__mulsf3x>
    1822:	fe 01       	movw	r30, r28
    1824:	e8 94       	clt
    1826:	a5 91       	lpm	r26, Z+
    1828:	25 91       	lpm	r18, Z+
    182a:	35 91       	lpm	r19, Z+
    182c:	45 91       	lpm	r20, Z+
    182e:	55 91       	lpm	r21, Z+
    1830:	ae f3       	brts	.-22     	; 0x181c <__fp_powser+0x16>
    1832:	ef 01       	movw	r28, r30
    1834:	8b de       	rcall	.-746    	; 0x154c <__addsf3x>
    1836:	fe 01       	movw	r30, r28
    1838:	97 01       	movw	r18, r14
    183a:	a8 01       	movw	r20, r16
    183c:	da 94       	dec	r13
    183e:	79 f7       	brne	.-34     	; 0x181e <__fp_powser+0x18>
    1840:	df 90       	pop	r13
    1842:	ef 90       	pop	r14
    1844:	ff 90       	pop	r15
    1846:	0f 91       	pop	r16
    1848:	1f 91       	pop	r17
    184a:	cf 91       	pop	r28
    184c:	df 91       	pop	r29
    184e:	08 95       	ret

00001850 <__fp_pscA>:
    1850:	00 24       	eor	r0, r0
    1852:	0a 94       	dec	r0
    1854:	16 16       	cp	r1, r22
    1856:	17 06       	cpc	r1, r23
    1858:	18 06       	cpc	r1, r24
    185a:	09 06       	cpc	r0, r25
    185c:	08 95       	ret

0000185e <__fp_pscB>:
    185e:	00 24       	eor	r0, r0
    1860:	0a 94       	dec	r0
    1862:	12 16       	cp	r1, r18
    1864:	13 06       	cpc	r1, r19
    1866:	14 06       	cpc	r1, r20
    1868:	05 06       	cpc	r0, r21
    186a:	08 95       	ret
    186c:	c9 cf       	rjmp	.-110    	; 0x1800 <__fp_nan>

0000186e <__fp_rempio2>:
    186e:	50 d0       	rcall	.+160    	; 0x1910 <__fp_splitA>
    1870:	e8 f3       	brcs	.-6      	; 0x186c <__fp_pscB+0xe>
    1872:	e8 94       	clt
    1874:	e0 e0       	ldi	r30, 0x00	; 0
    1876:	bb 27       	eor	r27, r27
    1878:	9f 57       	subi	r25, 0x7F	; 127
    187a:	f0 f0       	brcs	.+60     	; 0x18b8 <__fp_rempio2+0x4a>
    187c:	2a ed       	ldi	r18, 0xDA	; 218
    187e:	3f e0       	ldi	r19, 0x0F	; 15
    1880:	49 ec       	ldi	r20, 0xC9	; 201
    1882:	06 c0       	rjmp	.+12     	; 0x1890 <__fp_rempio2+0x22>
    1884:	ee 0f       	add	r30, r30
    1886:	bb 0f       	add	r27, r27
    1888:	66 1f       	adc	r22, r22
    188a:	77 1f       	adc	r23, r23
    188c:	88 1f       	adc	r24, r24
    188e:	28 f0       	brcs	.+10     	; 0x189a <__fp_rempio2+0x2c>
    1890:	b2 3a       	cpi	r27, 0xA2	; 162
    1892:	62 07       	cpc	r22, r18
    1894:	73 07       	cpc	r23, r19
    1896:	84 07       	cpc	r24, r20
    1898:	28 f0       	brcs	.+10     	; 0x18a4 <__fp_rempio2+0x36>
    189a:	b2 5a       	subi	r27, 0xA2	; 162
    189c:	62 0b       	sbc	r22, r18
    189e:	73 0b       	sbc	r23, r19
    18a0:	84 0b       	sbc	r24, r20
    18a2:	e3 95       	inc	r30
    18a4:	9a 95       	dec	r25
    18a6:	72 f7       	brpl	.-36     	; 0x1884 <__fp_rempio2+0x16>
    18a8:	80 38       	cpi	r24, 0x80	; 128
    18aa:	30 f4       	brcc	.+12     	; 0x18b8 <__fp_rempio2+0x4a>
    18ac:	9a 95       	dec	r25
    18ae:	bb 0f       	add	r27, r27
    18b0:	66 1f       	adc	r22, r22
    18b2:	77 1f       	adc	r23, r23
    18b4:	88 1f       	adc	r24, r24
    18b6:	d2 f7       	brpl	.-12     	; 0x18ac <__fp_rempio2+0x3e>
    18b8:	90 48       	sbci	r25, 0x80	; 128
    18ba:	ba c0       	rjmp	.+372    	; 0x1a30 <__fp_mpack_finite>

000018bc <__fp_round>:
    18bc:	09 2e       	mov	r0, r25
    18be:	03 94       	inc	r0
    18c0:	00 0c       	add	r0, r0
    18c2:	11 f4       	brne	.+4      	; 0x18c8 <__fp_round+0xc>
    18c4:	88 23       	and	r24, r24
    18c6:	52 f0       	brmi	.+20     	; 0x18dc <__fp_round+0x20>
    18c8:	bb 0f       	add	r27, r27
    18ca:	40 f4       	brcc	.+16     	; 0x18dc <__fp_round+0x20>
    18cc:	bf 2b       	or	r27, r31
    18ce:	11 f4       	brne	.+4      	; 0x18d4 <__fp_round+0x18>
    18d0:	60 ff       	sbrs	r22, 0
    18d2:	04 c0       	rjmp	.+8      	; 0x18dc <__fp_round+0x20>
    18d4:	6f 5f       	subi	r22, 0xFF	; 255
    18d6:	7f 4f       	sbci	r23, 0xFF	; 255
    18d8:	8f 4f       	sbci	r24, 0xFF	; 255
    18da:	9f 4f       	sbci	r25, 0xFF	; 255
    18dc:	08 95       	ret

000018de <__fp_sinus>:
    18de:	ef 93       	push	r30
    18e0:	e0 ff       	sbrs	r30, 0
    18e2:	06 c0       	rjmp	.+12     	; 0x18f0 <__fp_sinus+0x12>
    18e4:	a2 ea       	ldi	r26, 0xA2	; 162
    18e6:	2a ed       	ldi	r18, 0xDA	; 218
    18e8:	3f e0       	ldi	r19, 0x0F	; 15
    18ea:	49 ec       	ldi	r20, 0xC9	; 201
    18ec:	5f eb       	ldi	r21, 0xBF	; 191
    18ee:	2e de       	rcall	.-932    	; 0x154c <__addsf3x>
    18f0:	e5 df       	rcall	.-54     	; 0x18bc <__fp_round>
    18f2:	0f 90       	pop	r0
    18f4:	03 94       	inc	r0
    18f6:	01 fc       	sbrc	r0, 1
    18f8:	90 58       	subi	r25, 0x80	; 128
    18fa:	e9 eb       	ldi	r30, 0xB9	; 185
    18fc:	f0 e0       	ldi	r31, 0x00	; 0
    18fe:	a4 c0       	rjmp	.+328    	; 0x1a48 <__fp_powsodd>

00001900 <__fp_split3>:
    1900:	57 fd       	sbrc	r21, 7
    1902:	90 58       	subi	r25, 0x80	; 128
    1904:	44 0f       	add	r20, r20
    1906:	55 1f       	adc	r21, r21
    1908:	59 f0       	breq	.+22     	; 0x1920 <__fp_splitA+0x10>
    190a:	5f 3f       	cpi	r21, 0xFF	; 255
    190c:	71 f0       	breq	.+28     	; 0x192a <__fp_splitA+0x1a>
    190e:	47 95       	ror	r20

00001910 <__fp_splitA>:
    1910:	88 0f       	add	r24, r24
    1912:	97 fb       	bst	r25, 7
    1914:	99 1f       	adc	r25, r25
    1916:	61 f0       	breq	.+24     	; 0x1930 <__fp_splitA+0x20>
    1918:	9f 3f       	cpi	r25, 0xFF	; 255
    191a:	79 f0       	breq	.+30     	; 0x193a <__fp_splitA+0x2a>
    191c:	87 95       	ror	r24
    191e:	08 95       	ret
    1920:	12 16       	cp	r1, r18
    1922:	13 06       	cpc	r1, r19
    1924:	14 06       	cpc	r1, r20
    1926:	55 1f       	adc	r21, r21
    1928:	f2 cf       	rjmp	.-28     	; 0x190e <__fp_split3+0xe>
    192a:	46 95       	lsr	r20
    192c:	f1 df       	rcall	.-30     	; 0x1910 <__fp_splitA>
    192e:	08 c0       	rjmp	.+16     	; 0x1940 <__fp_splitA+0x30>
    1930:	16 16       	cp	r1, r22
    1932:	17 06       	cpc	r1, r23
    1934:	18 06       	cpc	r1, r24
    1936:	99 1f       	adc	r25, r25
    1938:	f1 cf       	rjmp	.-30     	; 0x191c <__fp_splitA+0xc>
    193a:	86 95       	lsr	r24
    193c:	71 05       	cpc	r23, r1
    193e:	61 05       	cpc	r22, r1
    1940:	08 94       	sec
    1942:	08 95       	ret

00001944 <__fp_zero>:
    1944:	e8 94       	clt

00001946 <__fp_szero>:
    1946:	bb 27       	eor	r27, r27
    1948:	66 27       	eor	r22, r22
    194a:	77 27       	eor	r23, r23
    194c:	cb 01       	movw	r24, r22
    194e:	97 f9       	bld	r25, 7
    1950:	08 95       	ret

00001952 <inverse>:
    1952:	9b 01       	movw	r18, r22
    1954:	ac 01       	movw	r20, r24
    1956:	60 e0       	ldi	r22, 0x00	; 0
    1958:	70 e0       	ldi	r23, 0x00	; 0
    195a:	80 e8       	ldi	r24, 0x80	; 128
    195c:	9f e3       	ldi	r25, 0x3F	; 63
    195e:	74 ce       	rjmp	.-792    	; 0x1648 <__divsf3>

00001960 <__mulsf3>:
    1960:	0b d0       	rcall	.+22     	; 0x1978 <__mulsf3x>
    1962:	ac cf       	rjmp	.-168    	; 0x18bc <__fp_round>
    1964:	75 df       	rcall	.-278    	; 0x1850 <__fp_pscA>
    1966:	28 f0       	brcs	.+10     	; 0x1972 <__mulsf3+0x12>
    1968:	7a df       	rcall	.-268    	; 0x185e <__fp_pscB>
    196a:	18 f0       	brcs	.+6      	; 0x1972 <__mulsf3+0x12>
    196c:	95 23       	and	r25, r21
    196e:	09 f0       	breq	.+2      	; 0x1972 <__mulsf3+0x12>
    1970:	41 cf       	rjmp	.-382    	; 0x17f4 <__fp_inf>
    1972:	46 cf       	rjmp	.-372    	; 0x1800 <__fp_nan>
    1974:	11 24       	eor	r1, r1
    1976:	e7 cf       	rjmp	.-50     	; 0x1946 <__fp_szero>

00001978 <__mulsf3x>:
    1978:	c3 df       	rcall	.-122    	; 0x1900 <__fp_split3>
    197a:	a0 f3       	brcs	.-24     	; 0x1964 <__mulsf3+0x4>

0000197c <__mulsf3_pse>:
    197c:	95 9f       	mul	r25, r21
    197e:	d1 f3       	breq	.-12     	; 0x1974 <__mulsf3+0x14>
    1980:	95 0f       	add	r25, r21
    1982:	50 e0       	ldi	r21, 0x00	; 0
    1984:	55 1f       	adc	r21, r21
    1986:	62 9f       	mul	r22, r18
    1988:	f0 01       	movw	r30, r0
    198a:	72 9f       	mul	r23, r18
    198c:	bb 27       	eor	r27, r27
    198e:	f0 0d       	add	r31, r0
    1990:	b1 1d       	adc	r27, r1
    1992:	63 9f       	mul	r22, r19
    1994:	aa 27       	eor	r26, r26
    1996:	f0 0d       	add	r31, r0
    1998:	b1 1d       	adc	r27, r1
    199a:	aa 1f       	adc	r26, r26
    199c:	64 9f       	mul	r22, r20
    199e:	66 27       	eor	r22, r22
    19a0:	b0 0d       	add	r27, r0
    19a2:	a1 1d       	adc	r26, r1
    19a4:	66 1f       	adc	r22, r22
    19a6:	82 9f       	mul	r24, r18
    19a8:	22 27       	eor	r18, r18
    19aa:	b0 0d       	add	r27, r0
    19ac:	a1 1d       	adc	r26, r1
    19ae:	62 1f       	adc	r22, r18
    19b0:	73 9f       	mul	r23, r19
    19b2:	b0 0d       	add	r27, r0
    19b4:	a1 1d       	adc	r26, r1
    19b6:	62 1f       	adc	r22, r18
    19b8:	83 9f       	mul	r24, r19
    19ba:	a0 0d       	add	r26, r0
    19bc:	61 1d       	adc	r22, r1
    19be:	22 1f       	adc	r18, r18
    19c0:	74 9f       	mul	r23, r20
    19c2:	33 27       	eor	r19, r19
    19c4:	a0 0d       	add	r26, r0
    19c6:	61 1d       	adc	r22, r1
    19c8:	23 1f       	adc	r18, r19
    19ca:	84 9f       	mul	r24, r20
    19cc:	60 0d       	add	r22, r0
    19ce:	21 1d       	adc	r18, r1
    19d0:	82 2f       	mov	r24, r18
    19d2:	76 2f       	mov	r23, r22
    19d4:	6a 2f       	mov	r22, r26
    19d6:	11 24       	eor	r1, r1
    19d8:	9f 57       	subi	r25, 0x7F	; 127
    19da:	50 40       	sbci	r21, 0x00	; 0
    19dc:	8a f0       	brmi	.+34     	; 0x1a00 <__mulsf3_pse+0x84>
    19de:	e1 f0       	breq	.+56     	; 0x1a18 <__mulsf3_pse+0x9c>
    19e0:	88 23       	and	r24, r24
    19e2:	4a f0       	brmi	.+18     	; 0x19f6 <__mulsf3_pse+0x7a>
    19e4:	ee 0f       	add	r30, r30
    19e6:	ff 1f       	adc	r31, r31
    19e8:	bb 1f       	adc	r27, r27
    19ea:	66 1f       	adc	r22, r22
    19ec:	77 1f       	adc	r23, r23
    19ee:	88 1f       	adc	r24, r24
    19f0:	91 50       	subi	r25, 0x01	; 1
    19f2:	50 40       	sbci	r21, 0x00	; 0
    19f4:	a9 f7       	brne	.-22     	; 0x19e0 <__mulsf3_pse+0x64>
    19f6:	9e 3f       	cpi	r25, 0xFE	; 254
    19f8:	51 05       	cpc	r21, r1
    19fa:	70 f0       	brcs	.+28     	; 0x1a18 <__mulsf3_pse+0x9c>
    19fc:	fb ce       	rjmp	.-522    	; 0x17f4 <__fp_inf>
    19fe:	a3 cf       	rjmp	.-186    	; 0x1946 <__fp_szero>
    1a00:	5f 3f       	cpi	r21, 0xFF	; 255
    1a02:	ec f3       	brlt	.-6      	; 0x19fe <__mulsf3_pse+0x82>
    1a04:	98 3e       	cpi	r25, 0xE8	; 232
    1a06:	dc f3       	brlt	.-10     	; 0x19fe <__mulsf3_pse+0x82>
    1a08:	86 95       	lsr	r24
    1a0a:	77 95       	ror	r23
    1a0c:	67 95       	ror	r22
    1a0e:	b7 95       	ror	r27
    1a10:	f7 95       	ror	r31
    1a12:	e7 95       	ror	r30
    1a14:	9f 5f       	subi	r25, 0xFF	; 255
    1a16:	c1 f7       	brne	.-16     	; 0x1a08 <__mulsf3_pse+0x8c>
    1a18:	fe 2b       	or	r31, r30
    1a1a:	88 0f       	add	r24, r24
    1a1c:	91 1d       	adc	r25, r1
    1a1e:	96 95       	lsr	r25
    1a20:	87 95       	ror	r24
    1a22:	97 f9       	bld	r25, 7
    1a24:	08 95       	ret

00001a26 <square>:
    1a26:	9b 01       	movw	r18, r22
    1a28:	ac 01       	movw	r20, r24
    1a2a:	9a cf       	rjmp	.-204    	; 0x1960 <__mulsf3>

00001a2c <__fp_mpack>:
    1a2c:	9f 3f       	cpi	r25, 0xFF	; 255
    1a2e:	31 f0       	breq	.+12     	; 0x1a3c <__fp_mpack_finite+0xc>

00001a30 <__fp_mpack_finite>:
    1a30:	91 50       	subi	r25, 0x01	; 1
    1a32:	20 f4       	brcc	.+8      	; 0x1a3c <__fp_mpack_finite+0xc>
    1a34:	87 95       	ror	r24
    1a36:	77 95       	ror	r23
    1a38:	67 95       	ror	r22
    1a3a:	b7 95       	ror	r27
    1a3c:	88 0f       	add	r24, r24
    1a3e:	91 1d       	adc	r25, r1
    1a40:	96 95       	lsr	r25
    1a42:	87 95       	ror	r24
    1a44:	97 f9       	bld	r25, 7
    1a46:	08 95       	ret

00001a48 <__fp_powsodd>:
    1a48:	9f 93       	push	r25
    1a4a:	8f 93       	push	r24
    1a4c:	7f 93       	push	r23
    1a4e:	6f 93       	push	r22
    1a50:	ff 93       	push	r31
    1a52:	ef 93       	push	r30
    1a54:	9b 01       	movw	r18, r22
    1a56:	ac 01       	movw	r20, r24
    1a58:	83 df       	rcall	.-250    	; 0x1960 <__mulsf3>
    1a5a:	ef 91       	pop	r30
    1a5c:	ff 91       	pop	r31
    1a5e:	d3 de       	rcall	.-602    	; 0x1806 <__fp_powser>
    1a60:	2f 91       	pop	r18
    1a62:	3f 91       	pop	r19
    1a64:	4f 91       	pop	r20
    1a66:	5f 91       	pop	r21
    1a68:	7b cf       	rjmp	.-266    	; 0x1960 <__mulsf3>

00001a6a <__divmodhi4>:
    1a6a:	97 fb       	bst	r25, 7
    1a6c:	07 2e       	mov	r0, r23
    1a6e:	16 f4       	brtc	.+4      	; 0x1a74 <__divmodhi4+0xa>
    1a70:	00 94       	com	r0
    1a72:	06 d0       	rcall	.+12     	; 0x1a80 <__divmodhi4_neg1>
    1a74:	77 fd       	sbrc	r23, 7
    1a76:	08 d0       	rcall	.+16     	; 0x1a88 <__divmodhi4_neg2>
    1a78:	0b d0       	rcall	.+22     	; 0x1a90 <__udivmodhi4>
    1a7a:	07 fc       	sbrc	r0, 7
    1a7c:	05 d0       	rcall	.+10     	; 0x1a88 <__divmodhi4_neg2>
    1a7e:	3e f4       	brtc	.+14     	; 0x1a8e <__divmodhi4_exit>

00001a80 <__divmodhi4_neg1>:
    1a80:	90 95       	com	r25
    1a82:	81 95       	neg	r24
    1a84:	9f 4f       	sbci	r25, 0xFF	; 255
    1a86:	08 95       	ret

00001a88 <__divmodhi4_neg2>:
    1a88:	70 95       	com	r23
    1a8a:	61 95       	neg	r22
    1a8c:	7f 4f       	sbci	r23, 0xFF	; 255

00001a8e <__divmodhi4_exit>:
    1a8e:	08 95       	ret

00001a90 <__udivmodhi4>:
    1a90:	aa 1b       	sub	r26, r26
    1a92:	bb 1b       	sub	r27, r27
    1a94:	51 e1       	ldi	r21, 0x11	; 17
    1a96:	07 c0       	rjmp	.+14     	; 0x1aa6 <__udivmodhi4_ep>

00001a98 <__udivmodhi4_loop>:
    1a98:	aa 1f       	adc	r26, r26
    1a9a:	bb 1f       	adc	r27, r27
    1a9c:	a6 17       	cp	r26, r22
    1a9e:	b7 07       	cpc	r27, r23
    1aa0:	10 f0       	brcs	.+4      	; 0x1aa6 <__udivmodhi4_ep>
    1aa2:	a6 1b       	sub	r26, r22
    1aa4:	b7 0b       	sbc	r27, r23

00001aa6 <__udivmodhi4_ep>:
    1aa6:	88 1f       	adc	r24, r24
    1aa8:	99 1f       	adc	r25, r25
    1aaa:	5a 95       	dec	r21
    1aac:	a9 f7       	brne	.-22     	; 0x1a98 <__udivmodhi4_loop>
    1aae:	80 95       	com	r24
    1ab0:	90 95       	com	r25
    1ab2:	bc 01       	movw	r22, r24
    1ab4:	cd 01       	movw	r24, r26
    1ab6:	08 95       	ret

00001ab8 <swapfunc>:
    1ab8:	fb 01       	movw	r30, r22
    1aba:	dc 01       	movw	r26, r24
    1abc:	ca 01       	movw	r24, r20
    1abe:	2c 91       	ld	r18, X
    1ac0:	30 81       	ld	r19, Z
    1ac2:	3d 93       	st	X+, r19
    1ac4:	21 93       	st	Z+, r18
    1ac6:	01 97       	sbiw	r24, 0x01	; 1
    1ac8:	18 16       	cp	r1, r24
    1aca:	19 06       	cpc	r1, r25
    1acc:	c4 f3       	brlt	.-16     	; 0x1abe <swapfunc+0x6>
    1ace:	08 95       	ret

00001ad0 <med3>:
    1ad0:	cf 92       	push	r12
    1ad2:	df 92       	push	r13
    1ad4:	ef 92       	push	r14
    1ad6:	ff 92       	push	r15
    1ad8:	0f 93       	push	r16
    1ada:	1f 93       	push	r17
    1adc:	cf 93       	push	r28
    1ade:	df 93       	push	r29
    1ae0:	6c 01       	movw	r12, r24
    1ae2:	8b 01       	movw	r16, r22
    1ae4:	7a 01       	movw	r14, r20
    1ae6:	e9 01       	movw	r28, r18
    1ae8:	f9 01       	movw	r30, r18
    1aea:	09 95       	icall
    1aec:	b7 01       	movw	r22, r14
    1aee:	97 ff       	sbrs	r25, 7
    1af0:	0c c0       	rjmp	.+24     	; 0x1b0a <med3+0x3a>
    1af2:	c8 01       	movw	r24, r16
    1af4:	fe 01       	movw	r30, r28
    1af6:	09 95       	icall
    1af8:	97 fd       	sbrc	r25, 7
    1afa:	16 c0       	rjmp	.+44     	; 0x1b28 <med3+0x58>
    1afc:	b7 01       	movw	r22, r14
    1afe:	c6 01       	movw	r24, r12
    1b00:	fe 01       	movw	r30, r28
    1b02:	09 95       	icall
    1b04:	97 ff       	sbrs	r25, 7
    1b06:	0d c0       	rjmp	.+26     	; 0x1b22 <med3+0x52>
    1b08:	0e c0       	rjmp	.+28     	; 0x1b26 <med3+0x56>
    1b0a:	c8 01       	movw	r24, r16
    1b0c:	fe 01       	movw	r30, r28
    1b0e:	09 95       	icall
    1b10:	18 16       	cp	r1, r24
    1b12:	19 06       	cpc	r1, r25
    1b14:	4c f0       	brlt	.+18     	; 0x1b28 <med3+0x58>
    1b16:	b7 01       	movw	r22, r14
    1b18:	c6 01       	movw	r24, r12
    1b1a:	fe 01       	movw	r30, r28
    1b1c:	09 95       	icall
    1b1e:	97 ff       	sbrs	r25, 7
    1b20:	02 c0       	rjmp	.+4      	; 0x1b26 <med3+0x56>
    1b22:	86 01       	movw	r16, r12
    1b24:	01 c0       	rjmp	.+2      	; 0x1b28 <med3+0x58>
    1b26:	87 01       	movw	r16, r14
    1b28:	c8 01       	movw	r24, r16
    1b2a:	df 91       	pop	r29
    1b2c:	cf 91       	pop	r28
    1b2e:	1f 91       	pop	r17
    1b30:	0f 91       	pop	r16
    1b32:	ff 90       	pop	r15
    1b34:	ef 90       	pop	r14
    1b36:	df 90       	pop	r13
    1b38:	cf 90       	pop	r12
    1b3a:	08 95       	ret

00001b3c <qsort>:
    1b3c:	2f 92       	push	r2
    1b3e:	3f 92       	push	r3
    1b40:	4f 92       	push	r4
    1b42:	5f 92       	push	r5
    1b44:	6f 92       	push	r6
    1b46:	7f 92       	push	r7
    1b48:	8f 92       	push	r8
    1b4a:	9f 92       	push	r9
    1b4c:	af 92       	push	r10
    1b4e:	bf 92       	push	r11
    1b50:	cf 92       	push	r12
    1b52:	df 92       	push	r13
    1b54:	ef 92       	push	r14
    1b56:	ff 92       	push	r15
    1b58:	0f 93       	push	r16
    1b5a:	1f 93       	push	r17
    1b5c:	cf 93       	push	r28
    1b5e:	df 93       	push	r29
    1b60:	cd b7       	in	r28, 0x3d	; 61
    1b62:	de b7       	in	r29, 0x3e	; 62
    1b64:	28 97       	sbiw	r28, 0x08	; 8
    1b66:	0f b6       	in	r0, 0x3f	; 63
    1b68:	f8 94       	cli
    1b6a:	de bf       	out	0x3e, r29	; 62
    1b6c:	0f be       	out	0x3f, r0	; 63
    1b6e:	cd bf       	out	0x3d, r28	; 61
    1b70:	8c 01       	movw	r16, r24
    1b72:	6b 01       	movw	r12, r22
    1b74:	58 87       	std	Y+8, r21	; 0x08
    1b76:	4f 83       	std	Y+7, r20	; 0x07
    1b78:	59 01       	movw	r10, r18
    1b7a:	4b 83       	std	Y+3, r20	; 0x03
    1b7c:	5c 83       	std	Y+4, r21	; 0x04
    1b7e:	27 e0       	ldi	r18, 0x07	; 7
    1b80:	c2 16       	cp	r12, r18
    1b82:	d1 04       	cpc	r13, r1
    1b84:	88 f5       	brcc	.+98     	; 0x1be8 <qsort+0xac>
    1b86:	ef 80       	ldd	r14, Y+7	; 0x07
    1b88:	f8 84       	ldd	r15, Y+8	; 0x08
    1b8a:	e0 0e       	add	r14, r16
    1b8c:	f1 1e       	adc	r15, r17
    1b8e:	4f 81       	ldd	r20, Y+7	; 0x07
    1b90:	58 85       	ldd	r21, Y+8	; 0x08
    1b92:	c4 9e       	mul	r12, r20
    1b94:	40 01       	movw	r8, r0
    1b96:	c5 9e       	mul	r12, r21
    1b98:	90 0c       	add	r9, r0
    1b9a:	d4 9e       	mul	r13, r20
    1b9c:	90 0c       	add	r9, r0
    1b9e:	11 24       	eor	r1, r1
    1ba0:	80 0e       	add	r8, r16
    1ba2:	91 1e       	adc	r9, r17
    1ba4:	1b c0       	rjmp	.+54     	; 0x1bdc <qsort+0xa0>
    1ba6:	4f 81       	ldd	r20, Y+7	; 0x07
    1ba8:	58 85       	ldd	r21, Y+8	; 0x08
    1baa:	b6 01       	movw	r22, r12
    1bac:	c3 01       	movw	r24, r6
    1bae:	84 df       	rcall	.-248    	; 0x1ab8 <swapfunc>
    1bb0:	36 01       	movw	r6, r12
    1bb2:	06 15       	cp	r16, r6
    1bb4:	17 05       	cpc	r17, r7
    1bb6:	28 f0       	brcs	.+10     	; 0x1bc2 <qsort+0x86>
    1bb8:	6f 81       	ldd	r22, Y+7	; 0x07
    1bba:	78 85       	ldd	r23, Y+8	; 0x08
    1bbc:	e6 0e       	add	r14, r22
    1bbe:	f7 1e       	adc	r15, r23
    1bc0:	0d c0       	rjmp	.+26     	; 0x1bdc <qsort+0xa0>
    1bc2:	63 01       	movw	r12, r6
    1bc4:	8f 81       	ldd	r24, Y+7	; 0x07
    1bc6:	98 85       	ldd	r25, Y+8	; 0x08
    1bc8:	c8 1a       	sub	r12, r24
    1bca:	d9 0a       	sbc	r13, r25
    1bcc:	b3 01       	movw	r22, r6
    1bce:	c6 01       	movw	r24, r12
    1bd0:	f5 01       	movw	r30, r10
    1bd2:	09 95       	icall
    1bd4:	18 16       	cp	r1, r24
    1bd6:	19 06       	cpc	r1, r25
    1bd8:	34 f3       	brlt	.-52     	; 0x1ba6 <qsort+0x6a>
    1bda:	ee cf       	rjmp	.-36     	; 0x1bb8 <qsort+0x7c>
    1bdc:	e8 14       	cp	r14, r8
    1bde:	f9 04       	cpc	r15, r9
    1be0:	08 f0       	brcs	.+2      	; 0x1be4 <qsort+0xa8>
    1be2:	4d c1       	rjmp	.+666    	; 0x1e7e <qsort+0x342>
    1be4:	37 01       	movw	r6, r14
    1be6:	e5 cf       	rjmp	.-54     	; 0x1bb2 <qsort+0x76>
    1be8:	c6 01       	movw	r24, r12
    1bea:	96 95       	lsr	r25
    1bec:	87 95       	ror	r24
    1bee:	2f 81       	ldd	r18, Y+7	; 0x07
    1bf0:	38 85       	ldd	r19, Y+8	; 0x08
    1bf2:	82 9f       	mul	r24, r18
    1bf4:	70 01       	movw	r14, r0
    1bf6:	83 9f       	mul	r24, r19
    1bf8:	f0 0c       	add	r15, r0
    1bfa:	92 9f       	mul	r25, r18
    1bfc:	f0 0c       	add	r15, r0
    1bfe:	11 24       	eor	r1, r1
    1c00:	e0 0e       	add	r14, r16
    1c02:	f1 1e       	adc	r15, r17
    1c04:	37 e0       	ldi	r19, 0x07	; 7
    1c06:	c3 16       	cp	r12, r19
    1c08:	d1 04       	cpc	r13, r1
    1c0a:	09 f4       	brne	.+2      	; 0x1c0e <qsort+0xd2>
    1c0c:	4c c0       	rjmp	.+152    	; 0x1ca6 <qsort+0x16a>
    1c0e:	c6 01       	movw	r24, r12
    1c10:	01 97       	sbiw	r24, 0x01	; 1
    1c12:	4f 81       	ldd	r20, Y+7	; 0x07
    1c14:	58 85       	ldd	r21, Y+8	; 0x08
    1c16:	84 9f       	mul	r24, r20
    1c18:	40 01       	movw	r8, r0
    1c1a:	85 9f       	mul	r24, r21
    1c1c:	90 0c       	add	r9, r0
    1c1e:	94 9f       	mul	r25, r20
    1c20:	90 0c       	add	r9, r0
    1c22:	11 24       	eor	r1, r1
    1c24:	80 0e       	add	r8, r16
    1c26:	91 1e       	adc	r9, r17
    1c28:	59 e2       	ldi	r21, 0x29	; 41
    1c2a:	c5 16       	cp	r12, r21
    1c2c:	d1 04       	cpc	r13, r1
    1c2e:	a0 f1       	brcs	.+104    	; 0x1c98 <qsort+0x15c>
    1c30:	c6 01       	movw	r24, r12
    1c32:	23 e0       	ldi	r18, 0x03	; 3
    1c34:	96 95       	lsr	r25
    1c36:	87 95       	ror	r24
    1c38:	2a 95       	dec	r18
    1c3a:	e1 f7       	brne	.-8      	; 0x1c34 <qsort+0xf8>
    1c3c:	6f 81       	ldd	r22, Y+7	; 0x07
    1c3e:	78 85       	ldd	r23, Y+8	; 0x08
    1c40:	86 9f       	mul	r24, r22
    1c42:	30 01       	movw	r6, r0
    1c44:	87 9f       	mul	r24, r23
    1c46:	70 0c       	add	r7, r0
    1c48:	96 9f       	mul	r25, r22
    1c4a:	70 0c       	add	r7, r0
    1c4c:	11 24       	eor	r1, r1
    1c4e:	13 01       	movw	r2, r6
    1c50:	22 0c       	add	r2, r2
    1c52:	33 1c       	adc	r3, r3
    1c54:	a8 01       	movw	r20, r16
    1c56:	42 0d       	add	r20, r2
    1c58:	53 1d       	adc	r21, r3
    1c5a:	b8 01       	movw	r22, r16
    1c5c:	66 0d       	add	r22, r6
    1c5e:	77 1d       	adc	r23, r7
    1c60:	95 01       	movw	r18, r10
    1c62:	c8 01       	movw	r24, r16
    1c64:	35 df       	rcall	.-406    	; 0x1ad0 <med3>
    1c66:	2c 01       	movw	r4, r24
    1c68:	a7 01       	movw	r20, r14
    1c6a:	46 0d       	add	r20, r6
    1c6c:	57 1d       	adc	r21, r7
    1c6e:	71 94       	neg	r7
    1c70:	61 94       	neg	r6
    1c72:	71 08       	sbc	r7, r1
    1c74:	95 01       	movw	r18, r10
    1c76:	b7 01       	movw	r22, r14
    1c78:	c7 01       	movw	r24, r14
    1c7a:	86 0d       	add	r24, r6
    1c7c:	97 1d       	adc	r25, r7
    1c7e:	28 df       	rcall	.-432    	; 0x1ad0 <med3>
    1c80:	7c 01       	movw	r14, r24
    1c82:	b4 01       	movw	r22, r8
    1c84:	66 0d       	add	r22, r6
    1c86:	77 1d       	adc	r23, r7
    1c88:	95 01       	movw	r18, r10
    1c8a:	a4 01       	movw	r20, r8
    1c8c:	c4 01       	movw	r24, r8
    1c8e:	82 19       	sub	r24, r2
    1c90:	93 09       	sbc	r25, r3
    1c92:	1e df       	rcall	.-452    	; 0x1ad0 <med3>
    1c94:	4c 01       	movw	r8, r24
    1c96:	01 c0       	rjmp	.+2      	; 0x1c9a <qsort+0x15e>
    1c98:	28 01       	movw	r4, r16
    1c9a:	95 01       	movw	r18, r10
    1c9c:	a4 01       	movw	r20, r8
    1c9e:	b7 01       	movw	r22, r14
    1ca0:	c2 01       	movw	r24, r4
    1ca2:	16 df       	rcall	.-468    	; 0x1ad0 <med3>
    1ca4:	7c 01       	movw	r14, r24
    1ca6:	4b 81       	ldd	r20, Y+3	; 0x03
    1ca8:	5c 81       	ldd	r21, Y+4	; 0x04
    1caa:	b7 01       	movw	r22, r14
    1cac:	c8 01       	movw	r24, r16
    1cae:	04 df       	rcall	.-504    	; 0x1ab8 <swapfunc>
    1cb0:	4f 80       	ldd	r4, Y+7	; 0x07
    1cb2:	58 84       	ldd	r5, Y+8	; 0x08
    1cb4:	40 0e       	add	r4, r16
    1cb6:	51 1e       	adc	r5, r17
    1cb8:	c6 01       	movw	r24, r12
    1cba:	01 97       	sbiw	r24, 0x01	; 1
    1cbc:	ef 81       	ldd	r30, Y+7	; 0x07
    1cbe:	f8 85       	ldd	r31, Y+8	; 0x08
    1cc0:	8e 9f       	mul	r24, r30
    1cc2:	30 01       	movw	r6, r0
    1cc4:	8f 9f       	mul	r24, r31
    1cc6:	70 0c       	add	r7, r0
    1cc8:	9e 9f       	mul	r25, r30
    1cca:	70 0c       	add	r7, r0
    1ccc:	11 24       	eor	r1, r1
    1cce:	60 0e       	add	r6, r16
    1cd0:	71 1e       	adc	r7, r17
    1cd2:	43 01       	movw	r8, r6
    1cd4:	72 01       	movw	r14, r4
    1cd6:	12 01       	movw	r2, r4
    1cd8:	20 e0       	ldi	r18, 0x00	; 0
    1cda:	30 e0       	ldi	r19, 0x00	; 0
    1cdc:	11 c0       	rjmp	.+34     	; 0x1d00 <qsort+0x1c4>
    1cde:	89 2b       	or	r24, r25
    1ce0:	59 f4       	brne	.+22     	; 0x1cf8 <qsort+0x1bc>
    1ce2:	4b 81       	ldd	r20, Y+3	; 0x03
    1ce4:	5c 81       	ldd	r21, Y+4	; 0x04
    1ce6:	b7 01       	movw	r22, r14
    1ce8:	c1 01       	movw	r24, r2
    1cea:	e6 de       	rcall	.-564    	; 0x1ab8 <swapfunc>
    1cec:	2f 81       	ldd	r18, Y+7	; 0x07
    1cee:	38 85       	ldd	r19, Y+8	; 0x08
    1cf0:	22 0e       	add	r2, r18
    1cf2:	33 1e       	adc	r3, r19
    1cf4:	21 e0       	ldi	r18, 0x01	; 1
    1cf6:	30 e0       	ldi	r19, 0x00	; 0
    1cf8:	4f 81       	ldd	r20, Y+7	; 0x07
    1cfa:	58 85       	ldd	r21, Y+8	; 0x08
    1cfc:	e4 0e       	add	r14, r20
    1cfe:	f5 1e       	adc	r15, r21
    1d00:	8e 14       	cp	r8, r14
    1d02:	9f 04       	cpc	r9, r15
    1d04:	d8 f0       	brcs	.+54     	; 0x1d3c <qsort+0x200>
    1d06:	b8 01       	movw	r22, r16
    1d08:	c7 01       	movw	r24, r14
    1d0a:	2d 83       	std	Y+5, r18	; 0x05
    1d0c:	3e 83       	std	Y+6, r19	; 0x06
    1d0e:	f5 01       	movw	r30, r10
    1d10:	09 95       	icall
    1d12:	2d 81       	ldd	r18, Y+5	; 0x05
    1d14:	3e 81       	ldd	r19, Y+6	; 0x06
    1d16:	18 16       	cp	r1, r24
    1d18:	19 06       	cpc	r1, r25
    1d1a:	84 f0       	brlt	.+32     	; 0x1d3c <qsort+0x200>
    1d1c:	e0 cf       	rjmp	.-64     	; 0x1cde <qsort+0x1a2>
    1d1e:	89 2b       	or	r24, r25
    1d20:	59 f4       	brne	.+22     	; 0x1d38 <qsort+0x1fc>
    1d22:	4b 81       	ldd	r20, Y+3	; 0x03
    1d24:	5c 81       	ldd	r21, Y+4	; 0x04
    1d26:	b3 01       	movw	r22, r6
    1d28:	c4 01       	movw	r24, r8
    1d2a:	c6 de       	rcall	.-628    	; 0x1ab8 <swapfunc>
    1d2c:	2f 81       	ldd	r18, Y+7	; 0x07
    1d2e:	38 85       	ldd	r19, Y+8	; 0x08
    1d30:	62 1a       	sub	r6, r18
    1d32:	73 0a       	sbc	r7, r19
    1d34:	21 e0       	ldi	r18, 0x01	; 1
    1d36:	30 e0       	ldi	r19, 0x00	; 0
    1d38:	89 80       	ldd	r8, Y+1	; 0x01
    1d3a:	9a 80       	ldd	r9, Y+2	; 0x02
    1d3c:	8e 14       	cp	r8, r14
    1d3e:	9f 04       	cpc	r9, r15
    1d40:	08 f4       	brcc	.+2      	; 0x1d44 <qsort+0x208>
    1d42:	90 c0       	rjmp	.+288    	; 0x1e64 <qsort+0x328>
    1d44:	b8 01       	movw	r22, r16
    1d46:	c4 01       	movw	r24, r8
    1d48:	2d 83       	std	Y+5, r18	; 0x05
    1d4a:	3e 83       	std	Y+6, r19	; 0x06
    1d4c:	f5 01       	movw	r30, r10
    1d4e:	09 95       	icall
    1d50:	a4 01       	movw	r20, r8
    1d52:	6f 81       	ldd	r22, Y+7	; 0x07
    1d54:	78 85       	ldd	r23, Y+8	; 0x08
    1d56:	46 1b       	sub	r20, r22
    1d58:	57 0b       	sbc	r21, r23
    1d5a:	5a 83       	std	Y+2, r21	; 0x02
    1d5c:	49 83       	std	Y+1, r20	; 0x01
    1d5e:	2d 81       	ldd	r18, Y+5	; 0x05
    1d60:	3e 81       	ldd	r19, Y+6	; 0x06
    1d62:	97 ff       	sbrs	r25, 7
    1d64:	dc cf       	rjmp	.-72     	; 0x1d1e <qsort+0x1e2>
    1d66:	70 c0       	rjmp	.+224    	; 0x1e48 <qsort+0x30c>
    1d68:	48 01       	movw	r8, r16
    1d6a:	88 0e       	add	r8, r24
    1d6c:	99 1e       	adc	r9, r25
    1d6e:	1b c0       	rjmp	.+54     	; 0x1da6 <qsort+0x26a>
    1d70:	4b 81       	ldd	r20, Y+3	; 0x03
    1d72:	5c 81       	ldd	r21, Y+4	; 0x04
    1d74:	b6 01       	movw	r22, r12
    1d76:	c7 01       	movw	r24, r14
    1d78:	9f de       	rcall	.-706    	; 0x1ab8 <swapfunc>
    1d7a:	76 01       	movw	r14, r12
    1d7c:	0e 15       	cp	r16, r14
    1d7e:	1f 05       	cpc	r17, r15
    1d80:	28 f0       	brcs	.+10     	; 0x1d8c <qsort+0x250>
    1d82:	8f 81       	ldd	r24, Y+7	; 0x07
    1d84:	98 85       	ldd	r25, Y+8	; 0x08
    1d86:	48 0e       	add	r4, r24
    1d88:	59 1e       	adc	r5, r25
    1d8a:	0d c0       	rjmp	.+26     	; 0x1da6 <qsort+0x26a>
    1d8c:	67 01       	movw	r12, r14
    1d8e:	ef 81       	ldd	r30, Y+7	; 0x07
    1d90:	f8 85       	ldd	r31, Y+8	; 0x08
    1d92:	ce 1a       	sub	r12, r30
    1d94:	df 0a       	sbc	r13, r31
    1d96:	b7 01       	movw	r22, r14
    1d98:	c6 01       	movw	r24, r12
    1d9a:	f5 01       	movw	r30, r10
    1d9c:	09 95       	icall
    1d9e:	18 16       	cp	r1, r24
    1da0:	19 06       	cpc	r1, r25
    1da2:	34 f3       	brlt	.-52     	; 0x1d70 <qsort+0x234>
    1da4:	ee cf       	rjmp	.-36     	; 0x1d82 <qsort+0x246>
    1da6:	48 14       	cp	r4, r8
    1da8:	59 04       	cpc	r5, r9
    1daa:	08 f0       	brcs	.+2      	; 0x1dae <qsort+0x272>
    1dac:	68 c0       	rjmp	.+208    	; 0x1e7e <qsort+0x342>
    1dae:	72 01       	movw	r14, r4
    1db0:	e5 cf       	rjmp	.-54     	; 0x1d7c <qsort+0x240>
    1db2:	98 01       	movw	r18, r16
    1db4:	28 0f       	add	r18, r24
    1db6:	39 1f       	adc	r19, r25
    1db8:	3a 83       	std	Y+2, r19	; 0x02
    1dba:	29 83       	std	Y+1, r18	; 0x01
    1dbc:	27 01       	movw	r4, r14
    1dbe:	42 18       	sub	r4, r2
    1dc0:	53 08       	sbc	r5, r3
    1dc2:	a1 01       	movw	r20, r2
    1dc4:	40 1b       	sub	r20, r16
    1dc6:	51 0b       	sbc	r21, r17
    1dc8:	44 16       	cp	r4, r20
    1dca:	55 06       	cpc	r5, r21
    1dcc:	0c f4       	brge	.+2      	; 0x1dd0 <qsort+0x294>
    1dce:	a2 01       	movw	r20, r4
    1dd0:	14 16       	cp	r1, r20
    1dd2:	15 06       	cpc	r1, r21
    1dd4:	2c f4       	brge	.+10     	; 0x1de0 <qsort+0x2a4>
    1dd6:	b7 01       	movw	r22, r14
    1dd8:	64 1b       	sub	r22, r20
    1dda:	75 0b       	sbc	r23, r21
    1ddc:	c8 01       	movw	r24, r16
    1dde:	6c de       	rcall	.-808    	; 0x1ab8 <swapfunc>
    1de0:	63 01       	movw	r12, r6
    1de2:	c8 18       	sub	r12, r8
    1de4:	d9 08       	sbc	r13, r9
    1de6:	49 81       	ldd	r20, Y+1	; 0x01
    1de8:	5a 81       	ldd	r21, Y+2	; 0x02
    1dea:	46 19       	sub	r20, r6
    1dec:	57 09       	sbc	r21, r7
    1dee:	6f 81       	ldd	r22, Y+7	; 0x07
    1df0:	78 85       	ldd	r23, Y+8	; 0x08
    1df2:	46 1b       	sub	r20, r22
    1df4:	57 0b       	sbc	r21, r23
    1df6:	c4 16       	cp	r12, r20
    1df8:	d5 06       	cpc	r13, r21
    1dfa:	08 f4       	brcc	.+2      	; 0x1dfe <qsort+0x2c2>
    1dfc:	a6 01       	movw	r20, r12
    1dfe:	14 16       	cp	r1, r20
    1e00:	15 06       	cpc	r1, r21
    1e02:	34 f4       	brge	.+12     	; 0x1e10 <qsort+0x2d4>
    1e04:	69 81       	ldd	r22, Y+1	; 0x01
    1e06:	7a 81       	ldd	r23, Y+2	; 0x02
    1e08:	64 1b       	sub	r22, r20
    1e0a:	75 0b       	sbc	r23, r21
    1e0c:	c7 01       	movw	r24, r14
    1e0e:	54 de       	rcall	.-856    	; 0x1ab8 <swapfunc>
    1e10:	8f 81       	ldd	r24, Y+7	; 0x07
    1e12:	98 85       	ldd	r25, Y+8	; 0x08
    1e14:	84 15       	cp	r24, r4
    1e16:	95 05       	cpc	r25, r5
    1e18:	48 f4       	brcc	.+18     	; 0x1e2c <qsort+0x2f0>
    1e1a:	c2 01       	movw	r24, r4
    1e1c:	6f 81       	ldd	r22, Y+7	; 0x07
    1e1e:	78 85       	ldd	r23, Y+8	; 0x08
    1e20:	37 de       	rcall	.-914    	; 0x1a90 <__udivmodhi4>
    1e22:	95 01       	movw	r18, r10
    1e24:	4f 81       	ldd	r20, Y+7	; 0x07
    1e26:	58 85       	ldd	r21, Y+8	; 0x08
    1e28:	c8 01       	movw	r24, r16
    1e2a:	88 de       	rcall	.-752    	; 0x1b3c <qsort>
    1e2c:	ef 81       	ldd	r30, Y+7	; 0x07
    1e2e:	f8 85       	ldd	r31, Y+8	; 0x08
    1e30:	ec 15       	cp	r30, r12
    1e32:	fd 05       	cpc	r31, r13
    1e34:	20 f5       	brcc	.+72     	; 0x1e7e <qsort+0x342>
    1e36:	09 81       	ldd	r16, Y+1	; 0x01
    1e38:	1a 81       	ldd	r17, Y+2	; 0x02
    1e3a:	0c 19       	sub	r16, r12
    1e3c:	1d 09       	sbc	r17, r13
    1e3e:	c6 01       	movw	r24, r12
    1e40:	bf 01       	movw	r22, r30
    1e42:	26 de       	rcall	.-948    	; 0x1a90 <__udivmodhi4>
    1e44:	6b 01       	movw	r12, r22
    1e46:	9b ce       	rjmp	.-714    	; 0x1b7e <qsort+0x42>
    1e48:	4b 81       	ldd	r20, Y+3	; 0x03
    1e4a:	5c 81       	ldd	r21, Y+4	; 0x04
    1e4c:	b4 01       	movw	r22, r8
    1e4e:	c7 01       	movw	r24, r14
    1e50:	33 de       	rcall	.-922    	; 0x1ab8 <swapfunc>
    1e52:	2f 81       	ldd	r18, Y+7	; 0x07
    1e54:	38 85       	ldd	r19, Y+8	; 0x08
    1e56:	e2 0e       	add	r14, r18
    1e58:	f3 1e       	adc	r15, r19
    1e5a:	89 80       	ldd	r8, Y+1	; 0x01
    1e5c:	9a 80       	ldd	r9, Y+2	; 0x02
    1e5e:	21 e0       	ldi	r18, 0x01	; 1
    1e60:	30 e0       	ldi	r19, 0x00	; 0
    1e62:	4e cf       	rjmp	.-356    	; 0x1d00 <qsort+0x1c4>
    1e64:	4f 81       	ldd	r20, Y+7	; 0x07
    1e66:	58 85       	ldd	r21, Y+8	; 0x08
    1e68:	c4 9e       	mul	r12, r20
    1e6a:	c0 01       	movw	r24, r0
    1e6c:	c5 9e       	mul	r12, r21
    1e6e:	90 0d       	add	r25, r0
    1e70:	d4 9e       	mul	r13, r20
    1e72:	90 0d       	add	r25, r0
    1e74:	11 24       	eor	r1, r1
    1e76:	23 2b       	or	r18, r19
    1e78:	09 f0       	breq	.+2      	; 0x1e7c <qsort+0x340>
    1e7a:	9b cf       	rjmp	.-202    	; 0x1db2 <qsort+0x276>
    1e7c:	75 cf       	rjmp	.-278    	; 0x1d68 <qsort+0x22c>
    1e7e:	28 96       	adiw	r28, 0x08	; 8
    1e80:	0f b6       	in	r0, 0x3f	; 63
    1e82:	f8 94       	cli
    1e84:	de bf       	out	0x3e, r29	; 62
    1e86:	0f be       	out	0x3f, r0	; 63
    1e88:	cd bf       	out	0x3d, r28	; 61
    1e8a:	df 91       	pop	r29
    1e8c:	cf 91       	pop	r28
    1e8e:	1f 91       	pop	r17
    1e90:	0f 91       	pop	r16
    1e92:	ff 90       	pop	r15
    1e94:	ef 90       	pop	r14
    1e96:	df 90       	pop	r13
    1e98:	cf 90       	pop	r12
    1e9a:	bf 90       	pop	r11
    1e9c:	af 90       	pop	r10
    1e9e:	9f 90       	pop	r9
    1ea0:	8f 90       	pop	r8
    1ea2:	7f 90       	pop	r7
    1ea4:	6f 90       	pop	r6
    1ea6:	5f 90       	pop	r5
    1ea8:	4f 90       	pop	r4
    1eaa:	3f 90       	pop	r3
    1eac:	2f 90       	pop	r2
    1eae:	08 95       	ret

00001eb0 <_exit>:
    1eb0:	f8 94       	cli

00001eb2 <__stop_program>:
    1eb2:	ff cf       	rjmp	.-2      	; 0x1eb2 <__stop_program>
